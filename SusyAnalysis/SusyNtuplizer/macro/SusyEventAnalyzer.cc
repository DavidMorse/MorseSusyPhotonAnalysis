//
// Package:    SusyNtuplizer
// Class:      SusyEventAnalyzer.cc
// 
//Description: an analyzer for susy::Event

#define SusyEventAnalyzer_cxx

#include <TH2.h>
#include <TH3.h>
#include <TStyle.h>
#include <TCanvas.h>
#include <TH1F.h>
#include <TProfile.h>
#include <TGraphAsymmErrors.h>
#include <TRandom.h>
#include <TLegend.h>

#include <map>
#include <set>
#include <cmath>
#include <algorithm>
#include <utility>
#include <fstream>
#include <vector>

#include "SusyEventAnalyzer.h"
//#include "SusyEventPrinter.h"

#include "../jec/JetMETObjects/interface/JetCorrectorParameters.h"
#include "../jec/JetMETObjects/interface/FactorizedJetCorrector.h"

using namespace std;

/* //old way
   pair<float,float> SusyEventAnalyzer::GetMetReweight(float diEMPT,string type,vector< pair<float,float> > binEE[4],vector< pair<float,float> > binFF[4],int numJets){
   if(printLevel>0)cout<<"inside GetMetReweight"<<endl;
   float reweight=1., error=0.;//,lowff=0.,highff=0.,lowee=0.,highee=0.;
   int bin=999;
   if(printLevel>0)cout<<"Line 167"<<endl;
   if(numJets>2)numJets=2;
   int numJetsBin=numJets+1;
   if(diEMPT<92) bin=int(diEMPT/4.);//----4 GeV bins so divide by that to get bin number (0-100)
   else if(diEMPT>=92 && diEMPT<600) bin=int((diEMPT+92)/8.);//----8 GeV bins so divide by that to get bin number (100-600)
   //else if(diEMPT>=200) bin=int((diEMPT+1200)/20.);//----20 GeV bins so divide by 20 to get bin number (200-600)
   if( type=="ff" ){
   reweight = binFF[numJetsBin][bin].first;
   error = binFF[numJetsBin][bin].second;  
   }
   if( type=="ee" ){
   if(printLevel>0)cout<<"Line 177"<<endl;
   reweight = binEE[numJetsBin][bin].first;
   if(printLevel>0)cout<<"Line 179"<<endl;
   error = binEE[numJetsBin][bin].second;
   if(printLevel>0)cout<<"Line 181"<<endl;
   }
   if(bin==999 || reweight==0) reweight=1.;
   //cout<<"reweight: "<<reweight<<endl;
   if(printLevel>0)cout<<"End of GetMetReweight"<<endl;
   return make_pair(reweight,error);
   }

   pair<float,float> SusyEventAnalyzer::GetMetReweightJet(float diJETPT,string typeJet,vector< pair<float,float> > binEEjet[4],vector< pair<float,float> > binFFjet[4],int numJets){
   float reweight=1., error=0.;//,lowff=0.,highff=0.,lowee=0.,highee=0.;
   int bin=999;
   if(numJets>2)numJets=2;
   int numJetsBin=numJets+1;
   if(diJETPT<92) bin=int(diJETPT/4.);//----4 GeV bins so divide by that to get bin number (0-100)
   else if(diJETPT>=92 && diJETPT<600) bin=int((diJETPT+92)/8.);//----8 GeV bins so divide by that to get bin number (100-600)
   //else if(diJETPT>=200) bin=int((diJETPT+1200)/20.);//----20 GeV bins so divide by 20 to get bin number (200-600)
   if( typeJet=="ff" ){
   reweight = binFFjet[numJetsBin][bin].first;
   error = binFFjet[numJetsBin][bin].second;  
   }
   if( typeJet=="ee" ){
   reweight = binEEjet[numJetsBin][bin].first;
   error = binEEjet[numJetsBin][bin].second;
   }
   if(bin==999 || reweight==0) reweight=1.;
   //cout<<"reweight: "<<reweight<<endl;
   return make_pair(reweight,error);
   }
*/

Double_t DiEMPtBins[]={0.,5.,10.,15.,20.,25.,30.,35.,40.,45.,50.,55.,60.,65.,70.,75.,80.,85.,90.,95.,100.,110.,120.,130.,140.,150.,200.,300.,400.,600.,1000.};
int numBins=sizeof(DiEMPtBins)/sizeof(Double_t)-1;

pair<float,float> SusyEventAnalyzer::GetMetReweight(float diEMPT,string type,vector< pair<float,float> > binEE[4],vector< pair<float,float> > binFF[4],vector< pair<float,float> > binFG[4],vector< pair<float,float> > binGF[4],vector< pair<float,float> > binGammaFake[4],vector< pair<float,float> > binEEsidebandLowJet[4],vector< pair<float,float> > binEEsidebandHighJet[4],int numJets){
  //if(printLevel>0)cout<<"inside GetMetReweight"<<endl;
  float reweight=1., error=0.;//,lowff=0.,highff=0.,lowee=0.,highee=0.;
  int bin=999;
  //if(printLevel>0)cout<<"Line 167"<<endl;
  if(numJets>2)numJets=2;
  int numJetsBin=numJets+1;
  //this gives the bins from 0-(numBins-1) even though they really go from 1-numBins, so that it lines up with the vector numbering
  if(diEMPT<100) bin=int(diEMPT/5);//----2.55 GeV bins so divide by that to get bin number (0-100)
  else if(diEMPT>=100 && diEMPT<150) bin=int((diEMPT+100)/10.);//----5 GeV bins so divide by that to get bin number (50-100)
  else if(diEMPT>=150 && diEMPT<200) bin=25;//bin=int((diEMPT+200)/10.);//----10 GeV bins so divide by that to get bin number (100-150)
  else if(diEMPT>=200 && diEMPT<400) bin=int((diEMPT+2400)/100.);
  else if(diEMPT>=400 && diEMPT<600) bin=28;
  else if(diEMPT>=600) bin=29;
  //if(bin>numBins)bin=numBins;
  //This was an attempt to be smart - it is incredibly slow!!! don't try to be smart...
  //TH1F* binHist = new TH1F("binHist","",numBins,DiEMPtBins);
  //  bin=binHist->FindBin(diEMPT)-1;
  if( type=="ff" ){
    reweight = binFF[numJetsBin][bin].first;
    error = binFF[numJetsBin][bin].second;  
  }
  else if( type=="gf" ){
    reweight = binGF[numJetsBin][bin].first;
    error = binGF[numJetsBin][bin].second;  
  }
  else if( type=="fg" ){
    reweight = binFG[numJetsBin][bin].first;
    error = binFG[numJetsBin][bin].second;  
  }
  else if( type=="gammafake" ){
    reweight = binGammaFake[numJetsBin][bin].first;
    error = binGammaFake[numJetsBin][bin].second;  
  }
  else if( type=="ee" ){
    reweight = binEE[numJetsBin][bin].first;
    error = binEE[numJetsBin][bin].second;
  }
  else if( type=="eeSbLow" ){
    reweight = binEEsidebandLowJet[numJetsBin][bin].first;
    error = binEEsidebandLowJet[numJetsBin][bin].second;
  }
  else if( type=="eeSbHigh" ){
    reweight = binEEsidebandHighJet[numJetsBin][bin].first;
    error = binEEsidebandHighJet[numJetsBin][bin].second;
  }
  else cout<<"Trying to reweight but have no type ee,ff,eeSbLow,eeSbHigh"<<endl;
  if(bin==-1 || bin==999 || reweight==0) {reweight=1.;error=0.;}
  //if(bin==18)cout<<"reweight: "<<reweight<<"  bin: "<<bin<<"  numJets: "<<numJets<<"  type: "<<type<<endl;
  //if(type=="ff")cout<<"bin: "<<bin<<"  reweight: "<<reweight<<"  diEMPT: "<<diEMPT<<"  numJets: "<<numJets<<"  type: "<<type<<endl;
  //if(printLevel>0)cout<<"End of GetMetReweight"<<endl;
  //delete binHist;
  return make_pair(reweight,error);
}

void SusyEventAnalyzer::MatchPhosToJets(susy::Photon* pOne, susy::Photon* pTwo, std::vector<susy::PFJet*> jets, susy::PFJet* &jet1, susy::PFJet* &jet2, bool &hasdijetpt, float dR)
{
  hasdijetpt=false;
  //cout<<"hasdijetpt="<<hasdijetpt<<endl;
  //cout<<"jet vector size: "<<jets.size()<<endl;
  for(std::vector<susy::PFJet*>::iterator jet_it1 = jets.begin(); jet_it1 != jets.end(); jet_it1++){	
    if(isSameObject(pOne->caloPosition,(*jet_it1)->momentum,dR)){
      for(std::vector<susy::PFJet*>::iterator jet_it2 = jets.begin(); jet_it2 != jets.end(); jet_it2++){
	if(/*jet_it2!=jet_it1*/ !isSameObject((*jet_it1)->momentum,(*jet_it2)->momentum,0.1)){
	  //cout<<"pho2 eta,phi: "<<pTwo->caloPosition.Eta()<<","<<pTwo->caloPosition.Phi()<<" jet2 eta,phi: "<<(*jet_it2)->momentum.Eta()<<","<<(*jet_it2)->momentum.Phi()<<" Obj2 DR: "<<getDR(pTwo->caloPosition, (*jet_it2)->momentum)<</*"  Jet pT: "<<jet1->momentum.Pt()<<" , "<<jet2->momentum.Pt()<<*/endl;
	  if(isSameObject(pTwo->caloPosition,(*jet_it2)->momentum,dR)){
	    jet1=*jet_it1;jet2=*jet_it2;
	    //cout<<"pho1 eta,phi: "<<pOne->caloPosition.Eta()<<","<<pOne->caloPosition.Phi()<<" jet1 eta,phi: "<<jet1->momentum.Eta()<<","<<jet1->momentum.Phi()<<" Obj1 DR: "<<getDR(pOne->caloPosition, jet1->momentum)<<"  Jet pT: "<<jet1->momentum.Pt()<<" , "<<jet2->momentum.Pt()<<endl;
	    //cout<<"pho1 pT:"<<pOne->momentum.Et()<<"  jet1 pT:"<<jet1->momentum.Pt()<<"  pho2 pT:"<<pTwo->momentum.Et()<<"  jet2 pT:"<<jet2->momentum.Pt()<<endl;
	    hasdijetpt=true;break;
	  }//end jet2 match
	}//end jet2!=jet1
      }//end jet2 iterator
      if(hasdijetpt){break;}
    }//end jet1 match
  }//end jet1 iterator
  //cout<<"hasdijetpt="<<hasdijetpt<<endl;
  //return;
}
int nNoCat=0;
void SusyEventAnalyzer::CategorizeEvents(susy::Photon* pho1, susy::Photon* pho2, float Rho25, bool &gogg, bool &goee, bool &goeg, bool &goff, bool &gogammafake, bool &gogf, bool &gofg, bool useTrigger){
  bool g1=false, g2=false, f1=false, f2=false, e1=false, e2=false;
  gogg=false;goee=false;goeg=false;goff=false;gogammafake=false;gogf=false;gofg=false;
  bool passHLT_Pho  = (useTrigger ? PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_CaloId10_Iso50_v") : true);
  //  bool passHLT_Pho = (useTrigger ? ( PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_CaloId10_Iso50_v")
  //					      || PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_R9Id85_v") 
  //					      || PassTrigger("HLT_Photon36_R9Id85_Photon22_CaloId10_Iso50_v")
  //					      || PassTrigger("HLT_Photon36_R9Id85_Photon22_R9Id85_v") ) : true);
  if(fabs(pho1->caloPosition.Eta())<1.0){
    if( (pho1->neutralHadronIso<3.5+pho1->momentum.Et()*0.04+0.03*Rho25) && (pho1->photonIso<1.3+pho1->momentum.Et()*0.005+.148*Rho25) ){
      if( (pho1->chargedHadronIso<2.6+0.012*Rho25) &&  pho1->sigmaIetaIeta<0.012 ){
	if(pho1->nPixelSeeds==0)g1=true;
	else e1=true;
      }
      if( (pho1->chargedHadronIso<15.+0.012*Rho25) ){
	if((pho1->chargedHadronIso>2.6+0.012*Rho25) || pho1->sigmaIetaIeta>0.012)f1=true;
      }
    }
  }//pho1 eta<1.0
  else{
    if( (pho1->neutralHadronIso<3.5+pho1->momentum.Et()*0.04+0.057*Rho25) && (pho1->photonIso<1.3+pho1->momentum.Et()*0.005+.130*Rho25) ){
      if( (pho1->chargedHadronIso<2.6+0.010*Rho25) &&  pho1->sigmaIetaIeta<0.012 ){
	if(pho1->nPixelSeeds==0)g1=true;
	else e1=true;
      }
      if( (pho1->chargedHadronIso<15.+0.010*Rho25) ){
	if((pho1->chargedHadronIso>2.6+0.010*Rho25) || pho1->sigmaIetaIeta>0.012)f1=true;
      }
    }    
  }//pho1 eta>1.0
  if(fabs(pho2->caloPosition.Eta())<1.0){
    if( (pho2->neutralHadronIso<3.5+pho2->momentum.Et()*0.04+0.03*Rho25) && (pho2->photonIso<1.3+pho2->momentum.Et()*0.005+.148*Rho25) ){
      if( (pho2->chargedHadronIso<2.6+0.012*Rho25) &&  pho2->sigmaIetaIeta<0.012 ){
	if(pho2->nPixelSeeds==0)g2=true;
	else e2=true;
      }
      if( (pho2->chargedHadronIso<15.+0.012*Rho25) ){
	if((pho2->chargedHadronIso>2.6+0.012*Rho25) || pho2->sigmaIetaIeta>0.012)f2=true;
      }
    }
  }//pho2 eta<1.0
  else{
    if( (pho2->neutralHadronIso<3.5+pho2->momentum.Et()*0.04+0.057*Rho25) && (pho2->photonIso<1.3+pho2->momentum.Et()*0.005+.130*Rho25) ){
      if( (pho2->chargedHadronIso<2.6+0.010*Rho25) &&  pho2->sigmaIetaIeta<0.012 ){
	if(pho2->nPixelSeeds==0)g2=true;
	else e2=true;
      }
      if( (pho2->chargedHadronIso<15.+0.010*Rho25) ){
	if((pho2->chargedHadronIso>2.6+0.010*Rho25) || pho2->sigmaIetaIeta>0.012)f2=true;
      }
    }    
  }//pho2 eta>1.0
  if(g1 && g2)gogg=true;
  if( (g1 && e2) || (e1 && g2) )goeg=true;
  if(e1 && e2)goee=true;
  if(f1 && f2)goff=true;
  if( (g1 && f2) || (f1 && g2) ){gogammafake=true;
    if(g1 && f2)gogf=true;
    else if(f1 && g2)gofg=true;
  }
  if(gogg&&goeg)cout<<"gg AND eg event!!!!! ------- PROBLEM!"<<endl;
  if(gogg&&goee)cout<<"gg AND ee event!!!!! ------- PROBLEM!"<<endl;
  if(gogg&&goff)cout<<"gg AND ff event!!!!! ------- PROBLEM!"<<endl;
  if(gogg&&gogammafake)cout<<"gg AND gammafake event!!!!! ------- PROBLEM!"<<endl;
  if(goeg&&goee)cout<<"eg AND ee event!!!!! ------- PROBLEM!"<<endl;
  if(goeg&&goff)cout<<"eg AND ff event!!!!! ------- PROBLEM!"<<endl;
  if(goeg&&gogammafake)cout<<"eg AND gammafake event!!!!! ------- PROBLEM!"<<endl;
  if(goee&&goff)cout<<"ee AND ff event!!!!! ------- PROBLEM!"<<endl;
  if(goee&&gogammafake)cout<<"ee AND gammafake event!!!!! ------- PROBLEM!"<<endl;
  if(goff&&gogammafake)cout<<"ff AND gammafake event!!!!! ------- PROBLEM!"<<endl;
  if(gogf&&gofg)cout<<"gf AND fg event!!!!! ------- PROBLEM!"<<endl;
  if((gogammafake && !gogf) && (gogammafake && !gofg))cout<<"gammafake BUT NOT gf OR fg event!!!!! ------- PROBLEM!"<<endl;
  if((gogg || goeg || goee) && !passHLT_Pho){gogg=false;goeg=false;goee=false;}
  if(!( gogg || goeg || goee || goff || gogammafake))nNoCat++;//cout<<"No category made in the event!!!!! ------- "<<endl;
  // return;
}

void SusyEventAnalyzer::CategorizeEventsPhoIso(susy::Photon* pho1, susy::Photon* pho2, float Rho25, bool &gogg, bool &goee, bool &goeg, bool &goff, bool &gogammafake, bool &gogf, bool &gofg, bool useTrigger){
  bool g1=false, g2=false, f1=false, f2=false, e1=false, e2=false;
  gogg=false;goee=false;goeg=false;goff=false;gogammafake=false;gogf=false;gofg=false;
  bool passHLT_Pho  = (useTrigger ? PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_CaloId10_Iso50_v") : true);
  //  bool passHLT_Pho = (useTrigger ? ( PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_CaloId10_Iso50_v")
  //					      || PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_R9Id85_v") 
  //					      || PassTrigger("HLT_Photon36_R9Id85_Photon22_CaloId10_Iso50_v")
  //					      || PassTrigger("HLT_Photon36_R9Id85_Photon22_R9Id85_v") ) : true);
  if(fabs(pho1->caloPosition.Eta())<1.0){
    if( (pho1->chargedHadronIso<2.6+0.012*Rho25) && (pho1->neutralHadronIso<3.5+pho1->momentum.Et()*0.04+0.03*Rho25) ){
      if( (pho1->photonIso<1.3+pho1->momentum.Et()*0.005+.148*Rho25) &&  pho1->sigmaIetaIeta<0.012 ){
	if(pho1->nPixelSeeds==0)g1=true;
	else e1=true;
      }
      if( (pho1->photonIso<50.+pho1->momentum.Et()*0.005+.148*Rho25) ){
	if((pho1->photonIso>1.3+pho1->momentum.Et()*0.005+.148*Rho25) || pho1->sigmaIetaIeta>0.012)f1=true;
      }
    }
  }//pho1 eta<1.0
  else{
    if( (pho1->chargedHadronIso<2.6+0.010*Rho25) && (pho1->neutralHadronIso<3.5+pho1->momentum.Et()*0.04+0.057*Rho25) ){
      if( (pho1->photonIso<1.3+pho1->momentum.Et()*0.005+.130*Rho25) &&  pho1->sigmaIetaIeta<0.012 ){
	if(pho1->nPixelSeeds==0)g1=true;
	else e1=true;
      }
      if( (pho1->photonIso<50.+pho1->momentum.Et()*0.005+.130*Rho25) ){
	if((pho1->photonIso>1.3+pho1->momentum.Et()*0.005+.130*Rho25) || pho1->sigmaIetaIeta>0.012)f1=true;
      }
    }    
  }//pho1 eta>1.0
  if(fabs(pho2->caloPosition.Eta())<1.0){
    if( (pho2->chargedHadronIso<2.6+0.012*Rho25) && (pho2->neutralHadronIso<3.5+pho2->momentum.Et()*0.04+0.03*Rho25) ){
      if( (pho2->photonIso<1.3+pho2->momentum.Et()*0.005+.148*Rho25) &&  pho2->sigmaIetaIeta<0.012 ){
	if(pho2->nPixelSeeds==0)g2=true;
	else e2=true;
      }
      if( (pho2->photonIso<50.+pho2->momentum.Et()*0.005+.148*Rho25) ){
	if((pho2->photonIso>1.3+pho2->momentum.Et()*0.005+.148*Rho25) || pho2->sigmaIetaIeta>0.012)f2=true;
      }
    }
  }//pho2 eta<1.0
  else{
    if( (pho2->chargedHadronIso<2.6+0.010*Rho25) && (pho2->neutralHadronIso<3.5+pho2->momentum.Et()*0.04+0.057*Rho25) ){
      if( (pho2->photonIso<1.3+pho2->momentum.Et()*0.005+.130*Rho25) &&  pho2->sigmaIetaIeta<0.012 ){
	if(pho2->nPixelSeeds==0)g2=true;
	else e2=true;
      }
      if( (pho2->photonIso<50.+pho2->momentum.Et()*0.005+.130*Rho25) ){
	if((pho2->photonIso>1.3+pho2->momentum.Et()*0.005+.130*Rho25) || pho2->sigmaIetaIeta>0.012)f2=true;
      }
    }    
  }//pho2 eta>1.0
  if(g1 && g2)gogg=true;
  if( (g1 && e2) || (e1 && g2) )goeg=true;
  if(e1 && e2)goee=true;
  if(f1 && f2)goff=true;
  if( (g1 && f2) || (f1 && g2) ){gogammafake=true;
    if(g1 && f2)gogf=true;
    else if(f1 && g2)gofg=true;
  }
  if(gogg&&goeg)cout<<"gg AND eg event!!!!! ------- PROBLEM!"<<endl;
  if(gogg&&goee)cout<<"gg AND ee event!!!!! ------- PROBLEM!"<<endl;
  if(gogg&&goff)cout<<"gg AND ff event!!!!! ------- PROBLEM!"<<endl;
  if(gogg&&gogammafake)cout<<"gg AND gammafake event!!!!! ------- PROBLEM!"<<endl;
  if(goeg&&goee)cout<<"eg AND ee event!!!!! ------- PROBLEM!"<<endl;
  if(goeg&&goff)cout<<"eg AND ff event!!!!! ------- PROBLEM!"<<endl;
  if(goeg&&gogammafake)cout<<"eg AND gammafake event!!!!! ------- PROBLEM!"<<endl;
  if(goee&&goff)cout<<"ee AND ff event!!!!! ------- PROBLEM!"<<endl;
  if(goee&&gogammafake)cout<<"ee AND gammafake event!!!!! ------- PROBLEM!"<<endl;
  if(goff&&gogammafake)cout<<"ff AND gammafake event!!!!! ------- PROBLEM!"<<endl;
  if(gogf&&gofg)cout<<"gf AND fg event!!!!! ------- PROBLEM!"<<endl;
  if((gogammafake && !gogf) && (gogammafake && !gofg))cout<<"gammafake BUT NOT gf OR fg event!!!!! ------- PROBLEM!"<<endl;
  if((gogg || goeg || goee) && !passHLT_Pho){gogg=false;goeg=false;goee=false;}
  if(!( gogg || goeg || goee || goff || gogammafake))nNoCat++;//cout<<"No category made in the event!!!!! ------- "<<endl;
  // return;
}


void SusyEventAnalyzer::Loop() {

  bool GG=true,FF=true,EE=true,EG=true,GGtrain=false,FFtrain=false,EGtrain=false;
  
  //cout<<"TotEt/F:dPhi/F:METdPhiLead/F:METdPhiTrail/F:SystemMETdPhi/F:PhotonLessHt/F:DiEMPt/F:InvarMass/F:Met/F:MR/F:MVAweight/F"<<endl;
  cout<<"TotEt/F:dPhi/F:InvarMass/F:MR/F:METdPhi/F:MVAweight/F"<<endl;

  double dPhi(0), diEMpt(0), InvMass(0);

  if (fChain == 0) return;

  Long64_t nentries = fChain->GetEntries();

  cout << "total events in files  : " << nentries << endl;

  if(processNEvents <= 0 || processNEvents > nentries) processNEvents = nentries;

  cout << "events to be processed : " << processNEvents << endl; 
 
  if(printLevel>0) cout << "Initialize event counters." << endl;
  const int NCNT = 20;
  int nCnt[NCNT];
  for(int i=0; i<NCNT; i++) nCnt[i] = 0;
  int numOne25GeVPhoEvents=0, numTwo25GeVPhoEvents=0, numOne25GeVPhoEventsPassHE=0, numTwo25GeVPhoEventsPassHE=0, numTwo40_25GeVPhoEvents=0, numTwo40_25GeVPhoEventsPassHE=0;


  int nFiltered = 0;
  TTree* filterTree = 0;
  
  if(printLevel>0) cout << "Define Filter File" << endl;
  if(enableFilter) {
    //TFile* filterFile = new TFile("/data/ndpc2/b/dmorse/RA3/RA3Ntuples/FilteredNtuples/cms533v1/"+ds+"-SelectedEvents.root","RECREATE");
    TFile* filterFile = new TFile("/tmp/dmorse/"+ds+"-SelectedEvents.root","RECREATE");
    //TFile* filterFile = new TFile("/Users/dmorse/RA3/SusyNtuples/FilteredNtuples/"+ds+"-SelectedEvents.root","RECREATE");
    filterTree = (TTree*) fChain->GetTree()->CloneTree(0);
    filterTree->SetAutoSave();
  }
  

  if(printLevel>0) cout<<"Open hist file" << endl;
  //TFile* fout = new TFile("/tmp/dmorse/hist_"+ds+".root","RECREATE");
  //TFile* fout = new TFile("/data/ndpc2/b/dmorse/RA3/AnalysisOutput/hist_"+ds+".root","RECREATE");
  TFile* fout = new TFile("hist_"+ds+".root","RECREATE");
  //TFile* fout = new TFile("/Users/dmorse/RA3/AnalysisOutput/hist_"+ds+".root","RECREATE");
  if(printLevel>0) cout<<"Hist file opened" << endl;

  fout->cd();

  if(printLevel>0) cout<<"Define histograms" << endl;

  //TH1F* h_resOverResponse = new TH1F("resOverResponse","resolution/response for uncorrected met",,0,);


  TH1F* h_vtxZ = new TH1F("vtxZ","Z position of the primary vertex;Z (cm);Events",100,-50.,50.);
  TH1F* h_bsZ = new TH1F("bsZ","Z position of the beam spot;Z (cm);Events",20,-10.,10.);
  TH1F* h_Type1CorrMet = new TH1F("Type1CorrMet","Type 1 corrected missing transverse energy;#slash{E}_{T} (GeV);Events",220,0.0,1100.);
  TH1F* h_Type1CorrSumEt = new TH1F("Type1CorrSumEt","Type 1 corrected Scalar sum of all calorimeter energy;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_Type01CorrMet = new TH1F("Type01CorrMet","Type 01 corrected missing transverse energy;#slash{E}_{T} (GeV);Events",220,0.0,1100.);
  TH1F* h_Type01CorrSumEt = new TH1F("Type01CorrSumEt","Type 01 corrected Scalar sum of all calorimeter energy;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_met = new TH1F("met","missing transverse energy;#slash{E}_{T} (GeV);Events",220,0.0,1100.);
  TH1F* h_sumEt = new TH1F("sumEt","Scalar sum of all calorimeter energy;#sigmaE_{T} (GeV);Events",500,0.0,5000.);h_met->Sumw2();
  TH1F* h_GenMet = new TH1F("GenMet","generator level missing transverse energy;#slash{E}_{T} (GeV);Events",220,0.0,1100.);h_GenMet->Sumw2();
  TH1F* h_GenSumEt = new TH1F("GenSumEt","Generator level scalar sum of all calorimeter energy;#sigmaE_{T} (GeV);Events",500,0.0,5000.);h_GenSumEt->Sumw2();
  TH1F* h_metOverGenMet = new TH1F("metOverGenMet","uncorrected / generator level missing transverse energy;#slash{E}_{T} (GeV);Events",220,0.0,1100.);h_metOverGenMet->Sumw2();
  TH1F* h_ggType1CorrMetOverMet = new TH1F("ggType1CorrMetOverMet","Type1 corrected / uncorrected  missing transverse energy in gg events;#slash{E}_{T} (GeV);Events",200,0.0,1000.);h_ggType1CorrMetOverMet->Sumw2();
  TH1F* h_ffType1CorrMetOverMet = new TH1F("ffType1CorrMetOverMet","Type1 corrected / uncorrected  missing transverse energy in ff events;#slash{E}_{T} (GeV);Events",200,0.0,1000.);h_ffType1CorrMetOverMet->Sumw2();h_ffType1CorrMetOverMet->SetLineColor(kBlue);h_ffType1CorrMetOverMet->SetMarkerColor(kBlue);
  TH1F* h_egType1CorrMetOverMet = new TH1F("egType1CorrMetOverMet","Type1 corrected / uncorrected  missing transverse energy in eg events;#slash{E}_{T} (GeV);Events",200,0.0,1000.);h_egType1CorrMetOverMet->Sumw2();h_egType1CorrMetOverMet->SetLineColor(kRed);h_egType1CorrMetOverMet->SetMarkerColor(kRed);
  h_metOverGenMet->SetLineColor(kRed);h_metOverGenMet->SetMarkerColor(kRed);
  TH1F* h_Type1CorrMetOverGenMet = new TH1F("Type1CorrMetOverGenMet","Type 1 corrected / generator level missing transverse energy;#slash{E}_{T} (GeV);Events",220,0.0,1100.); h_Type1CorrMetOverGenMet->Sumw2();
  h_Type1CorrMetOverGenMet->SetLineColor(kBlue);h_Type1CorrMetOverGenMet->SetMarkerColor(kBlue);
  TH1F* h_sumEtOverGenSumEt = new TH1F("sumEtOverGenSumEt","uncorrected / generator level sumEt;#sigmaE_{T} (GeV);Events",500,0.0,5000.); h_sumEtOverGenSumEt->Sumw2();
  h_sumEtOverGenSumEt->SetLineColor(kRed);h_sumEtOverGenSumEt->SetMarkerColor(kRed);
  TH1F* h_Type1CorrSumEtOverGenSumEt = new TH1F("Type1CorrSumEtOverGenSumEt","Type 1 corrected / generator level sumEt;#sigmaE_{T} (GeV);Events",500,0.0,5000.);h_Type1CorrSumEtOverGenSumEt->Sumw2();
  h_Type1CorrSumEtOverGenSumEt->SetLineColor(kBlue);h_Type1CorrSumEtOverGenSumEt->SetMarkerColor(kBlue);
  TH1F* h_sumEt_gg = new TH1F("sumEt_gg","Scalar sum of all calorimeter energy in gg events;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_Type1CorrSumEt_gg = new TH1F("Type1CorrSumEt_gg","Type 1 corrected Scalar sum of all calorimeter energy in gg events;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_sumEt_eg = new TH1F("sumEt_eg","Scalar sum of all calorimeter energy in eg events;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_sumEt_ee = new TH1F("sumEt_ee","Scalar sum of all calorimeter energy in ee events with 81<InvariantMass<101GeV;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_sumEt_eeFullRange = new TH1F("sumEt_eeFullRange","Scalar sum of all calorimeter energy in ee events with full InvarianMass range;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_sumEt_ff = new TH1F("sumEt_ff","Scalar sum of all calorimeter energy in ff events;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_sumEt_gammafake = new TH1F("sumEt_gammafake","Scalar sum of all calorimeter energy in #gammaf events;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_sumEt_gg_METlt40 = new TH1F("sumEt_gg_METlt40","Scalar sum of all calorimeter energy in gg events, met<40;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_sumEt_ff_METlt40 = new TH1F("sumEt_ff_METlt40","Scalar sum of all calorimeter energy in ff events, met<40;#sigmaE_{T} (GeV);Events",500,0.0,5000.);

  TH1F* h_PhoPt = new TH1F("PhoPt","All Photon Transverse Momentum (GeV)", 200,0.,1000.);
  TH1F* h_PhoPt_ptHatReweight = new TH1F("PhoPt_ptHatReweight","All Photon Transverse Momentum (GeV)", 200,0.,1000.);
  TH1F* h_ggPt = new TH1F("ggPt","gg Transverse Momentum;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakePt = new TH1F("gammafakePt","gammafake Transverse Momentum;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_egPt = new TH1F("egPt","eg Transverse Momentum;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_eePt = new TH1F("eePt","ee Transverse Momentum;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_ffPt = new TH1F("ffPt","ff Transverse Momentum;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_ggPtLead = new TH1F("ggPtLead","gg Transverse Momentum of leading object;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_ggPtTrail = new TH1F("ggPtTrail","gg Transverse Momentum of trailing object;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_egPtLead = new TH1F("egPtLead","eg Transverse Momentum of leading object;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_egPtTrail = new TH1F("egPtTrail","eg Transverse Momentum of trailing object;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_eePtLead = new TH1F("eePtLead","ee Transverse Momentum of leading object;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_eePtTrail = new TH1F("eePtTrail","ee Transverse Momentum of trailing object;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_ffPtLead = new TH1F("ffPtLead","ff Transverse Momentum of leading object;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_ffPtTrail = new TH1F("ffPtTrail","ff Transverse Momentum of trailing object;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakePtLead = new TH1F("gammafakePtLead","gammafake Transverse Momentum of leading object;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakePtTrail = new TH1F("gammafakePtTrail","gammafake Transverse Momentum of trailing object;p_{T} (GeV);Events", 200,0.,1000.);

  TH1F* h_ggEta = new TH1F("ggEta","gg #eta;#eta;Events", 350,-3.5,3.5);
  TH1F* h_ggPhi = new TH1F("ggPhi","gg #phi;#phi;Events", 64,-3.2,3.2);
  TH1F* h_gammafakeEta = new TH1F("gammafakeEta","gammafake #eta;#eta;Events", 350,-3.5,3.5);
  TH1F* h_gammafakePhi = new TH1F("gammafakePhi","gammafake #phi;#phi;Events", 64,-3.2,3.2);
  TH1F* h_ffEta = new TH1F("ffEta","ff #eta;#eta;Events", 350,-3.5,3.5);
  TH1F* h_ffPhi = new TH1F("ffPhi","ff #phi;#phi;Events", 64,-3.2,3.2);
  TH1F* h_eeEta = new TH1F("eeEta","ee #eta;#eta;Events", 350,-3.5,3.5);
  TH1F* h_eePhi = new TH1F("eePhi","ee #phi;#phi;Events", 64,-3.2,3.2);
 

  TH1F* h_gammafakedPhi = new TH1F("gammafakedPhi","#Delta#phi between gammafake objects;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_fgdPhi = new TH1F("fgdPhi","#Delta#phi between fg objects;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_gfdPhi = new TH1F("gfdPhi","#Delta#phi between gf objects;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ggdPhi = new TH1F("ggdPhi","#Delta#phi between gg objects;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_egdPhi = new TH1F("egdPhi","#Delta#phi between eg objects;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_eedPhi = new TH1F("eedPhi","#Delta#phi between ee objects;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ffdPhi = new TH1F("ffdPhi","#Delta#phi between ff objects;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ggdPhi_METlt40 = new TH1F("ggdPhi_METlt40","#Delta#phi between gg objects, met<40;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ffdPhi_METlt40 = new TH1F("ffdPhi_METlt40","#Delta#phi between ff objects, met<40;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_gammafakedR = new TH1F("gammafakedR","#DeltaR between gammafake objects;#DeltaR;Events",32,0.,3.2);
  TH1F* h_fgdR = new TH1F("fgdR","#DeltaR between fg objects;#DeltaR;Events",32,0.,3.2);
  TH1F* h_gfdR = new TH1F("gfdR","#DeltaR between gf objects;#DeltaR;Events",32,0.,3.2);
  TH1F* h_ggdR = new TH1F("ggdR","#DeltaR between gg objects;#DeltaR;Events",32,0.,3.2);
  TH1F* h_egdR = new TH1F("egdR","#DeltaR between eg objects;#DeltaR;Events",32,0.,3.2);
  TH1F* h_eedR = new TH1F("eedR","#DeltaR between ee objects;#DeltaR;Events",32,0.,3.2);
  TH1F* h_ffdR = new TH1F("ffdR","#DeltaR between ff objects;#DeltaR;Events",32,0.,3.2);

  TH1F* h_gammafakeMETdPhi = new TH1F("gammafakeMETdPhi","#Delta#phi between gammafake objects and MET;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_fgMETdPhi = new TH1F("fgMETdPhi","#Delta#phi between fg objects and MET;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_gfMETdPhi = new TH1F("gfMETdPhi","#Delta#phi between gf objects and MET;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ggMETdPhi = new TH1F("ggMETdPhi","#Delta#phi between gg objects and MET;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_egMETdPhi = new TH1F("egMETdPhi","#Delta#phi between eg objects and MET;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_eeMETdPhi = new TH1F("eeMETdPhi","#Delta#phi between ee objects and MET;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ffMETdPhi = new TH1F("ffMETdPhi","#Delta#phi between ff objects and MET;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ggMETdPhi_0Jet = new TH1F("ggMETdPhi_0Jet","#Delta#phi(#gamma,MET);#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ffMETdPhi_0Jet = new TH1F("ffMETdPhi_0Jet","#Delta#phi(#gamma,MET);#Delta#phi;Events",32,0.,3.2);
  TH1F* h_gfMETdPhi_0Jet = new TH1F("gfMETdPhi_0Jet","#Delta#phi(#gamma,MET);#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ggMETdPhi_1Jet = new TH1F("ggMETdPhi_1Jet","#Delta#phi(#gamma,MET);#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ffMETdPhi_1Jet = new TH1F("ffMETdPhi_1Jet","#Delta#phi(#gamma,MET);#Delta#phi;Events",32,0.,3.2);
  TH1F* h_gfMETdPhi_1Jet = new TH1F("gfMETdPhi_1Jet","#Delta#phi(#gamma,MET);#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ggMETdPhi_2Jet = new TH1F("ggMETdPhi_2Jet","#Delta#phi(#gamma,MET);#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ffMETdPhi_2Jet = new TH1F("ffMETdPhi_2Jet","#Delta#phi(#gamma,MET);#Delta#phi;Events",32,0.,3.2);
  TH1F* h_gfMETdPhi_2Jet = new TH1F("gfMETdPhi_2Jet","#Delta#phi(#gamma,MET);#Delta#phi;Events",32,0.,3.2);
  TH2F* h_ffMETdPhi_vs_Met = new TH2F("ffMETdPhi_vs_Met","#Delta#phi between ff objects and MET;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH2F* h_ggMETdPhi_vs_Met = new TH2F("ggMETdPhi_vs_Met","#Delta#phi between gg objects and MET;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH2F* h_eeMETdPhi_vs_Met = new TH2F("eeMETdPhi_vs_Met","#Delta#phi between ee objects and MET;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH2F* h_gammafakeMETdPhi_vs_Met = new TH2F("gammafakeMETdPhi_vs_Met","#Delta#phi between gf objects and MET;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH1F* h_ffMETdPhi_CaloIso_CaloIso_Only = new TH1F("ffMETdPhi_CaloIso_CaloIso_Only","#Delta#phi between ff objects and MET;#Delta#phi;Events",32,0.,3.2);
  TH2F* h_ffMETdPhi_vs_Met_CaloIso_CaloIso_Only = new TH2F("ffMETdPhi_vs_Met_CaloIso_CaloIso_Only","#Delta#phi between ff objects and MET;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH1F* h_ffMETdPhi_CaloIso_R9Id_Only = new TH1F("ffMETdPhi_CaloIso_R9Id_Only","#Delta#phi between ff objects and MET;#Delta#phi;Events",32,0.,3.2);
  TH2F* h_ffMETdPhi_vs_Met_CaloIso_R9Id_Only = new TH2F("ffMETdPhi_vs_Met_CaloIso_R9Id_Only","#Delta#phi between ff objects and MET;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH1F* h_ffMETdPhi_R9Id_CaloIso_Only = new TH1F("ffMETdPhi_R9Id_CaloIso_Only","#Delta#phi between ff objects and MET;#Delta#phi;Events",32,0.,3.2);
  TH2F* h_ffMETdPhi_vs_Met_R9Id_CaloIso_Only = new TH2F("ffMETdPhi_vs_Met_R9Id_CaloIso_Only","#Delta#phi between ff objects and MET;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH1F* h_ffMETdPhi_R9Id_R9Id_Only = new TH1F("ffMETdPhi_R9Id_R9Id_Only","#Delta#phi between ff objects and MET;#Delta#phi;Events",32,0.,3.2);
  TH2F* h_ffMETdPhi_vs_Met_R9Id_R9Id_Only = new TH2F("ffMETdPhi_vs_Met_R9Id_R9Id_Only","#Delta#phi between ff objects and MET;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH1F* h_gg_JetMETdPhi = new TH1F("gg_JetMETdPhi","#Delta#phi between nearest jet and MET in gg events;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ff_JetMETdPhi = new TH1F("ff_JetMETdPhi","#Delta#phi between nearest jet and MET in ff events;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ee_JetMETdPhi = new TH1F("ee_JetMETdPhi","#Delta#phi between nearest jet and MET in ee events;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_gammafake_JetMETdPhi = new TH1F("gammafake_JetMETdPhi","#Delta#phi between nearest jet and MET in gf events;#Delta#phi;Events",32,0.,3.2);
  TH2F* h_gg_JetMETdPhi_vs_Met = new TH2F("gg_JetMETdPhi_vs_Met","#Delta#phi between nearest jet and MET in gg events;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH2F* h_ff_JetMETdPhi_vs_Met = new TH2F("ff_JetMETdPhi_vs_Met","#Delta#phi between nearest jet and MET in ff events;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH2F* h_ee_JetMETdPhi_vs_Met = new TH2F("ee_JetMETdPhi_vs_Met","#Delta#phi between nearest jet and MET in ee events;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH2F* h_gammafake_JetMETdPhi_vs_Met = new TH2F("gammafake_JetMETdPhi_vs_Met","#Delta#phi between nearest jet and MET in gf events;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH1F* h_ff_JetMETdPhi_CaloIso_CaloIso_Only = new TH1F("ff_JetMETdPhi_CaloIso_CaloIso_Only","#Delta#phi between nearest jet and MET in ff events;#Delta#phi;Events",32,0.,3.2);
  TH2F* h_ff_JetMETdPhi_vs_Met_CaloIso_CaloIso_Only = new TH2F("ff_JetMETdPhi_vs_Met_CaloIso_CaloIso_Only","#Delta#phi between nearest jet and MET in ff events;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH1F* h_ff_JetMETdPhi_CaloIso_R9Id_Only = new TH1F("ff_JetMETdPhi_CaloIso_R9Id_Only","#Delta#phi between nearest jet and MET in ff events;#Delta#phi;Events",32,0.,3.2);
  TH2F* h_ff_JetMETdPhi_vs_Met_CaloIso_R9Id_Only = new TH2F("ff_JetMETdPhi_vs_Met_CaloIso_R9Id_Only","#Delta#phi between nearest jet and MET in ff events;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH1F* h_ff_JetMETdPhi_R9Id_CaloIso_Only = new TH1F("ff_JetMETdPhi_R9Id_CaloIso_Only","#Delta#phi between nearest jet and MET in ff events;#Delta#phi;Events",32,0.,3.2);
  TH2F* h_ff_JetMETdPhi_vs_Met_R9Id_CaloIso_Only = new TH2F("ff_JetMETdPhi_vs_Met_R9Id_CaloIso_Only","#Delta#phi between nearest jet and MET in ff events;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH1F* h_ff_JetMETdPhi_R9Id_R9Id_Only = new TH1F("ff_JetMETdPhi_R9Id_R9Id_Only","#Delta#phi between nearest jet and MET in ff events;#Delta#phi;Events",32,0.,3.2);
  TH2F* h_ff_JetMETdPhi_vs_Met_R9Id_R9Id_Only = new TH2F("ff_JetMETdPhi_vs_Met_R9Id_R9Id_Only","#Delta#phi between nearest jet and MET in ff events;E_{T}^{miss};#Delta#phi",200,0.,1000.,32,0.,3.2);
  TH1F* h_gammafakeMETdPhiLead = new TH1F("gammafakeMETdPhiLead","#Delta#phi between Lead gammafake object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_fgMETdPhiLead = new TH1F("fgMETdPhiLead","#Delta#phi between Lead fg object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_gfMETdPhiLead = new TH1F("gfMETdPhiLead","#Delta#phi between Lead gf object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggMETdPhiLead = new TH1F("ggMETdPhiLead","#Delta#phi between Lead gg object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_egMETdPhiLead = new TH1F("egMETdPhiLead","#Delta#phi between Lead eg object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_eeMETdPhiLead = new TH1F("eeMETdPhiLead","#Delta#phi between Lead ee object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiLead = new TH1F("ffMETdPhiLead","#Delta#phi between Lead ff object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_gammafakeMETdPhiTrail = new TH1F("gammafakeMETdPhiTrail","#Delta#phi between Trail gammafake object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_fgMETdPhiTrail = new TH1F("fgMETdPhiTrail","#Delta#phi between Trail fg object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_gfMETdPhiTrail = new TH1F("gfMETdPhiTrail","#Delta#phi between Trail gf object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggMETdPhiTrail = new TH1F("ggMETdPhiTrail","#Delta#phi between Trail gg object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_egMETdPhiTrail = new TH1F("egMETdPhiTrail","#Delta#phi between Trail eg object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_eeMETdPhiTrail = new TH1F("eeMETdPhiTrail","#Delta#phi between Trail ee object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiTrail = new TH1F("ffMETdPhiTrail","#Delta#phi between Trail ff object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggMETdPhiLead_METlt40 = new TH1F("ggMETdPhiLead_METlt40","#Delta#phi between Lead gg object and M_{E_{T}}, met<40;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggMETdPhiTrail_METlt40 = new TH1F("ggMETdPhiTrail_METlt40","#Delta#phi between Trail gg object and M_{E_{T}}, met<40;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggSystem_METdPhi = new TH1F("ggSystem_METdPhi","#Delta#phi between gg combined object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggSystem_METdPhi_METlt40 = new TH1F("ggSystem_METdPhi_METlt40","#Delta#phi between gg combined object and M_{E_{T}}, met<40;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffSystem_METdPhi = new TH1F("ffSystem_METdPhi","#Delta#phi between ff combined object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffSystem_METdPhi_METlt40 = new TH1F("ffSystem_METdPhi_METlt40","#Delta#phi between ff combined object and M_{E_{T}}, met<40;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiLead_METlt40 = new TH1F("ffMETdPhiLead_METlt40","#Delta#phi between Lead ff object and M_{E_{T}}, met<40;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiTrail_METlt40 = new TH1F("ffMETdPhiTrail_METlt40","#Delta#phi between Trail ff object and M_{E_{T}}, met<40;#Delta#phi(pho,MET);Events",32,0.,3.2);


  TH1F* h_ggAlphaT_BDTltMinusPoint45 = new TH1F("ggAlphaT_BDTltMinusPoint45","#alpha_{T} of gg sample, BDT<-.85;#alpha_{T};Events",200,0.,2.); 
  TH1F* h_sumEt_gg_BDTltMinusPoint45 = new TH1F("sumEt_gg_BDTltMinusPoint45","Scalar sum of all calorimeter energy in gg events, BDT<-.85;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ggdPhi_BDTltMinusPoint45 = new TH1F("ggdPhi_BDTltMinusPoint45","#Delta#phi between gg objects, BDT<-.85;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ggMETdPhiLead_BDTltMinusPoint45 = new TH1F("ggMETdPhiLead_BDTltMinusPoint45","#Delta#phi between Lead gg object and M_{E_{T}}, BDT<-.85;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggMETdPhiTrail_BDTltMinusPoint45 = new TH1F("ggMETdPhiTrail_BDTltMinusPoint45","#Delta#phi between Trail gg object and M_{E_{T}}, BDT<-.85;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggSystem_METdPhi_BDTltMinusPoint45 = new TH1F("ggSystem_METdPhi_BDTltMinusPoint45","#Delta#phi between gg combined object and M_{E_{T}}, BDT<-.85;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggPhotonLessHt_BDTltMinusPoint45 = new TH1F("ggPhotonLessHt_BDTltMinusPoint45","Scalar sum of all calorimeter energy minus two EM objects, BDT<-.85;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ggInvarMass_BDTltMinusPoint45 = new TH1F("ggInvarMass_BDTltMinusPoint45","gg Invariant Mass, BDT<-.85;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggMet_BDTltMinusPoint45 = new TH1F("ggMet_BDTltMinusPoint45","Missing transverse energy in events with two photons with Et>40,25 GeV, BDT<-.85;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMR_BDTltMinusPoint45 = new TH1F("ggMR_BDTltMinusPoint45","Razor MR Variable in events with two photons with Et>40,25 GeV, BDT<-.85;M_{R} (GeV);Events",300,0.,1500.);
  
  TH1F* h_ffAlphaT_BDTltMinusPoint45 = new TH1F("ffAlphaT_BDTltMinusPoint45","#alpha_{T} of ff sample, BDT<-.85;#alpha_{T};Events",200,0.,2.);
  TH1F* h_sumEt_ff_BDTltMinusPoint45 = new TH1F("sumEt_ff_BDTltMinusPoint45","Scalar sum of all calorimeter energy in ff events, BDT<-.85;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ffdPhi_BDTltMinusPoint45 = new TH1F("ffdPhi_BDTltMinusPoint45","#Delta#phi between ff objects, BDT<-.85;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ffSystem_METdPhi_BDTltMinusPoint45 = new TH1F("ffSystem_METdPhi_BDTltMinusPoint45","#Delta#phi between ff combined object and M_{E_{T}}, BDT<-.85;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiLead_BDTltMinusPoint45 = new TH1F("ffMETdPhiLead_BDTltMinusPoint45","#Delta#phi between Lead ff object and M_{E_{T}}, BDT<-.85;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiTrail_BDTltMinusPoint45 = new TH1F("ffMETdPhiTrail_BDTltMinusPoint45","#Delta#phi between Trail ff object and M_{E_{T}}, BDT<-.85;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffPhotonLessHt_BDTltMinusPoint45 = new TH1F("ffPhotonLessHt_BDTltMinusPoint45","Scalar sum of all calorimeter energy minus two EM objects, BDT<-.85;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ffInvarMass_BDTltMinusPoint45 = new TH1F("ffInvarMass_BDTltMinusPoint45","ff Invariant Mass, BDT<-.85;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ffMet_BDTltMinusPoint45 = new TH1F("ffMet_BDTltMinusPoint45","Missing transverse energy in events with two fake photons with Et>40,25 GeV, BDT<-.85;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMR_BDTltMinusPoint45 = new TH1F("ffMR_BDTltMinusPoint45","Razor MR Variable in events with two fake photons with Et>40,25 GeV, BDT<-.85;M_{R} (GeV);Events",300,0.,1500.);



  TH1F* h_ffAlphaT_BDT = new TH1F("ffAlphaT_BDT","#alpha_{T} of ff sample;#alpha_{T};Events",200,0.,2.);
  TH1F* h_sumEt_ff_BDT = new TH1F("sumEt_ff_BDT","Scalar sum of all calorimeter energy in ff events;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ffdPhi_BDT = new TH1F("ffdPhi_BDT","#Delta#phi between ff objects;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ffSystem_METdPhi_BDT = new TH1F("ffSystem_METdPhi_BDT","#Delta#phi between ff combined object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiLead_BDT = new TH1F("ffMETdPhiLead_BDT","#Delta#phi between Lead ff object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiTrail_BDT = new TH1F("ffMETdPhiTrail_BDT","#Delta#phi between Trail ff object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffPhotonLessHt_BDT = new TH1F("ffPhotonLessHt_BDT","Scalar sum of all calorimeter energy minus two EM objects;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ffInvarMass_BDT = new TH1F("ffInvarMass_BDT","ff Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ffMet_BDT = new TH1F("ffMet_BDT","Missing transverse energy in events with two fake photons with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMR_BDT = new TH1F("ffMR_BDT","Razor MR Variable in events with two fake photons with Et>40,25 GeV;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_ggAlphaT_BDT = new TH1F("ggAlphaT_BDT","#alpha_{T} of gg sample;#alpha_{T};Events",200,0.,2.);
  TH1F* h_sumEt_gg_BDT = new TH1F("sumEt_gg_BDT","Scalar sum of all calorimeter energy in gg events;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ggdPhi_BDT = new TH1F("ggdPhi_BDT","#Delta#phi between gg objects;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ggSystem_METdPhi_BDT = new TH1F("ggSystem_METdPhi_BDT","#Delta#phi between gg combined object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggMETdPhiLead_BDT = new TH1F("ggMETdPhiLead_BDT","#Delta#phi between Lead gg object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggMETdPhiTrail_BDT = new TH1F("ggMETdPhiTrail_BDT","#Delta#phi between Trail gg object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggPhotonLessHt_BDT = new TH1F("ggPhotonLessHt_BDT","Scalar sum of all calorimeter energy minus two EM objects;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ggInvarMass_BDT = new TH1F("ggInvarMass_BDT","gg Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggMet_BDT = new TH1F("ggMet_BDT","Missing transverse energy in ff events;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMR_BDT = new TH1F("ggMR_BDT","Razor MR Variable in events with two fake photons with Et>40,25 GeV;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_egAlphaT_BDT = new TH1F("egAlphaT_BDT","#alpha_{T} of eg sample;#alpha_{T};Events",200,0.,2.);
  TH1F* h_sumEt_eg_BDT = new TH1F("sumEt_eg_BDT","Scalar sum of all calorimeter energy in eg events;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_egdPhi_BDT = new TH1F("egdPhi_BDT","#Delta#phi between eg objects;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_egSystem_METdPhi_BDT = new TH1F("egSystem_METdPhi_BDT","#Delta#phi between eg combined object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_egMETdPhiLead_BDT = new TH1F("egMETdPhiLead_BDT","#Delta#phi between Lead eg object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_egMETdPhiTrail_BDT = new TH1F("egMETdPhiTrail_BDT","#Delta#phi between Trail eg object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_egPhotonLessHt_BDT = new TH1F("egPhotonLessHt_BDT","Scalar sum of all calorimeter energy minus two EM objects;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_egInvarMass_BDT = new TH1F("egInvarMass_BDT","eg Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_egMet_BDT = new TH1F("egMet_BDT","Missing transverse energy in eg events;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMR_BDT = new TH1F("egMR_BDT","Razor MR Variable in events with two fake photons with Et>40,25 GeV;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_gfAlphaT_BDT = new TH1F("gfAlphaT_BDT","#alpha_{T} of gf sample;#alpha_{T};Events",200,0.,2.);
  TH1F* h_sumEt_gf_BDT = new TH1F("sumEt_gf_BDT","Scalar sum of all calorimeter energy in gf events;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_gfdPhi_BDT = new TH1F("gfdPhi_BDT","#Delta#phi between gf objects;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_gfSystem_METdPhi_BDT = new TH1F("gfSystem_METdPhi_BDT","#Delta#phi between gf combined object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_gfMETdPhiLead_BDT = new TH1F("gfMETdPhiLead_BDT","#Delta#phi between Lead gf object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_gfMETdPhiTrail_BDT = new TH1F("gfMETdPhiTrail_BDT","#Delta#phi between Trail gf object and M_{E_{T}};#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_gfPhotonLessHt_BDT = new TH1F("gfPhotonLessHt_BDT","Scalar sum of all calorimeter energy minus two EM objects;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_gfInvarMass_BDT = new TH1F("gfInvarMass_BDT","gf Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfMet_BDT = new TH1F("gfMet_BDT","Missing transverse energy in gf events;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMR_BDT = new TH1F("gfMR_BDT","Razor MR Variable in events with two fake photons with Et>40,25 GeV;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_ffAlphaT_BDT_reweight = new TH1F("ffAlphaT_BDT_reweight","#alpha_{T} of ff sample, diJetPt reweighted;#alpha_{T};Events",200,0.,2.);
  TH1F* h_sumEt_ff_BDT_reweight = new TH1F("sumEt_ff_BDT_reweight","Scalar sum of all calorimeter energy in ff events, diJetPt reweighted;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ffdPhi_BDT_reweight = new TH1F("ffdPhi_BDT_reweight","#Delta#phi between ff objects, diJetPt reweighted;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ffSystem_METdPhi_BDT_reweight = new TH1F("ffSystem_METdPhi_BDT_reweight","#Delta#phi between ff combined object and M_{E_{T}}, diJetPt reweighted;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiLead_BDT_reweight = new TH1F("ffMETdPhiLead_BDT_reweight","#Delta#phi between Lead ff object and M_{E_{T}}, diJetPt reweighted;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiTrail_BDT_reweight = new TH1F("ffMETdPhiTrail_BDT_reweight","#Delta#phi between Trail ff object and M_{E_{T}}, diJetPt reweighted;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffPhotonLessHt_BDT_reweight = new TH1F("ffPhotonLessHt_BDT_reweight","Scalar sum of all calorimeter energy minus two EM objects, diJetPt reweighted;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ffInvarMass_BDT_reweight = new TH1F("ffInvarMass_BDT_reweight","ff Invariant Mass, diJetPt reweighted;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ffMet_BDT_reweight = new TH1F("ffMet_BDT_reweight","Missing transverse energy in events with two fake photons with Et>40,25 GeV, diJetPt reweighted;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMR_BDT_reweight = new TH1F("ffMR_BDT_reweight","Razor MR Variable in events with two fake photons with Et>40,25 GeV, diJetPt reweighted;M_{R} (GeV);Events",300,0.,1500.);

  //remove Z peak
  TH1F* h_ffAlphaT_BDT_NoZ = new TH1F("ffAlphaT_BDT_NoZ","#alpha_{T} of ff sample, 86>InvMass>96;#alpha_{T};Events",200,0.,2.);
  TH1F* h_sumEt_ff_BDT_NoZ = new TH1F("sumEt_ff_BDT_NoZ","Scalar sum of all calorimeter energy in ff events, 86>InvMass>96;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ffdPhi_BDT_NoZ = new TH1F("ffdPhi_BDT_NoZ","#Delta#phi between ff objects, 86>InvMass>96;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ffSystem_METdPhi_BDT_NoZ = new TH1F("ffSystem_METdPhi_BDT_NoZ","#Delta#phi between ff combined object and M_{E_{T}}, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiLead_BDT_NoZ = new TH1F("ffMETdPhiLead_BDT_NoZ","#Delta#phi between Lead ff object and M_{E_{T}}, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiTrail_BDT_NoZ = new TH1F("ffMETdPhiTrail_BDT_NoZ","#Delta#phi between Trail ff object and M_{E_{T}}, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffPhotonLessHt_BDT_NoZ = new TH1F("ffPhotonLessHt_BDT_NoZ","Scalar sum of all calorimeter energy minus two EM objects, 86>InvMass>96;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ffInvarMass_BDT_NoZ = new TH1F("ffInvarMass_BDT_NoZ","ff Invariant Mass, 86>InvMass>96;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ffMet_BDT_NoZ = new TH1F("ffMet_BDT_NoZ","Missing transverse energy in events with two fake photons with Et>40,25 GeV, 86>InvMass>96;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMR_BDT_NoZ = new TH1F("ffMR_BDT_NoZ","Razor MR Variable in events with two fake photons with Et>40,25 GeV, 86>InvMass>96;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_ggAlphaT_BDT_NoZ = new TH1F("ggAlphaT_BDT_NoZ","#alpha_{T} of gg sample, 86>InvMass>96;#alpha_{T};Events",200,0.,2.);
  TH1F* h_sumEt_gg_BDT_NoZ = new TH1F("sumEt_gg_BDT_NoZ","Scalar sum of all calorimeter energy in gg events, 86>InvMass>96;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ggdPhi_BDT_NoZ = new TH1F("ggdPhi_BDT_NoZ","#Delta#phi between gg objects, 86>InvMass>96;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ggSystem_METdPhi_BDT_NoZ = new TH1F("ggSystem_METdPhi_BDT_NoZ","#Delta#phi between gg combined object and M_{E_{T}}, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggMETdPhiLead_BDT_NoZ = new TH1F("ggMETdPhiLead_BDT_NoZ","#Delta#phi between Lead gg object and M_{E_{T}}, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggMETdPhiTrail_BDT_NoZ = new TH1F("ggMETdPhiTrail_BDT_NoZ","#Delta#phi between Trail gg object and M_{E_{T}}, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ggPhotonLessHt_BDT_NoZ = new TH1F("ggPhotonLessHt_BDT_NoZ","Scalar sum of all calorimeter energy minus two EM objects, 86>InvMass>96;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ggInvarMass_BDT_NoZ = new TH1F("ggInvarMass_BDT_NoZ","gg Invariant Mass, 86>InvMass>96;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggMet_BDT_NoZ = new TH1F("ggMet_BDT_NoZ","Missing transverse energy in ff events, 86>InvMass>96;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMR_BDT_NoZ = new TH1F("ggMR_BDT_NoZ","Razor MR Variable in events with two fake photons with Et>40,25 GeV, 86>InvMass>96;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_egAlphaT_BDT_NoZ = new TH1F("egAlphaT_BDT_NoZ","#alpha_{T} of eg sample, 86>InvMass>96;#alpha_{T};Events",200,0.,2.);
  TH1F* h_sumEt_eg_BDT_NoZ = new TH1F("sumEt_eg_BDT_NoZ","Scalar sum of all calorimeter energy in eg events, 86>InvMass>96;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_egdPhi_BDT_NoZ = new TH1F("egdPhi_BDT_NoZ","#Delta#phi between eg objects, 86>InvMass>96;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_egSystem_METdPhi_BDT_NoZ = new TH1F("egSystem_METdPhi_BDT_NoZ","#Delta#phi between eg combined object and M_{E_{T}}, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_egMETdPhiLead_BDT_NoZ = new TH1F("egMETdPhiLead_BDT_NoZ","#Delta#phi between Lead eg object and M_{E_{T}}, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_egMETdPhiTrail_BDT_NoZ = new TH1F("egMETdPhiTrail_BDT_NoZ","#Delta#phi between Trail eg object and M_{E_{T}}, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_egPhotonLessHt_BDT_NoZ = new TH1F("egPhotonLessHt_BDT_NoZ","Scalar sum of all calorimeter energy minus two EM objects, 86>InvMass>96;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_egInvarMass_BDT_NoZ = new TH1F("egInvarMass_BDT_NoZ","eg Invariant Mass, 86>InvMass>96;(GeV);Events", 2004,0.,1002.);
  TH1F* h_egMet_BDT_NoZ = new TH1F("egMet_BDT_NoZ","Missing transverse energy in eg events, 86>InvMass>96;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMR_BDT_NoZ = new TH1F("egMR_BDT_NoZ","Razor MR Variable in events with two fake photons with Et>40,25 GeV, 86>InvMass>96;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_gfAlphaT_BDT_NoZ = new TH1F("gfAlphaT_BDT_NoZ","#alpha_{T} of gf sample, 86>InvMass>96;#alpha_{T};Events",200,0.,2.);
  TH1F* h_sumEt_gf_BDT_NoZ = new TH1F("sumEt_gf_BDT_NoZ","Scalar sum of all calorimeter energy in gf events, 86>InvMass>96;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_gfdPhi_BDT_NoZ = new TH1F("gfdPhi_BDT_NoZ","#Delta#phi between gf objects, 86>InvMass>96;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_gfSystem_METdPhi_BDT_NoZ = new TH1F("gfSystem_METdPhi_BDT_NoZ","#Delta#phi between gf combined object and M_{E_{T}}, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_gfMETdPhiLead_BDT_NoZ = new TH1F("gfMETdPhiLead_BDT_NoZ","#Delta#phi between Lead gf object and M_{E_{T}}, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_gfMETdPhiTrail_BDT_NoZ = new TH1F("gfMETdPhiTrail_BDT_NoZ","#Delta#phi between Trail gf object and M_{E_{T}}, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_gfPhotonLessHt_BDT_NoZ = new TH1F("gfPhotonLessHt_BDT_NoZ","Scalar sum of all calorimeter energy minus two EM objects, 86>InvMass>96;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_gfInvarMass_BDT_NoZ = new TH1F("gfInvarMass_BDT_NoZ","gf Invariant Mass, 86>InvMass>96;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfMet_BDT_NoZ = new TH1F("gfMet_BDT_NoZ","Missing transverse energy in gf events, 86>InvMass>96;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMR_BDT_NoZ = new TH1F("gfMR_BDT_NoZ","Razor MR Variable in events with two fake photons with Et>40,25 GeV, 86>InvMass>96;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_ffAlphaT_BDT_NoZ_reweight = new TH1F("ffAlphaT_BDT_NoZ_reweight","#alpha_{T} of ff sample, diJetPt reweighted, 86>InvMass>96;#alpha_{T};Events",200,0.,2.);
  TH1F* h_sumEt_ff_BDT_NoZ_reweight = new TH1F("sumEt_ff_BDT_NoZ_reweight","Scalar sum of all calorimeter energy in ff events, diJetPt reweighted, 86>InvMass>96;#sigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ffdPhi_BDT_NoZ_reweight = new TH1F("ffdPhi_BDT_NoZ_reweight","#Delta#phi between ff objects, diJetPt reweighted, 86>InvMass>96;#Delta#phi;Events",32,0.,3.2);
  TH1F* h_ffSystem_METdPhi_BDT_NoZ_reweight = new TH1F("ffSystem_METdPhi_BDT_NoZ_reweight","#Delta#phi between ff combined object and M_{E_{T}}, diJetPt reweighted, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiLead_BDT_NoZ_reweight = new TH1F("ffMETdPhiLead_BDT_NoZ_reweight","#Delta#phi between Lead ff object and M_{E_{T}}, diJetPt reweighted, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffMETdPhiTrail_BDT_NoZ_reweight = new TH1F("ffMETdPhiTrail_BDT_NoZ_reweight","#Delta#phi between Trail ff object and M_{E_{T}}, diJetPt reweighted, 86>InvMass>96;#Delta#phi(pho,MET);Events",32,0.,3.2);
  TH1F* h_ffPhotonLessHt_BDT_NoZ_reweight = new TH1F("ffPhotonLessHt_BDT_NoZ_reweight","Scalar sum of all calorimeter energy minus two EM objects, diJetPt reweighted, 86>InvMass>96;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ffInvarMass_BDT_NoZ_reweight = new TH1F("ffInvarMass_BDT_NoZ_reweight","ff Invariant Mass, diJetPt reweighted, 86>InvMass>96;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ffMet_BDT_NoZ_reweight = new TH1F("ffMet_BDT_NoZ_reweight","Missing transverse energy in events with two fake photons with Et>40,25 GeV, diJetPt reweighted, 86>InvMass>96;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMR_BDT_NoZ_reweight = new TH1F("ffMR_BDT_NoZ_reweight","Razor MR Variable in events with two fake photons with Et>40,25 GeV, diJetPt reweighted, 86>InvMass>96;M_{R} (GeV);Events",300,0.,1500.);


  TH1F* h_ggAlphaT = new TH1F("ggAlphaT","#alpha_{T} of gg sample;#alpha_{T};Events",200,0.,2.); 
  TH1F* h_egAlphaT = new TH1F("egAlphaT","#alpha_{T} of eg sample;#alpha_{T};Events",200,0.,2.);
  TH1F* h_eeAlphaT = new TH1F("eeAlphaT","#alpha_{T} of ee sample;#alpha_{T};Events",200,0.,2.);
  TH1F* h_ffAlphaT = new TH1F("ffAlphaT","#alpha_{T} of ff sample;#alpha_{T};Events",200,0.,2.);
  TH1F* h_ggAlphaT_METlt40 = new TH1F("ggAlphaT_METlt40","#alpha_{T} of gg sample, met<40;#alpha_{T};Events",200,0.,2.); 
  TH1F* h_ffAlphaT_METlt40 = new TH1F("ffAlphaT_METlt40","#alpha_{T} of ff sample, met<40;#alpha_{T};Events",200,0.,2.);

  TH1F* h_ggAlphaT_0Jet = new TH1F("ggAlphaT_0Jet","#alpha_{T} of gg sample in 0Jet case;#alpha_{T};Events",200,0.,2.); 
  TH1F* h_egAlphaT_0Jet = new TH1F("egAlphaT_0Jet","#alpha_{T} of eg sample in 0Jet case;#alpha_{T};Events",200,0.,2.);
  TH1F* h_eeAlphaT_0Jet = new TH1F("eeAlphaT_0Jet","#alpha_{T} of ee sample in 0Jet case;#alpha_{T};Events",200,0.,2.);
  TH1F* h_ffAlphaT_0Jet = new TH1F("ffAlphaT_0Jet","#alpha_{T} of ff sample in 0Jet case;#alpha_{T};Events",200,0.,2.);

  TH1F* h_ggPhotonLessHt = new TH1F("ggPhotonLessHt","Scalar sum of all calorimeter energy minus two EM objects;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_egPhotonLessHt = new TH1F("egPhotonLessHt","Scalar sum of all calorimeter energy minus two EM objects;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_eePhotonLessHt = new TH1F("eePhotonLessHt","Scalar sum of all calorimeter energy minus two EM objects;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ffPhotonLessHt = new TH1F("ffPhotonLessHt","Scalar sum of all calorimeter energy minus two EM objects;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_gammafakePhotonLessHt = new TH1F("gammafakePhotonLessHt","Scalar sum of all calorimeter energy minus two EM objects;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ggPhotonLessHt_METlt40 = new TH1F("ggPhotonLessHt_METlt40","Scalar sum of all calorimeter energy minus two EM objects, METlt40;#SigmaE_{T} (GeV);Events",500,0.0,5000.);
  TH1F* h_ffPhotonLessHt_METlt40 = new TH1F("ffPhotonLessHt_METlt40","Scalar sum of all calorimeter energy minus two EM objects, METlt40;#SigmaE_{T} (GeV);Events",500,0.0,5000.);

  TH2F* h_ggPhotonLessHtVsMET = new TH2F("ggPhotonLessHtVsMET","Scalar sum of all calorimeter energy minus two EM objects VS MET;MET;#SigmaE_{T} (GeV)",200,0.,1000.,500,0.0,5000.);
  TH2F* h_egPhotonLessHtVsMET = new TH2F("egPhotonLessHtVsMET","Scalar sum of all calorimeter energy minus two EM objects VS MET;MET;#SigmaE_{T} (GeV)",200,0.,1000.,500,0.0,5000.);
  TH2F* h_eePhotonLessHtVsMET = new TH2F("eePhotonLessHtVsMET","Scalar sum of all calorimeter energy minus two EM objects VS MET;MET;#SigmaE_{T} (GeV)",200,0.,1000.,500,0.0,5000.);
  TH2F* h_ffPhotonLessHtVsMET = new TH2F("ffPhotonLessHtVsMET","Scalar sum of all calorimeter energy minus two EM objects VS MET;MET;#SigmaE_{T} (GeV)",200,0.,1000.,500,0.0,5000.);
  TH2F* h_gammafakePhotonLessHtVsMET = new TH2F("gammafakePhotonLessHtVsMET","Scalar sum of all calorimeter energy minus two EM objects VS MET;MET;#SigmaE_{T} (GeV)",200,0.,1000.,500,0.0,5000.);

  TH1F* h_ggePt = new TH1F("ggePt","gge Transverse Momentum;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_ggeElePt = new TH1F("ggeElePt","gge Electron Transverse Momentum;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_ggeDiEMPt = new TH1F("ggeDiEMPt","(gg)e DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_ggeDiEMPt->Sumw2();
  TH1F* h_ggeTriEMPt = new TH1F("ggeTriEMPt","gge TriEMPt;TriEMPt (GeV);Events", 400,0.,1000.);h_ggeTriEMPt->Sumw2();
  TH1F* h_ggeInvarMass = new TH1F("ggeInvarMass","(gg)e Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggeInvarMassMET30 = new TH1F("ggeInvarMassMET30","(gg)e Invariant Mass in Events with MET>30;(GeV);Events", 200,0.,200.);
  TH1F* h_ggeSigIetaIeta = new TH1F("ggeSigIetaIeta","gge SigmaIetaIeta;#sigma_{i#etai#eta};Events", 30,0.,.03);
  TH1F* h_ggeMet = new TH1F("ggeMet","Missing transverse energy in events with two photons with Et>40,25 GeV and one electron;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_rho_gge = new TH1F("rho_gge","Fastjet correction rho for all photonWevents in gge sample",200,0,40);
  TH1F* h_NVertex_gge = new TH1F("NVertex_gge","Number of good vertices for all events in gge sample",40,0,40);
  
  TH1F* h_gggMet = new TH1F("gggMet","Missing transverse energy in events with three photons with Et>40,25,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gggInvarMass_OneTwo = new TH1F("gggInvarMass_OneTwo","(gg)g Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gggInvarMass_TwoThree = new TH1F("gggInvarMass_TwoThree","g(gg) Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gggInvarMass_OneThree = new TH1F("gggInvarMass_OneThree","(g)g(g) Invariant Mass;(GeV);Events", 2004,0.,1002.);


  TH1F* h_ggeePt = new TH1F("ggeePt","ggee Transverse Momentum;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_ggeeElePt = new TH1F("ggeeElePt","ggee Electron Transverse Momentum;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_ggeeDiEMPt = new TH1F("ggeeDiEMPt","(gg)e DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_ggeeDiEMPt->Sumw2();
  TH1F* h_ggeeInvarMass = new TH1F("ggeeInvarMass","Invariant Mass of all four objects in ggee events;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggeeInvarMass_gg = new TH1F("ggeeInvarMass_gg","Invariant Mass gg objects in ggee events;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggeeInvarMass_ee = new TH1F("ggeeInvarMass_ee","Invariant Mass ee objects in ggee events;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggeeSigIetaIeta = new TH1F("ggeeSigIetaIeta","ggee SigmaIetaIeta;#sigma_{i#etai#eta};Events", 30,0.,.03);
  TH1F* h_ggeeMet = new TH1F("ggeeMet","Missing transverse energy in events with two photons with Et>40,25 GeV and one electron;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_rho_ggee = new TH1F("rho_ggee","Fastjet correction rho for all photonWevents in ggee sample",200,0,40);
  TH1F* h_NVertex_ggee = new TH1F("NVertex_ggee","Number of good vertices for all events in ggee sample",40,0,40);

  TH1F* h_ggmMet = new TH1F("ggmMet","Missing transverse energy in events with two photons with Et>40,25 GeV and one pfMuon;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggmInvarMass = new TH1F("ggmInvarMass","(gg)m Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggmInvarMassMET30 = new TH1F("ggmInvarMassMET30","(gg)m Invariant Mass in Events with MET>30;(GeV);Events", 200,0.,200.);

  TH1F* h_eegPt = new TH1F("eegPt","eeg Transverse Momentum;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_eegElePt = new TH1F("eegElePt","eeg Electron Transverse Momentum;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_eegDiEMPt = new TH1F("eegDiEMPt","(gg)e DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_eegDiEMPt->Sumw2();
  TH1F* h_eegTriEMPt = new TH1F("eegTriEMPt","eeg TriEMPt;TriEMPt (GeV);Events", 400,0.,1000.);h_eegTriEMPt->Sumw2();
  TH1F* h_eegInvarMass = new TH1F("eegInvarMass","(gg)e Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eegSigIetaIeta = new TH1F("eegSigIetaIeta","eeg SigmaIetaIeta;#sigma_{i#etai#eta};Events", 30,0.,.03);
  TH1F* h_eegMet = new TH1F("eegMet","Missing transverse energy in events with two photons with Et>40,25 GeV and one electron;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_rho_eeg = new TH1F("rho_eeg","Fastjet correction rho for all photonWevents in eeg sample",200,0,40);
  TH1F* h_NVertex_eeg = new TH1F("NVertex_eeg","Number of good vertices for all events in eeg sample",40,0,40);

  TH1F* h_eeggPt = new TH1F("eeggPt","eegg Transverse Momentum;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_eeggElePt = new TH1F("eeggElePt","eegg Electron Transverse Momentum;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_eeggDiEMPt = new TH1F("eeggDiEMPt","(gg)e DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_eeggDiEMPt->Sumw2();
  TH1F* h_eeggInvarMass = new TH1F("eeggInvarMass","(gg)e Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeggSigIetaIeta = new TH1F("eeggSigIetaIeta","eegg SigmaIetaIeta;#sigma_{i#etai#eta};Events", 30,0.,.03);
  TH1F* h_eeggMet = new TH1F("eeggMet","Missing transverse energy in events with two photons with Et>40,25 GeV and one electron;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_rho_eegg = new TH1F("rho_eegg","Fastjet correction rho for all photonWevents in eegg sample",200,0,40);
  TH1F* h_NVertex_eegg = new TH1F("NVertex_eegg","Number of good vertices for all events in eegg sample",40,0,40);

  TH1F* h_ggDiEMPt = new TH1F("ggDiEMPt","gg DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt->Sumw2();
  TH1F* h_gammafakeDiEMPt = new TH1F("gammafakeDiEMPt","gammafake DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt->Sumw2();
  TH1F* h_fgDiEMPt = new TH1F("fgDiEMPt","fg DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt->Sumw2();
  TH1F* h_gfDiEMPt = new TH1F("gfDiEMPt","gf DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt->Sumw2();
  TH1F* h_egDiEMPt = new TH1F("egDiEMPt","eg DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt->Sumw2();
  TH1F* h_eeDiEMPt = new TH1F("eeDiEMPt","ee DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt->Sumw2();
  TH1F* h_ffDiEMPt = new TH1F("ffDiEMPt","ff DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt->Sumw2();

  TH1F* h_eeDiEMPt_reweight_binned = new TH1F("eeDiEMPt_reweight_binned","ee DiEMPt;DiEMPt (GeV);Events", numBins,DiEMPtBins);h_eeDiEMPt_reweight_binned->Sumw2();
  TH1F* h_eeSideBandDiEMPt = new TH1F("eeSideBandDiEMPt","eeSideBand DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiEMPt->Sumw2();
  TH1F* h_eeSideBandDiEMPt_0Jet = new TH1F("eeSideBandDiEMPt_0Jet","eeSideBand_0Jet DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiEMPt_0Jet->Sumw2();
  TH1F* h_eeSideBandDiEMPt_1Jet = new TH1F("eeSideBandDiEMPt_1Jet","eeSideBand_1Jet DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiEMPt_1Jet->Sumw2();
  TH1F* h_eeSideBandDiEMPt_2Jet = new TH1F("eeSideBandDiEMPt_2Jet","eeSideBand_2Jet DiEMPt;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiEMPt_2Jet->Sumw2();
  TH1F* h_eeSideBandLowDiEMPt = new TH1F("eeSideBandLowDiEMPt","eeSideBandLow DiEMPt - 71<InvMass<81;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiEMPt->Sumw2();
  TH1F* h_eeSideBandLowDiEMPt_0Jet = new TH1F("eeSideBandLowDiEMPt_0Jet","eeSideBandLow_0Jet DiEMPt - 71<InvMass<81;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiEMPt_0Jet->Sumw2();
  TH1F* h_eeSideBandLowDiEMPt_1Jet = new TH1F("eeSideBandLowDiEMPt_1Jet","eeSideBandLow_1Jet DiEMPt - 71<InvMass<81;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiEMPt_1Jet->Sumw2();
  TH1F* h_eeSideBandLowDiEMPt_2Jet = new TH1F("eeSideBandLowDiEMPt_2Jet","eeSideBandLow_2Jet DiEMPt - 71<InvMass<81;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiEMPt_2Jet->Sumw2();
  TH1F* h_eeSideBandHighDiEMPt = new TH1F("eeSideBandHighDiEMPt","eeSideBandHigh DiEMPt - 101<InvMass<111;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiEMPt->Sumw2();
  TH1F* h_eeSideBandHighDiEMPt_0Jet = new TH1F("eeSideBandHighDiEMPt_0Jet","eeSideBandHigh_0Jet DiEMPt - 101<InvMass<111;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiEMPt_0Jet->Sumw2();
  TH1F* h_eeSideBandHighDiEMPt_1Jet = new TH1F("eeSideBandHighDiEMPt_1Jet","eeSideBandHigh_1Jet DiEMPt - 101<InvMass<111;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiEMPt_1Jet->Sumw2();
  TH1F* h_eeSideBandHighDiEMPt_2Jet = new TH1F("eeSideBandHighDiEMPt_2Jet","eeSideBandHigh_2Jet DiEMPt - 101<InvMass<111;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiEMPt_2Jet->Sumw2();
  TH1F* h_eeSideBandDiJetPt = new TH1F("eeSideBandDiJetPt","eeSideBand DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiJetPt->Sumw2();
  TH1F* h_eeSideBandDiJetPt_0Jet = new TH1F("eeSideBandDiJetPt_0Jet","eeSideBand_0Jet DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiJetPt_0Jet->Sumw2();
  TH1F* h_eeSideBandDiJetPt_1Jet = new TH1F("eeSideBandDiJetPt_1Jet","eeSideBand_1Jet DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiJetPt_1Jet->Sumw2();
  TH1F* h_eeSideBandDiJetPt_2Jet = new TH1F("eeSideBandDiJetPt_2Jet","eeSideBand_2Jet DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiJetPt_2Jet->Sumw2();
  TH1F* h_eeSideBandLowDiJetPt = new TH1F("eeSideBandLowDiJetPt","eeSideBandLow DiJetPt - 71<InvMass<81;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiJetPt->Sumw2();
  TH1F* h_eeSideBandLowDiJetPt_0Jet = new TH1F("eeSideBandLowDiJetPt_0Jet","eeSideBandLow_0Jet DiJetPt - 71<InvMass<81;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiJetPt_0Jet->Sumw2();
  TH1F* h_eeSideBandLowDiJetPt_1Jet = new TH1F("eeSideBandLowDiJetPt_1Jet","eeSideBandLow_1Jet DiJetPt - 71<InvMass<81;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiJetPt_1Jet->Sumw2();
  TH1F* h_eeSideBandLowDiJetPt_2Jet = new TH1F("eeSideBandLowDiJetPt_2Jet","eeSideBandLow_2Jet DiJetPt - 71<InvMass<81;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiJetPt_2Jet->Sumw2();
  TH1F* h_eeSideBandHighDiJetPt = new TH1F("eeSideBandHighDiJetPt","eeSideBandHigh DiJetPt - 101<InvMass<111;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiJetPt->Sumw2();
  TH1F* h_eeSideBandHighDiJetPt_0Jet = new TH1F("eeSideBandHighDiJetPt_0Jet","eeSideBandHigh_0Jet DiJetPt - 101<InvMass<111;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiJetPt_0Jet->Sumw2();
  TH1F* h_eeSideBandHighDiJetPt_1Jet = new TH1F("eeSideBandHighDiJetPt_1Jet","eeSideBandHigh_1Jet DiJetPt - 101<InvMass<111;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiJetPt_1Jet->Sumw2();
  TH1F* h_eeSideBandHighDiJetPt_2Jet = new TH1F("eeSideBandHighDiJetPt_2Jet","eeSideBandHigh_2Jet DiJetPt - 101<InvMass<111;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiJetPt_2Jet->Sumw2();

  TH1F* h_eeDiEMPt_reweight_binned_JetReq = new TH1F("eeDiEMPt_reweight_binned_JetReq","ee_JetReq DiEMPt;DiEMPt (GeV);Events", numBins,DiEMPtBins);h_eeDiEMPt_reweight_binned_JetReq->Sumw2();
  TH1F* h_eeSideBandLowDiEMPt_JetReq = new TH1F("eeSideBandLowDiEMPt_JetReq","eeSideBandLow_JetReq DiEMPt - 71<InvMass<81;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiEMPt_JetReq->Sumw2();
  TH1F* h_eeSideBandLowDiEMPt_JetReq_0Jet = new TH1F("eeSideBandLowDiEMPt_JetReq_0Jet","eeSideBandLow_JetReq_0Jet DiEMPt - 71<InvMass<81;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiEMPt_JetReq_0Jet->Sumw2();
  TH1F* h_eeSideBandLowDiEMPt_JetReq_1Jet = new TH1F("eeSideBandLowDiEMPt_JetReq_1Jet","eeSideBandLow_JetReq_1Jet DiEMPt - 71<InvMass<81;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiEMPt_JetReq_1Jet->Sumw2();
  TH1F* h_eeSideBandLowDiEMPt_JetReq_2Jet = new TH1F("eeSideBandLowDiEMPt_JetReq_2Jet","eeSideBandLow_JetReq_2Jet DiEMPt - 71<InvMass<81;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiEMPt_JetReq_2Jet->Sumw2();
  TH1F* h_eeSideBandHighDiEMPt_JetReq = new TH1F("eeSideBandHighDiEMPt_JetReq","eeSideBandHigh_JetReq DiEMPt - 101<InvMass<111;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiEMPt_JetReq->Sumw2();
  TH1F* h_eeSideBandHighDiEMPt_JetReq_0Jet = new TH1F("eeSideBandHighDiEMPt_JetReq_0Jet","eeSideBandHigh_JetReq_0Jet DiEMPt - 101<InvMass<111;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiEMPt_JetReq_0Jet->Sumw2();
  TH1F* h_eeSideBandHighDiEMPt_JetReq_1Jet = new TH1F("eeSideBandHighDiEMPt_JetReq_1Jet","eeSideBandHigh_JetReq_1Jet DiEMPt - 101<InvMass<111;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiEMPt_JetReq_1Jet->Sumw2();
  TH1F* h_eeSideBandHighDiEMPt_JetReq_2Jet = new TH1F("eeSideBandHighDiEMPt_JetReq_2Jet","eeSideBandHigh_JetReq_2Jet DiEMPt - 101<InvMass<111;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiEMPt_JetReq_2Jet->Sumw2();
  TH1F* h_eeSideBandDiJetPt_JetReq = new TH1F("eeSideBandDiJetPt_JetReq","eeSideBand_JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiJetPt_JetReq->Sumw2();
  TH1F* h_eeSideBandDiJetPt_JetReq_0Jet = new TH1F("eeSideBandDiJetPt_JetReq_0Jet","eeSideBand_JetReq_0Jet DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiJetPt_JetReq_0Jet->Sumw2();
  TH1F* h_eeSideBandDiJetPt_JetReq_1Jet = new TH1F("eeSideBandDiJetPt_JetReq_1Jet","eeSideBand_JetReq_1Jet DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiJetPt_JetReq_1Jet->Sumw2();
  TH1F* h_eeSideBandDiJetPt_JetReq_2Jet = new TH1F("eeSideBandDiJetPt_JetReq_2Jet","eeSideBand_JetReq_2Jet DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiJetPt_JetReq_2Jet->Sumw2();
  TH1F* h_eeSideBandLowDiJetPt_JetReq = new TH1F("eeSideBandLowDiJetPt_JetReq","eeSideBandLow_JetReq DiJetPt - 71<InvMass<81;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiJetPt_JetReq->Sumw2();
  TH1F* h_eeSideBandLowDiJetPt_JetReq_0Jet = new TH1F("eeSideBandLowDiJetPt_JetReq_0Jet","eeSideBandLow_JetReq_0Jet DiJetPt - 71<InvMass<81;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiJetPt_JetReq_0Jet->Sumw2();
  TH1F* h_eeSideBandLowDiJetPt_JetReq_1Jet = new TH1F("eeSideBandLowDiJetPt_JetReq_1Jet","eeSideBandLow_JetReq_1Jet DiJetPt - 71<InvMass<81;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiJetPt_JetReq_1Jet->Sumw2();
  TH1F* h_eeSideBandLowDiJetPt_JetReq_2Jet = new TH1F("eeSideBandLowDiJetPt_JetReq_2Jet","eeSideBandLow_JetReq_2Jet DiJetPt - 71<InvMass<81;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiJetPt_JetReq_2Jet->Sumw2();
  TH1F* h_eeSideBandHighDiJetPt_JetReq = new TH1F("eeSideBandHighDiJetPt_JetReq","eeSideBandHigh_JetReq DiJetPt - 101<InvMass<111;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiJetPt_JetReq->Sumw2();
  TH1F* h_eeSideBandHighDiJetPt_JetReq_0Jet = new TH1F("eeSideBandHighDiJetPt_JetReq_0Jet","eeSideBandHigh_JetReq_0Jet DiJetPt - 101<InvMass<111;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiJetPt_JetReq_0Jet->Sumw2();
  TH1F* h_eeSideBandHighDiJetPt_JetReq_1Jet = new TH1F("eeSideBandHighDiJetPt_JetReq_1Jet","eeSideBandHigh_JetReq_1Jet DiJetPt - 101<InvMass<111;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiJetPt_JetReq_1Jet->Sumw2();
  TH1F* h_eeSideBandHighDiJetPt_JetReq_2Jet = new TH1F("eeSideBandHighDiJetPt_JetReq_2Jet","eeSideBandHigh_JetReq_2Jet DiJetPt - 101<InvMass<111;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiJetPt_JetReq_2Jet->Sumw2();
  TH1F* h_eeDiEMPt_reweight_binned_2JetReq = new TH1F("eeDiEMPt_reweight_binned_2JetReq","ee_2JetReq DiEMPt;DiEMPt (GeV);Events", numBins,DiEMPtBins);h_eeDiEMPt_reweight_binned_2JetReq->Sumw2();
  TH1F* h_eeSideBandLowDiEMPt_2JetReq = new TH1F("eeSideBandLowDiEMPt_2JetReq","eeSideBandLow_2JetReq DiEMPt - 71<InvMass<81;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiEMPt_2JetReq->Sumw2();
  TH1F* h_eeSideBandLowDiEMPt_2JetReq_0Jet = new TH1F("eeSideBandLowDiEMPt_2JetReq_0Jet","eeSideBandLow_2JetReq_0Jet DiEMPt - 71<InvMass<81;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiEMPt_2JetReq_0Jet->Sumw2();
  TH1F* h_eeSideBandLowDiEMPt_2JetReq_1Jet = new TH1F("eeSideBandLowDiEMPt_2JetReq_1Jet","eeSideBandLow_2JetReq_1Jet DiEMPt - 71<InvMass<81;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiEMPt_2JetReq_1Jet->Sumw2();
  TH1F* h_eeSideBandLowDiEMPt_2JetReq_2Jet = new TH1F("eeSideBandLowDiEMPt_2JetReq_2Jet","eeSideBandLow_2JetReq_2Jet DiEMPt - 71<InvMass<81;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiEMPt_2JetReq_2Jet->Sumw2();
  TH1F* h_eeSideBandHighDiEMPt_2JetReq = new TH1F("eeSideBandHighDiEMPt_2JetReq","eeSideBandHigh_2JetReq DiEMPt - 101<InvMass<111;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiEMPt_2JetReq->Sumw2();
  TH1F* h_eeSideBandHighDiEMPt_2JetReq_0Jet = new TH1F("eeSideBandHighDiEMPt_2JetReq_0Jet","eeSideBandHigh_2JetReq_0Jet DiEMPt - 101<InvMass<111;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiEMPt_2JetReq_0Jet->Sumw2();
  TH1F* h_eeSideBandHighDiEMPt_2JetReq_1Jet = new TH1F("eeSideBandHighDiEMPt_2JetReq_1Jet","eeSideBandHigh_2JetReq_1Jet DiEMPt - 101<InvMass<111;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiEMPt_2JetReq_1Jet->Sumw2();
  TH1F* h_eeSideBandHighDiEMPt_2JetReq_2Jet = new TH1F("eeSideBandHighDiEMPt_2JetReq_2Jet","eeSideBandHigh_2JetReq_2Jet DiEMPt - 101<InvMass<111;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiEMPt_2JetReq_2Jet->Sumw2();
  TH1F* h_eeSideBandDiJetPt_2JetReq = new TH1F("eeSideBandDiJetPt_2JetReq","eeSideBand_2JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiJetPt_2JetReq->Sumw2();
  TH1F* h_eeSideBandDiJetPt_2JetReq_0Jet = new TH1F("eeSideBandDiJetPt_2JetReq_0Jet","eeSideBand_2JetReq_0Jet DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiJetPt_2JetReq_0Jet->Sumw2();
  TH1F* h_eeSideBandDiJetPt_2JetReq_1Jet = new TH1F("eeSideBandDiJetPt_2JetReq_1Jet","eeSideBand_2JetReq_1Jet DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiJetPt_2JetReq_1Jet->Sumw2();
  TH1F* h_eeSideBandDiJetPt_2JetReq_2Jet = new TH1F("eeSideBandDiJetPt_2JetReq_2Jet","eeSideBand_2JetReq_2Jet DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiJetPt_2JetReq_2Jet->Sumw2();
  TH1F* h_eeSideBandLowDiJetPt_2JetReq = new TH1F("eeSideBandLowDiJetPt_2JetReq","eeSideBandLow_2JetReq DiJetPt - 71<InvMass<81;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiJetPt_2JetReq->Sumw2();
  TH1F* h_eeSideBandLowDiJetPt_2JetReq_0Jet = new TH1F("eeSideBandLowDiJetPt_2JetReq_0Jet","eeSideBandLow_2JetReq_0Jet DiJetPt - 71<InvMass<81;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiJetPt_2JetReq_0Jet->Sumw2();
  TH1F* h_eeSideBandLowDiJetPt_2JetReq_1Jet = new TH1F("eeSideBandLowDiJetPt_2JetReq_1Jet","eeSideBandLow_2JetReq_1Jet DiJetPt - 71<InvMass<81;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiJetPt_2JetReq_1Jet->Sumw2();
  TH1F* h_eeSideBandLowDiJetPt_2JetReq_2Jet = new TH1F("eeSideBandLowDiJetPt_2JetReq_2Jet","eeSideBandLow_2JetReq_2Jet DiJetPt - 71<InvMass<81;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandLowDiJetPt_2JetReq_2Jet->Sumw2();
  TH1F* h_eeSideBandHighDiJetPt_2JetReq = new TH1F("eeSideBandHighDiJetPt_2JetReq","eeSideBandHigh_2JetReq DiJetPt - 101<InvMass<111;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiJetPt_2JetReq->Sumw2();
  TH1F* h_eeSideBandHighDiJetPt_2JetReq_0Jet = new TH1F("eeSideBandHighDiJetPt_2JetReq_0Jet","eeSideBandHigh_2JetReq_0Jet DiJetPt - 101<InvMass<111;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiJetPt_2JetReq_0Jet->Sumw2();
  TH1F* h_eeSideBandHighDiJetPt_2JetReq_1Jet = new TH1F("eeSideBandHighDiJetPt_2JetReq_1Jet","eeSideBandHigh_2JetReq_1Jet DiJetPt - 101<InvMass<111;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiJetPt_2JetReq_1Jet->Sumw2();
  TH1F* h_eeSideBandHighDiJetPt_2JetReq_2Jet = new TH1F("eeSideBandHighDiJetPt_2JetReq_2Jet","eeSideBandHigh_2JetReq_2Jet DiJetPt - 101<InvMass<111;DiJetPt (GeV);Events", 400,0.,1000.);h_eeSideBandHighDiJetPt_2JetReq_2Jet->Sumw2();

  TH1F* h_ggInvarMassJets_2JetReq = new TH1F("ggInvarMassJets_2JetReq",";(GeV);Events", 1500,0.,1500.);h_ggInvarMassJets_2JetReq ->Sumw2();
  TH1F* h_eeInvarMassJets_2JetReq = new TH1F("eeInvarMassJets_2JetReq",";(GeV);Events", 1500,0.,1500.);h_eeInvarMassJets_2JetReq ->Sumw2();
  TH1F* h_ffInvarMassJets_2JetReq = new TH1F("ffInvarMassJets_2JetReq",";(GeV);Events", 1500,0.,1500.);h_ffInvarMassJets_2JetReq ->Sumw2();
  TH1F* h_gammafakeInvarMassJets_2JetReq = new TH1F("gammafakeInvarMassJets_2JetReq",";(GeV);Events", 1500,0.,1500.);h_gammafakeInvarMassJets_2JetReq ->Sumw2();

  TH1F* h_ggDiJetPt = new TH1F("ggDiJetPt","gg DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt->Sumw2();
  TH1F* h_gammafakeDiJetPt = new TH1F("gammafakeDiJetPt","gammafake DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt->Sumw2();
  TH1F* h_fgDiJetPt = new TH1F("fgDiJetPt","fg DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt->Sumw2();
  TH1F* h_gfDiJetPt = new TH1F("gfDiJetPt","gf DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt->Sumw2();
  TH1F* h_eeDiJetPt = new TH1F("eeDiJetPt","ee DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt->Sumw2();
  TH1F* h_ggDiJetPt_JetReq = new TH1F("ggDiJetPt_JetReq","gg_JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_JetReq->Sumw2();
  TH1F* h_ggDiJetPt_2JetReq = new TH1F("ggDiJetPt_2JetReq","gg_2JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_2JetReq->Sumw2();
  TH1F* h_gammafakeDiJetPt_JetReq = new TH1F("gammafakeDiJetPt_JetReq","gammafake_JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_JetReq->Sumw2();
  TH1F* h_gammafakeDiJetPt_2JetReq = new TH1F("gammafakeDiJetPt_2JetReq","gammafake_2JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_2JetReq->Sumw2();
  TH1F* h_fgDiJetPt_JetReq = new TH1F("fgDiJetPt_JetReq","fg_JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_JetReq->Sumw2();
  TH1F* h_gfDiJetPt_JetReq = new TH1F("gfDiJetPt_JetReq","gf_JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_JetReq->Sumw2();
  TH1F* h_eeDiJetPt_JetReq = new TH1F("eeDiJetPt_JetReq","ee_JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_JetReq->Sumw2();
  TH1F* h_fgDiJetPt_2JetReq = new TH1F("fgDiJetPt_2JetReq","fg_2JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_2JetReq->Sumw2();
  TH1F* h_gfDiJetPt_2JetReq = new TH1F("gfDiJetPt_2JetReq","gf_2JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_2JetReq->Sumw2();
  TH1F* h_eeDiJetPt_2JetReq = new TH1F("eeDiJetPt_2JetReq","ee_2JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_2JetReq->Sumw2();
  TH1F* h_ggDiJetPt_JetFail = new TH1F("ggDiJetPt_JetFail","gg DiJetPt in events that have a 50GeV pfJet failing loose id;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_JetFail->Sumw2();
  TH1F* h_egDiJetPt_JetFail = new TH1F("egDiJetPt_JetFail","eg DiJetPt in events that have a 50GeV pfJet failing loose id;DiJetPt (GeV);Events", 400,0.,1000.);h_egDiJetPt_JetFail->Sumw2();
  TH1F* h_eeDiJetPt_JetFail = new TH1F("eeDiJetPt_JetFail","ee DiJetPt in events that have a 50GeV pfJet failing loose id;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_JetFail->Sumw2();
  TH1F* h_ffDiJetPt_JetFail = new TH1F("ffDiJetPt_JetFail","ff DiJetPt in events that have a 50GeV pfJet failing loose id;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_JetFail->Sumw2();
  TH1F* h_ffDiJetPt = new TH1F("ffDiJetPt","ff DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt->Sumw2();
  TH1F* h_ffDiJetPt_JetReq = new TH1F("ffDiJetPt_JetReq","ff_JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_JetReq->Sumw2();
  TH1F* h_ffDiJetPt_2JetReq = new TH1F("ffDiJetPt_2JetReq","ff_2JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_2JetReq->Sumw2();
  TH1F* h_eeDiJetPt_reweight_binned = new TH1F("eeDiJetPt_reweight_binned","ee DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_reweight_binned->Sumw2();
  TH1F* h_ffDiJetPt_reweight_binned= new TH1F("ffDiJetPt_reweight_binned","ff DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_reweight_binned->Sumw2();
  TH1F* h_eeDiJetPt_reweight_binned_JetReq = new TH1F("eeDiJetPt_reweight_binned_JetReq","ee_JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_reweight_binned_JetReq->Sumw2();
  TH1F* h_ffDiJetPt_reweight_binned_JetReq = new TH1F("ffDiJetPt_reweight_binned_JetReq","ff_JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_reweight_binned_JetReq->Sumw2();
  TH1F* h_eeDiJetPt_reweight_binned_2JetReq = new TH1F("eeDiJetPt_reweight_binned_2JetReq","ee_2JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_reweight_binned_2JetReq->Sumw2();
  TH1F* h_ffDiJetPt_reweight_binned_2JetReq = new TH1F("ffDiJetPt_reweight_binned_2JetReq","ff_2JetReq DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_reweight_binned_2JetReq->Sumw2();
  TH1F* h_gfDiJetPt_reweight_binned= new TH1F("gfDiJetPt_reweight_binned","gf DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_reweight_binned->Sumw2();
  TH1F* h_fgDiJetPt_reweight_binned= new TH1F("fgDiJetPt_reweight_binned","fg DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_reweight_binned->Sumw2();
  TH1F* h_gammafakeDiJetPt_reweight_binned= new TH1F("gammafakeDiJetPt_reweight_binned","gammafake DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_reweight_binned->Sumw2();
  TH1F* h_gfDiJetPt_reweight_binned_JetReq= new TH1F("gfDiJetPt_reweight_binned_JetReq","gf DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_reweight_binned_JetReq->Sumw2();
  TH1F* h_fgDiJetPt_reweight_binned_JetReq= new TH1F("fgDiJetPt_reweight_binned_JetReq","fg DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_reweight_binned_JetReq->Sumw2();
  TH1F* h_gammafakeDiJetPt_reweight_binned_JetReq= new TH1F("gammafakeDiJetPt_reweight_binned_JetReq","gammafake DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_reweight_binned_JetReq->Sumw2();
  TH1F* h_gfDiJetPt_reweight_binned_2JetReq= new TH1F("gfDiJetPt_reweight_binned_2JetReq","gf DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_reweight_binned_2JetReq->Sumw2();
  TH1F* h_fgDiJetPt_reweight_binned_2JetReq= new TH1F("fgDiJetPt_reweight_binned_2JetReq","fg DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_reweight_binned_2JetReq->Sumw2();
  TH1F* h_gammafakeDiJetPt_reweight_binned_2JetReq= new TH1F("gammafakeDiJetPt_reweight_binned_2JetReq","gammafake DiJetPt;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_reweight_binned_2JetReq->Sumw2();


  TH2F* h_ggDiJetPtOverDiEMPtVsDiEMPt = new TH2F("ggDiJetPtOverDiEMPtVsDiEMPt","DiJetPt/DiEMPt vs DiEMPt for gg sample",400,0.,1000.,100,0,100);h_ggDiJetPtOverDiEMPtVsDiEMPt->Sumw2();
  TH2F* h_gammafakeDiJetPtOverDiEMPtVsDiEMPt = new TH2F("gammafakeDiJetPtOverDiEMPtVsDiEMPt","DiJetPt/DiEMPt vs DiEMPt for gammafake sample",400,0.,1000.,100,0,100);h_gammafakeDiJetPtOverDiEMPtVsDiEMPt->Sumw2();
  TH2F* h_fgDiJetPtOverDiEMPtVsDiEMPt = new TH2F("fgDiJetPtOverDiEMPtVsDiEMPt","DiJetPt/DiEMPt vs DiEMPt for fg sample",400,0.,1000.,100,0,100);h_fgDiJetPtOverDiEMPtVsDiEMPt->Sumw2();
  TH2F* h_gfDiJetPtOverDiEMPtVsDiEMPt = new TH2F("gfDiJetPtOverDiEMPtVsDiEMPt","DiJetPt/DiEMPt vs DiEMPt for gf sample",400,0.,1000.,100,0,100);h_gfDiJetPtOverDiEMPtVsDiEMPt->Sumw2();
  TH2F* h_eeDiJetPtOverDiEMPtVsDiEMPt = new TH2F("eeDiJetPtOverDiEMPtVsDiEMPt","DiJetPt/DiEMPt vs DiEMPt for ee sample",400,0.,1000.,100,0,100);h_eeDiJetPtOverDiEMPtVsDiEMPt->Sumw2();
  TH2F* h_ffDiJetPtOverDiEMPtVsDiEMPt = new TH2F("ffDiJetPtOverDiEMPtVsDiEMPt","DiJetPt/DiEMPt vs DiEMPt for ff sample",400,0.,1000.,100,0,100);h_ffDiJetPtOverDiEMPtVsDiEMPt->Sumw2();
  TH2F* h_gammafakeDiJetPtOverDiEMPtVsDiEMPt_JetReq = new TH2F("gammafakeDiJetPtOverDiEMPtVsDiEMPt_JetReq","DiJetPt/DiEMPt vs DiEMPt for gammafake_JetReq sample",400,0.,1000.,100,0,100);h_gammafakeDiJetPtOverDiEMPtVsDiEMPt_JetReq->Sumw2();
  TH2F* h_fgDiJetPtOverDiEMPtVsDiEMPt_JetReq = new TH2F("fgDiJetPtOverDiEMPtVsDiEMPt_JetReq","DiJetPt/DiEMPt vs DiEMPt for fg_JetReq sample",400,0.,1000.,100,0,100);h_fgDiJetPtOverDiEMPtVsDiEMPt_JetReq->Sumw2();
  TH2F* h_gfDiJetPtOverDiEMPtVsDiEMPt_JetReq = new TH2F("gfDiJetPtOverDiEMPtVsDiEMPt_JetReq","DiJetPt/DiEMPt vs DiEMPt for gf_JetReq sample",400,0.,1000.,100,0,100);h_gfDiJetPtOverDiEMPtVsDiEMPt_JetReq->Sumw2();
  TH2F* h_ggDiJetPtOverDiEMPtVsDiEMPt_JetReq = new TH2F("ggDiJetPtOverDiEMPtVsDiEMPt_JetReq","DiJetPt/DiEMPt vs DiEMPt for gg_JetReq sample",400,0.,1000.,100,0,100);h_ggDiJetPtOverDiEMPtVsDiEMPt_JetReq->Sumw2();
  TH2F* h_eeDiJetPtOverDiEMPtVsDiEMPt_JetReq = new TH2F("eeDiJetPtOverDiEMPtVsDiEMPt_JetReq","DiJetPt/DiEMPt vs DiEMPt for ee_JetReq sample",400,0.,1000.,100,0,100);h_eeDiJetPtOverDiEMPtVsDiEMPt_JetReq->Sumw2();
  TH2F* h_ffDiJetPtOverDiEMPtVsDiEMPt_JetReq = new TH2F("ffDiJetPtOverDiEMPtVsDiEMPt_JetReq","DiJetPt/DiEMPt vs DiEMPt for ff_JetReq sample",400,0.,1000.,100,0,100);h_ffDiJetPtOverDiEMPtVsDiEMPt_JetReq->Sumw2();
  TH2F* h_gammafakeDiJetPtOverDiEMPtVsDiEMPt_2JetReq = new TH2F("gammafakeDiJetPtOverDiEMPtVsDiEMPt_2JetReq","DiJetPt/DiEMPt vs DiEMPt for gammafake_2JetReq sample",400,0.,1000.,100,0,100);h_gammafakeDiJetPtOverDiEMPtVsDiEMPt_2JetReq->Sumw2();
  TH2F* h_fgDiJetPtOverDiEMPtVsDiEMPt_2JetReq = new TH2F("fgDiJetPtOverDiEMPtVsDiEMPt_2JetReq","DiJetPt/DiEMPt vs DiEMPt for fg_2JetReq sample",400,0.,1000.,100,0,100);h_fgDiJetPtOverDiEMPtVsDiEMPt_2JetReq->Sumw2();
  TH2F* h_gfDiJetPtOverDiEMPtVsDiEMPt_2JetReq = new TH2F("gfDiJetPtOverDiEMPtVsDiEMPt_2JetReq","DiJetPt/DiEMPt vs DiEMPt for gf_2JetReq sample",400,0.,1000.,100,0,100);h_gfDiJetPtOverDiEMPtVsDiEMPt_2JetReq->Sumw2();
  TH2F* h_ggDiJetPtOverDiEMPtVsDiEMPt_2JetReq = new TH2F("ggDiJetPtOverDiEMPtVsDiEMPt_2JetReq","DiJetPt/DiEMPt vs DiEMPt for gg_2JetReq sample",400,0.,1000.,100,0,100);h_ggDiJetPtOverDiEMPtVsDiEMPt_2JetReq->Sumw2();
  TH2F* h_eeDiJetPtOverDiEMPtVsDiEMPt_2JetReq = new TH2F("eeDiJetPtOverDiEMPtVsDiEMPt_2JetReq","DiJetPt/DiEMPt vs DiEMPt for ee_2JetReq sample",400,0.,1000.,100,0,100);h_eeDiJetPtOverDiEMPtVsDiEMPt_2JetReq->Sumw2();
  TH2F* h_ffDiJetPtOverDiEMPtVsDiEMPt_2JetReq = new TH2F("ffDiJetPtOverDiEMPtVsDiEMPt_2JetReq","DiJetPt/DiEMPt vs DiEMPt for ff_2JetReq sample",400,0.,1000.,100,0,100);h_ffDiJetPtOverDiEMPtVsDiEMPt_2JetReq->Sumw2();

  TH1F* h_ggDiEMPtInvMassBelow40 = new TH1F("ggDiEMPtInvMassBelow40","gg DiEMPt in events with InvariantMass<40GeV;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPtInvMassBelow40->Sumw2();
  TH1F* h_egDiEMPtInvMassBelow40 = new TH1F("egDiEMPtInvMassBelow40","eg DiEMPt in events with InvariantMass<40GeV;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPtInvMassBelow40->Sumw2();
  TH1F* h_eeDiEMPtInvMassBelow40 = new TH1F("eeDiEMPtInvMassBelow40","ee DiEMPt in events with InvariantMass<40GeV;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPtInvMassBelow40->Sumw2();
  TH1F* h_ffDiEMPtInvMassBelow40 = new TH1F("ffDiEMPtInvMassBelow40","ff DiEMPt in events with InvariantMass<40GeV;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPtInvMassBelow40->Sumw2();
  TH1F* h_ggDiEMPtInvMassAbove40 = new TH1F("ggDiEMPtInvMassAbove40","gg DiEMPt in events with InvariantMass>40GeV;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPtInvMassAbove40->Sumw2();
  TH1F* h_egDiEMPtInvMassAbove40 = new TH1F("egDiEMPtInvMassAbove40","eg DiEMPt in events with InvariantMass>40GeV;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPtInvMassAbove40->Sumw2();
  TH1F* h_eeDiEMPtInvMassAbove40 = new TH1F("eeDiEMPtInvMassAbove40","ee DiEMPt in events with InvariantMass>40GeV;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPtInvMassAbove40->Sumw2();
  TH1F* h_ffDiEMPtInvMassAbove40 = new TH1F("ffDiEMPtInvMassAbove40","ff DiEMPt in events with InvariantMass>40GeV;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPtInvMassAbove40->Sumw2();

  TH1F* h_ffDiEMPt_reweight_binned = new TH1F("ffDiEMPt_reweight_binned","ff DiEMPt;DiEMPt (GeV);Events", numBins,DiEMPtBins);h_ffDiEMPt_reweight_binned->Sumw2();
  TH1F* h_ffDiEMPt_reweight_binned_JetReq = new TH1F("ffDiEMPt_reweight_binned_JetReq","ff_JetReq DiEMPt;DiEMPt (GeV);Events", numBins,DiEMPtBins);h_ffDiEMPt_reweight_binned_JetReq->Sumw2();
  TH1F* h_ffDiEMPt_reweight_binned_2JetReq = new TH1F("ffDiEMPt_reweight_binned_2JetReq","ff_2JetReq DiEMPt;DiEMPt (GeV);Events", numBins,DiEMPtBins);h_ffDiEMPt_reweight_binned_2JetReq->Sumw2();

  TH1F* h_gammafakeDiEMPt_JetReq = new TH1F("gammafakeDiEMPt_JetReq","gammafake DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_JetReq->Sumw2();
  TH1F* h_fgDiEMPt_JetReq = new TH1F("fgDiEMPt_JetReq","fg DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_JetReq->Sumw2();
  TH1F* h_gfDiEMPt_JetReq = new TH1F("gfDiEMPt_JetReq","gf DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_JetReq->Sumw2();
  TH1F* h_gammafakeDiEMPt_2JetReq = new TH1F("gammafakeDiEMPt_2JetReq","gammafake DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_2JetReq->Sumw2();
  TH1F* h_fgDiEMPt_2JetReq = new TH1F("fgDiEMPt_2JetReq","fg DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_2JetReq->Sumw2();
  TH1F* h_gfDiEMPt_2JetReq = new TH1F("gfDiEMPt_2JetReq","gf DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_2JetReq->Sumw2();
  TH1F* h_ggDiEMPt_JetReq = new TH1F("ggDiEMPt_JetReq","gg DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_JetReq->Sumw2();
  TH1F* h_egDiEMPt_JetReq = new TH1F("egDiEMPt_JetReq","eg DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_JetReq->Sumw2();
  TH1F* h_eeDiEMPt_JetReq = new TH1F("eeDiEMPt_JetReq","ee DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_JetReq->Sumw2();
  TH1F* h_ffDiEMPt_JetReq = new TH1F("ffDiEMPt_JetReq","ff DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_JetReq->Sumw2();
  TH1F* h_ggDiEMPt_2JetReq = new TH1F("ggDiEMPt_2JetReq","gg DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_2JetReq->Sumw2();
  TH1F* h_egDiEMPt_2JetReq = new TH1F("egDiEMPt_2JetReq","eg DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_2JetReq->Sumw2();
  TH1F* h_eeDiEMPt_2JetReq = new TH1F("eeDiEMPt_2JetReq","ee DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_2JetReq->Sumw2();
  TH1F* h_ffDiEMPt_2JetReq = new TH1F("ffDiEMPt_2JetReq","ff DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_2JetReq->Sumw2();
  
  TH1F* h_gammafakeDiEMPt_0Jet = new TH1F("gammafakeDiEMPt_0Jet","gammafake DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_0Jet->Sumw2();
  TH1F* h_fgDiEMPt_0Jet = new TH1F("fgDiEMPt_0Jet","fg DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_0Jet->Sumw2();
  TH1F* h_gfDiEMPt_0Jet = new TH1F("gfDiEMPt_0Jet","gf DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_0Jet->Sumw2();
  TH1F* h_ggDiEMPt_0Jet = new TH1F("ggDiEMPt_0Jet","gg DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_0Jet->Sumw2();
  TH1F* h_egDiEMPt_0Jet = new TH1F("egDiEMPt_0Jet","eg DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_0Jet->Sumw2();
  TH1F* h_eeDiEMPt_0Jet = new TH1F("eeDiEMPt_0Jet","ee DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_0Jet->Sumw2();
  TH1F* h_ffDiEMPt_0Jet = new TH1F("ffDiEMPt_0Jet","ff DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_0Jet->Sumw2();

  TH1F* h_gammafakeDiEMPt_1Jet = new TH1F("gammafakeDiEMPt_1Jet","gammafake DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_1Jet->Sumw2();
  TH1F* h_fgDiEMPt_1Jet = new TH1F("fgDiEMPt_1Jet","fg DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_1Jet->Sumw2();
  TH1F* h_gfDiEMPt_1Jet = new TH1F("gfDiEMPt_1Jet","gf DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_1Jet->Sumw2();
  TH1F* h_ggDiEMPt_1Jet = new TH1F("ggDiEMPt_1Jet","gg DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_1Jet->Sumw2();
  TH1F* h_egDiEMPt_1Jet = new TH1F("egDiEMPt_1Jet","eg DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_1Jet->Sumw2();
  TH1F* h_eeDiEMPt_1Jet = new TH1F("eeDiEMPt_1Jet","ee DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_1Jet->Sumw2();
  TH1F* h_ffDiEMPt_1Jet = new TH1F("ffDiEMPt_1Jet","ff DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_1Jet->Sumw2();

  TH1F* h_gammafakeDiEMPt_2Jet = new TH1F("gammafakeDiEMPt_2Jet","gammafake DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_2Jet->Sumw2();
  TH1F* h_fgDiEMPt_2Jet = new TH1F("fgDiEMPt_2Jet","fg DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_2Jet->Sumw2();
  TH1F* h_gfDiEMPt_2Jet = new TH1F("gfDiEMPt_2Jet","gf DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_2Jet->Sumw2();
  TH1F* h_ggDiEMPt_2Jet = new TH1F("ggDiEMPt_2Jet","gg DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_2Jet->Sumw2();
  TH1F* h_egDiEMPt_2Jet = new TH1F("egDiEMPt_2Jet","eg DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_2Jet->Sumw2();
  TH1F* h_eeDiEMPt_2Jet = new TH1F("eeDiEMPt_2Jet","ee DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_2Jet->Sumw2();
  TH1F* h_ffDiEMPt_2Jet = new TH1F("ffDiEMPt_2Jet","ff DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_2Jet->Sumw2();

  TH1F* h_gammafakeDiEMPt_MoreThan2Jets = new TH1F("gammafakeDiEMPt_MoreThan2Jets","gammafake DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_MoreThan2Jets->Sumw2();
  TH1F* h_fgDiEMPt_MoreThan2Jets = new TH1F("fgDiEMPt_MoreThan2Jets","fg DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_MoreThan2Jets->Sumw2();
  TH1F* h_gfDiEMPt_MoreThan2Jets = new TH1F("gfDiEMPt_MoreThan2Jets","gf DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_MoreThan2Jets->Sumw2();
  TH1F* h_ggDiEMPt_MoreThan2Jets = new TH1F("ggDiEMPt_MoreThan2Jets","gg DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_MoreThan2Jets->Sumw2();
  TH1F* h_egDiEMPt_MoreThan2Jets = new TH1F("egDiEMPt_MoreThan2Jets","eg DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_MoreThan2Jets->Sumw2();
  TH1F* h_eeDiEMPt_MoreThan2Jets = new TH1F("eeDiEMPt_MoreThan2Jets","ee DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_MoreThan2Jets->Sumw2();
  TH1F* h_ffDiEMPt_MoreThan2Jets = new TH1F("ffDiEMPt_MoreThan2Jets","ff DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_MoreThan2Jets->Sumw2();

  TH1F* h_gammafakeDiJetPt_0Jet = new TH1F("gammafakeDiJetPt_0Jet","gammafake DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_0Jet->Sumw2();
  TH1F* h_fgDiJetPt_0Jet = new TH1F("fgDiJetPt_0Jet","fg DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_0Jet->Sumw2();
  TH1F* h_gfDiJetPt_0Jet = new TH1F("gfDiJetPt_0Jet","gf DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_0Jet->Sumw2();
  TH1F* h_ggDiJetPt_0Jet = new TH1F("ggDiJetPt_0Jet","gg DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_0Jet->Sumw2();
  TH1F* h_egDiJetPt_0Jet = new TH1F("egDiJetPt_0Jet","eg DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_egDiJetPt_0Jet->Sumw2();
  TH1F* h_eeDiJetPt_0Jet = new TH1F("eeDiJetPt_0Jet","ee DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_0Jet->Sumw2();
  TH1F* h_ffDiJetPt_0Jet = new TH1F("ffDiJetPt_0Jet","ff DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_0Jet->Sumw2();
  TH1F* h_ggDiJetPt_scalar = new TH1F("ggDiJetPt_scalar","gg scalar DiJetPt with all Jet Combinations;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_scalar->Sumw2();
  TH2F* h_ggscalarDiJetPt_vs_DiJetPt = new TH2F("ggscalarDiJetPt_vs_DiJetPt","gg scalar DiJetPt vs DiJetPt with all Jet Combinations;DiJetPt (GeV);Events",400,0.,1000.,400,0.,1000.);h_ggscalarDiJetPt_vs_DiJetPt->Sumw2();
  TH2F* h_eescalarDiJetPt_vs_DiJetPt = new TH2F("eescalarDiJetPt_vs_DiJetPt","ee scalar DiJetPt vs DiJetPt with all Jet Combinations;DiJetPt (GeV);Events",400,0.,1000.,400,0.,1000.);h_eescalarDiJetPt_vs_DiJetPt->Sumw2();
  TH2F* h_ffscalarDiJetPt_vs_DiJetPt = new TH2F("ffscalarDiJetPt_vs_DiJetPt","ff scalar DiJetPt vs DiJetPt with all Jet Combinations;DiJetPt (GeV);Events",400,0.,1000.,400,0.,1000.);h_ffscalarDiJetPt_vs_DiJetPt->Sumw2();
  TH2F* h_gammafakescalarDiJetPt_vs_DiJetPt = new TH2F("gammafakescalarDiJetPt_vs_DiJetPt","gammafake scalar DiJetPt vs DiJetPt with all Jet Combinations;DiJetPt (GeV);Events",400,0.,1000.,400,0.,1000.);h_gammafakescalarDiJetPt_vs_DiJetPt->Sumw2();
  TH1F* h_eeDiJetPt_scalar = new TH1F("eeDiJetPt_scalar","ee scalar DiJetPt with all Jet Combinations;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_scalar->Sumw2();
  TH1F* h_ffDiJetPt_scalar = new TH1F("ffDiJetPt_scalar","ff scalar DiJetPt with all Jet Combinations;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_scalar->Sumw2();
  TH1F* h_gammafakeDiJetPt_scalar = new TH1F("gammafakeDiJetPt_scalar","gammafake scalar DiJetPt with all Jet Combinations;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_scalar->Sumw2();
  TH1F* h_ggDiJetPt_scalar_0Jet = new TH1F("ggDiJetPt_scalar_0Jet","gg scalar DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_scalar_0Jet->Sumw2();
  TH1F* h_eeDiJetPt_scalar_0Jet = new TH1F("eeDiJetPt_scalar_0Jet","ee scalar DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_scalar_0Jet->Sumw2();
  TH1F* h_ffDiJetPt_scalar_0Jet = new TH1F("ffDiJetPt_scalar_0Jet","ff scalar DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_scalar_0Jet->Sumw2();
  TH1F* h_gammafakeDiJetPt_scalar_0Jet = new TH1F("gammafakeDiJetPt_scalar_0Jet","gammafake scalar DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_scalar_0Jet->Sumw2();
  TH1F* h_ggDiJetPt_scalar_1Jet = new TH1F("ggDiJetPt_scalar_1Jet","gg scalar DiJetPt with Exactly One Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_scalar_1Jet->Sumw2();
  TH1F* h_eeDiJetPt_scalar_1Jet = new TH1F("eeDiJetPt_scalar_1Jet","ee scalar DiJetPt with Exactly One Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_scalar_1Jet->Sumw2();
  TH1F* h_ffDiJetPt_scalar_1Jet = new TH1F("ffDiJetPt_scalar_1Jet","ff scalar DiJetPt with Exactly One Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_scalar_1Jet->Sumw2();
  TH1F* h_gammafakeDiJetPt_scalar_1Jet = new TH1F("gammafakeDiJetPt_scalar_1Jet","gammafake scalar DiJetPt with Exactly One Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_scalar_1Jet->Sumw2();
  TH1F* h_ggDiJetPt_scalar_2Jet = new TH1F("ggDiJetPt_scalar_2Jet","gg scalar DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_scalar_2Jet->Sumw2();
  TH1F* h_eeDiJetPt_scalar_2Jet = new TH1F("eeDiJetPt_scalar_2Jet","ee scalar DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_scalar_2Jet->Sumw2();
  TH1F* h_ffDiJetPt_scalar_2Jet = new TH1F("ffDiJetPt_scalar_2Jet","ff scalar DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_scalar_2Jet->Sumw2();
  TH1F* h_gammafakeDiJetPt_scalar_2Jet = new TH1F("gammafakeDiJetPt_scalar_2Jet","gammafake scalar DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_scalar_2Jet->Sumw2();
  TH1F* h_ffDiJetPt_reweight_binned_0Jet = new TH1F("ffDiJetPt_reweight_binned_0Jet","ff DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_reweight_binned_0Jet->Sumw2();
  TH1F* h_eeDiJetPt_reweight_binned_0Jet = new TH1F("eeDiJetPt_reweight_binned_0Jet","ee DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_reweight_binned_0Jet->Sumw2();
  TH1F* h_eeDiJetPt_reweight_binned_1Jet = new TH1F("eeDiJetPt_reweight_binned_1Jet","ee DiJetPt with Exactly One Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_reweight_binned_1Jet->Sumw2();
  TH1F* h_ffDiJetPt_reweight_binned_1Jet = new TH1F("ffDiJetPt_reweight_binned_1Jet","ff DiJetPt with Exactly One Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_reweight_binned_1Jet->Sumw2();
  TH1F* h_eeDiJetPt_reweight_binned_2Jet = new TH1F("eeDiJetPt_reweight_binned_2Jet","ee DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_reweight_binned_2Jet->Sumw2();
  TH1F* h_ffDiJetPt_reweight_binned_2Jet = new TH1F("ffDiJetPt_reweight_binned_2Jet","ff DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_reweight_binned_2Jet->Sumw2();

  TH1F* h_gammafakeDiJetPt_1Jet = new TH1F("gammafakeDiJetPt_1Jet","gammafake DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_1Jet->Sumw2();
  TH1F* h_fgDiJetPt_1Jet = new TH1F("fgDiJetPt_1Jet","fg DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_1Jet->Sumw2();
  TH1F* h_gfDiJetPt_1Jet = new TH1F("gfDiJetPt_1Jet","gf DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_1Jet->Sumw2();
  TH1F* h_ggDiJetPt_1Jet = new TH1F("ggDiJetPt_1Jet","gg DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_1Jet->Sumw2();
  TH1F* h_egDiJetPt_1Jet = new TH1F("egDiJetPt_1Jet","eg DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_egDiJetPt_1Jet->Sumw2();
  TH1F* h_eeDiJetPt_1Jet = new TH1F("eeDiJetPt_1Jet","ee DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_1Jet->Sumw2();
  TH1F* h_ffDiJetPt_1Jet = new TH1F("ffDiJetPt_1Jet","ff DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_1Jet->Sumw2();

  TH1F* h_gammafakeDiJetPt_2Jet = new TH1F("gammafakeDiJetPt_2Jet","gammafake DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_2Jet->Sumw2();
  TH1F* h_fgDiJetPt_2Jet = new TH1F("fgDiJetPt_2Jet","fg DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_2Jet->Sumw2();
  TH1F* h_gfDiJetPt_2Jet = new TH1F("gfDiJetPt_2Jet","gf DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_2Jet->Sumw2();
  TH1F* h_ggDiJetPt_2Jet = new TH1F("ggDiJetPt_2Jet","gg DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_2Jet->Sumw2();
  TH1F* h_egDiJetPt_2Jet = new TH1F("egDiJetPt_2Jet","eg DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_egDiJetPt_2Jet->Sumw2();
  TH1F* h_eeDiJetPt_2Jet = new TH1F("eeDiJetPt_2Jet","ee DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_2Jet->Sumw2();
  TH1F* h_ffDiJetPt_2Jet = new TH1F("ffDiJetPt_2Jet","ff DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_2Jet->Sumw2();

  TH1F* h_gammafakeDiJetPt_MoreThan2Jets = new TH1F("gammafakeDiJetPt_MoreThan2Jets","gammafake DiJetPt with Greater Than 2 Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_MoreThan2Jets->Sumw2();
  TH1F* h_fgDiJetPt_MoreThan2Jets = new TH1F("fgDiJetPt_MoreThan2Jets","fg DiJetPt with Greater Than 2 Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_MoreThan2Jets->Sumw2();
  TH1F* h_gfDiJetPt_MoreThan2Jets = new TH1F("gfDiJetPt_MoreThan2Jets","gf DiJetPt with Greater Than 2 Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_MoreThan2Jets->Sumw2();
  TH1F* h_ggDiJetPt_MoreThan2Jets = new TH1F("ggDiJetPt_MoreThan2Jets","gg DiJetPt with Greater Than 2 Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_MoreThan2Jets->Sumw2();
  TH1F* h_egDiJetPt_MoreThan2Jets = new TH1F("egDiJetPt_MoreThan2Jets","eg DiJetPt with Greater Than 2 Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_egDiJetPt_MoreThan2Jets->Sumw2();
  TH1F* h_eeDiJetPt_MoreThan2Jets = new TH1F("eeDiJetPt_MoreThan2Jets","ee DiJetPt with Greater Than 2 Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_MoreThan2Jets->Sumw2();
  TH1F* h_ffDiJetPt_MoreThan2Jets = new TH1F("ffDiJetPt_MoreThan2Jets","ff DiJetPt with Greater Than 2 Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_MoreThan2Jets->Sumw2();
  TH1F* h_gammafakeDiEMPt_JetReq_0Jet = new TH1F("gammafakeDiEMPt_JetReq_0Jet","gammafake_JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_JetReq_0Jet->Sumw2();
  TH1F* h_fgDiEMPt_JetReq_0Jet = new TH1F("fgDiEMPt_JetReq_0Jet","fg_JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_JetReq_0Jet->Sumw2();
  TH1F* h_gfDiEMPt_JetReq_0Jet = new TH1F("gfDiEMPt_JetReq_0Jet","gf_JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_JetReq_0Jet->Sumw2();
  TH1F* h_ggDiEMPt_JetReq_0Jet = new TH1F("ggDiEMPt_JetReq_0Jet","gg_JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_JetReq_0Jet->Sumw2();
  TH1F* h_egDiEMPt_JetReq_0Jet = new TH1F("egDiEMPt_JetReq_0Jet","eg_JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_JetReq_0Jet->Sumw2();
  TH1F* h_eeDiEMPt_JetReq_0Jet = new TH1F("eeDiEMPt_JetReq_0Jet","ee_JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_JetReq_0Jet->Sumw2();
  TH1F* h_ffDiEMPt_JetReq_0Jet = new TH1F("ffDiEMPt_JetReq_0Jet","ff_JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_JetReq_0Jet->Sumw2();

  TH1F* h_gammafakeDiEMPt_JetReq_1Jet = new TH1F("gammafakeDiEMPt_JetReq_1Jet","gammafake_JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_JetReq_1Jet->Sumw2();
  TH1F* h_fgDiEMPt_JetReq_1Jet = new TH1F("fgDiEMPt_JetReq_1Jet","fg_JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_JetReq_1Jet->Sumw2();
  TH1F* h_gfDiEMPt_JetReq_1Jet = new TH1F("gfDiEMPt_JetReq_1Jet","gf_JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_JetReq_1Jet->Sumw2();
  TH1F* h_ggDiEMPt_JetReq_1Jet = new TH1F("ggDiEMPt_JetReq_1Jet","gg_JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_JetReq_1Jet->Sumw2();
  TH1F* h_egDiEMPt_JetReq_1Jet = new TH1F("egDiEMPt_JetReq_1Jet","eg_JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_JetReq_1Jet->Sumw2();
  TH1F* h_eeDiEMPt_JetReq_1Jet = new TH1F("eeDiEMPt_JetReq_1Jet","ee_JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_JetReq_1Jet->Sumw2();
  TH1F* h_ffDiEMPt_JetReq_1Jet = new TH1F("ffDiEMPt_JetReq_1Jet","ff_JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_JetReq_1Jet->Sumw2();

  TH1F* h_gammafakeDiEMPt_JetReq_2Jet = new TH1F("gammafakeDiEMPt_JetReq_2Jet","gammafake_JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_JetReq_2Jet->Sumw2();
  TH1F* h_fgDiEMPt_JetReq_2Jet = new TH1F("fgDiEMPt_JetReq_2Jet","fg_JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_JetReq_2Jet->Sumw2();
  TH1F* h_gfDiEMPt_JetReq_2Jet = new TH1F("gfDiEMPt_JetReq_2Jet","gf_JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_JetReq_2Jet->Sumw2();
  TH1F* h_ggDiEMPt_JetReq_2Jet = new TH1F("ggDiEMPt_JetReq_2Jet","gg_JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_JetReq_2Jet->Sumw2();
  TH1F* h_egDiEMPt_JetReq_2Jet = new TH1F("egDiEMPt_JetReq_2Jet","eg_JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_JetReq_2Jet->Sumw2();
  TH1F* h_eeDiEMPt_JetReq_2Jet = new TH1F("eeDiEMPt_JetReq_2Jet","ee_JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_JetReq_2Jet->Sumw2();
  TH1F* h_ffDiEMPt_JetReq_2Jet = new TH1F("ffDiEMPt_JetReq_2Jet","ff_JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_JetReq_2Jet->Sumw2();

  TH1F* h_gammafakeDiEMPt_JetReq_MoreThan2Jets = new TH1F("gammafakeDiEMPt_JetReq_MoreThan2Jets","gammafake_JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_fgDiEMPt_JetReq_MoreThan2Jets = new TH1F("fgDiEMPt_JetReq_MoreThan2Jets","fg_JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_gfDiEMPt_JetReq_MoreThan2Jets = new TH1F("gfDiEMPt_JetReq_MoreThan2Jets","gf_JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_ggDiEMPt_JetReq_MoreThan2Jets = new TH1F("ggDiEMPt_JetReq_MoreThan2Jets","gg_JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_egDiEMPt_JetReq_MoreThan2Jets = new TH1F("egDiEMPt_JetReq_MoreThan2Jets","eg_JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_eeDiEMPt_JetReq_MoreThan2Jets = new TH1F("eeDiEMPt_JetReq_MoreThan2Jets","ee_JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_ffDiEMPt_JetReq_MoreThan2Jets = new TH1F("ffDiEMPt_JetReq_MoreThan2Jets","ff_JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_JetReq_MoreThan2Jets->Sumw2();

  TH1F* h_gammafakeDiJetPt_JetReq_0Jet = new TH1F("gammafakeDiJetPt_JetReq_0Jet","gammafake_JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_JetReq_0Jet->Sumw2();
  TH1F* h_fgDiJetPt_JetReq_0Jet = new TH1F("fgDiJetPt_JetReq_0Jet","fg_JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_JetReq_0Jet->Sumw2();
  TH1F* h_gfDiJetPt_JetReq_0Jet = new TH1F("gfDiJetPt_JetReq_0Jet","gf_JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_JetReq_0Jet->Sumw2();
  TH1F* h_ggDiJetPt_JetReq_0Jet = new TH1F("ggDiJetPt_JetReq_0Jet","gg_JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_JetReq_0Jet->Sumw2();
  TH1F* h_egDiJetPt_JetReq_0Jet = new TH1F("egDiJetPt_JetReq_0Jet","eg_JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_egDiJetPt_JetReq_0Jet->Sumw2();
  TH1F* h_eeDiJetPt_JetReq_0Jet = new TH1F("eeDiJetPt_JetReq_0Jet","ee_JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_JetReq_0Jet->Sumw2();
  TH1F* h_ffDiJetPt_JetReq_0Jet = new TH1F("ffDiJetPt_JetReq_0Jet","ff_JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_JetReq_0Jet->Sumw2();

  TH1F* h_gammafakeDiJetPt_JetReq_1Jet = new TH1F("gammafakeDiJetPt_JetReq_1Jet","gammafake_JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_JetReq_1Jet->Sumw2();
  TH1F* h_fgDiJetPt_JetReq_1Jet = new TH1F("fgDiJetPt_JetReq_1Jet","fg_JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_JetReq_1Jet->Sumw2();
  TH1F* h_gfDiJetPt_JetReq_1Jet = new TH1F("gfDiJetPt_JetReq_1Jet","gf_JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_JetReq_1Jet->Sumw2();
  TH1F* h_ggDiJetPt_JetReq_1Jet = new TH1F("ggDiJetPt_JetReq_1Jet","gg_JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_JetReq_1Jet->Sumw2();
  TH1F* h_egDiJetPt_JetReq_1Jet = new TH1F("egDiJetPt_JetReq_1Jet","eg_JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_egDiJetPt_JetReq_1Jet->Sumw2();
  TH1F* h_eeDiJetPt_JetReq_1Jet = new TH1F("eeDiJetPt_JetReq_1Jet","ee_JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_JetReq_1Jet->Sumw2();
  TH1F* h_ffDiJetPt_JetReq_1Jet = new TH1F("ffDiJetPt_JetReq_1Jet","ff_JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_JetReq_1Jet->Sumw2();

  TH1F* h_gammafakeDiJetPt_JetReq_2Jet = new TH1F("gammafakeDiJetPt_JetReq_2Jet","gammafake_JetReq DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_JetReq_2Jet->Sumw2();
  TH1F* h_fgDiJetPt_JetReq_2Jet = new TH1F("fgDiJetPt_JetReq_2Jet","fg_JetReq DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_JetReq_2Jet->Sumw2();
  TH1F* h_gfDiJetPt_JetReq_2Jet = new TH1F("gfDiJetPt_JetReq_2Jet","gf_JetReq DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_JetReq_2Jet->Sumw2();
  TH1F* h_ggDiJetPt_JetReq_2Jet = new TH1F("ggDiJetPt_JetReq_2Jet","gg_JetReq DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_JetReq_2Jet->Sumw2();
  TH1F* h_egDiJetPt_JetReq_2Jet = new TH1F("egDiJetPt_JetReq_2Jet","eg_JetReq DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_egDiJetPt_JetReq_2Jet->Sumw2();
  TH1F* h_eeDiJetPt_JetReq_2Jet = new TH1F("eeDiJetPt_JetReq_2Jet","ee_JetReq DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_JetReq_2Jet->Sumw2();
  TH1F* h_ffDiJetPt_JetReq_2Jet = new TH1F("ffDiJetPt_JetReq_2Jet","ff DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_JetReq_2Jet->Sumw2();

  TH1F* h_gammafakeDiJetPt_JetReq_MoreThan2Jets = new TH1F("gammafakeDiJetPt_JetReq_MoreThan2Jets","gammafake_JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_fgDiJetPt_JetReq_MoreThan2Jets = new TH1F("fgDiJetPt_JetReq_MoreThan2Jets","fg_JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_fgDiJetPt_JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_gfDiJetPt_JetReq_MoreThan2Jets = new TH1F("gfDiJetPt_JetReq_MoreThan2Jets","gf_JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_gfDiJetPt_JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_ggDiJetPt_JetReq_MoreThan2Jets = new TH1F("ggDiJetPt_JetReq_MoreThan2Jets","gg_JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_ggDiJetPt_JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_egDiJetPt_JetReq_MoreThan2Jets = new TH1F("egDiJetPt_JetReq_MoreThan2Jets","eg_JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_egDiJetPt_JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_eeDiJetPt_JetReq_MoreThan2Jets = new TH1F("eeDiJetPt_JetReq_MoreThan2Jets","ee_JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_eeDiJetPt_JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_ffDiJetPt_JetReq_MoreThan2Jets = new TH1F("ffDiJetPt_JetReq_MoreThan2Jets","ff_JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_ffDiJetPt_JetReq_MoreThan2Jets->Sumw2();

  TH1F* h_gammafakeDiEMPt_2JetReq_0Jet = new TH1F("gammafakeDiEMPt_2JetReq_0Jet","gammafake_2JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_2JetReq_0Jet->Sumw2();
  TH1F* h_fgDiEMPt_2JetReq_0Jet = new TH1F("fgDiEMPt_2JetReq_0Jet","fg_2JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_2JetReq_0Jet->Sumw2();
  TH1F* h_gfDiEMPt_2JetReq_0Jet = new TH1F("gfDiEMPt_2JetReq_0Jet","gf_2JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_2JetReq_0Jet->Sumw2();
  TH1F* h_ggDiEMPt_2JetReq_0Jet = new TH1F("ggDiEMPt_2JetReq_0Jet","gg_2JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_2JetReq_0Jet->Sumw2();
  TH1F* h_egDiEMPt_2JetReq_0Jet = new TH1F("egDiEMPt_2JetReq_0Jet","eg_2JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_2JetReq_0Jet->Sumw2();
  TH1F* h_eeDiEMPt_2JetReq_0Jet = new TH1F("eeDiEMPt_2JetReq_0Jet","ee_2JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_2JetReq_0Jet->Sumw2();
  TH1F* h_ffDiEMPt_2JetReq_0Jet = new TH1F("ffDiEMPt_2JetReq_0Jet","ff_2JetReq DiEMPt with Exactly Zero Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_2JetReq_0Jet->Sumw2();

  TH1F* h_gammafakeDiEMPt_2JetReq_1Jet = new TH1F("gammafakeDiEMPt_2JetReq_1Jet","gammafake_2JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_2JetReq_1Jet->Sumw2();
  TH1F* h_fgDiEMPt_2JetReq_1Jet = new TH1F("fgDiEMPt_2JetReq_1Jet","fg_2JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_2JetReq_1Jet->Sumw2();
  TH1F* h_gfDiEMPt_2JetReq_1Jet = new TH1F("gfDiEMPt_2JetReq_1Jet","gf_2JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_2JetReq_1Jet->Sumw2();
  TH1F* h_ggDiEMPt_2JetReq_1Jet = new TH1F("ggDiEMPt_2JetReq_1Jet","gg_2JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_2JetReq_1Jet->Sumw2();
  TH1F* h_egDiEMPt_2JetReq_1Jet = new TH1F("egDiEMPt_2JetReq_1Jet","eg_2JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_2JetReq_1Jet->Sumw2();
  TH1F* h_eeDiEMPt_2JetReq_1Jet = new TH1F("eeDiEMPt_2JetReq_1Jet","ee_2JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_2JetReq_1Jet->Sumw2();
  TH1F* h_ffDiEMPt_2JetReq_1Jet = new TH1F("ffDiEMPt_2JetReq_1Jet","ff_2JetReq DiEMPt with Exactly One Jet;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_2JetReq_1Jet->Sumw2();

  TH1F* h_gammafakeDiEMPt_2JetReq_2Jet = new TH1F("gammafakeDiEMPt_2JetReq_2Jet","gammafake_2JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_2JetReq_2Jet->Sumw2();
  TH1F* h_fgDiEMPt_2JetReq_2Jet = new TH1F("fgDiEMPt_2JetReq_2Jet","fg_2JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_2JetReq_2Jet->Sumw2();
  TH1F* h_gfDiEMPt_2JetReq_2Jet = new TH1F("gfDiEMPt_2JetReq_2Jet","gf_2JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_2JetReq_2Jet->Sumw2();
  TH1F* h_ggDiEMPt_2JetReq_2Jet = new TH1F("ggDiEMPt_2JetReq_2Jet","gg_2JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_2JetReq_2Jet->Sumw2();
  TH1F* h_egDiEMPt_2JetReq_2Jet = new TH1F("egDiEMPt_2JetReq_2Jet","eg_2JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_2JetReq_2Jet->Sumw2();
  TH1F* h_eeDiEMPt_2JetReq_2Jet = new TH1F("eeDiEMPt_2JetReq_2Jet","ee_2JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_2JetReq_2Jet->Sumw2();
  TH1F* h_ffDiEMPt_2JetReq_2Jet = new TH1F("ffDiEMPt_2JetReq_2Jet","ff_2JetReq DiEMPt with at least Two Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_2JetReq_2Jet->Sumw2();

  TH1F* h_gammafakeDiEMPt_2JetReq_MoreThan2Jets = new TH1F("gammafakeDiEMPt_2JetReq_MoreThan2Jets","gammafake_2JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gammafakeDiEMPt_2JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_fgDiEMPt_2JetReq_MoreThan2Jets = new TH1F("fgDiEMPt_2JetReq_MoreThan2Jets","fg_2JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_fgDiEMPt_2JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_gfDiEMPt_2JetReq_MoreThan2Jets = new TH1F("gfDiEMPt_2JetReq_MoreThan2Jets","gf_2JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_gfDiEMPt_2JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_ggDiEMPt_2JetReq_MoreThan2Jets = new TH1F("ggDiEMPt_2JetReq_MoreThan2Jets","gg_2JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ggDiEMPt_2JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_egDiEMPt_2JetReq_MoreThan2Jets = new TH1F("egDiEMPt_2JetReq_MoreThan2Jets","eg_2JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_egDiEMPt_2JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_eeDiEMPt_2JetReq_MoreThan2Jets = new TH1F("eeDiEMPt_2JetReq_MoreThan2Jets","ee_2JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_eeDiEMPt_2JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_ffDiEMPt_2JetReq_MoreThan2Jets = new TH1F("ffDiEMPt_2JetReq_MoreThan2Jets","ff_2JetReq DiEMPt with Greater Than 2 Jets;DiEMPt (GeV);Events", 400,0.,1000.);h_ffDiEMPt_2JetReq_MoreThan2Jets->Sumw2();

  TH1F* h_gammafakeDiJetPt_2JetReq_0Jet = new TH1F("gammafakeDiJetPt_2JetReq_0Jet","gammafake_2JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_2JetReq_0Jet->Sumw2();
  TH1F* h_fgDiJetPt_2JetReq_0Jet = new TH1F("fgDiJetPt_2JetReq_0Jet","fg_2JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_2JetReq_0Jet->Sumw2();
  TH1F* h_gfDiJetPt_2JetReq_0Jet = new TH1F("gfDiJetPt_2JetReq_0Jet","gf_2JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_2JetReq_0Jet->Sumw2();
  TH1F* h_ggDiJetPt_2JetReq_0Jet = new TH1F("ggDiJetPt_2JetReq_0Jet","gg_2JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_2JetReq_0Jet->Sumw2();
  TH1F* h_egDiJetPt_2JetReq_0Jet = new TH1F("egDiJetPt_2JetReq_0Jet","eg_2JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_egDiJetPt_2JetReq_0Jet->Sumw2();
  TH1F* h_eeDiJetPt_2JetReq_0Jet = new TH1F("eeDiJetPt_2JetReq_0Jet","ee_2JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_2JetReq_0Jet->Sumw2();
  TH1F* h_ffDiJetPt_2JetReq_0Jet = new TH1F("ffDiJetPt_2JetReq_0Jet","ff_2JetReq DiJetPt with Exactly Zero Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_2JetReq_0Jet->Sumw2();

  TH1F* h_gammafakeDiJetPt_2JetReq_1Jet = new TH1F("gammafakeDiJetPt_2JetReq_1Jet","gammafake_2JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_2JetReq_1Jet->Sumw2();
  TH1F* h_fgDiJetPt_2JetReq_1Jet = new TH1F("fgDiJetPt_2JetReq_1Jet","fg_2JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_2JetReq_1Jet->Sumw2();
  TH1F* h_gfDiJetPt_2JetReq_1Jet = new TH1F("gfDiJetPt_2JetReq_1Jet","gf_2JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_2JetReq_1Jet->Sumw2();
  TH1F* h_ggDiJetPt_2JetReq_1Jet = new TH1F("ggDiJetPt_2JetReq_1Jet","gg_2JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_2JetReq_1Jet->Sumw2();
  TH1F* h_egDiJetPt_2JetReq_1Jet = new TH1F("egDiJetPt_2JetReq_1Jet","eg_2JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_egDiJetPt_2JetReq_1Jet->Sumw2();
  TH1F* h_eeDiJetPt_2JetReq_1Jet = new TH1F("eeDiJetPt_2JetReq_1Jet","ee_2JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_2JetReq_1Jet->Sumw2();
  TH1F* h_ffDiJetPt_2JetReq_1Jet = new TH1F("ffDiJetPt_2JetReq_1Jet","ff_2JetReq DiJetPt with Exactly One Jet;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_2JetReq_1Jet->Sumw2();

  TH1F* h_gammafakeDiJetPt_2JetReq_2Jet = new TH1F("gammafakeDiJetPt_2JetReq_2Jet","gammafake_2JetReq DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_2JetReq_2Jet->Sumw2();
  TH1F* h_fgDiJetPt_2JetReq_2Jet = new TH1F("fgDiJetPt_2JetReq_2Jet","fg_2JetReq DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_fgDiJetPt_2JetReq_2Jet->Sumw2();
  TH1F* h_gfDiJetPt_2JetReq_2Jet = new TH1F("gfDiJetPt_2JetReq_2Jet","gf_2JetReq DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_gfDiJetPt_2JetReq_2Jet->Sumw2();
  TH1F* h_ggDiJetPt_2JetReq_2Jet = new TH1F("ggDiJetPt_2JetReq_2Jet","gg_2JetReq DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ggDiJetPt_2JetReq_2Jet->Sumw2();
  TH1F* h_egDiJetPt_2JetReq_2Jet = new TH1F("egDiJetPt_2JetReq_2Jet","eg_2JetReq DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_egDiJetPt_2JetReq_2Jet->Sumw2();
  TH1F* h_eeDiJetPt_2JetReq_2Jet = new TH1F("eeDiJetPt_2JetReq_2Jet","ee_2JetReq DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_eeDiJetPt_2JetReq_2Jet->Sumw2();
  TH1F* h_ffDiJetPt_2JetReq_2Jet = new TH1F("ffDiJetPt_2JetReq_2Jet","ff DiJetPt with at least Two Jets;DiJetPt (GeV);Events", 400,0.,1000.);h_ffDiJetPt_2JetReq_2Jet->Sumw2();

  TH1F* h_gammafakeDiJetPt_2JetReq_MoreThan2Jets = new TH1F("gammafakeDiJetPt_2JetReq_MoreThan2Jets","gammafake_2JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_gammafakeDiJetPt_2JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_fgDiJetPt_2JetReq_MoreThan2Jets = new TH1F("fgDiJetPt_2JetReq_MoreThan2Jets","fg_2JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_fgDiJetPt_2JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_gfDiJetPt_2JetReq_MoreThan2Jets = new TH1F("gfDiJetPt_2JetReq_MoreThan2Jets","gf_2JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_gfDiJetPt_2JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_ggDiJetPt_2JetReq_MoreThan2Jets = new TH1F("ggDiJetPt_2JetReq_MoreThan2Jets","gg_2JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_ggDiJetPt_2JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_egDiJetPt_2JetReq_MoreThan2Jets = new TH1F("egDiJetPt_2JetReq_MoreThan2Jets","eg_2JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_egDiJetPt_2JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_eeDiJetPt_2JetReq_MoreThan2Jets = new TH1F("eeDiJetPt_2JetReq_MoreThan2Jets","ee_2JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_eeDiJetPt_2JetReq_MoreThan2Jets->Sumw2();
  TH1F* h_ffDiJetPt_2JetReq_MoreThan2Jets = new TH1F("ffDiJetPt_2JetReq_MoreThan2Jets","ff_2JetReq DiJet with Greater Than 2 Jets;DiJet (GeV);Events", 400,0.,1000.);h_ffDiJetPt_2JetReq_MoreThan2Jets->Sumw2();

  TH1F* h_eeSideBandDiEMPt_JetReq = new TH1F("eeSideBandDiEMPt_JetReq","eeSideBand DiEMPt with One Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiEMPt_JetReq->Sumw2();
  TH1F* h_eeSideBandDiEMPt_2JetReq = new TH1F("eeSideBandDiEMPt_2JetReq","eeSideBand DiEMPt with Two Jet Requirement;DiEMPt (GeV);Events", 400,0.,1000.);h_eeSideBandDiEMPt_2JetReq->Sumw2();
  TH1F* h_ggInvarMass = new TH1F("ggInvarMass","gg Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH2F* h_ggMetVsInvarMass = new TH2F("ggMetVsInvarMass","gg E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,200,0.,1000.);
  TH1F* h_ggInvarMassMVAcorr = new TH1F("ggInvarMassMVAcorr","gg Invariant Mass with MVA SC corrections;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMVAcorrVertexCorr = new TH1F("ggInvarMassMVAcorrVertexCorr","gg Invariant Mass with MVA SC corrections and Primary Vertex correctino;(GeV);Events", 2004,0.,1002.);
  TH2F* h_ggInvarMassMVAcorrVertexCorr_vs_Met = new TH2F("ggInvarMassMVAcorrVertexCorr_vs_Met","gg Invariant Mass with MVA SC corrections and Primary Vertex correction VS E_{T}^{miss};(GeV);Events", 2004,0.,1002.,2004,0.,1002.);
  TH1F* h_ggInvarMassMVAcorr_JetReq = new TH1F("ggInvarMassMVAcorr_JetReq","gg_JetReq Invariant Mass with MVA SC corrections;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMVAcorrVertexCorr_JetReq = new TH1F("ggInvarMassMVAcorrVertexCorr_JetReq","gg_JetReq Invariant Mass with MVA SC corrections and Primary Vertex correction;(GeV);Events", 2004,0.,1002.);
  TH2F* h_ggInvarMassMVAcorrVertexCorr_JetReq_vs_Met = new TH2F("ggInvarMassMVAcorrVertexCorr_JetReq_vs_Met","gg_JetReq Invariant Mass with MVA SC corrections and Primary Vertex correction VS E_{T}^{miss};(GeV);Events", 2004,0.,1002.,2004,0.,1002.);
  TH1F* h_eeInvarMassMVAcorrVertexCorr = new TH1F("eeInvarMassMVAcorrVertexCorr","ee Invariant Mass with MVA SC corrections and Primary Vertex correctino;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMass = new TH1F("gammafakeInvarMass","gammafake Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMass = new TH1F("fgInvarMass","fg Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMass = new TH1F("gfInvarMass","gf Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggMETInvarMass120_130 = new TH1F("ggMETInvarMass120_130","MET in gg events with 120<InvarMass<130;(GeV);Events", 200,0.,1000.);
  TH1F* h_ggMETInvarMass123_128 = new TH1F("ggMETInvarMass123_128","MET in gg events with 123<InvarMass<128;(GeV);Events", 200,0.,1000.);
  TH1F* h_ggMETInvarMass95_110 = new TH1F("ggMETInvarMass95_110","MET in gg events with 95<InvarMass<110;(GeV);Events", 200,0.,1000.);
  TH1F* h_ggMETInvarMass135_160 = new TH1F("ggMETInvarMass135_160","MET in gg events with 135<InvarMass<160;(GeV);Events", 200,0.,1000.);
  TH1F* h_ggMETInvarMass120_130_JetReq = new TH1F("ggMETInvarMass120_130_JetReq","MET in gg_JetReq events with 120<InvarMass<130;(GeV);Events", 200,0.,1000.);
  TH1F* h_ggMETInvarMass123_128_JetReq = new TH1F("ggMETInvarMass123_128_JetReq","MET in gg_JetReq events with 123<InvarMass<128;(GeV);Events", 200,0.,1000.);
  TH1F* h_ggMETInvarMass95_110_JetReq = new TH1F("ggMETInvarMass95_110_JetReq","MET in gg_JetReq events with 95<InvarMass<110;(GeV);Events", 200,0.,1000.);
  TH1F* h_ggMETInvarMass135_160_JetReq = new TH1F("ggMETInvarMass135_160_JetReq","MET in gg_JetReq events with 135<InvarMass<160;(GeV);Events", 200,0.,1000.);
  TH1F* h_ggMETInvarMass120_130_2JetReq = new TH1F("ggMETInvarMass120_130_2JetReq","MET in gg_2JetReq events with 120<InvarMass<130;(GeV);Events", 200,0.,1000.);
  TH1F* h_ggMETInvarMass123_128_2JetReq = new TH1F("ggMETInvarMass123_128_2JetReq","MET in gg_2JetReq events with 123<InvarMass<128;(GeV);Events", 200,0.,1000.);
  TH1F* h_ggMETInvarMass95_110_2JetReq = new TH1F("ggMETInvarMass95_110_2JetReq","MET in gg_2JetReq events with 95<InvarMass<110;(GeV);Events", 200,0.,1000.);
  TH1F* h_ggMETInvarMass135_160_2JetReq = new TH1F("ggMETInvarMass135_160_2JetReq","MET in gg_2JetReq events with 135<InvarMass<160;(GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakeMETInvarMass120_130 = new TH1F("gammafakeMETInvarMass120_130","MET in gammafake events with 120<InvarMass<130;(GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakeMETInvarMass123_128 = new TH1F("gammafakeMETInvarMass123_128","MET in gammafake events with 123<InvarMass<128;(GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakeMETInvarMass95_110 = new TH1F("gammafakeMETInvarMass95_110","MET in gammafake events with 95<InvarMass<110;(GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakeMETInvarMass135_160 = new TH1F("gammafakeMETInvarMass135_160","MET in gammafake events with 135<InvarMass<160;(GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakeMETInvarMass120_130_JetReq = new TH1F("gammafakeMETInvarMass120_130_JetReq","MET in gammafake_JetReq events with 120<InvarMass<130;(GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakeMETInvarMass123_128_JetReq = new TH1F("gammafakeMETInvarMass123_128_JetReq","MET in gammafake_JetReq events with 123<InvarMass<128;(GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakeMETInvarMass95_110_JetReq = new TH1F("gammafakeMETInvarMass95_110_JetReq","MET in gammafake_JetReq events with 95<InvarMass<110;(GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakeMETInvarMass135_160_JetReq = new TH1F("gammafakeMETInvarMass135_160_JetReq","MET in gammafake_JetReq events with 135<InvarMass<160;(GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakeMETInvarMass120_130_2JetReq = new TH1F("gammafakeMETInvarMass120_130_2JetReq","MET in gammafake_2JetReq events with 120<InvarMass<130;(GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakeMETInvarMass123_128_2JetReq = new TH1F("gammafakeMETInvarMass123_128_2JetReq","MET in gammafake_2JetReq events with 123<InvarMass<128;(GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakeMETInvarMass95_110_2JetReq = new TH1F("gammafakeMETInvarMass95_110_2JetReq","MET in gammafake_2JetReq events with 95<InvarMass<110;(GeV);Events", 200,0.,1000.);
  TH1F* h_gammafakeMETInvarMass135_160_2JetReq = new TH1F("gammafakeMETInvarMass135_160_2JetReq","MET in gammafake_2JetReq events with 135<InvarMass<160;(GeV);Events", 200,0.,1000.);
  TH1F* h_fgMETInvarMass120_130 = new TH1F("fgMETInvarMass120_130","MET in fg events with 120<InvarMass<130;(GeV);Events", 200,0.,1000.);
  TH1F* h_fgMETInvarMass123_128 = new TH1F("fgMETInvarMass123_128","MET in fg events with 123<InvarMass<128;(GeV);Events", 200,0.,1000.);
  TH1F* h_fgMETInvarMass95_110 = new TH1F("fgMETInvarMass95_110","MET in fg events with 95<InvarMass<110;(GeV);Events", 200,0.,1000.);
  TH1F* h_fgMETInvarMass135_160 = new TH1F("fgMETInvarMass135_160","MET in fg events with 135<InvarMass<160;(GeV);Events", 200,0.,1000.);
  TH1F* h_fgMETInvarMass120_130_JetReq = new TH1F("fgMETInvarMass120_130_JetReq","MET in fg_JetReq events with 120<InvarMass<130;(GeV);Events", 200,0.,1000.);
  TH1F* h_fgMETInvarMass123_128_JetReq = new TH1F("fgMETInvarMass123_128_JetReq","MET in fg_JetReq events with 123<InvarMass<128;(GeV);Events", 200,0.,1000.);
  TH1F* h_fgMETInvarMass95_110_JetReq = new TH1F("fgMETInvarMass95_110_JetReq","MET in fg_JetReq events with 95<InvarMass<110;(GeV);Events", 200,0.,1000.);
  TH1F* h_fgMETInvarMass135_160_JetReq = new TH1F("fgMETInvarMass135_160_JetReq","MET in fg_JetReq events with 135<InvarMass<160;(GeV);Events", 200,0.,1000.);
  TH1F* h_fgMETInvarMass120_130_2JetReq = new TH1F("fgMETInvarMass120_130_2JetReq","MET in fg_2JetReq events with 120<InvarMass<130;(GeV);Events", 200,0.,1000.);
  TH1F* h_fgMETInvarMass123_128_2JetReq = new TH1F("fgMETInvarMass123_128_2JetReq","MET in fg_2JetReq events with 123<InvarMass<128;(GeV);Events", 200,0.,1000.);
  TH1F* h_fgMETInvarMass95_110_2JetReq = new TH1F("fgMETInvarMass95_110_2JetReq","MET in fg_2JetReq events with 95<InvarMass<110;(GeV);Events", 200,0.,1000.);
  TH1F* h_fgMETInvarMass135_160_2JetReq = new TH1F("fgMETInvarMass135_160_2JetReq","MET in fg_2JetReq events with 135<InvarMass<160;(GeV);Events", 200,0.,1000.);
  TH1F* h_gfMETInvarMass120_130 = new TH1F("gfMETInvarMass120_130","MET in gf events with 120<InvarMass<130;(GeV);Events", 200,0.,1000.);
  TH1F* h_gfMETInvarMass123_128 = new TH1F("gfMETInvarMass123_128","MET in gf events with 123<InvarMass<128;(GeV);Events", 200,0.,1000.);
  TH1F* h_gfMETInvarMass95_110 = new TH1F("gfMETInvarMass95_110","MET in gf events with 95<InvarMass<110;(GeV);Events", 200,0.,1000.);
  TH1F* h_gfMETInvarMass135_160 = new TH1F("gfMETInvarMass135_160","MET in gf events with 135<InvarMass<160;(GeV);Events", 200,0.,1000.);
  TH1F* h_gfMETInvarMass120_130_JetReq = new TH1F("gfMETInvarMass120_130_JetReq","MET in gf_JetReq events with 120<InvarMass<130;(GeV);Events", 200,0.,1000.);
  TH1F* h_gfMETInvarMass123_128_JetReq = new TH1F("gfMETInvarMass123_128_JetReq","MET in gf_JetReq events with 123<InvarMass<128;(GeV);Events", 200,0.,1000.);
  TH1F* h_gfMETInvarMass95_110_JetReq = new TH1F("gfMETInvarMass95_110_JetReq","MET in gf_JetReq events with 95<InvarMass<110;(GeV);Events", 200,0.,1000.);
  TH1F* h_gfMETInvarMass135_160_JetReq = new TH1F("gfMETInvarMass135_160_JetReq","MET in gf_JetReq events with 135<InvarMass<160;(GeV);Events", 200,0.,1000.);
  TH1F* h_gfMETInvarMass120_130_2JetReq = new TH1F("gfMETInvarMass120_130_2JetReq","MET in gf_2JetReq events with 120<InvarMass<130;(GeV);Events", 200,0.,1000.);
  TH1F* h_gfMETInvarMass123_128_2JetReq = new TH1F("gfMETInvarMass123_128_2JetReq","MET in gf_2JetReq events with 123<InvarMass<128;(GeV);Events", 200,0.,1000.);
  TH1F* h_gfMETInvarMass95_110_2JetReq = new TH1F("gfMETInvarMass95_110_2JetReq","MET in gf_2JetReq events with 95<InvarMass<110;(GeV);Events", 200,0.,1000.);
  TH1F* h_gfMETInvarMass135_160_2JetReq = new TH1F("gfMETInvarMass135_160_2JetReq","MET in gf_2JetReq events with 135<InvarMass<160;(GeV);Events", 200,0.,1000.);
  TH1F* h_ggInvarMassMET30 = new TH1F("ggInvarMassMET30","gg Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_egInvarMassMET30 = new TH1F("egInvarMassMET30","eg Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ffInvarMassMET30 = new TH1F("ffInvarMassMET30","ff Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET40 = new TH1F("ggInvarMassMET40","gg Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET50 = new TH1F("ggInvarMassMET50","gg Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET60 = new TH1F("ggInvarMassMET60","gg Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET70 = new TH1F("ggInvarMassMET70","gg Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET80 = new TH1F("ggInvarMassMET80","gg Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET100 = new TH1F("ggInvarMassMET100","gg Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET30_JetReq = new TH1F("ggInvarMassMET30_JetReq","gg_JetReq Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET40_JetReq = new TH1F("ggInvarMassMET40_JetReq","gg_JetReq Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET50_JetReq = new TH1F("ggInvarMassMET50_JetReq","gg_JetReq Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET60_JetReq = new TH1F("ggInvarMassMET60_JetReq","gg_JetReq Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET70_JetReq = new TH1F("ggInvarMassMET70_JetReq","gg_JetReq Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET80_JetReq = new TH1F("ggInvarMassMET80_JetReq","gg_JetReq Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET100_JetReq = new TH1F("ggInvarMassMET100_JetReq","gg_JetReq Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET30_2JetReq = new TH1F("ggInvarMassMET30_2JetReq","gg_2JetReq Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET40_2JetReq = new TH1F("ggInvarMassMET40_2JetReq","gg_2JetReq Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET50_2JetReq = new TH1F("ggInvarMassMET50_2JetReq","gg_2JetReq Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET60_2JetReq = new TH1F("ggInvarMassMET60_2JetReq","gg_2JetReq Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET70_2JetReq = new TH1F("ggInvarMassMET70_2JetReq","gg_2JetReq Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET80_2JetReq = new TH1F("ggInvarMassMET80_2JetReq","gg_2JetReq Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET100_2JetReq = new TH1F("ggInvarMassMET100_2JetReq","gg_2JetReq Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET30MVAcorr = new TH1F("ggInvarMassMET30MVAcorr","gg MVA corrected Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_egInvarMassMET30MVAcorr = new TH1F("egInvarMassMET30MVAcorr","eg MVA corrected Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ffInvarMassMET30MVAcorr = new TH1F("ffInvarMassMET30MVAcorr","ff MVA corrected Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET40MVAcorr = new TH1F("ggInvarMassMET40MVAcorr","gg MVA corrected Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET50MVAcorr = new TH1F("ggInvarMassMET50MVAcorr","gg MVA corrected Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET60MVAcorr = new TH1F("ggInvarMassMET60MVAcorr","gg MVA corrected Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET70MVAcorr = new TH1F("ggInvarMassMET70MVAcorr","gg MVA corrected Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET80MVAcorr = new TH1F("ggInvarMassMET80MVAcorr","gg MVA corrected Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMassMET100MVAcorr = new TH1F("ggInvarMassMET100MVAcorr","gg MVA corrected Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET30 = new TH1F("gammafakeInvarMassMET30","gammafake MVA corrected Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET30MVAcorr = new TH1F("gammafakeInvarMassMET30MVAcorr","gammafake Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET40 = new TH1F("gammafakeInvarMassMET40","gammafake Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET50 = new TH1F("gammafakeInvarMassMET50","gammafake Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET60 = new TH1F("gammafakeInvarMassMET60","gammafake Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET70 = new TH1F("gammafakeInvarMassMET70","gammafake Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET80 = new TH1F("gammafakeInvarMassMET80","gammafake Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET100 = new TH1F("gammafakeInvarMassMET100","gammafake Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET30_JetReq = new TH1F("gammafakeInvarMassMET30_JetReq","gammafake_JetReq Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET40_JetReq = new TH1F("gammafakeInvarMassMET40_JetReq","gammafake_JetReq Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET50_JetReq = new TH1F("gammafakeInvarMassMET50_JetReq","gammafake_JetReq Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET60_JetReq = new TH1F("gammafakeInvarMassMET60_JetReq","gammafake_JetReq Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET70_JetReq = new TH1F("gammafakeInvarMassMET70_JetReq","gammafake_JetReq Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET80_JetReq = new TH1F("gammafakeInvarMassMET80_JetReq","gammafake_JetReq Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET100_JetReq = new TH1F("gammafakeInvarMassMET100_JetReq","gammafake_JetReq Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET30_2JetReq = new TH1F("gammafakeInvarMassMET30_2JetReq","gammafake_2JetReq Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET40_2JetReq = new TH1F("gammafakeInvarMassMET40_2JetReq","gammafake_2JetReq Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET50_2JetReq = new TH1F("gammafakeInvarMassMET50_2JetReq","gammafake_2JetReq Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET60_2JetReq = new TH1F("gammafakeInvarMassMET60_2JetReq","gammafake_2JetReq Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET70_2JetReq = new TH1F("gammafakeInvarMassMET70_2JetReq","gammafake_2JetReq Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET80_2JetReq = new TH1F("gammafakeInvarMassMET80_2JetReq","gammafake_2JetReq Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMassMET100_2JetReq = new TH1F("gammafakeInvarMassMET100_2JetReq","gammafake_2JetReq Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET30 = new TH1F("fgInvarMassMET30","fg Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET40 = new TH1F("fgInvarMassMET40","fg Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET50 = new TH1F("fgInvarMassMET50","fg Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET60 = new TH1F("fgInvarMassMET60","fg Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET70 = new TH1F("fgInvarMassMET70","fg Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET80 = new TH1F("fgInvarMassMET80","fg Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET100 = new TH1F("fgInvarMassMET100","fg Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET30_JetReq = new TH1F("fgInvarMassMET30_JetReq","fg_JetReq Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET40_JetReq = new TH1F("fgInvarMassMET40_JetReq","fg_JetReq Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET50_JetReq = new TH1F("fgInvarMassMET50_JetReq","fg_JetReq Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET60_JetReq = new TH1F("fgInvarMassMET60_JetReq","fg_JetReq Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET70_JetReq = new TH1F("fgInvarMassMET70_JetReq","fg_JetReq Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET80_JetReq = new TH1F("fgInvarMassMET80_JetReq","fg_JetReq Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET100_JetReq = new TH1F("fgInvarMassMET100_JetReq","fg_JetReq Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET30_2JetReq = new TH1F("fgInvarMassMET30_2JetReq","fg_2JetReq Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET40_2JetReq = new TH1F("fgInvarMassMET40_2JetReq","fg_2JetReq Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET50_2JetReq = new TH1F("fgInvarMassMET50_2JetReq","fg_2JetReq Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET60_2JetReq = new TH1F("fgInvarMassMET60_2JetReq","fg_2JetReq Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET70_2JetReq = new TH1F("fgInvarMassMET70_2JetReq","fg_2JetReq Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET80_2JetReq = new TH1F("fgInvarMassMET80_2JetReq","fg_2JetReq Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMassMET100_2JetReq = new TH1F("fgInvarMassMET100_2JetReq","fg_2JetReq Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET30 = new TH1F("gfInvarMassMET30","gf Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET40 = new TH1F("gfInvarMassMET40","gf Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET50 = new TH1F("gfInvarMassMET50","gf Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET60 = new TH1F("gfInvarMassMET60","gf Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET70 = new TH1F("gfInvarMassMET70","gf Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET80 = new TH1F("gfInvarMassMET80","gf Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET100 = new TH1F("gfInvarMassMET100","gf Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET30_JetReq = new TH1F("gfInvarMassMET30_JetReq","gf_JetReq Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET40_JetReq = new TH1F("gfInvarMassMET40_JetReq","gf_JetReq Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET50_JetReq = new TH1F("gfInvarMassMET50_JetReq","gf_JetReq Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET60_JetReq = new TH1F("gfInvarMassMET60_JetReq","gf_JetReq Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET70_JetReq = new TH1F("gfInvarMassMET70_JetReq","gf_JetReq Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET80_JetReq = new TH1F("gfInvarMassMET80_JetReq","gf_JetReq Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET100_JetReq = new TH1F("gfInvarMassMET100_JetReq","gf_JetReq Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET30_2JetReq = new TH1F("gfInvarMassMET30_2JetReq","gf_2JetReq Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET40_2JetReq = new TH1F("gfInvarMassMET40_2JetReq","gf_2JetReq Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET50_2JetReq = new TH1F("gfInvarMassMET50_2JetReq","gf_2JetReq Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET60_2JetReq = new TH1F("gfInvarMassMET60_2JetReq","gf_2JetReq Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET70_2JetReq = new TH1F("gfInvarMassMET70_2JetReq","gf_2JetReq Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET80_2JetReq = new TH1F("gfInvarMassMET80_2JetReq","gf_2JetReq Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMassMET100_2JetReq = new TH1F("gfInvarMassMET100_2JetReq","gf_2JetReq Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassMET30 = new TH1F("eeInvarMassMET30","ee Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassMET40 = new TH1F("eeInvarMassMET40","ee Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassMET50 = new TH1F("eeInvarMassMET50","ee Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassMET60 = new TH1F("eeInvarMassMET60","ee Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassMET70 = new TH1F("eeInvarMassMET70","ee Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassMET80 = new TH1F("eeInvarMassMET80","ee Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassMET100 = new TH1F("eeInvarMassMET100","ee Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_mumuInvarMass = new TH1F("mumuInvarMass","mumu Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_mumuInvarMassMET30 = new TH1F("mumuInvarMassMET30","mumu Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
  TH1F* h_mumuInvarMassMET40 = new TH1F("mumuInvarMassMET40","mumu Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_mumuInvarMassMET50 = new TH1F("mumuInvarMassMET50","mumu Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_mumuInvarMassMET60 = new TH1F("mumuInvarMassMET60","mumu Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_mumuInvarMassMET70 = new TH1F("mumuInvarMassMET70","mumu Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
  TH1F* h_mumuInvarMassMET80 = new TH1F("mumuInvarMassMET80","mumu Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_mumuInvarMassMET100 = new TH1F("mumuInvarMassMET100","mumu Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  TH1F* h_egInvarMass = new TH1F("egInvarMass","eg Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_egInvarMass_Pt25to40 = new TH1F("egInvarMass_Pt25to40","eg Invariant Mass for trailing object pt<40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_egInvarMass_Pt40to45 = new TH1F("egInvarMass_Pt40to45","eg Invariant Mass for leading object 40<pt<45;(GeV);Events", 2004,0.,1002.);
  TH1F* h_egInvarMass_Pt45to50 = new TH1F("egInvarMass_Pt45to50","eg Invariant Mass for leading object 45<pt<50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_egInvarMass_Pt50to60 = new TH1F("egInvarMass_Pt50to60","eg Invariant Mass for leading object 50<pt<60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_egInvarMass_Pt60to80 = new TH1F("egInvarMass_Pt60to80","eg Invariant Mass for leading object 60<pt<80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_egInvarMass_Pt80 = new TH1F("egInvarMass_Pt80","eg Invariant Mass for leading object pt>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMass = new TH1F("eeInvarMass","ee Invariant Mass for 81<InvarMass<101;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassFullRange = new TH1F("eeInvarMassFullRange","ee Invariant Mass for all InvarMass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassFullRange_Pt25to40 = new TH1F("eeInvarMassFullRange_Pt25to40","ee Invariant Mass for trailing electron pt<40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassFullRange_Pt40to45 = new TH1F("eeInvarMassFullRange_Pt40to45","ee Invariant Mass for leading electron 40<pt<45;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassFullRange_Pt45to50 = new TH1F("eeInvarMassFullRange_Pt45to50","ee Invariant Mass for leading electron 45<pt<50;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassFullRange_Pt50to60 = new TH1F("eeInvarMassFullRange_Pt50to60","ee Invariant Mass for leading electron 50<pt<60;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassFullRange_Pt60to80 = new TH1F("eeInvarMassFullRange_Pt60to80","ee Invariant Mass for leading electron 60<pt<80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassFullRange_Pt80 = new TH1F("eeInvarMassFullRange_Pt80","ee Invariant Mass for leading electron pt>80;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ffInvarMass = new TH1F("ffInvarMass","ff Invariant Mass;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMass_JetReq = new TH1F("ggInvarMass_JetReq","gg Invariant Mass with One Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMass_JetReq = new TH1F("gammafakeInvarMass_JetReq","gammafake Invariant Mass with One Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMass_JetReq = new TH1F("fgInvarMass_JetReq","fg Invariant Mass with One Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMass_JetReq = new TH1F("gfInvarMass_JetReq","gf Invariant Mass with One Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_egInvarMass_JetReq = new TH1F("egInvarMass_JetReq","eg Invariant Mass with One Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMass_JetReq = new TH1F("eeInvarMass_JetReq","ee Invariant Mass for 81<InvarMass<101 with One Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassFullRange_JetReq = new TH1F("eeInvarMassFullRange_JetReq","ee Invariant Mass for all InvarMass with One Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ffInvarMass_JetReq = new TH1F("ffInvarMass_JetReq","ff Invariant Mass with One Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMass_2JetReq = new TH1F("ggInvarMass_2JetReq","gg Invariant Mass with Two Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gammafakeInvarMass_2JetReq = new TH1F("gammafakeInvarMass_2JetReq","gammafake Invariant Mass with Two Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_fgInvarMass_2JetReq = new TH1F("fgInvarMass_2JetReq","fg Invariant Mass with Two Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_gfInvarMass_2JetReq = new TH1F("gfInvarMass_2JetReq","gf Invariant Mass with Two Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_egInvarMass_2JetReq = new TH1F("egInvarMass_2JetReq","eg Invariant Mass with Two Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMass_2JetReq = new TH1F("eeInvarMass_2JetReq","ee Invariant Mass for 81<InvarMass<101 with Two Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_eeInvarMassFullRange_2JetReq = new TH1F("eeInvarMassFullRange_2JetReq","ee Invariant Mass for all InvarMass with Two Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ffInvarMass_2JetReq = new TH1F("ffInvarMass_2JetReq","ff Invariant Mass with Two Jet Requirement;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggInvarMass_METlt40 = new TH1F("ggInvarMass_METlt40","gg Invariant Mass, MET<40;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ffInvarMass_METlt40 = new TH1F("ffInvarMass_METlt40","ff Invariant Mass, MET<40;(GeV);Events", 2004,0.,1002.);

  TH1F* h_ggPtOverInvarMassLead = new TH1F("ggPtOverInvarMassLead",";p_{T}/m_{#gamma#gamma};Events", 2000,0.,20.);
  TH1F* h_ggPtOverInvarMassTrail = new TH1F("ggPtOverInvarMassTrail",";p_{T}/m_{#gamma#gamma};Events", 2000,0.,20.);
  TH1F* h_eePtOverInvarMassLead = new TH1F("eePtOverInvarMassLead",";p_{T}/m_{#gamma#gamma};Events", 2000,0.,20.);
  TH1F* h_eePtOverInvarMassTrail = new TH1F("eePtOverInvarMassTrail",";p_{T}/m_{#gamma#gamma};Events", 2000,0.,20.);
  TH1F* h_ffPtOverInvarMassLead = new TH1F("ffPtOverInvarMassLead",";p_{T}/m_{#gamma#gamma};Events", 2000,0.,20.);
  TH1F* h_ffPtOverInvarMassTrail = new TH1F("ffPtOverInvarMassTrail",";p_{T}/m_{#gamma#gamma};Events", 2000,0.,20.);
  TH1F* h_gammafakePtOverInvarMassLead = new TH1F("gammafakePtOverInvarMassLead",";p_{T}/m_{#gamma#gamma};Events", 2000,0.,20.);
  TH1F* h_gammafakePtOverInvarMassTrail = new TH1F("gammafakePtOverInvarMassTrail",";p_{T}/m_{#gamma#gamma};Events", 2000,0.,20.);

  TH1F* h_SigIetaIeta_allPho = new TH1F("SigIetaIeta_allPho","SigmaIetaIeta for all photons;#sigma_{i#etai#eta};Events", 100,0.,.1);

  TH1F* h_EcalIsoDR03_allPho = new TH1F("EcalIsoDR03_allPho","Ecal Isolation in DR03 cone for all photons",150,-5,25);
  TH1F* h_HcalIsoDR03_allPho = new TH1F("HcalIsoDR03_allPho","Hcal Isolation in DR03 cone for all photons",150,-5,25);
  TH1F* h_TrackIsoDR03_allPho = new TH1F("TrackIsoDR03_allPho","Track Isolation in DR03 cone for all photons",150,-5,25);
  TH1F* h_CombIsoDR03_allPho = new TH1F("CombIsoDR03_allPho","Combined Isolation in DR03 cone for all photons",600,-5,100);
  TH1F* h_EcalIsoDR03RhoCorr_allPho = new TH1F("EcalIsoDR03RhoCorr_allPho","RhoCorrected Ecal Isolation in DR03 cone for all photons",150,-5,25);
  TH1F* h_HcalIsoDR03RhoCorr_allPho = new TH1F("HcalIsoDR03RhoCorr_allPho","RhoCorrected Hcal Isolation in DR03 cone for all photons",150,-5,25);
  TH1F* h_CombIsoDR03RhoCorr_allPho = new TH1F("CombIsoDR03RhoCorr_allPho","RhoCorrected Combined Isolation in DR03 cone for all photons",600,-5,100);

  //TH1F* h_SigIetaIeta_twoPho = new TH1F("SigIetaIeta_twoPho","SigmaIetaIeta for two highest p_{T} photons;#sigma_{i#etai#eta};Events", 100,0.,.1);
  TH1I* h_PixelSeeds = new TH1I("PixelSeeds","Number of pixel seeds for photon candidate after ecal iso, hcal iso, h/e",150,0,150);
  TH1I* h_eePixelSeeds = new TH1I("eePixelSeeds","Number of pixel seeds for ee sample",150,0,150);
  TH1I* h_egPixelSeeds = new TH1I("egPixelSeeds","Number of pixel seeds for eg sample",150,0,150);
  //TH1I* h_ffPixelSeeds = new TH1I("ffPixelSeeds","Number of pixel seeds for ff sample",150,0,150);
  TH1I* h_PixelSeeds_JetReq = new TH1I("PixelSeeds_JetReq","Number of pixel seeds for photon candidate after ecal iso, hcal iso, h/e with One Jet Requirement",150,0,150);
  TH1I* h_eePixelSeeds_JetReq = new TH1I("eePixelSeeds_JetReq","Number of pixel seeds for ee sample with One Jet Requirement",150,0,150);
  TH1I* h_egPixelSeeds_JetReq = new TH1I("egPixelSeeds_JetReq","Number of pixel seeds for eg sample with One Jet Requirement",150,0,150);
  TH1I* h_eePixelSeeds_2JetReq = new TH1I("eePixelSeeds_2JetReq","Number of pixel seeds for ee sample with Two Jet Requirement",150,0,150);
  TH1I* h_egPixelSeeds_2JetReq = new TH1I("egPixelSeeds_2JetReq","Number of pixel seeds for eg sample with Two Jet Requirement",150,0,150);
  //TH1I* h_ffPixelSeeds_JetReq = new TH1I("ffPixelSeeds_JetReq","Number of pixel seeds for ff sample with One Jet Requirement",150,0,150);
  TH1F* h_ggSigIetaIeta = new TH1F("ggSigIetaIeta","gg SigmaIetaIeta;#sigma_{i#etai#eta};Events", 30,0.,.03);
  TH1F* h_egSigIetaIeta = new TH1F("egSigIetaIeta","eg SigmaIetaIeta;#sigma_{i#etai#eta};Events", 30,0.,.03);
  TH1F* h_eeSigIetaIeta = new TH1F("eeSigIetaIeta","ee SigmaIetaIeta;#sigma_{i#etai#eta};Events", 30,0.,.03);
  TH1F* h_ffSigIetaIeta = new TH1F("ffSigIetaIeta","ff SigmaIetaIeta;#sigma_{i#etai#eta};Events", 30,0.,.03);
  TH2F* h_ffSigIetaIeta_vs_Met_lead = new TH2F("ffSigIetaIeta_vs_Met_lead","ff SigmaIetaIeta;E_{T}^{miss};#sigma_{i#etai#eta}",200,0.,1000.,30,0.,.03);
  TH2F* h_ffSigIetaIeta_vs_Met_lead_CaloIso_CaloIso_Only = new TH2F("ffSigIetaIeta_vs_Met_lead_CaloIso_CaloIso_Only","ff SigmaIetaIeta;E_{T}^{miss};#sigma_{i#etai#eta}",200,0.,1000.,30,0.,.03);
  TH2F* h_ffSigIetaIeta_vs_Met_lead_CaloIso_R9Id_Only = new TH2F("ffSigIetaIeta_vs_Met_lead_CaloIso_R9Id_Only","ff SigmaIetaIeta;E_{T}^{miss};#sigma_{i#etai#eta}",200,0.,1000.,30,0.,.03);
  TH2F* h_ffSigIetaIeta_vs_Met_lead_R9Id_CaloIso_Only = new TH2F("ffSigIetaIeta_vs_Met_lead_R9Id_CaloIso_Only","ff SigmaIetaIeta;E_{T}^{miss};#sigma_{i#etai#eta}",200,0.,1000.,30,0.,.03);
  TH2F* h_ffSigIetaIeta_vs_Met_lead_R9Id_R9Id_Only = new TH2F("ffSigIetaIeta_vs_Met_lead_R9Id_R9Id_Only","ff SigmaIetaIeta;E_{T}^{miss};#sigma_{i#etai#eta}",200,0.,1000.,30,0.,.03);
  TH2F* h_ffSigIetaIeta_vs_Met_trail = new TH2F("ffSigIetaIeta_vs_Met_trail","ff SigmaIetaIeta;E_{T}^{miss};#sigma_{i#etai#eta}",200,0.,1000.,30,0.,.03);
  TH2F* h_ffSigIetaIeta_vs_Met_trail_CaloIso_CaloIso_Only = new TH2F("ffSigIetaIeta_vs_Met_trail_CaloIso_CaloIso_Only","ff SigmaIetaIeta;E_{T}^{miss};#sigma_{i#etai#eta}",200,0.,1000.,30,0.,.03);
  TH2F* h_ffSigIetaIeta_vs_Met_trail_CaloIso_R9Id_Only = new TH2F("ffSigIetaIeta_vs_Met_trail_CaloIso_R9Id_Only","ff SigmaIetaIeta;E_{T}^{miss};#sigma_{i#etai#eta}",200,0.,1000.,30,0.,.03);
  TH2F* h_ffSigIetaIeta_vs_Met_trail_R9Id_CaloIso_Only = new TH2F("ffSigIetaIeta_vs_Met_trail_R9Id_CaloIso_Only","ff SigmaIetaIeta;E_{T}^{miss};#sigma_{i#etai#eta}",200,0.,1000.,30,0.,.03);
  TH2F* h_ffSigIetaIeta_vs_Met_trail_R9Id_R9Id_Only = new TH2F("ffSigIetaIeta_vs_Met_trail_R9Id_R9Id_Only","ff SigmaIetaIeta;E_{T}^{miss};#sigma_{i#etai#eta}",200,0.,1000.,30,0.,.03);
  TH3F* h_ffSigIetaIeta_1v2_vs_Met = new TH3F("ffSigIetaIeta_1v2_vs_Met","ff SigmaIetaIeta;#sigma_{i#etai#eta};Events",30,0.,.03,30,0.,.03,200,0.,1000.);
  TH3F* h_ffSigIetaIeta_1v2_vs_Met_CaloIso_CaloIso_Only = new TH3F("ffSigIetaIeta_1v2_vs_Met_CaloIso_CaloIso_Only","ff SigmaIetaIeta;#sigma_{i#etai#eta};Events",30,0.,.03,30,0.,.03,200,0.,1000.);
  TH3F* h_ffSigIetaIeta_1v2_vs_Met_CaloIso_R9Id_Only = new TH3F("ffSigIetaIeta_1v2_vs_Met_CaloIso_R9Id_Only","ff SigmaIetaIeta;#sigma_{i#etai#eta};Events",30,0.,.03,30,0.,.03,200,0.,1000.);
  TH3F* h_ffSigIetaIeta_1v2_vs_Met_R9Id_CaloIso_Only = new TH3F("ffSigIetaIeta_1v2_vs_Met_R9Id_CaloIso_Only","ff SigmaIetaIeta;#sigma_{i#etai#eta};Events",30,0.,.03,30,0.,.03,200,0.,1000.);
  TH3F* h_ffSigIetaIeta_1v2_vs_Met_R9Id_R9Id_Only = new TH3F("ffSigIetaIeta_1v2_vs_Met_R9Id_R9Id_Only","ff SigmaIetaIeta;#sigma_{i#etai#eta};Events",30,0.,.03,30,0.,.03,200,0.,1000.);
  TH2F* h_gg_1v2_SigIetaIeta = new TH2F("gg_1v2_SigIetaIeta","gg SigmaIetaIeta, Pho2 vs Pho1;Pho1 #sigma_{i#etai#eta};Pho2 #sigma_{i#etai#eta}",30,0.,.03,30,0.,.03);
  TH2F* h_eg_1v2_SigIetaIeta = new TH2F("eg_1v2_SigIetaIeta","eg SigmaIetaIeta, Pho2 vs Pho1;Pho1 #sigma_{i#etai#eta};Pho2 #sigma_{i#etai#eta}",30,0.,.03,30,0.,.03);
  TH2F* h_ee_1v2_SigIetaIeta = new TH2F("ee_1v2_SigIetaIeta","ee SigmaIetaIeta, Pho2 vs Pho1;Pho1 #sigma_{i#etai#eta};Pho2 #sigma_{i#etai#eta}",30,0.,.03,30,0.,.03);
  TH2F* h_ff_1v2_SigIetaIeta = new TH2F("ff_1v2_SigIetaIeta","ff SigmaIetaIeta, Pho2 vs Pho1;Pho1 #sigma_{i#etai#eta};Pho2 #sigma_{i#etai#eta}",30,0.,.03,30,0.,.03);
  TH2F* h_gf_1v2_SigIetaIeta = new TH2F("gf_1v2_SigIetaIeta","gf SigmaIetaIeta, Pho2 vs Pho1;Pho1 #sigma_{i#etai#eta};Pho2 #sigma_{i#etai#eta}",30,0.,.03,30,0.,.03);
  TH2F* h_gg_1v2_ChargedHadronIso = new TH2F("gg_1v2_ChargedHadronIso","gg chargedHadronIso, Pho2 vs Pho1;Pho1 chargedHadronIso;Pho2 chargedHadronIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_eg_1v2_ChargedHadronIso = new TH2F("eg_1v2_ChargedHadronIso","eg chargedHadronIso, Pho2 vs Pho1;Pho1 chargedHadronIso;Pho2 chargedHadronIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_ee_1v2_ChargedHadronIso = new TH2F("ee_1v2_ChargedHadronIso","ee chargedHadronIso, Pho2 vs Pho1;Pho1 chargedHadronIso;Pho2 chargedHadronIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_ff_1v2_ChargedHadronIso = new TH2F("ff_1v2_ChargedHadronIso","ff chargedHadronIso, Pho2 vs Pho1;Pho1 chargedHadronIso;Pho2 chargedHadronIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_gf_1v2_ChargedHadronIso = new TH2F("gf_1v2_ChargedHadronIso","gf chargedHadronIso, Pho2 vs Pho1;Pho1 chargedHadronIso;Pho2 chargedHadronIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_gg_1v2_NeutralHadronIso = new TH2F("gg_1v2_NeutralHadronIso","gg neutralHadronIso, Pho2 vs Pho1;Pho1 neutralHadronIso;Pho2 neutralHadronIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_eg_1v2_NeutralHadronIso = new TH2F("eg_1v2_NeutralHadronIso","eg neutralHadronIso, Pho2 vs Pho1;Pho1 neutralHadronIso;Pho2 neutralHadronIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_ee_1v2_NeutralHadronIso = new TH2F("ee_1v2_NeutralHadronIso","ee neutralHadronIso, Pho2 vs Pho1;Pho1 neutralHadronIso;Pho2 neutralHadronIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_ff_1v2_NeutralHadronIso = new TH2F("ff_1v2_NeutralHadronIso","ff neutralHadronIso, Pho2 vs Pho1;Pho1 neutralHadronIso;Pho2 neutralHadronIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_gf_1v2_NeutralHadronIso = new TH2F("gf_1v2_NeutralHadronIso","gf neutralHadronIso, Pho2 vs Pho1;Pho1 neutralHadronIso;Pho2 neutralHadronIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_gg_1v2_PhotonIso = new TH2F("gg_1v2_PhotonIso","gg photonIso, Pho2 vs Pho1;Pho1 photonIso;Pho2 photonIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_eg_1v2_PhotonIso = new TH2F("eg_1v2_PhotonIso","eg photonIso, Pho2 vs Pho1;Pho1 photonIso;Pho2 photonIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_ee_1v2_PhotonIso = new TH2F("ee_1v2_PhotonIso","ee photonIso, Pho2 vs Pho1;Pho1 photonIso;Pho2 photonIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_ff_1v2_PhotonIso = new TH2F("ff_1v2_PhotonIso","ff photonIso, Pho2 vs Pho1;Pho1 photonIso;Pho2 photonIso",550,-10.,100.,550,-10.,100.);
  TH2F* h_gf_1v2_PhotonIso = new TH2F("gf_1v2_PhotonIso","gf photonIso, Pho2 vs Pho1;Pho1 photonIso;Pho2 photonIso",550,-10.,100.,550,-10.,100.);
  TH1F* h_ggMet = new TH1F("ggMet","Missing transverse energy in events with two photons with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggReduMet = new TH1F("ggReduMet",";Reduced E_{T}^{miss} (GeV);Events",200,0.,1000.);
  TH1F* h_ffReduMet = new TH1F("ffReduMet",";Reduced E_{T}^{miss} (GeV);Events",200,0.,1000.);
  TH1F* h_gfReduMet = new TH1F("gfReduMet",";Reduced E_{T}^{miss} (GeV);Events",200,0.,1000.);
  TH2F* h_ggReduMetVsDiEmPt = new TH2F("ggReduMetVsDiEmPt",";DiEMPt;Reduced E_{T}^{miss} (GeV)",400,0,1000,200,0.,1000.);
  TH2F* h_ffReduMetVsDiEmPt = new TH2F("ffReduMetVsDiEmPt",";DiEMPt;Reduced E_{T}^{miss} (GeV)",400,0,1000,200,0.,1000.);
  TH2F* h_gfReduMetVsDiEmPt = new TH2F("gfReduMetVsDiEmPt",";DiEMPt;Reduced E_{T}^{miss} (GeV)",400,0,1000,200,0.,1000.);
  TH2F* h_ggReduMetVsDiEmPt_0Jet = new TH2F("ggReduMetVsDiEmPt_0Jet",";DiEMPt;Reduced E_{T}^{miss} (GeV)",400,0,1000,200,0.,1000.);
  TH2F* h_ffReduMetVsDiEmPt_0Jet = new TH2F("ffReduMetVsDiEmPt_0Jet",";DiEMPt;Reduced E_{T}^{miss} (GeV)",400,0,1000,200,0.,1000.);
  TH2F* h_gfReduMetVsDiEmPt_0Jet = new TH2F("gfReduMetVsDiEmPt_0Jet",";DiEMPt;Reduced E_{T}^{miss} (GeV)",400,0,1000,200,0.,1000.);
  TH2F* h_ggReduMetVsDiEmPt_1Jet = new TH2F("ggReduMetVsDiEmPt_1Jet",";DiEMPt;Reduced E_{T}^{miss} (GeV)",400,0,1000,200,0.,1000.);
  TH2F* h_ffReduMetVsDiEmPt_1Jet = new TH2F("ffReduMetVsDiEmPt_1Jet",";DiEMPt;Reduced E_{T}^{miss} (GeV)",400,0,1000,200,0.,1000.);
  TH2F* h_gfReduMetVsDiEmPt_1Jet = new TH2F("gfReduMetVsDiEmPt_1Jet",";DiEMPt;Reduced E_{T}^{miss} (GeV)",400,0,1000,200,0.,1000.);
  TH2F* h_ggReduMetVsDiEmPt_2Jet = new TH2F("ggReduMetVsDiEmPt_2Jet",";DiEMPt;Reduced E_{T}^{miss} (GeV)",400,0,1000,200,0.,1000.);
  TH2F* h_ffReduMetVsDiEmPt_2Jet = new TH2F("ffReduMetVsDiEmPt_2Jet",";DiEMPt;Reduced E_{T}^{miss} (GeV)",400,0,1000,200,0.,1000.);
  TH2F* h_gfReduMetVsDiEmPt_2Jet = new TH2F("gfReduMetVsDiEmPt_2Jet",";DiEMPt;Reduced E_{T}^{miss} (GeV)",400,0,1000,200,0.,1000.);
  TH1F* h_ggMetSig = new TH1F("ggMetSig",";Met Significance;Events",200,0.,500.);
  TH1F* h_ffMetSig = new TH1F("ffMetSig",";Met Significance;Events",200,0.,500.);
  TH1F* h_gfMetSig = new TH1F("gfMetSig",";Met Significance;Events",200,0.,500.);
  TH2F* h_ggMetSigVsSumEt = new TH2F("ggMetSigVsSumEt",";#sumE_{T};Met Significance",500,0.,5000.,200,0.,500.);
  TH2F* h_ffMetSigVsSumEt = new TH2F("ffMetSigVsSumEt",";#sumE_{T};Met Significance",500,0.,5000.,200,0.,500.);
  TH2F* h_gfMetSigVsSumEt = new TH2F("gfMetSigVsSumEt",";#sumE_{T};Met Significance",500,0.,5000.,200,0.,500.);
  TH1F* h_ggMHT = new TH1F("ggMHT","Missing HT in gg events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_ggMHT->Sumw2();
  TH1F* h_egMHT = new TH1F("egMHT","Missing HT in eg events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_egMHT->Sumw2();
  TH1F* h_eeMHT = new TH1F("eeMHT","Missing HT in ee events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_eeMHT->Sumw2();
  TH1F* h_ffMHT = new TH1F("ffMHT","Missing HT in ff events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_ffMHT->Sumw2();
  TH1F* h_ffMHT_reweight = new TH1F("ffMHT_reweight","Missing HT in ff events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_ffMHT_reweight->Sumw2();
  TH1F* h_fgMHT_reweight = new TH1F("fgMHT_reweight","Missing HT in fg events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_fgMHT_reweight->Sumw2();
  TH1F* h_gfMHT_reweight = new TH1F("gfMHT_reweight","Missing HT in gf events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_gfMHT_reweight->Sumw2();
  TH1F* h_gammafakeMHT_reweight = new TH1F("gammafakeMHT_reweight","Missing HT in gammafake events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_gammafakeMHT_reweight->Sumw2();
  TH1F* h_ffMHT_reweight_JetReq = new TH1F("ffMHT_reweight_JetReq","Missing HT in ff events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_ffMHT_reweight_JetReq->Sumw2();
  TH1F* h_fgMHT_reweight_JetReq = new TH1F("fgMHT_reweight_JetReq","Missing HT in fg events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_fgMHT_reweight_JetReq->Sumw2();
  TH1F* h_gfMHT_reweight_JetReq = new TH1F("gfMHT_reweight_JetReq","Missing HT in gf events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_gfMHT_reweight_JetReq->Sumw2();
  TH1F* h_gammafakeMHT_reweight_JetReq = new TH1F("gammafakeMHT_reweight_JetReq","Missing HT in gammafake events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_gammafakeMHT_reweight_JetReq->Sumw2();
  TH1F* h_ffMHT_reweight_2JetReq = new TH1F("ffMHT_reweight_2JetReq","Missing HT in ff events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_ffMHT_reweight_2JetReq->Sumw2();
  TH1F* h_fgMHT_reweight_2JetReq = new TH1F("fgMHT_reweight_2JetReq","Missing HT in fg events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_fgMHT_reweight_2JetReq->Sumw2();
  TH1F* h_gfMHT_reweight_2JetReq = new TH1F("gfMHT_reweight_2JetReq","Missing HT in gf events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_gfMHT_reweight_2JetReq->Sumw2();
  TH1F* h_gammafakeMHT_reweight_2JetReq = new TH1F("gammafakeMHT_reweight_2JetReq","Missing HT in gammafake events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_gammafakeMHT_reweight_2JetReq->Sumw2();
  TH1F* h_gfMHT = new TH1F("gfMHT","Missing HT in gf events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_gfMHT->Sumw2();
  TH1F* h_fgMHT = new TH1F("fgMHT","Missing HT in fg events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_fgMHT->Sumw2();
  TH1F* h_gammafakeMHT = new TH1F("gammafakeMHT","Missing HT in gammafake events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_gammafakeMHT->Sumw2();
  TH1F* h_ggMHT_JetReq = new TH1F("ggMHT_JetReq","Missing HT in gg_JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_ggMHT_JetReq->Sumw2();
  TH1F* h_egMHT_JetReq = new TH1F("egMHT_JetReq","Missing HT in eg_JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_egMHT_JetReq->Sumw2();
  TH1F* h_eeMHT_JetReq = new TH1F("eeMHT_JetReq","Missing HT in ee_JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_eeMHT_JetReq->Sumw2();
  TH1F* h_ffMHT_JetReq = new TH1F("ffMHT_JetReq","Missing HT in ff_JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_ffMHT_JetReq->Sumw2();
  TH1F* h_gfMHT_JetReq = new TH1F("gfMHT_JetReq","Missing HT in gf_JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_gfMHT_JetReq->Sumw2();
  TH1F* h_fgMHT_JetReq = new TH1F("fgMHT_JetReq","Missing HT in fg_JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_fgMHT_JetReq->Sumw2();
  TH1F* h_gammafakeMHT_JetReq = new TH1F("gammafakeMHT_JetReq","Missing HT in gammafake_JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_gammafakeMHT_JetReq->Sumw2();
  TH1F* h_ggMHT_2JetReq = new TH1F("ggMHT_2JetReq","Missing HT in gg_2JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_ggMHT_2JetReq->Sumw2();
  TH1F* h_egMHT_2JetReq = new TH1F("egMHT_2JetReq","Missing HT in eg_2JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_egMHT_2JetReq->Sumw2();
  TH1F* h_eeMHT_2JetReq = new TH1F("eeMHT_2JetReq","Missing HT in ee_2JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_eeMHT_2JetReq->Sumw2();
  TH1F* h_ffMHT_2JetReq = new TH1F("ffMHT_2JetReq","Missing HT in ff_2JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_ffMHT_2JetReq->Sumw2();
  TH1F* h_gfMHT_2JetReq = new TH1F("gfMHT_2JetReq","Missing HT in gf_2JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_gfMHT_2JetReq->Sumw2();
  TH1F* h_fgMHT_2JetReq = new TH1F("fgMHT_2JetReq","Missing HT in fg_2JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_fgMHT_2JetReq->Sumw2();
  TH1F* h_gammafakeMHT_2JetReq = new TH1F("gammafakeMHT_2JetReq","Missing HT in gammafake_2JetReq events;#slash{H}_{T} (GeV);Events",200,0.,1000.);h_gammafakeMHT_2JetReq->Sumw2();
  TH1F* h_ggType1CorrMet = new TH1F("ggType1CorrMet","Type 1 corrected missing transverse energy in events with two photons with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffType1CorrMet = new TH1F("ffType1CorrMet","Type 1 corrected missing transverse energy in events with two fake photons with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egType1CorrMet = new TH1F("egType1CorrMet","Type 1 corrected missing transverse energy in events with one photon and one electron with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_MetDirectEWK = new TH1F("MetDirectEWK","Missing transverse energy in events coming from Direct EWK production;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetDirectEWK = new TH1F("ggMetDirectEWK","Missing transverse energy in gg events coming from Direct EWK production;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetDirectEWK_JetReq = new TH1F("ggMetDirectEWK_JetReq","Missing transverse energy in ggJetReq events coming from Direct EWK production;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_DirectEWK_ggMom = new TH1F("DirectEWK_ggMom","Mother pdgId of photons in gg from direct EWK",51,-25.5,25.5);

  TH1F* h_gammafakeMet = new TH1F("gammafakeMet","Missing transverse energy in events with one photon and one fake with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMet = new TH1F("fgMet","Missing transverse energy in events with one photon and one fake with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMet = new TH1F("gfMet","Missing transverse energy in events with one photon and one fake with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet = new TH1F("egMet","Missing transverse energy in events with one photon and one electron with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_reweight_Pt = new TH1F("egMet_reweight_Pt","Missing transverse energy in eg events with p_{T} dep. fake rate reweighting;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_reweight_Eta = new TH1F("egMet_reweight_Eta","Missing transverse energy in eg events with #eta dep. fake rate reweighting;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_reweight_Nvtx = new TH1F("egMet_reweight_Nvtx","Missing transverse energy in eg events with nVertex dep. fake rate reweighting;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_reweight_Pt_Nvtx_Eta = new TH1F("egMet_reweight_Pt_Nvtx_Eta","Missing transverse energy in eg events with p_{T} and nVertex and #eta dep. fake rate reweighting;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  h_egMet_reweight_Pt->Sumw2();h_egMet_reweight_Nvtx->Sumw2();h_egMet_reweight_Eta->Sumw2();h_egMet_reweight_Pt_Nvtx_Eta->Sumw2();
  TH1F* h_egMet_reweight_Pt_JetReq = new TH1F("egMet_reweight_Pt_JetReq","Missing transverse energy in eg_JetReq events with p_{T} dep. fake rate reweighting;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_reweight_Eta_JetReq = new TH1F("egMet_reweight_Eta_JetReq","Missing transverse energy in eg_JetReq events with #eta dep. fake rate reweighting;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_reweight_Nvtx_JetReq = new TH1F("egMet_reweight_Nvtx_JetReq","Missing transverse energy in eg_JetReq events with nVertex dep. fake rate reweighting;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_reweight_Pt_Nvtx_Eta_JetReq = new TH1F("egMet_reweight_Pt_Nvtx_Eta_JetReq","Missing transverse energy in eg_JetReq events with p_{T} and nVertex and #eta dep. fake rate reweighting;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  h_egMet_reweight_Pt_JetReq->Sumw2();h_egMet_reweight_Nvtx_JetReq->Sumw2();h_egMet_reweight_Eta_JetReq->Sumw2();h_egMet_reweight_Pt_Nvtx_Eta_JetReq->Sumw2();
  TH1F* h_egMet_reweight_Pt_2JetReq = new TH1F("egMet_reweight_Pt_2JetReq","Missing transverse energy in eg_2JetReq events with p_{T} dep. fake rate reweighting;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_reweight_Eta_2JetReq = new TH1F("egMet_reweight_Eta_2JetReq","Missing transverse energy in eg_2JetReq events with #eta dep. fake rate reweighting;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_reweight_Nvtx_2JetReq = new TH1F("egMet_reweight_Nvtx_2JetReq","Missing transverse energy in eg_2JetReq events with nVertex dep. fake rate reweighting;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_reweight_Pt_Nvtx_Eta_2JetReq = new TH1F("egMet_reweight_Pt_Nvtx_Eta_2JetReq","Missing transverse energy in eg_2JetReq events with p_{T} and nVertex and #eta dep. fake rate reweighting;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  h_egMet_reweight_Pt_2JetReq->Sumw2();h_egMet_reweight_Nvtx_2JetReq->Sumw2();h_egMet_reweight_Eta_2JetReq->Sumw2();h_egMet_reweight_Pt_Nvtx_Eta_2JetReq->Sumw2();
  TH1F* h_eeMet = new TH1F("eeMet","Missing transverse energy in events with two electrons with Et>40,25 GeV and 81<InvMass<101;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMetFullRange = new TH1F("eeMetFullRange","Missing transverse energy in events with two electrons with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMet_JetFail = new TH1F("ggMet_JetFail","Missing transverse energy in gg events that have a 50GeV pfJet failing loose jet id;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_JetFail = new TH1F("egMet_JetFail","Missing transverse energy in eg events that have a 50GeV pfJet failing loose jet id;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_JetFail = new TH1F("eeMet_JetFail","Missing transverse energy in ee events that have a 50GeV pfJet failing loose jet id;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_JetFail = new TH1F("ffMet_JetFail","Missing transverse energy in ff events that have a 50GeV pfJet failing loose jet id;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSideBandMet = new TH1F("eeSideBandMet","Missing transverse energy in events with two electrons in sideband with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet = new TH1F("ffMet","Missing transverse energy in events with two fake photons with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_CaloIso_CaloIso = new TH1F("ffMet_CaloIso_CaloIso",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_CaloIso_R9Id = new TH1F("ffMet_CaloIso_R9Id",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_R9Id_CaloIso = new TH1F("ffMet_R9Id_CaloIso",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_R9Id_R9Id = new TH1F("ffMet_R9Id_R9Id",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_CaloIso_CaloIso_Only = new TH1F("ffMet_CaloIso_CaloIso_Only",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_CaloIso_R9Id_Only = new TH1F("ffMet_CaloIso_R9Id_Only",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_R9Id_CaloIso_Only = new TH1F("ffMet_R9Id_CaloIso_Only",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_R9Id_R9Id_Only = new TH1F("ffMet_R9Id_R9Id_Only",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_CaloIso_CaloIso_reweightJet_binned = new TH1F("ffMet_CaloIso_CaloIso_reweightJet_binned",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_CaloIso_R9Id_reweightJet_binned = new TH1F("ffMet_CaloIso_R9Id_reweightJet_binned",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_R9Id_CaloIso_reweightJet_binned = new TH1F("ffMet_R9Id_CaloIso_reweightJet_binned",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_R9Id_R9Id_reweightJet_binned = new TH1F("ffMet_R9Id_R9Id_reweightJet_binned",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_CaloIso_CaloIso = new TH1F("gammafakeMet_CaloIso_CaloIso",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_CaloIso_R9Id = new TH1F("gammafakeMet_CaloIso_R9Id",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_R9Id_CaloIso = new TH1F("gammafakeMet_R9Id_CaloIso",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_R9Id_R9Id = new TH1F("gammafakeMet_R9Id_R9Id",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_CaloIso_CaloIso_reweightJet_binned = new TH1F("gammafakeMet_CaloIso_CaloIso_reweightJet_binned",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_CaloIso_R9Id_reweightJet_binned = new TH1F("gammafakeMet_CaloIso_R9Id_reweightJet_binned",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_R9Id_CaloIso_reweightJet_binned = new TH1F("gammafakeMet_R9Id_CaloIso_reweightJet_binned",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_R9Id_R9Id_reweightJet_binned = new TH1F("gammafakeMet_R9Id_R9Id_reweightJet_binned",";#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_reweightNVertex = new TH1F("ffMet_reweightNVertex","Missing transverse energy in events with two fake photons reweighted to match gg NVertex spectrum with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_reweightNVertex = new TH1F("gammafakeMet_reweightNVertex","Missing transverse energy in events with one photon and one fake photon reweighted to match gg NVertex spectrum with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMet_reweightNVertex = new TH1F("fgMet_reweightNVertex","Missing transverse energy in events with one photon and one fake photon reweighted to match gg NVertex spectrum with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMet_reweightNVertex = new TH1F("gfMet_reweightNVertex","Missing transverse energy in events with one photon and one fake photon reweighted to match gg NVertex spectrum with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_reweightNVertex = new TH1F("egMet_reweightNVertex","Missing transverse energy in events with one photon and one electron reweighted to match gg NVertex spectrum with Et>40,25 GeV;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMet_METlt40 = new TH1F("ggMet_METlt40","Missing transverse energy in events with two photons with Et>40,25 GeV, met<40;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_METlt40 = new TH1F("ffMet_METlt40","Missing transverse energy in events with two fake photons with Et>40,25 GeV, met<40;#slash{E}_{T} (GeV);Events",200,0.,1000.);

  TH1F* h_ggMetMT = new TH1F("ggMetMT","Transverse Mass of gg diPho and MET in events with two photons with Et>40,25 GeV;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetMT = new TH1F("gammafakeMetMT","Transverse Mass of gammafake diPho and MET in events with two photons with Et>40,25 GeV;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetMT = new TH1F("fgMetMT","Transverse Mass of fg diPho and MET in events with two photons with Et>40,25 GeV;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetMT = new TH1F("gfMetMT","Transverse Mass of gf diPho and MET in events with two photons with Et>40,25 GeV;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMetMT = new TH1F("eeMetMT","Transverse Mass of di-ee system and MET in events with two electrons with Et>40,25 GeV;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetMT_MET30 = new TH1F("ggMetMT_MET30","Transverse Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>30;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetMT_MET40 = new TH1F("ggMetMT_MET40","Transverse Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>40;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetMT_MET50 = new TH1F("ggMetMT_MET50","Transverse Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>50;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetMT_MET60 = new TH1F("ggMetMT_MET60","Transverse Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>60;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetMT_MET70 = new TH1F("ggMetMT_MET70","Transverse Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>70;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetMT_MET80 = new TH1F("ggMetMT_MET80","Transverse Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>80;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetMT_MET100 = new TH1F("ggMetMT_MET100","Transverse Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>100;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetMT_95_InvMass_110 = new TH1F("ggMetMT_95_InvMass_110","Transverse Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and 85<InvMass<110;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetMT_120_InvMass_130 = new TH1F("ggMetMT_120_InvMass_130","Transverse Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetMT_123_InvMass_128 = new TH1F("ggMetMT_123_InvMass_128","Transverse Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetMT_135_InvMass_160 = new TH1F("ggMetMT_135_InvMass_160","Transverse Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and 135<InvMass<160;M_{T} (GeV);Events",200,0.,1000.);

  TH1F* h_ggMetInvarMass = new TH1F("ggMetInvarMass","Invariant Mass of gg diPho and MET in events with two photons with Et>40,25 GeV;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMetInvarMass = new TH1F("eeMetInvarMass","Invariant Mass of di-ee system and MET in events with two electrons with Et>40,25 GeV;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetInvarMass_MET30 = new TH1F("ggMetInvarMass_MET30","Invariant Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>30;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetInvarMass_MET40 = new TH1F("ggMetInvarMass_MET40","Invariant Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>40;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetInvarMass_MET50 = new TH1F("ggMetInvarMass_MET50","Invariant Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>50;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetInvarMass_MET60 = new TH1F("ggMetInvarMass_MET60","Invariant Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>60;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetInvarMass_MET70 = new TH1F("ggMetInvarMass_MET70","Invariant Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>70;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetInvarMass_MET80 = new TH1F("ggMetInvarMass_MET80","Invariant Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>80;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetInvarMass_MET100 = new TH1F("ggMetInvarMass_MET100","Invariant Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and MET>100;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetInvarMass_95_InvMass_110 = new TH1F("ggMetInvarMass_95_InvMass_110","Invariant Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and 85<InvMass<110;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetInvarMass_120_InvMass_130 = new TH1F("ggMetInvarMass_120_InvMass_130","Invariant Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetInvarMass_123_InvMass_128 = new TH1F("ggMetInvarMass_123_InvMass_128","Invariant Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMetInvarMass_135_InvMass_160 = new TH1F("ggMetInvarMass_135_InvMass_160","Invariant Mass of gg diPho and MET in events with two photons with Et>40,25 GeV and 135<InvMass<160;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetMT_MET30 = new TH1F("gammafakeMetMT_MET30","Transverse Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>30;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetMT_MET40 = new TH1F("gammafakeMetMT_MET40","Transverse Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>40;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetMT_MET50 = new TH1F("gammafakeMetMT_MET50","Transverse Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>50;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetMT_MET60 = new TH1F("gammafakeMetMT_MET60","Transverse Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>60;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetMT_MET70 = new TH1F("gammafakeMetMT_MET70","Transverse Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>70;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetMT_MET80 = new TH1F("gammafakeMetMT_MET80","Transverse Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>80;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetMT_MET100 = new TH1F("gammafakeMetMT_MET100","Transverse Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>100;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetMT_95_InvMass_110 = new TH1F("gammafakeMetMT_95_InvMass_110","Transverse Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and 85<InvMass<110;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetMT_120_InvMass_130 = new TH1F("gammafakeMetMT_120_InvMass_130","Transverse Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetMT_123_InvMass_128 = new TH1F("gammafakeMetMT_123_InvMass_128","Transverse Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetMT_135_InvMass_160 = new TH1F("gammafakeMetMT_135_InvMass_160","Transverse Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and 135<InvMass<160;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetInvarMass = new TH1F("gammafakeMetInvarMass","Invariant Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetInvarMass_MET30 = new TH1F("gammafakeMetInvarMass_MET30","Invariant Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>30;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetInvarMass_MET40 = new TH1F("gammafakeMetInvarMass_MET40","Invariant Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>40;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetInvarMass_MET50 = new TH1F("gammafakeMetInvarMass_MET50","Invariant Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>50;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetInvarMass_MET60 = new TH1F("gammafakeMetInvarMass_MET60","Invariant Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>60;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetInvarMass_MET70 = new TH1F("gammafakeMetInvarMass_MET70","Invariant Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>70;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetInvarMass_MET80 = new TH1F("gammafakeMetInvarMass_MET80","Invariant Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>80;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetInvarMass_MET100 = new TH1F("gammafakeMetInvarMass_MET100","Invariant Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>100;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetInvarMass_95_InvMass_110 = new TH1F("gammafakeMetInvarMass_95_InvMass_110","Invariant Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and 85<InvMass<110;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetInvarMass_120_InvMass_130 = new TH1F("gammafakeMetInvarMass_120_InvMass_130","Invariant Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetInvarMass_123_InvMass_128 = new TH1F("gammafakeMetInvarMass_123_InvMass_128","Invariant Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMetInvarMass_135_InvMass_160 = new TH1F("gammafakeMetInvarMass_135_InvMass_160","Invariant Mass of gammafake diPho and MET in events with one photon and one fake with Et>40,25 GeV and 135<InvMass<160;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetMT_MET30 = new TH1F("fgMetMT_MET30","Transverse Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>30;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetMT_MET40 = new TH1F("fgMetMT_MET40","Transverse Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>40;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetMT_MET50 = new TH1F("fgMetMT_MET50","Transverse Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>50;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetMT_MET60 = new TH1F("fgMetMT_MET60","Transverse Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>60;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetMT_MET70 = new TH1F("fgMetMT_MET70","Transverse Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>70;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetMT_MET80 = new TH1F("fgMetMT_MET80","Transverse Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>80;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetMT_MET100 = new TH1F("fgMetMT_MET100","Transverse Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>100;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetMT_95_InvMass_110 = new TH1F("fgMetMT_95_InvMass_110","Transverse Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and 85<InvMass<110;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetMT_120_InvMass_130 = new TH1F("fgMetMT_120_InvMass_130","Transverse Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetMT_123_InvMass_128 = new TH1F("fgMetMT_123_InvMass_128","Transverse Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetMT_135_InvMass_160 = new TH1F("fgMetMT_135_InvMass_160","Transverse Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and 135<InvMass<160;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetInvarMass = new TH1F("fgMetInvarMass","Invariant Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetInvarMass_MET30 = new TH1F("fgMetInvarMass_MET30","Invariant Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>30;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetInvarMass_MET40 = new TH1F("fgMetInvarMass_MET40","Invariant Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>40;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetInvarMass_MET50 = new TH1F("fgMetInvarMass_MET50","Invariant Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>50;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetInvarMass_MET60 = new TH1F("fgMetInvarMass_MET60","Invariant Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>60;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetInvarMass_MET70 = new TH1F("fgMetInvarMass_MET70","Invariant Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>70;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetInvarMass_MET80 = new TH1F("fgMetInvarMass_MET80","Invariant Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>80;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetInvarMass_MET100 = new TH1F("fgMetInvarMass_MET100","Invariant Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>100;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetInvarMass_95_InvMass_110 = new TH1F("fgMetInvarMass_95_InvMass_110","Invariant Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and 85<InvMass<110;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetInvarMass_120_InvMass_130 = new TH1F("fgMetInvarMass_120_InvMass_130","Invariant Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetInvarMass_123_InvMass_128 = new TH1F("fgMetInvarMass_123_InvMass_128","Invariant Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMetInvarMass_135_InvMass_160 = new TH1F("fgMetInvarMass_135_InvMass_160","Invariant Mass of fg diPho and MET in events with one photon and one fake with Et>40,25 GeV and 135<InvMass<160;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetMT_MET30 = new TH1F("gfMetMT_MET30","Transverse Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>30;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetMT_MET40 = new TH1F("gfMetMT_MET40","Transverse Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>40;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetMT_MET50 = new TH1F("gfMetMT_MET50","Transverse Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>50;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetMT_MET60 = new TH1F("gfMetMT_MET60","Transverse Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>60;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetMT_MET70 = new TH1F("gfMetMT_MET70","Transverse Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>70;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetMT_MET80 = new TH1F("gfMetMT_MET80","Transverse Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>80;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetMT_MET100 = new TH1F("gfMetMT_MET100","Transverse Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>100;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetMT_95_InvMass_110 = new TH1F("gfMetMT_95_InvMass_110","Transverse Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and 85<InvMass<110;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetMT_120_InvMass_130 = new TH1F("gfMetMT_120_InvMass_130","Transverse Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetMT_123_InvMass_128 = new TH1F("gfMetMT_123_InvMass_128","Transverse Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetMT_135_InvMass_160 = new TH1F("gfMetMT_135_InvMass_160","Transverse Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and 135<InvMass<160;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetInvarMass = new TH1F("gfMetInvarMass","Invariant Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetInvarMass_MET30 = new TH1F("gfMetInvarMass_MET30","Invariant Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>30;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetInvarMass_MET40 = new TH1F("gfMetInvarMass_MET40","Invariant Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>40;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetInvarMass_MET50 = new TH1F("gfMetInvarMass_MET50","Invariant Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>50;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetInvarMass_MET60 = new TH1F("gfMetInvarMass_MET60","Invariant Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>60;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetInvarMass_MET70 = new TH1F("gfMetInvarMass_MET70","Invariant Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>70;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetInvarMass_MET80 = new TH1F("gfMetInvarMass_MET80","Invariant Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>80;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetInvarMass_MET100 = new TH1F("gfMetInvarMass_MET100","Invariant Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and MET>100;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetInvarMass_95_InvMass_110 = new TH1F("gfMetInvarMass_95_InvMass_110","Invariant Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and 85<InvMass<110;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetInvarMass_120_InvMass_130 = new TH1F("gfMetInvarMass_120_InvMass_130","Invariant Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetInvarMass_123_InvMass_128 = new TH1F("gfMetInvarMass_123_InvMass_128","Invariant Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and 120<InvMass<130;M_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMetInvarMass_135_InvMass_160 = new TH1F("gfMetInvarMass_135_InvMass_160","Invariant Mass of gf diPho and MET in events with one photon and one fake with Et>40,25 GeV and 135<InvMass<160;M_{T} (GeV);Events",200,0.,1000.);

  TH1F* h_eeSidebandMet_reweight_binned = new TH1F("eeSidebandMet_reweight_binned","Missing transverse energy in events with two electrons in sideband with Et>40,25 GeV reweighted from gg/ee diEMPt bins ;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandLowMet_reweight_binned = new TH1F("eeSidebandLowMet_reweight_binned","Missing transverse energy in events with two electrons in Low sideband with Et>40,25 GeV reweighted from gg/ee diEMPt bins ;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandHighMet_reweight_binned = new TH1F("eeSidebandHighMet_reweight_binned","Missing transverse energy in events with two electrons in Highsideband with Et>40,25 GeV reweighted from gg/ee diEMPt bins ;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandLowMet_reweightJet_binned = new TH1F("eeSidebandLowMet_reweightJet_binned","Missing transverse energy in events with two electrons in Low sideband with Et>40,25 GeV reweighted from gg/ee diJetPt bins ;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandHighMet_reweightJet_binned = new TH1F("eeSidebandHighMet_reweightJet_binned","Missing transverse energy in events with two electrons in Highsideband with Et>40,25 GeV reweighted from gg/ee diJetPt bins ;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandLowMet_reweightJet_binned_JetReq = new TH1F("eeSidebandLowMet_reweightJet_binned_JetReq","Missing transverse energy in events with two electrons in Low sideband with Et>40,25 GeV reweighted from gg/ee JetReq diJetPt bins ;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandHighMet_reweightJet_binned_JetReq = new TH1F("eeSidebandHighMet_reweightJet_binned_JetReq","Missing transverse energy in events with two electrons in Highsideband with Et>40,25 GeV reweighted from gg/ee JetReq diJetPt bins ;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandLowMet_reweight_binned_JetReq = new TH1F("eeSidebandLowMet_reweight_binned_JetReq","Missing transverse energy in events with two electrons in Low sideband with Et>40,25 GeV reweighted from gg/ee JetReq diEMPt bins ;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandHighMet_reweight_binned_JetReq = new TH1F("eeSidebandHighMet_reweight_binned_JetReq","Missing transverse energy in events with two electrons in Highsideband with Et>40,25 GeV reweighted from gg/ee JetReq diEMPt bins ;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandLowMet_reweightJet_binned_2JetReq = new TH1F("eeSidebandLowMet_reweightJet_binned_2JetReq","Missing transverse energy in events with two electrons in Low sideband with Et>40,25 GeV reweighted from gg/ee 2JetReq diJetPt bins ;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandHighMet_reweightJet_binned_2JetReq = new TH1F("eeSidebandHighMet_reweightJet_binned_2JetReq","Missing transverse energy in events with two electrons in Highsideband with Et>40,25 GeV reweighted from gg/ee 2JetReq diJetPt bins ;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandLowMet_reweight_binned_2JetReq = new TH1F("eeSidebandLowMet_reweight_binned_2JetReq","Missing transverse energy in events with two electrons in Low sideband with Et>40,25 GeV reweighted from gg/ee 2JetReq diEMPt bins ;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandHighMet_reweight_binned_2JetReq = new TH1F("eeSidebandHighMet_reweight_binned_2JetReq","Missing transverse energy in events with two electrons in Highsideband with Et>40,25 GeV reweighted from gg/ee 2JetReq diEMPt bins ;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_reweight_binned = new TH1F("eeMet_reweight_binned","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/ee diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_reweightJet_binned = new TH1F("eeMet_reweightJet_binned","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/ee diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_reweight_binned = new TH1F("ffMet_reweight_binned","Missing transverse energy in events with two fake photons with Et>40,25 GeV reweighted from gg/ff diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_reweightJet_binned = new TH1F("ffMet_reweightJet_binned","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/ff diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);

  TH1F* h_eeMet_reweight_binned_JetReq = new TH1F("eeMet_reweight_binned_JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/ee JetReq diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_reweightJet_binned_JetReq = new TH1F("eeMet_reweightJet_binned_JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/ee JetReq diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_reweight_binned_JetReq = new TH1F("ffMet_reweight_binned_JetReq","Missing transverse energy in events with two fake photons with Et>40,25 GeV reweighted from gg/ff JetReq diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_reweightJet_binned_JetReq = new TH1F("ffMet_reweightJet_binned_JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/ff JetReq diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_reweight_binned_2JetReq = new TH1F("eeMet_reweight_binned_2JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/ee 2JetReq diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_reweightJet_binned_2JetReq = new TH1F("eeMet_reweightJet_binned_2JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/ee 2JetReq diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_reweight_binned_2JetReq = new TH1F("ffMet_reweight_binned_2JetReq","Missing transverse energy in events with two fake photons with Et>40,25 GeV reweighted from gg/ff 2JetReq diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_reweightJet_binned_2JetReq = new TH1F("ffMet_reweightJet_binned_2JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/ff 2JetReq diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMet_reweight_binned = new TH1F("gfMet_reweight_binned","Missing transverse energy in events with two fake photons with Et>40,25 GeV reweighted from gg/gf diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMet_reweightJet_binned = new TH1F("gfMet_reweightJet_binned","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/gf diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMet_reweight_binned_JetReq = new TH1F("gfMet_reweight_binned_JetReq","Missing transverse energy in events with two fake photons with Et>40,25 GeV reweighted from gg/gf JetReq diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMet_reweightJet_binned_JetReq = new TH1F("gfMet_reweightJet_binned_JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/gf JetReq diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMet_reweight_binned_2JetReq = new TH1F("gfMet_reweight_binned_2JetReq","Missing transverse energy in events with two fake photons with Et>40,25 GeV reweighted from gg/gf 2JetReq diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMet_reweightJet_binned_2JetReq = new TH1F("gfMet_reweightJet_binned_2JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/gf 2JetReq diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMet_reweight_binned = new TH1F("fgMet_reweight_binned","Missing transverse energy in events with two fake photons with Et>40,25 GeV reweighted from gg/fg diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMet_reweightJet_binned = new TH1F("fgMet_reweightJet_binned","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/fg diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMet_reweight_binned_JetReq = new TH1F("fgMet_reweight_binned_JetReq","Missing transverse energy in events with two fake photons with Et>40,25 GeV reweighted from gg/fg JetReq diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMet_reweightJet_binned_JetReq = new TH1F("fgMet_reweightJet_binned_JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/fg JetReq diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMet_reweight_binned_2JetReq = new TH1F("fgMet_reweight_binned_2JetReq","Missing transverse energy in events with two fake photons with Et>40,25 GeV reweighted from gg/fg 2JetReq diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMet_reweightJet_binned_2JetReq = new TH1F("fgMet_reweightJet_binned_2JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/fg 2JetReq diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_reweight_binned = new TH1F("gammafakeMet_reweight_binned","Missing transverse energy in events with two fake photons with Et>40,25 GeV reweighted from gg/gammafake diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_reweightJet_binned = new TH1F("gammafakeMet_reweightJet_binned","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/gammafake diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_reweight_binned_JetReq = new TH1F("gammafakeMet_reweight_binned_JetReq","Missing transverse energy in events with two fake photons with Et>40,25 GeV reweighted from gg/gammafake JetReq diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_reweightJet_binned_JetReq = new TH1F("gammafakeMet_reweightJet_binned_JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/gammafake JetReq diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_reweight_binned_2JetReq = new TH1F("gammafakeMet_reweight_binned_2JetReq","Missing transverse energy in events with two fake photons with Et>40,25 GeV reweighted from gg/gammafake 2JetReq diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_reweightJet_binned_2JetReq = new TH1F("gammafakeMet_reweightJet_binned_2JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV reweighted from gg/gammafake 2JetReq diJetPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);

  TH1F* h_gammafakeMet_JetReq = new TH1F("gammafakeMet_JetReq","Missing transverse energy in events with two photons with Et>40,25 GeV with One Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMet_JetReq = new TH1F("fgMet_JetReq","Missing transverse energy in events with two photons with Et>40,25 GeV with One Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMet_JetReq = new TH1F("gfMet_JetReq","Missing transverse energy in events with two photons with Et>40,25 GeV with One Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMet_JetReq = new TH1F("ggMet_JetReq","Missing transverse energy in events with two photons with Et>40,25 GeV with One Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_JetReq = new TH1F("egMet_JetReq","Missing transverse energy in events with one photon and one electron with Et>40,25 GeV with One Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_2JetReq = new TH1F("gammafakeMet_2JetReq","Missing transverse energy in events with two photons with Et>40,25 GeV with Two Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMet_2JetReq = new TH1F("fgMet_2JetReq","Missing transverse energy in events with two photons with Et>40,25 GeV with Two Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMet_2JetReq = new TH1F("gfMet_2JetReq","Missing transverse energy in events with two photons with Et>40,25 GeV with Two Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMet_2JetReq = new TH1F("ggMet_2JetReq","Missing transverse energy in events with two photons with Et>40,25 GeV with Two Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_2JetReq = new TH1F("egMet_2JetReq","Missing transverse energy in events with one photon and one electron with Et>40,25 GeV with Two Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_JetReq = new TH1F("eeMet_JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV with One Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_2JetReq = new TH1F("eeMet_2JetReq","Missing transverse energy in events with two electrons with Et>40,25 GeV with Two Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSideBandMet_JetReq = new TH1F("eeSideBandMet_JetReq","Missing transverse energy in events with two electrons in sideband with Et>40,25 GeV with One Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_JetReq = new TH1F("ffMet_JetReq","Missing transverse energy in events with two fake photons with Et>40,25 GeV with One Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSideBandMet_2JetReq = new TH1F("eeSideBandMet_2JetReq","Missing transverse energy in events with two electrons in sideband with Et>40,25 GeV with Two Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_2JetReq = new TH1F("ffMet_2JetReq","Missing transverse energy in events with two fake photons with Et>40,25 GeV with Two Jet Requirement;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandMet_reweight_binned_JetReq = new TH1F("eeSidebandMet_reweight_binned_JetReq","Missing transverse energy in events with two electrons in sideband with Et>40,25 GeV with One Jet Requirement reweighted from gg/ee diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSidebandMet_reweight_binned_2JetReq = new TH1F("eeSidebandMet_reweight_binned_2JetReq","Missing transverse energy in events with two electrons in sideband with Et>40,25 GeV with Two Jet Requirement reweighted from gg/ee diEMPt bins;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1I* h_NPhoCands = new TH1I("NPhoCands","Number of photon candidates after Et, ecalIso, hcalIso, h/e, trackIso, SigIetaIeta cuts; ;Events",5,0,5); 
  TH1I* h_NFakeCands = new TH1I("NFakeCands","Number of fake candidates after Et, ecalIso, hcalIso, h/e, !trackIso||!SigIetaIeta cuts; ;Events",5,0,5);
  TH2F* h_EcalIsoVsNVertex = new TH2F("EcalIsoVsNVertex","Ecal Isolation of barrel photons VS Number of Vertices after Et, h/e cuts;nVertex;ecalRecHitSumEtConeDR04",20,0,20,100,-5.,20.);
  TH2F* h_HcalIsoVsNVertex = new TH2F("HcalIsoVsNVertex","Hcal Isolation of barrel photons VS Number of Vertices after Et, h/e cuts;nVertex;hcalTowerSumEtConeDR04",20,0,20,100,-5.,20.);
  TH2F* h_TrackIsoVsNVertex = new TH2F("TrackIsoVsNVertex","Tracker Isolation of barrel photons VS Number of Vertices after Et, h/e cuts;nVertex;trkSumPtHollowConeDR04",20,0,20,100,-5.,20.);
  TH1F* h_EcalIso = new TH1F("EcalIso","Ecal Isolation for barrel photons after Et, hcal iso, h/e cuts;ecalRecHitSumEtConeDR04;Events",50,-5.,20.);
  TH1F* h_HcalIso = new TH1F("HcalIso","Hcal Isolation for barrel photons after Et, ecal iso, h/e cuts;hcalTowerSumEtConeDR04;Events",50,-5.,20.);
  TH1F* h_TrackIso = new TH1F("TrackIso","Tracker Isolation for barrel photons after Et, ecal iso, hcal iso, h/e cuts;trkSumPtHollowConeDR04;Events",50,-5.,20.);
  TH1F* h_EcalIso_Preselection = new TH1F("EcalIso_Preselection","Ecal Isolation for barrel photons after Et, ecal iso, hcal iso, h/e cuts;ecalRecHitSumEtConeDR04;Events",50,-5.,20.);
  TH1F* h_HcalIso_Preselection = new TH1F("HcalIso_Preselection","Hcal Isolation for barrel photons after Et, ecal iso, hcal iso, h/e cuts;hcalTowerSumEtConeDR04;Events",50,-5.,20.);
  TH1F* h_TrackIso_Preselection = new TH1F("TrackIso_Preselection","Tracker Isolation for barrel photons after Et, ecal iso, hcal iso, h/e cuts;trkSumPtHollowConeDR04;Events",50,-5.,20.);
  TH1F* h_EcalIso_Preselection_NVertex_Corrected = new TH1F("EcalIso_Preselection_NVertex_Corrected","Ecal NVertex Corrected Isolation for barrel photons after Et, ecal iso, hcal iso, h/e cuts;ecalRecHitSumEtConeDR04;Events",50,-5.,20.);
  TH1F* h_HcalIso_Preselection_NVertex_Corrected = new TH1F("HcalIso_Preselection_NVertex_Corrected","Hcal NVertex Corrected Isolation for barrel photons after Et, ecal iso, hcal iso, h/e cuts;hcalTowerSumEtConeDR04;Events",50,-5.,20.);
  TH1F* h_TrackIso_Preselection_NVertex_Corrected = new TH1F("TrackIso_Preselection_NVertex_Corrected","Tracker NVertex Corrected Isolation for barrel photons after Et, ecal iso, hcal iso, h/e cuts;trkSumPtHollowConeDR04;Events",50,-5.,20.);
  TH1F* h_EcalIso_Preselection_Rho_Corrected = new TH1F("EcalIso_Preselection_Rho_Corrected","Ecal Rho Corrected Isolation for barrel photons after Et, ecal iso, hcal iso, h/e cuts;ecalRecHitSumEtConeDR04;Events",50,-5.,20.);
  TH1F* h_HcalIso_Preselection_Rho_Corrected = new TH1F("HcalIso_Preselection_Rho_Corrected","Hcal Rho Corrected Isolation for barrel photons after Et, ecal iso, hcal iso, h/e cuts;hcalTowerSumEtConeDR04;Events",50,-5.,20.);
  TH1F* h_TrackIso_Preselection_Rho_Corrected = new TH1F("TrackIso_Preselection_Rho_Corrected","Tracker Rho Corrected Isolation for barrel photons after Et, ecal iso, hcal iso, h/e cuts;trkSumPtHollowConeDR04;Events",50,-5.,20.);
  /* TH2F* h_FailEB_PhiVsEta = new TH2F("FailEB_PhiVsEta","Phi VS Eta for Photons that fail isEB;Eta;Phi",1000,-5.,5.,1000,-5.,5.);
     TH2F* h_FailEBEtaGap_PhiVsEta = new TH2F("FailEBEtaGap_PhiVsEta","Phi VS Eta for Photons that fail isEBEtaGap;Eta;Phi",1000,-5.,5.,1000,-5.,5.);
     TH2F* h_FailEBPhiGap_PhiVsEta = new TH2F("FailEBPhiGap_PhiVsEta","Phi VS Eta for Photons that fail isEBPhiGap;Eta;Phi",1000,-5.,5.,1000,-5.,5.);
     TH2F* h_FailEBEEGap_PhiVsEta = new TH2F("FailEBEEGap_PhiVsEta","Phi VS Eta for Photons that fail isEBEEGap;Eta;Phi",1000,-5.,5.,1000,-5.,5.);*/
  TH1F* h_SeedTime = new TH1F("SeedTime","SeedTime",1400,-200.,1200.);
  TH1F* h_SeedTime_afterR9 = new TH1F("SeedTime_afterR9","SeedTime after R9 cut",1400,-200.,1200.);
  TH2F* h_SeedTimeVsEta = new TH2F("SeedTimeVsEta","SeedTime VS Photon Eta",350,-3.5,3.5,1400,-200.,1200.);
  TH2F* h_SeedTimeVSE = new TH2F("SeedTimeVSE","Photon Energy VS SeedTime ",1400,-200.,1200.,200,0.,1000.);
  TH2F* h_SeedTimeVSE_afterR9 = new TH2F("SeedTimeVSE_afterR9","Photon Energy VS SeedTime after R9 cut",1400,-200.,1200.,200,0.,1000.);
  TH2F* h_MetVsSeedTime = new TH2F("MetVsSeedTime","MET VS Photon SeedTime ",1400,-200.,1200.,200,0.,1000.);
  TH2F* h_MetVsSeedTime_gg = new TH2F("MetVsSeedTime_gg","MET VS Photon SeedTime - gg",1400,-200.,1200.,200,0.,1000.);
  TH2F* h_MetVsSeedTime_ee = new TH2F("MetVsSeedTime_ee","MET VS Photon SeedTime - ee",1400,-200.,1200.,200,0.,1000.);
  TH2F* h_MetVsSeedTime_ff = new TH2F("MetVsSeedTime_ff","MET VS Photon SeedTime - ff",1400,-200.,1200.,200,0.,1000.);
  TH2F* h_SeedTimeVsEta_gg = new TH2F("SeedTimeVsEta_gg","SeedTime VS Photon Eta - gg",170,-1.7,1.7,1400,-200.,1200.);
  TH2F* h_SeedTimeVsEta_eg = new TH2F("SeedTimeVsEta_eg","SeedTime VS Photon Eta - eg",170,-1.7,1.7,1400,-200.,1200.);
  TH2F* h_SeedTimeVsEta_ee = new TH2F("SeedTimeVsEta_ee","SeedTime VS Photon Eta - ee",170,-1.7,1.7,1400,-200.,1200.);
  TH2F* h_SeedTimeVsEta_ff = new TH2F("SeedTimeVsEta_ff","SeedTime VS Photon Eta - ff",170,-1.7,1.7,1400,-200.,1200.);
  TH2F* h_SeedTimeVsEta_gg_JetReq = new TH2F("SeedTimeVsEta_gg_JetReq","SeedTime VS Photon Eta - gg_JetReq",170,-1.7,1.7,1400,-200.,1200.);
  TH2F* h_SeedTimeVsEta_eg_JetReq = new TH2F("SeedTimeVsEta_eg_JetReq","SeedTime VS Photon Eta - eg_JetReq",170,-1.7,1.7,1400,-200.,1200.);
  TH2F* h_SeedTimeVsEta_ee_JetReq = new TH2F("SeedTimeVsEta_ee_JetReq","SeedTime VS Photon Eta - ee_JetReq",170,-1.7,1.7,1400,-200.,1200.);
  TH2F* h_SeedTimeVsEta_ff_JetReq = new TH2F("SeedTimeVsEta_ff_JetReq","SeedTime VS Photon Eta - ff_JetReq",170,-1.7,1.7,1400,-200.,1200.);
  TH2F* h_SeedTimeVsEta_gg_2JetReq = new TH2F("SeedTimeVsEta_gg_2JetReq","SeedTime VS Photon Eta - gg_2JetReq",170,-1.7,1.7,1400,-200.,1200.);
  TH2F* h_SeedTimeVsEta_eg_2JetReq = new TH2F("SeedTimeVsEta_eg_2JetReq","SeedTime VS Photon Eta - eg_2JetReq",170,-1.7,1.7,1400,-200.,1200.);
  TH2F* h_SeedTimeVsEta_ee_2JetReq = new TH2F("SeedTimeVsEta_ee_2JetReq","SeedTime VS Photon Eta - ee_2JetReq",170,-1.7,1.7,1400,-200.,1200.);
  TH2F* h_SeedTimeVsEta_ff_2JetReq = new TH2F("SeedTimeVsEta_ff_2JetReq","SeedTime VS Photon Eta - ff_2JetReq",170,-1.7,1.7,1400,-200.,1200.);


  TH1F* h_TrigPhosEta = new TH1F("TrigPhosEta","Eta of all photons passing triggers",400,-4,4);
  TH1F* h_TrigPhosEta_TopTwo = new TH1F("TrigPhosEta_TopTwo","Eta of top 2 p_{T} photons passing triggers",400,-4,4);

  TH1F* h_Pho_ChargedHadronIso = new TH1F("Pho_ChargedHadronIso","",500,0.,100.);
  TH1F* h_ChargedHadronIso_ff = new TH1F("ChargedHadronIso_ff","",550,-10.,100.);
  TH1F* h_NeutralHadronIso_ff = new TH1F("NeutralHadronIso_ff","",550,-10.,100.);
  TH1F* h_PhotonIso_ff = new TH1F("PhotonIso_ff","",550,-10.,100.);
  TH1F* h_ChargedHadronIso_gg = new TH1F("ChargedHadronIso_gg","",550,-10.,100.);
  TH1F* h_NeutralHadronIso_gg = new TH1F("NeutralHadronIso_gg","",550,-10.,100.);
  TH1F* h_PhotonIso_gg = new TH1F("PhotonIso_gg","",550,-10.,100.);
  TH1F* h_ChargedHadronIso_eg = new TH1F("ChargedHadronIso_eg","",550,-10.,100.);
  TH1F* h_NeutralHadronIso_eg = new TH1F("NeutralHadronIso_eg","",550,-10.,100.);
  TH1F* h_PhotonIso_eg = new TH1F("PhotonIso_eg","",550,-10.,100.);
  TH1F* h_ChargedHadronIso_ee = new TH1F("ChargedHadronIso_ee","",550,-10.,100.);
  TH1F* h_NeutralHadronIso_ee = new TH1F("NeutralHadronIso_ee","",550,-10.,100.);
  TH1F* h_PhotonIso_ee = new TH1F("PhotonIso_ee","",550,-10.,100.);
  TH1F* h_ChargedHadronIso_gf = new TH1F("ChargedHadronIso_gf","",550,-10.,100.);
  TH1F* h_NeutralHadronIso_gf = new TH1F("NeutralHadronIso_gf","",550,-10.,100.);
  TH1F* h_PhotonIso_gf = new TH1F("PhotonIso_gf","",550,-10.,100.);
  TH1F* h_Pho_NeutralHadronIso = new TH1F("Pho_NeutralHadronIso","",500,0.,100.);
  TH1F* h_Pho_PhotonIso = new TH1F("Pho_PhotonIso","",500,0.,100.);
  TH1F* h_Pho_PfCombinedIso = new TH1F("Pho_PfCombinedIso","",1500,0.,300.);
  TH1F* h_Pho_ChargedHadronIsoDeposit = new TH1F("Pho_ChargedHadronIsoDeposit","",500,0.,100.);
  TH1F* h_Pho_NeutralHadronIsoDeposit = new TH1F("Pho_NeutralHadronIsoDeposit","",500,0.,100.);
  TH1F* h_Pho_PhotonIsoDeposit = new TH1F("Pho_PhotonIsoDeposit","",500,0.,100.);
  TH1F* h_Pho_PfCombinedIsoDeposit = new TH1F("Pho_PfCombinedIsoDeposit","",1500,0.,300.);
  TH1F* h_Pho_CombinedIsoDR03 = new TH1F("Pho_CombinedIsoDR03","",1500,0.,300.);

  TH1F* h_r9 = new TH1F("r9","R9 of all photons",250,0.,5.);
  TH1F* h_r9_gg = new TH1F("r9_gg","R9 of all photons in gg sample",250,0.,5.);
  TH1F* h_r9_eg = new TH1F("r9_eg","R9 of all photons in eg sample",250,0.,5.);
  TH1F* h_r9_ee = new TH1F("r9_ee","R9 of all photons in ee sample",250,0.,5.);
  TH1F* h_r9_ff = new TH1F("r9_ff","R9 of all photons in ff sample",250,0.,5.);
  TH1F* h_R9fromR9trig = new TH1F("R9fromR9trig","R9 of all photons from R9 trigger",250,0.,5.);
  TH1F* h_rho = new TH1F("rho","Fastjet correction rho for all events that pass JSON, HLT",150,0,150);
  TH1F* h_rhoBarrel = new TH1F("rhoBarrel","Fastjet correction rhoBarrel for all events that pass JSON, HLT",150,0,150);
  TH1F* h_EcalIsoDR03 = new TH1F("EcalIsoDR03","Ecal Isolation in DR03 cone for all photons after JSON, HLT, R9, Et>30, h/e",150,-5,25);
  TH1F* h_HcalIsoDR03 = new TH1F("HcalIsoDR03","Hcal Isolation in DR03 cone for all photons after JSON, HLT, R9, Et>30, h/e",150,-5,25);
  TH1F* h_TrackIsoDR03 = new TH1F("TrackIsoDR03","Track Isolation in DR03 cone for all photons after JSON, HLT, R9, Et>30, h/e",150,-5,25);
  TH1F* h_EcalIsoDR04 = new TH1F("EcalIsoDR04","Ecal Isolation in DR04 cone for all photons after JSON, HLT, R9, Et>30, h/e",150,-5,25);
  TH1F* h_HcalIsoDR04 = new TH1F("HcalIsoDR04","Hcal Isolation in DR04 cone for all photons after JSON, HLT, R9, Et>30, h/e",150,-5,25);
  TH1F* h_TrackIsoDR04 = new TH1F("TrackIsoDR04","Track Isolation in DR04 cone for all photons after JSON, HLT, R9, Et>30, h/e",150,-5,25);
  TH1F* h_EcalIsoDR03_gg = new TH1F("EcalIsoDR03_gg","Ecal Isolation in DR03 cone for all photons in gg sample",150,-5,25);
  TH1F* h_EcalIsoDR03RhoCorr_eg = new TH1F("EcalIsoDR03RhoCorr_eg","Ecal Isolation in DR03 cone for all photons in eg sample",150,-5,25);
  TH1F* h_EcalIsoDR03RhoCorr_ee = new TH1F("EcalIsoDR03RhoCorr_ee","Ecal Isolation in DR03 cone for all photons in ee sample",150,-5,25);
  TH1F* h_EcalIsoDR03RhoCorr_ff = new TH1F("EcalIsoDR03RhoCorr_ff","Ecal Isolation in DR03 cone for all photons in ff sample",150,-5,25);
  TH1F* h_HcalIsoDR03_gg = new TH1F("HcalIsoDR03_gg","Hcal Isolation in DR03 cone for all photons in gg sample",150,-5,25);
  TH1F* h_HcalIsoDR03RhoCorr_eg = new TH1F("HcalIsoDR03RhoCorr_eg","Hcal Isolation in DR03 cone for all photons in eg sample",150,-5,25);
  TH1F* h_HcalIsoDR03RhoCorr_ee = new TH1F("HcalIsoDR03RhoCorr_ee","Hcal Isolation in DR03 cone for all photons in ee sample",150,-5,25);
  TH1F* h_HcalIsoDR03RhoCorr_ff = new TH1F("HcalIsoDR03RhoCorr_ff","Hcal Isolation in DR03 cone for all photons in ff sample",150,-5,25);
  TH1F* h_TrackIsoDR03_gg = new TH1F("TrackIsoDR03_gg","Track Isolation in DR03 cone for all photons in gg sample",150,-5,25);
  TH1F* h_TrackIsoDR03RhoCorr_eg = new TH1F("TrackIsoDR03RhoCorr_eg","Track Isolation in DR03 cone for all photons in eg sample",150,-5,25);
  TH1F* h_TrackIsoDR03RhoCorr_ee = new TH1F("TrackIsoDR03RhoCorr_ee","Track Isolation in DR03 cone for all photons in ee sample",150,-5,25);
  TH1F* h_TrackIsoDR03RhoCorr_ff = new TH1F("TrackIsoDR03RhoCorr_ff","Track Isolation in DR03 cone for all photons in ff sample",150,-5,25);

  TH1F* h_EcalIsoDR03RhoCorr_gg = new TH1F("EcalIsoDR03RhoCorr_gg","RhoCorrected Ecal Isolation in DR03 cone for all photons in gg sample",150,-5,25);
  TH1F* h_HcalIsoDR03RhoCorr_gg = new TH1F("HcalIsoDR03RhoCorr_gg","RhoCorrected Hcal Isolation in DR03 cone for all photons in gg sample",150,-5,25);
  TH1F* h_TrackIsoDR03RhoCorr_gg = new TH1F("TrackIsoDR03RhoCorr_gg","RhoCorrected Track Isolation in DR03 cone for all photons in gg sample",150,-5,25);
  TH1F* h_CombIsoDR03RhoCorr_gg = new TH1F("CombIsoDR03RhoCorr_gg","RhoCorrected Combined Isolation in DR03 cone for all photons in gg sample",600,-5,100);

  TH1F* h_CombIsoDR03_gg = new TH1F("CombIsoDR03_gg","RhoCorrected Combined Isolation in DR03 cone for all photons in gg sample",600,-5,100);
  TH1F* h_CombIsoDR03RhoCorr_eg = new TH1F("CombIsoDR03RhoCorr_eg","RhoCorrected Combined Isolation in DR03 cone for all photons in eg sample",600,-5,100);
  TH1F* h_CombIsoDR03RhoCorr_ee = new TH1F("CombIsoDR03RhoCorr_ee","RhoCorrected Combined Isolation in DR03 cone for all photons in ee sample",600,-5,100);
  TH1F* h_CombIsoDR03RhoCorr_ff = new TH1F("CombIsoDR03RhoCorr_ff","RhoCorrected Combined Isolation in DR03 cone for all photons in ff sample",600,-5,100);
  TH1F* h_rho_gg = new TH1F("rho_gg","Fastjet correction rho for all events in gg sample",200,0,40);
  TH1F* h_rho_eg = new TH1F("rho_eg","Fastjet correction rho for all events in eg sample",200,0,40);
  TH1F* h_rho_ee = new TH1F("rho_ee","Fastjet correction rho for all events in ee sample",200,0,40);
  TH1F* h_rho_ff = new TH1F("rho_ff","Fastjet correction rho for all events in ff sample",200,0,40);
  TH1F* h_NVertex = new TH1F("NVertex","Number of good vertices for all events",60,0,60);h_NVertex->Sumw2();
  TH1F* h_NVertex_gg = new TH1F("NVertex_gg","Number of good vertices for all events in gg sample",40,0,40);
  TH1F* h_NVertex_eg = new TH1F("NVertex_eg","Number of good vertices for all events in eg sample",40,0,40);
  TH1F* h_NVertex_ee = new TH1F("NVertex_ee","Number of good vertices for all events in ee sample",40,0,40);
  TH1F* h_NVertex_ff = new TH1F("NVertex_ff","Number of good vertices for all events in ff sample",40,0,40);
  TH1F* h_NVertex_gammafake = new TH1F("NVertex_gammafake","Number of good vertices for all events in gammafake sample",40,0,40);
  TH1F* h_NVertex_fg = new TH1F("NVertex_fg","Number of good vertices for all events in fg sample",40,0,40);
  TH1F* h_NVertex_gf = new TH1F("NVertex_gf","Number of good vertices for all events in gf sample",40,0,40);

  Double_t MetBins[13]={0,5,10,15,20,25,30,35,40,50,70,100,275};
  TH2F* h_NVertexVsMET_gg = new TH2F("NVertexVsMET_gg","Number of good vertices VS MET for all events in gg sample",12,MetBins,40,0,40);
  TH2F* h_NVertexVsMET_eg = new TH2F("NVertexVsMET_eg","Number of good vertices VS MET for all events in eg sample",12,MetBins,40,0,40);
  TH2F* h_NVertexVsMET_ee = new TH2F("NVertexVsMET_ee","Number of good vertices VS MET for all events in ee sample",12,MetBins,40,0,40);
  TH2F* h_NVertexVsMET_ff = new TH2F("NVertexVsMET_ff","Number of good vertices VS MET for all events in ff sample",12,MetBins,40,0,40);
  TH2F* h_PtVsMET_eg_e = new TH2F("PtVsMET_eg_e","p_{T} of e VS MET for all events in eg sample",200,0.,1000.,200,0.,1000.);
  TH2F* h_NVertexVsPt_eg_e = new TH2F("NVertexVsPt_eg_e","Number of good vertices VS p_{T} of e for all events in eg sample",200,0.,1000.,40,0,40);
  TH1F* h_Pt_eg_e = new TH1F("Pt_eg_e","p_{T} of e for all events in eg sample",200,0.,1000.);

  //-------------------
  TH1F *h_DenomVsNVertex = new TH1F("DenomVsNVertex","",40,0,40);
  TH1F *h_DenomVsNVertex_afterLooseHE = new TH1F("DenomVsNVertex_afterHE","",40,0,40);
  TH1F *h_NumerVsNVertex = new TH1F("NumerVsNVertex","",40,0,40);
  TH1F *h_RhoCorrectedNumerVsNVertex = new TH1F("RhoCorrectedNumerVsNVertex","",40,0,40);
  TH1F *h_NVertexCorrectedNumerVsNVertex = new TH1F("NVertexCorrectedNumerVsNVertex","",40,0,40);
  TH1F *h_DenomVsEt = new TH1F("DenomVsEt","",100,0,500);
  TH1F *h_DenomVsEt_afterLooseHE = new TH1F("DenomVsEt_afterHE","",100,0,500);
  TH1F *h_NumerVsEt = new TH1F("NumerVsEt","",100,0,500);
  TH1F *h_RhoCorrectedNumerVsEt = new TH1F("RhoCorrectedNumerVsEt","",100,0,500);
  TH1F *h_NVertexCorrectedNumerVsEt = new TH1F("NVertexCorrectedNumerVsEt","",100,0,500);
  TH1F *h_DenomVsEta = new TH1F("DenomVsEta","",15,-1.5,1.5);
  TH1F *h_DenomVsEta_afterLooseHE = new TH1F("DenomVsEta_afterHE","",15,-1.5,1.5);
  TH1F *h_NumerVsEta = new TH1F("NumerVsEta","",15,-1.5,1.5);
  TH1F *h_RhoCorrectedNumerVsEta = new TH1F("RhoCorrectedNumerVsEta","",15,-1.5,1.5);
  TH1F *h_NVertexCorrectedNumerVsEta = new TH1F("NVertexCorrectedNumerVsEta","",15,-1.5,1.5);
  TH1F *h_DenomVsMET = new TH1F("DenomVsMET","",100,0,500);
  TH1F *h_DenomVsMET_afterLooseHE = new TH1F("DenomVsMET_afterHE","",100,0,500);
  TH1F *h_NumerVsMET = new TH1F("NumerVsMET","",100,0,500);
  TH1F *h_RhoCorrectedNumerVsMET = new TH1F("RhoCorrectedNumerVsMET","",100,0,500);
  TH1F *h_NVertexCorrectedNumerVsMET = new TH1F("NVertexCorrectedNumerVsMET","",100,0,500);
  //--------------------
  TH2F *h_DiEMPtVsMet_gg = new TH2F("DiEMPtVsMet_gg","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiEMPtVsMet_gammafake = new TH2F("DiEMPtVsMet_gammafake","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiEMPtVsMet_fg = new TH2F("DiEMPtVsMet_fg","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiEMPtVsMet_gf = new TH2F("DiEMPtVsMet_gf","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiEMPtVsMet_eg = new TH2F("DiEMPtVsMet_eg","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiEMPtVsMet_ee = new TH2F("DiEMPtVsMet_ee","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiEMPtVsMet_eeSideBand = new TH2F("DiEMPtVsMet_eeSideBand","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiEMPtVsMet_ff = new TH2F("DiEMPtVsMet_ff","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiJetPtVsMet_gg = new TH2F("DiJetPtVsMet_gg","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiJetPtVsMet_gammafake = new TH2F("DiJetPtVsMet_gammafake","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiJetPtVsMet_fg = new TH2F("DiJetPtVsMet_fg","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiJetPtVsMet_gf = new TH2F("DiJetPtVsMet_gf","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiJetPtVsMet_eg = new TH2F("DiJetPtVsMet_eg","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiJetPtVsMet_ee = new TH2F("DiJetPtVsMet_ee","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiJetPtVsMet_eeSideBand = new TH2F("DiJetPtVsMet_eeSideBand","",100,0.,500.,400,0.,1000.);
  TH2F *h_DiJetPtVsMet_ff = new TH2F("DiJetPtVsMet_ff","",100,0.,500.,400,0.,1000.);

  TH2F *h_DiEMPtVsMetDphi_gg = new TH2F("DiEMPtVsMetDphi_gg","",32,0.,3.2,400,0.,1000.);
  TH2F *h_DiEMPtVsMetDphi_eg = new TH2F("DiEMPtVsMetDphi_eg","",32,0.,3.2,400,0.,1000.);
  TH2F *h_DiEMPtVsMetDphi_ee = new TH2F("DiEMPtVsMetDphi_ee","",32,0.,3.2,400,0.,1000.);
  TH2F *h_DiEMPtVsMetDphi_ff = new TH2F("DiEMPtVsMetDphi_ff","",32,0.,3.2,400,0.,1000.);
  TH2F *h_DiEMPtVsMetDphiLead_gg = new TH2F("DiEMPtVsMetDphiLead_gg","",32,0.,3.2,400,0.,1000.);
  TH2F *h_DiEMPtVsMetDphiLead_eg = new TH2F("DiEMPtVsMetDphiLead_eg","",32,0.,3.2,400,0.,1000.);
  TH2F *h_DiEMPtVsMetDphiLead_ee = new TH2F("DiEMPtVsMetDphiLead_ee","",32,0.,3.2,400,0.,1000.);
  TH2F *h_DiEMPtVsMetDphiLead_ff = new TH2F("DiEMPtVsMetDphiLead_ff","",32,0.,3.2,400,0.,1000.);
  TH2F *h_DiEMPtVsMetDphiTrail_gg = new TH2F("DiEMPtVsMetDphiTrail_gg","",32,0.,3.2,400,0.,1000.);
  TH2F *h_DiEMPtVsMetDphiTrail_eg = new TH2F("DiEMPtVsMetDphiTrail_eg","",32,0.,3.2,400,0.,1000.);
  TH2F *h_DiEMPtVsMetDphiTrail_ee = new TH2F("DiEMPtVsMetDphiTrail_ee","",32,0.,3.2,400,0.,1000.);
  TH2F *h_DiEMPtVsMetDphiTrail_ff = new TH2F("DiEMPtVsMetDphiTrail_ff","",32,0.,3.2,400,0.,1000.);

  TH2F *h_MetVsMetDphi_gg = new TH2F("MetVsMetDphi_gg","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphi_eg = new TH2F("MetVsMetDphi_eg","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphi_ee = new TH2F("MetVsMetDphi_ee","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphi_ff = new TH2F("MetVsMetDphi_ff","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphi_gammafake = new TH2F("MetVsMetDphi_gammafake","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphiLead_gg = new TH2F("MetVsMetDphiLead_gg","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphiLead_eg = new TH2F("MetVsMetDphiLead_eg","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphiLead_ee = new TH2F("MetVsMetDphiLead_ee","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphiLead_ff = new TH2F("MetVsMetDphiLead_ff","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphiLead_gammafake = new TH2F("MetVsMetDphiLead_gammafake","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphiTrail_gg = new TH2F("MetVsMetDphiTrail_gg","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphiTrail_eg = new TH2F("MetVsMetDphiTrail_eg","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphiTrail_ee = new TH2F("MetVsMetDphiTrail_ee","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphiTrail_ff = new TH2F("MetVsMetDphiTrail_ff","",32,0.,3.2,100,0.,500.);
  TH2F *h_MetVsMetDphiTrail_gammafake = new TH2F("MetVsMetDphiTrail_gammafake","",32,0.,3.2,100,0.,500.);
  //------------------
  TH1F *h_BgroundCombIsoDR03Nminus3 = new TH1F("BgroundCombIsoDR03Nminus3","Combined Iso after Et>30,R9,h/e,sIetaIeta,Pixel=0,MET<30;combined Isolation (DR03 cone);Events",210,-5.,100.);
  TH1F *h_BgroundCombIsoDR04Nminus3 = new TH1F("BgroundCombIsoDR04Nminus3","Combined Iso after Et>30,R9,h/e,sIetaIeta,Pixel=0,MET<30;combined Isolation (DR04 cone);Events",210,-5.,100.);
  TH1F *h_BgroundCombIsoDR03Nminus3Trail = new TH1F("BgroundCombIsoDR03Nminus3Trail","Combined Iso of trail leg after Et>30,R9,h/e,sIetaIeta,Pixel=0,MET<30;combined Isolation (DR03 cone);Events",210,-5.,100.);
  TH1F *h_BgroundCombIsoDR04Nminus3Trail = new TH1F("BgroundCombIsoDR04Nminus3Trail","Combined Iso of trail leg after Et>30,R9,h/e,sIetaIeta,Pixel=0,MET<30;combined Isolation (DR04 cone);Events",210,-5.,100.);
  TH1F *h_BgroundEcalIsoDR03Nminus1 = new TH1F("BgroundEcalIsoDR03Nminus1","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIso,trackIso,MET<30;ecalRecHitSumEtConeDR03;Events",150,-5,25);
  TH1F *h_BgroundHcalIsoDR03Nminus1 = new TH1F("BgroundHcalIsoDR03Nminus1","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,trackIso,MET<30;hcalTowerSumEtConeDR03();Events",150,-5,25);
  TH1F *h_BgroundTrackIsoDR03Nminus1 = new TH1F("BgroundTrackIsoDR03Nminus1","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,hcalIso,MET<30;trkSumPtHollowConeDR03;Events",150,-5,25);
  //for trailing leg
  TH1F *h_BgroundCombIsoDR03Nminus3trail = new TH1F("BgroundCombIsoDR03Nminus3trail","Combined Iso after Et>30,R9,h/e,sIetaIeta,Pixel=0,MET<30;combined Isolation (DR03 cone);Events",210,-5.,100.);
  TH1F *h_BgroundCombIsoDR04Nminus3trail = new TH1F("BgroundCombIsoDR04Nminus3trail","Combined Iso after Et>30,R9,h/e,sIetaIeta,Pixel=0,MET<30;combined Isolation (DR04 cone);Events",210,-5.,100.);
  TH1F *h_BgroundEcalIsoDR03Nminus1trail = new TH1F("BgroundEcalIsoDR03Nminus1trail","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIso,trackIso,MET<30;ecalRecHitSumEtConeDR03;Events",150,-5,25);
  TH1F *h_BgroundHcalIsoDR03Nminus1trail = new TH1F("BgroundHcalIsoDR03Nminus1trail","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,trackIso,MET<30;hcalTowerSumEtConeDR03();Events",150,-5,25);
  TH1F *h_BgroundTrackIsoDR03Nminus1trail = new TH1F("BgroundTrackIsoDR03Nminus1trail","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,hcalIso,MET<30;trkSumPtHollowConeDR03;Events",150,-5,25);
  
  TH1F *h_EcalIsoDR03Nminus1 = new TH1F("EcalIsoDR03Nminus1","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIso,trackIso;ecalRecHitSumEtConeDR03;Events",150,-5,25);
  TH1F *h_EcalIsoDR04Nminus1 = new TH1F("EcalIsoDR04Nminus1","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIso,trackIso;ecalRecHitSumEtConeDR04;Events",150,-5,25);
  TH1F *h_HcalIsoDR03Nminus3 = new TH1F("HcalIsoDR03Nminus3","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0;hcalTowerSumEtConeDR03();Events",150,-5,25);
  TH1F *h_HcalIsoDR03Nminus1 = new TH1F("HcalIsoDR03Nminus1","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,trackIso;hcalTowerSumEtConeDR03();Events",150,-5,25);
  TH1F *h_HcalIsoDR04Nminus1 = new TH1F("HcalIsoDR04Nminus1","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,trackIso;hcalTowerSumEtConeDR04();Events",150,-5,25);
  TH1F *h_TrackIsoDR03Nminus3 = new TH1F("TrackIsoDR03Nminus3","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0;trkSumPtHollowConeDR03;Events",150,-5,25);
  TH1F *h_TrackIsoDR03Nminus1 = new TH1F("TrackIsoDR03Nminus1","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,hcalIso;trkSumPtHollowConeDR03;Events",150,-5,25);
  TH1F *h_TrackIsoDR04Nminus1 = new TH1F("TrackIsoDR04Nminus1","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,hcalIso;trkSumPtHollowConeDR04;Events",150,-5,25);
  TH1F *h_CombIsoNminus4 = new TH1F("CombIsoNminus4","RhoCorrected Combined Iso after Et>30,R9,h/e;Combined Isolation;Events",210,-5.,100.);
  TH1F *h_SigIetaIetaNminus4 = new TH1F("SigIetaIetaNminus4","SigmaIetaIeta after Et>30,R9,h/e;#sigma_{i#etai#eta};Events",30,0.,.03);
  TH2F *h_EcalIsoDR03VsCombIsoDR03Nminus4 = new TH2F("EcalIsoDR03VsCombIsoDR03Nminus4","EcalIsoDR03 Vs CombIsoDR03 - both RhoCorrected - after eta,Et>30,R9,h/e",150,-5.,25.,210,-5.,100.); 
  TH2F *h_HcalIsoDR03VsCombIsoDR03Nminus4 = new TH2F("HcalIsoDR03VsCombIsoDR03Nminus4","HcalIsoDR03 Vs CombIsoDR03 - both RhoCorrected - after eta,Et>30,R9,h/e",150,-5.,25.,210,-5.,100.); 
  TH2F *h_TrackIsoDR03VsCombIsoDR03Nminus4 = new TH2F("TrackIsoDR03VsCombIsoDR03Nminus4","TrackIsoDR03 Vs CombIsoDR03 - both RhoCorrected - after eta,Et>30,R9,h/e",150,-5.,25.,210,-5.,100.); 
  //Razr variables
  TH1F* h_ggMR = new TH1F("ggMR","Razor MR Variable in events with two photons with Et>40,25 GeV;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_egMR = new TH1F("egMR","Razor MR Variable in events with one photon and one electron with Et>40,25 GeV;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_eeMR = new TH1F("eeMR","Razor MR Variable in events with two electrons with Et>40,25 GeV;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_eeSideBandMR = new TH1F("eeSideBandMR","Razor MR Variable in events with two electrons in sideband with Et>40,25 GeV;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_eeMR_reweight_binned = new TH1F("eeMR_reweight_binned","Razor MR Variable in events with two electrons with Et>40,25 GeV;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_eeSideBandMR_reweight_binned = new TH1F("eeSideBandMR_reweight_binned","Razor MR Variable in events with two electrons in sideband with Et>40,25 GeV;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_ffMR = new TH1F("ffMR","Razor MR Variable in events with two fake photons with Et>40,25 GeV;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_ffMR_reweight_binned = new TH1F("ffMR_reweight_binned","Razor MR Variable in events with two fake photons with Et>40,25 GeV;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_ggMR_METlt40 = new TH1F("ggMR_METlt40","Razor MR Variable in events with two photons with Et>40,25 GeV, met<40;M_{R} (GeV);Events",300,0.,1500.);
  TH1F* h_ffMR_METlt40 = new TH1F("ffMR_METlt40","Razor MR Variable in events with two fake photons with Et>40,25 GeV, met<40;M_{R} (GeV);Events",300,0.,1500.);

  TH1F* h_ggR2 = new TH1F("ggR2","Razor R Variable in events with two photons with Et>40,25 GeV;R^{2};Events",50,0.,1.);
  TH1F* h_egR2 = new TH1F("egR2","Razor R Variable in events with one photon and one electron with Et>40,25 GeV;R^{2};Events",50,0.,1.);
  TH1F* h_eeR2 = new TH1F("eeR2","Razor R Variable in events with two electrons with Et>40,25 GeV;R^{2};Events",50,0.,1.);
  TH1F* h_eeSideBandR2 = new TH1F("eeSideBandR2","Razor R Variable in events with two electrons in sideband with Et>40,25 GeV;R^{2};Events",50,0.,1.);
  TH1F* h_eeR2_reweight_binned = new TH1F("eeR2_reweight_binned","Razor R Variable in events with two electrons with Et>40,25 GeV;R^{2};Events",50,0.,1.);
  TH1F* h_eeSideBandR2_reweight_binned = new TH1F("eeSideBandR2_reweight_binned","Razor R Variable in events with two electrons in sideband with Et>40,25 GeV;R^{2};Events",50,0.,1.);
  TH1F* h_ffR2 = new TH1F("ffR2","Razor R Variable in events with two fake photons with Et>40,25 GeV;R^{2};Events",50,0.,1.);
  TH1F* h_ffR2_reweight_binned = new TH1F("ffR2_reweight_binned","Razor R Variable in events with two fake photons with Et>40,25 GeV;R^{2};Events",50,0.,1.);

  TH2F* h_ggR2vsMR = new TH2F("ggR2vsMR","gg R^{2} vs M_{R}",300,0.,1500.,50,0.,1.);
  TH2F* h_egR2vsMR = new TH2F("egR2vsMR","eg R^{2} vs M_{R}",300,0.,1500.,50,0.,1.);
  TH2F* h_eeR2vsMR = new TH2F("eeR2vsMR","ee R^{2} vs M_{R}",300,0.,1500.,50,0.,1.);
  TH2F* h_eeR2vsMR_reweight_binned = new TH2F("eeR2vsMR_reweight_binned","ee_reweight_binned R^{2} vs M_{R}",300,0.,1500.,50,0.,1.);
  TH2F* h_eeSideBandR2vsMR = new TH2F("eeSideBandR2vsMR","eeSideBand R^{2} vs M_{R}",300,0.,1500.,50,0.,1.);
  TH2F* h_eeSideBandR2vsMR_reweight_binned = new TH2F("eeSideBandR2vsMR_reweight_binned","eeSideBand_reweight_binned R^{2} vs M_{R}",300,0.,1500.,50,0.,1.);
  TH2F* h_ffR2vsMR = new TH2F("ffR2vsMR","ff R^{2} vs M_{R}",300,0.,1500.,50,0.,1.);
  TH2F* h_ffR2vsMR_reweight_binned = new TH2F("ffR2vsMR_reweight_binned","ff_reweight_binned R^{2} vs M_{R}",300,0.,1500.,50,0.,1.);

  TH2F* h_NumE_NumG = new TH2F("NumE_NumG","Number of e(x), and  Number of g(y) from Pho_Cands sample;Number of #gamma;Number of e",7,0,7,7,0,7);
  TH3F* h_NumE_NumG_NumF = new TH3F("NumE_NumG_NumF","Number of e(x), Number of g(y), Number of f(z);Number of #gamma;Number of e; Number of f",7,0,7,7,0,7,7,0,7);
  TH2I* h_NPho_NFake = new TH2I("NPho_NFake","Number of photon (e/g) candidates(x) and Number of fake candidates(y);Number of Pho(e/g) candidates;Number of Fake candidates",5,0,5,5,0,5); 

  TH1I* h_NumGsfEles = new TH1I("NumGsfEles","Number of GsfElectrons that pass quality cuts;;Events",20,0,20);
  TH1I* h_NumPfEles = new TH1I("NumPfEles","Number of pfElectrons that pass quality cuts;;Events",20,0,20);
  TH1I* h_NumGsfEles_NoQcut = new TH1I("NumGsfEles_NoQcut","Number of GsfElectrons;;Events",20,0,20);
  TH1I* h_NumPfEles_NoQcut = new TH1I("NumPfEles_NoQcut","Number of pfElectrons;;Events",20,0,20);;
  TH1I* h_NumMvaEles_NoQcut = new TH1I("NumMvaEles_NoQcut","Number of MvaElectrons;;Events",20,0,20);
  TH1I* h_NumMuons = new TH1I("NumMuons","Number of muons that pass quality cuts;;Events",20,0,20);

  TH1F* h_MET_JetFail = new TH1F("MET_JetFail","Missing transverse energy in events with a L1FastL2L3 corrected PFJet with Pt>50 and #eta<2.5 that fails loose jet id;#slash{E}_{T} (GeV);Events",200,0.,1000.);

  TH1F * h_eMu_InvarMass_FullRange = new TH1F("h_eMu_InvarMass_FullRange","eMu 71<Invariant Mass<111;InvariantMass (GeV);Events", 2004,0.,1002.);
  TH1F * h_eMu_InvarMass = new TH1F("h_eMu_InvarMass","eMu 81<Invariant Mass<101;InvariantMass (GeV);Events", 2004,0.,1002.);
  TH1F * h_MuMu_InvarMass_FullRange = new TH1F("h_MuMu_InvarMass_FullRange","MuMu 71<Invariant Mass<111;InvariantMass (GeV);Events", 2004,0.,1002.);
  TH1F * h_MuMu_InvarMass = new TH1F("h_MuMu_InvarMass","MuMu 81<Invariant Mass<101;InvariantMass (GeV);Events", 2004,0.,1002.);
  TH1F * h_eMu_MET_FullRange = new TH1F("h_eMu_MET_FullRange","eMu 71<Invariant Mass<111;InvariantMass (GeV);Events", 2004,0.,1002.);
  TH1F * h_eMu_MET = new TH1F("h_eMu_MET","eMu 81<Invariant Mass<101;InvariantMass (GeV);Events", 2004,0.,1002.);
  TH1F * h_MuMu_MET_FullRange = new TH1F("h_MuMu_MET_FullRange","MuMu 71<Invariant Mass<111;InvariantMass (GeV);Events", 2004,0.,1002.);
  TH1F * h_MuMu_MET = new TH1F("h_MuMu_MET","MuMu 81<Invariant Mass<101;InvariantMass (GeV);Events", 2004,0.,1002.);

  TH1F* h_MuPt = new TH1F("MuPt","Pt of Muons;P_{T};Events",200,0.,1000.);
  TH1F* h_Mud0 = new TH1F("Mud0","d0 of Muons;d0;Events",100,-20.,20.);
  TH1F* h_MudZ = new TH1F("MudZ","dZ of Muons;dZ;Events",100,-20.,20.);
  TH1F* h_MuCombIso = new TH1F("MuCombIso","CombIso of Muons;CombIso;Events",550,-10.,100.);
  TH1F* h_MuRelIso = new TH1F("MuRelIso","RelIso of Muons;RelIso;Events",100,0.,2.);
  TH1F* h_MuEcalIso = new TH1F("MuEcalIso","EcalIso of Muons;EcalIso;Events",550,-10.,100.);
  TH1F* h_MuHcalIso = new TH1F("MuHcalIso","HcalIso of Muons;HcalIso;Events",550,-10.,100.);
  TH1F* h_MuTrackIso = new TH1F("MuTrackIso","TrackIso of Muons;TrackIso;Events",550,-10.,100.);

  TH1I* MuCount = new TH1I("MuCount","Num of muons passing different cuts;Cut;Events",15,0,15);

  TH1F* h_InstLumi = new TH1F("InstLumi","Number of events for a given instantaneous luminosity;Avg Inst Lumi (Hz/#mub);Events",200,0,2000);  
  TH2F* h_NVertexVsInstLumi = new TH2F("NVertexVsInstLumi","Number of vertices for a given average instantaneous luminosity;Avg Inst Lumi (Hz/#mub);Events",200,0,2000,50,0,50);
  TH1F* h_ggPerInstLumi = new TH1F("ggPerInstLumi","Number of gg events for a given instantaneous luminosity;Avg Inst Lumi (Hz/#mub);Events",200,0,2000);
  TH1F* h_gammafakePerInstLumi = new TH1F("gammafakePerInstLumi","Number of gammafake events for a given instantaneous luminosity;Avg Inst Lumi (Hz/#mub);Events",200,0,2000);
  TH1F* h_fgPerInstLumi = new TH1F("fgPerInstLumi","Number of fg events for a given instantaneous luminosity;Avg Inst Lumi (Hz/#mub);Events",200,0,2000);
  TH1F* h_gfPerInstLumi = new TH1F("gfPerInstLumi","Number of gf events for a given instantaneous luminosity;Avg Inst Lumi (Hz/#mub);Events",200,0,2000);
  TH1F* h_egPerInstLumi = new TH1F("egPerInstLumi","Number of eg events for a given instantaneous luminosity;Avg Inst Lumi (Hz/#mub);Events",200,0,2000);
  TH1F* h_eePerInstLumi = new TH1F("eePerInstLumi","Number of ee events for a given instantaneous luminosity;Avg Inst Lumi (Hz/#mub);Events",200,0,2000);
  TH1F* h_ffPerInstLumi = new TH1F("ffPerInstLumi","Number of ff events for a given instantaneous luminosity;Avg Inst Lumi (Hz/#mub);Events",200,0,2000);
  TH1F* h_ggPerNvertex = new TH1F("ggPerNvertex","Number of gg events for a given number of vertices;nVertex;Events",100,0,100);
  TH1F* h_gammafakePerNvertex = new TH1F("gammafakePerNvertex","Number of gammafake events for a given number of vertices;nVertex;Events",100,0,100);
  TH1F* h_fgPerNvertex = new TH1F("fgPerNvertex","Number of fg events for a given number of vertices;nVertex;Events",100,0,100);
  TH1F* h_gfPerNvertex = new TH1F("gfPerNvertex","Number of gf events for a given number of vertices;nVertex;Events",100,0,100);
  TH1F* h_egPerNvertex = new TH1F("egPerNvertex","Number of eg events for a given number of vertices;nVertex;Events",100,0,100);
  TH1F* h_eePerNvertex = new TH1F("eePerNvertex","Number of ee events for a given number of vertices;nVertex;Events",100,0,100);
  TH1F* h_ffPerNvertex = new TH1F("ffPerNvertex","Number of ff events for a given number of vertices;nVertex;Events",100,0,100);

  TH1F* h_ggMet_NV0_10 = new TH1F("ggMet_NV0_10","gg MET, 0<NVertex<10;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_NV0_10 = new TH1F("egMet_NV0_10","eg MET, 0<NVertex<10;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_NV0_10 = new TH1F("eeMet_NV0_10","ee MET, 0<NVertex<10;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSBMet_NV0_10 = new TH1F("eeSBMet_NV0_10","ee SideBand MET, 0<NVertex<10;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_NV0_10 = new TH1F("ffMet_NV0_10","ff MET, 0<NVertex<10;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  
  TH1F* h_ggMet_NV10_15 = new TH1F("ggMet_NV10_15","gg MET, 10<=NVertex<15;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_NV10_15 = new TH1F("egMet_NV10_15","eg MET, 10<=NVertex<15;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_NV10_15 = new TH1F("eeMet_NV10_15","ee MET, 10<=NVertex<15;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSBMet_NV10_15 = new TH1F("eeSBMet_NV10_15","ee SideBand MET, 10<=NVertex<15;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_NV10_15 = new TH1F("ffMet_NV10_15","ff MET, 10<=NVertex<15;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  
  TH1F* h_ggMet_NV15up = new TH1F("ggMet_NV15up","gg MET, NVertex>=15;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_NV15up = new TH1F("egMet_NV15up","eg MET, NVertex>=15;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_NV15up = new TH1F("eeMet_NV15up","ee MET, NVertex>=15;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeSBMet_NV15up = new TH1F("eeSBMet_NV15up","ee SideBand MET, NVertex>=15;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_NV15up = new TH1F("ffMet_NV15up","ff MET, NVertex>=15;#slash{E}_{T} (GeV);Events",200,0.,1000.);

  TH1F* h_gammafakeMet_NoJetMatch = new TH1F("gammafakeMet_NoJetMatch","gammafake MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMet_NoJetMatch = new TH1F("fgMet_NoJetMatch","fg MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMet_NoJetMatch = new TH1F("gfMet_NoJetMatch","gf MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMet_NoJetMatch = new TH1F("ggMet_NoJetMatch","gg MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_NoJetMatch = new TH1F("egMet_NoJetMatch","eg MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_NoJetMatch = new TH1F("eeMet_NoJetMatch","ee MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_NoJetMatch = new TH1F("ffMet_NoJetMatch","ff MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);

  TH1F* h_gammafakeMet_NoJetMatch_JetReq = new TH1F("gammafakeMet_NoJetMatch_JetReq","gammafake_JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMet_NoJetMatch_JetReq = new TH1F("fgMet_NoJetMatch_JetReq","fg_JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMet_NoJetMatch_JetReq = new TH1F("gfMet_NoJetMatch_JetReq","gf_JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMet_NoJetMatch_JetReq = new TH1F("ggMet_NoJetMatch_JetReq","gg_JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_NoJetMatch_JetReq = new TH1F("egMet_NoJetMatch_JetReq","eg_JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_NoJetMatch_JetReq = new TH1F("eeMet_NoJetMatch_JetReq","ee_JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_NoJetMatch_JetReq = new TH1F("ffMet_NoJetMatch_JetReq","ff_JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gammafakeMet_NoJetMatch_2JetReq = new TH1F("gammafakeMet_NoJetMatch_2JetReq","gammafake_2JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_fgMet_NoJetMatch_2JetReq = new TH1F("fgMet_NoJetMatch_2JetReq","fg_2JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_gfMet_NoJetMatch_2JetReq = new TH1F("gfMet_NoJetMatch_2JetReq","gf_2JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ggMet_NoJetMatch_2JetReq = new TH1F("ggMet_NoJetMatch_2JetReq","gg_2JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_egMet_NoJetMatch_2JetReq = new TH1F("egMet_NoJetMatch_2JetReq","eg_2JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_eeMet_NoJetMatch_2JetReq = new TH1F("eeMet_NoJetMatch_2JetReq","ee_2JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);
  TH1F* h_ffMet_NoJetMatch_2JetReq = new TH1F("ffMet_NoJetMatch_2JetReq","ff_2JetReq MET, at least one has no pf jet matched;#slash{E}_{T} (GeV);Events",200,0.,1000.);


  TH1F* h_numTrueInt = new TH1F("numTrueInt","",60,0,60);h_numTrueInt->Sumw2();

  TH1F* h_ClosestDR_gg = new TH1F("ClosestDR_gg","#DeltaR to nearest jet in gg sample",200,0,10);
  TH1F* h_ClosestDR_gammafake = new TH1F("ClosestDR_gammafake","#DeltaR to nearest jet in gammafake sample",200,0,10);
  TH1F* h_ClosestDR_fg = new TH1F("ClosestDR_fg","#DeltaR to nearest jet in fg sample",200,0,10);
  TH1F* h_ClosestDR_gf = new TH1F("ClosestDR_gf","#DeltaR to nearest jet in gf sample",200,0,10);
  TH1F* h_ClosestDR_eg = new TH1F("ClosestDR_eg","#DeltaR to nearest jet in eg sample",200,0,10);
  TH1F* h_ClosestDR_ee = new TH1F("ClosestDR_ee","#DeltaR to nearest jet in ee sample",200,0,10);
  TH1F* h_ClosestDR_ff = new TH1F("ClosestDR_ff","#DeltaR to nearest jet in ff sample",200,0,10);

  TH2F* h_DRfromJets_gg = new TH2F("DRfromJets_gg",";#DeltaR_{lead #gamma, jet};#DeltaR_{trail #gamma, jet}",100,0.,5.,100,0.,5.);
  TH2F* h_DRfromJets_eg = new TH2F("DRfromJets_eg",";#DeltaR_{lead #gamma, jet};#DeltaR_{trail #gamma, jet}",100,0.,5.,100,0.,5.);
  TH2F* h_DRfromJets_ee = new TH2F("DRfromJets_ee",";#DeltaR_{lead #gamma, jet};#DeltaR_{trail #gamma, jet}",100,0.,5.,100,0.,5.);
  TH2F* h_DRfromJets_ff = new TH2F("DRfromJets_ff",";#DeltaR_{lead #gamma, jet};#DeltaR_{trail #gamma, jet}",100,0.,5.,100,0.,5.);
  TH2F* h_DRfromJets_gf = new TH2F("DRfromJets_gf",";#DeltaR_{lead #gamma, jet};#DeltaR_{trail #gamma, jet}",100,0.,5.,100,0.,5.);
  TH2F* h_DRfromJets_fg = new TH2F("DRfromJets_fg",";#DeltaR_{lead #gamma, jet};#DeltaR_{trail #gamma, jet}",100,0.,5.,100,0.,5.);
  TH2F* h_DRfromJets_gammafake = new TH2F("DRfromJets_gammafake",";#DeltaR_{lead #gamma, jet};#DeltaR_{trail #gamma, jet}",100,0.,5.,100,0.,5.);

  TH1F* h_ClosestDPhi_gg = new TH1F("ClosestDPhi_gg","#Delta#phi to nearest jet in gg sample",200,0,10);
  TH1F* h_ClosestDPhi_gammafake = new TH1F("ClosestDPhi_gammafake","#Delta#phi to nearest jet in gammafake sample",200,0,10);
  TH1F* h_ClosestDPhi_fg = new TH1F("ClosestDPhi_fg","#Delta#phi to nearest jet in fg sample",200,0,10);
  TH1F* h_ClosestDPhi_gf = new TH1F("ClosestDPhi_gf","#Delta#phi to nearest jet in gf sample",200,0,10);
  TH1F* h_ClosestDPhi_eg = new TH1F("ClosestDPhi_eg","#Delta#phi to nearest jet in eg sample",200,0,10);
  TH1F* h_ClosestDPhi_ee = new TH1F("ClosestDPhi_ee","#Delta#phi to nearest jet in ee sample",200,0,10);
  TH1F* h_ClosestDPhi_ff = new TH1F("ClosestDPhi_ff","#Delta#phi to nearest jet in ff sample",200,0,10);

  TH1F* h_nJets_gg = new TH1F("nJets_gg","Number of jets in gg sample",10,0,10);
  TH1F* h_nJets_gammafake = new TH1F("nJets_gammafake","Number of jets in gammafake sample",10,0,10);
  TH1F* h_nJets_fg = new TH1F("nJets_fg","Number of jets in fg sample",10,0,10);
  TH1F* h_nJets_gf = new TH1F("nJets_gf","Number of jets in gf sample",10,0,10);
  TH1F* h_nJets_eg = new TH1F("nJets_eg","Number of jets in eg sample",10,0,10);
  TH1F* h_nJets_ee = new TH1F("nJets_ee","Number of jets in ee sample",10,0,10);
  TH1F* h_nJets_ff = new TH1F("nJets_ff","Number of jets in ff sample",10,0,10);

  TH1F* h_DiJetPtWeights_ff = new TH1F("DiJetPtWeights_ff","DiJet P_{T} weight",1000,0.,20.);
  TH1F* h_DiJetPtWeights_ee = new TH1F("DiJetPtWeights_ee","DiJet P_{T} weight",1000,0.,20.);
  TH1F* h_DiJetPtWeights_ff_JetReq = new TH1F("DiJetPtWeights_ff_JetReq","DiJet P_{T} weight",1000,0.,20.);
  TH1F* h_DiJetPtWeights_ee_JetReq = new TH1F("DiJetPtWeights_ee_JetReq","DiJet P_{T} weight",1000,0.,20.);
  TH1F* h_DiJetPtWeights_ff_2JetReq = new TH1F("DiJetPtWeights_ff_2JetReq","DiJet P_{T} weight",1000,0.,20.);
  TH1F* h_DiJetPtWeights_ee_2JetReq = new TH1F("DiJetPtWeights_ee_2JetReq","DiJet P_{T} weight",1000,0.,20.);

  TH1F* h_PfJet_pT = new TH1F("PfJet_pT","PF Jet p_{T}",200,0.,1000.);
  TH1F* h_PfJet_eta = new TH1F("PfJet_eta","PF Jet #eta",350,-3.5,3.5);
  TH1F* h_PfJet_phi = new TH1F("PfJet_phi","PF Jet #phi",64,-3.2,3.2);
  TH1F* h_PfJet_phoCleaned_pT = new TH1F("PfJet_phoCleaned_pT","PF Jets not matched to photons p_{T}",200,0.,1000.);
  TH1F* h_PfJet_phoCleaned_eta = new TH1F("PfJet_phoCleaned_eta","PF Jets not matched to photons  #eta",350,-3.5,3.5);
  TH1F* h_PfJet_phoCleaned_phi = new TH1F("PfJet_phoCleaned_phi","PF Jets not matched to photons  #phi",64,-3.2,3.2);
  TH1F* h_PfJet_phoMatched_gg_pT = new TH1F("PfJet_phoMatched_gg_pT","PF Jets matched to gg photons p_{T}",200,0.,1000.);
  TH1F* h_PfJet_phoMatched_gg_eta = new TH1F("PfJet_phoMatched_gg_eta","PF Jets not matched to gg photons  #eta",350,-3.5,3.5);
  TH1F* h_PfJet_phoMatched_gg_phi = new TH1F("PfJet_phoMatched_gg_phi","PF Jets not matched to gg photons  #phi",64,-3.2,3.2);
  TH1F* h_PfJet_phoMatched_gammafake_pT = new TH1F("PfJet_phoMatched_gammafake_pT","PF Jets matched to gammafake photons p_{T}",200,0.,1000.);
  TH1F* h_PfJet_phoMatched_gammafake_eta = new TH1F("PfJet_phoMatched_gammafake_eta","PF Jets not matched to gammafake photons  #eta",350,-3.5,3.5);
  TH1F* h_PfJet_phoMatched_gammafake_phi = new TH1F("PfJet_phoMatched_gammafake_phi","PF Jets not matched to gammafake photons  #phi",64,-3.2,3.2);
  TH1F* h_PfJet_phoMatched_ff_pT = new TH1F("PfJet_phoMatched_ff_pT","PF Jets matched to ff photons p_{T}",200,0.,1000.);
  TH1F* h_PfJet_phoMatched_ff_eta = new TH1F("PfJet_phoMatched_ff_eta","PF Jets not matched to ff photons  #eta",350,-3.5,3.5);
  TH1F* h_PfJet_phoMatched_ff_phi = new TH1F("PfJet_phoMatched_ff_phi","PF Jets not matched to ff photons  #phi",64,-3.2,3.2);

  TH2F* h_ffTriggers = new TH2F("ffTriggers","1=CaloIso_CaloIso, 2=CaloIso_R9Id, 3=R9Id_CaloIso, 4=R9Id_R9Id",4,.5,4.5,4,.5,4.5);
  TH2F* h_ffTriggersOnly = new TH2F("ffTriggersOnly","1=CaloIso_CaloIso, 2=CaloIso_R9Id, 3=R9Id_CaloIso, 4=R9Id_R9Id",4,.5,4.5,4,.5,4.5);
  h_ffTriggers->GetXaxis()->SetBinLabel(1,"CaloIso_CaloIso");h_ffTriggers->GetYaxis()->SetBinLabel(1,"CaloIso_CaloIso");
  h_ffTriggers->GetXaxis()->SetBinLabel(2,"CaloIso_R9Id");h_ffTriggers->GetYaxis()->SetBinLabel(2,"CaloIso_R9Id");
  h_ffTriggers->GetXaxis()->SetBinLabel(3,"R9Id_CaloIso");h_ffTriggers->GetYaxis()->SetBinLabel(3,"R9Id_CaloIso");
  h_ffTriggers->GetXaxis()->SetBinLabel(4,"R9Id_R9Id");h_ffTriggers->GetYaxis()->SetBinLabel(4,"R9Id_R9Id");
  h_ffTriggersOnly->GetXaxis()->SetBinLabel(1,"CaloIso_CaloIso");h_ffTriggersOnly->GetYaxis()->SetBinLabel(1,"CaloIso_CaloIso");
  h_ffTriggersOnly->GetXaxis()->SetBinLabel(2,"CaloIso_R9Id");h_ffTriggersOnly->GetYaxis()->SetBinLabel(2,"CaloIso_R9Id");
  h_ffTriggersOnly->GetXaxis()->SetBinLabel(3,"R9Id_CaloIso");h_ffTriggersOnly->GetYaxis()->SetBinLabel(3,"R9Id_CaloIso");
  h_ffTriggersOnly->GetXaxis()->SetBinLabel(4,"R9Id_R9Id");h_ffTriggersOnly->GetYaxis()->SetBinLabel(4,"R9Id_R9Id");

  TH1I* h_FakeCuts = new TH1I("FakeCuts","no cuts,#eta,E_{T},!isSpike,hOverE,pixelCut,IsoUpperCut,!(CHiso || sihih),!CHiso,!sihih",10,0,10);

  TH1F* h_ptHat = new TH1F("ptHat","",200,0,1000);h_ptHat->Sumw2();
  TH1F* h_ptHat_reweight = new TH1F("ptHat_reweight","",200,0,1000);h_ptHat_reweight->Sumw2();
  TH2F* h_met_vs_ptHat = new TH2F("met_vs_ptHat","",200,0,1000,200,0.,1000.);
  TH2F* h_met_vs_ptHat_gg = new TH2F("met_vs_ptHat_gg","",200,0,1000,200,0.,1000.);
  TH2F* h_met_vs_ptHat_ff = new TH2F("met_vs_ptHat_ff","",200,0,1000,200,0.,1000.);
  TH1F* h_ptHat_gg = new TH1F("ptHat_gg","",200,0,1000);
  TH1F* h_ptHat_ff = new TH1F("ptHat_ff","",200,0,1000);
  TH1F* h_ggPhoJetMatchFlavor_alg = new TH1F("ggPhoJetMatchFlavor_alg","",25,0,25);
  TH1F* h_ggPhoJetMatchFlavor_phy = new TH1F("ggPhoJetMatchFlavor_phy","",25,0,25);
  TH1F* h_ffPhoJetMatchFlavor_alg = new TH1F("ffPhoJetMatchFlavor_alg","",25,0,25);
  TH1F* h_ffPhoJetMatchFlavor_phy = new TH1F("ffPhoJetMatchFlavor_phy","",25,0,25);
  TH1F* h_gfPhoJetMatchFlavor_alg = new TH1F("gfPhoJetMatchFlavor_alg","",25,0,25);
  TH1F* h_gfPhoJetMatchFlavor_phy = new TH1F("gfPhoJetMatchFlavor_phy","",25,0,25);
  TH2F* h_ggMETvsPhoJetMatchFlavorLead = new TH2F("ggMETvsPhoJetMatchFlavorLead","",25,0,25,200,0,1000);
  TH2F* h_ggMETvsPhoJetMatchFlavorTrail = new TH2F("ggMETvsPhoJetMatchFlavorTrail","",25,0,25,200,0,1000);
  TH2F* h_ffMETvsPhoJetMatchFlavorLead = new TH2F("ffMETvsPhoJetMatchFlavorLead","",25,0,25,200,0,1000);
  TH2F* h_ffMETvsPhoJetMatchFlavorTrail = new TH2F("ffMETvsPhoJetMatchFlavorTrail","",25,0,25,200,0,1000);
  TH2F* h_gfMETvsPhoJetMatchFlavorLead = new TH2F("gfMETvsPhoJetMatchFlavorLead","",25,0,25,200,0,1000);
  TH2F* h_gfMETvsPhoJetMatchFlavorTrail = new TH2F("gfMETvsPhoJetMatchFlavorTrail","",25,0,25,200,0,1000);

  if(printLevel>0) cout<<"Histograms defined" << endl;
  if(printLevel>0) cout<<"Defining TMVA processes" << endl; 
  std::map<std::string,int> Use;
  
  // --- Cut optimisation
  Use["Cuts"]            = 1;
  Use["CutsD"]           = 0;
  Use["CutsPCA"]         = 0;
  Use["CutsGA"]          = 0;
  Use["CutsSA"]          = 0;
  // 
  // --- 1-dimensional likelihood ("naive Bayes estimator")
  Use["Likelihood"]      = 1;
  Use["LikelihoodD"]     = 0; // the "D" extension indicates decorrelated input variables (see option strings)
  Use["LikelihoodPCA"]   = 0; // the "PCA" extension indicates PCA-transformed input variables (see option strings)
  Use["LikelihoodKDE"]   = 0;
  Use["LikelihoodMIX"]   = 0;
  //
  // --- Mutidimensional likelihood and Nearest-Neighbour methods
  Use["PDERS"]           = 0;
  Use["PDERSD"]          = 0;
  Use["PDERSPCA"]        = 0;
  Use["PDEFoam"]         = 0;
  Use["PDEFoamBoost"]    = 0; // uses generalised MVA method boosting
  Use["KNN"]             = 0; // k-nearest neighbour method
  //
  // --- Linear Discriminant Analysis
  Use["LD"]              = 1; // Linear Discriminant identical to Fisher
  Use["Fisher"]          = 0;
  Use["FisherG"]         = 0;
  Use["BoostedFisher"]   = 0; // uses generalised MVA method boosting
  Use["HMatrix"]         = 0;
  //
  // --- Function Discriminant analysis
  Use["FDA_GA"]          = 0; // minimisation of user-defined function using Genetics Algorithm
  Use["FDA_SA"]          = 0;
  Use["FDA_MC"]          = 0;
  Use["FDA_MT"]          = 0;
  Use["FDA_GAMT"]        = 0;
  Use["FDA_MCMT"]        = 0;
  //
  // --- Neural Networks (all are feed-forward Multilayer Perceptrons)
  Use["MLP"]             = 0; // Recommended ANN
  Use["MLPBFGS"]         = 0; // Recommended ANN with optional training method
  Use["MLPBNN"]          = 0; // Recommended ANN with BFGS training method and bayesian regulator
  Use["CFMlpANN"]        = 0; // Depreciated ANN from ALEPH
  Use["TMlpANN"]         = 0; // ROOT's own ANN
  //
  // --- Support Vector Machine 
  Use["SVM"]             = 0;
  // 
  // --- Boosted Decision Trees
  Use["BDT"]             = 1; // uses Adaptive Boost
  Use["BDTG"]            = 0; // uses Gradient Boost
  Use["BDTB"]            = 0; // uses Bagging
  Use["BDTD"]            = 0; // decorrelation + Adaptive Boost
  // 
  // --- Friedman's RuleFit method, ie, an optimised series of cuts ("rules")
  Use["RuleFit"]         = 0;
  // ---------------------------------------------------------------
  Use["SVM"]             = 1;
  Use["Plugin"]          = 0;
  Use["Category"]        = 0;
  Use["SVM_Gauss"]       = 0;
  Use["SVM_Poly"]        = 0;
  Use["SVM_Lin"]         = 0; 

  Float_t varsumEt, vardPhi, varMETdPhiLead, varMETdPhiTrail, varSystemMETdPhi, varAlphaT, varPhotonLessHT, varDiEMPt, varInvarMass, varMet, varMR, varMETdPhi;

  reader->AddVariable( "TotEt", &varsumEt);
  reader->AddVariable( "dPhi", &vardPhi);
  //reader->AddVariable( "METdPhiLead", &varMETdPhiLead);
  //reader->AddVariable( "METdPhiTrail", &varMETdPhiTrail);
  //reader->AddVariable( "SystemMETdPhi", &varSystemMETdPhi);
  //reader->AddVariable( "AlphaT", &varSystemMETdPhi);// &varAlphaT);
  //reader->AddVariable( "PhotonLessHt", &varPhotonLessHT);
  //reader->AddVariable( "DiEMPt", &varDiEMPt);
  reader->AddVariable( "InvarMass", &varInvarMass);
  //reader->AddVariable( "Met", &varMet);
  reader->AddVariable( "MR", &varMR);
  reader->AddVariable( "METdPhi", &varMETdPhi);
  

  
  //TString dir    = "../../../TMVAfromKevin/TMVA/xmlWeights/Nov28/";
  TString dir    = "../../../TMVA-v4.1.2/test/Apr24/";
  TString prefix = "TMVAClassificationApr24";
  
  for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) {
    if (it->second) {
      TString methodName = TString(it->first) + TString(" method");
      TString weightfile = dir + prefix + TString("_") + TString(it->first) + TString(".weights.xml");
      reader->BookMVA( methodName, weightfile ); 
    }
  }

  TH1F   *gghistLk(0), *gghistLkD(0), *gghistLkPCA(0), *gghistLkKDE(0), *gghistLkMIX(0), *gghistPD(0), *gghistPDD(0);
  TH1F   *gghistPDPCA(0), *gghistKNN(0), *gghistHm(0);//, *gghistPDEFoam(0), *gghistPDEFoamErr(0), *gghistPDEFoamSig(0);
  TH1F   *gghistFi(0), *gghistFiG(0), *gghistFiB(0), *gghistLD(0), *gghistNn(0),*gghistNnbfgs(0),*gghistNnbnn(0);
  TH1F   *gghistNnC(0), *gghistNnT(0), *gghistBdt(0), *gghistBdtG(0), *gghistBdtD(0), *gghistRf(0), *gghistSVMG(0),*gghistSVM(0);
  TH1F   *gghistSVMP(0), *gghistSVML(0), *gghistFDAMT(0), *gghistFDAGA(0), *gghistCat(0), *gghistPBdt(0);
  //  TH1F   *ggprobHistFi(0), *ggrarityHistFi(0);
  
  TH1F  *ffhistLD(0),*ffhistBdt(0),*ffhistSVM(0),*ffhistLD_rw(0),*ffhistBdt_rw(0),*ffhistSVM_rw(0);
  TH1F  *eghistLD(0),*eghistBdt(0),*eghistSVM(0);
  TH1F  *eehistLD(0),*eehistBdt(0),*eehistSVM(0);
  TH1F  *gfhistLD(0),*gfhistBdt(0),*gfhistSVM(0);
  TH1F  *fghistLD(0),*fghistBdt(0),*fghistSVM(0);
  TH1F  *gammafakehistLD(0),*gammafakehistBdt(0),*gammafakehistSVM(0),*gammafakehistLD_rw(0),*gammafakehistBdt_rw(0),*gammafakehistSVM_rw(0);
  //cout<<"Use[BDT]= "<<Use["BDT"]<<endl;
  UInt_t nbin = 100;

  if (Use["Likelihood"])    gghistLk      = new TH1F( "ggMva_Likelihood",    "ggMva_Likelihood",    nbin, -1, 1 );
  if (Use["LikelihoodD"])   gghistLkD     = new TH1F( "ggMva_LikelihoodD",   "ggMva_LikelihoodD",   nbin, -1, 0.9999 );
  if (Use["LikelihoodPCA"]) gghistLkPCA   = new TH1F( "ggMva_LikelihoodPCA", "ggMva_LikelihoodPCA", nbin, -1, 1 );
  if (Use["LikelihoodKDE"]) gghistLkKDE   = new TH1F( "ggMva_LikelihoodKDE", "ggMva_LikelihoodKDE", nbin,  -0.00001, 0.99999 );
  if (Use["LikelihoodMIX"]) gghistLkMIX   = new TH1F( "ggMva_LikelihoodMIX", "ggMva_LikelihoodMIX", nbin,  0, 1 );
  if (Use["PDERS"])         gghistPD      = new TH1F( "ggMva_PDERS",         "ggMva_PDERS",         nbin,  0, 1 );
  if (Use["PDERSD"])        gghistPDD     = new TH1F( "ggMva_PDERSD",        "ggMva_PDERSD",        nbin,  0, 1 );
  if (Use["PDERSPCA"])      gghistPDPCA   = new TH1F( "ggMva_PDERSPCA",      "ggMva_PDERSPCA",      nbin,  0, 1 );
  if (Use["KNN"])           gghistKNN     = new TH1F( "ggMva_KNN",           "ggMva_KNN",           nbin,  0, 1 );
  if (Use["HMatrix"])       gghistHm      = new TH1F( "ggMva_HMatrix",       "ggMva_HMatrix",       nbin, -0.95, 1.55 );
  if (Use["Fisher"])        gghistFi      = new TH1F( "ggMva_Fisher",        "ggMva_Fisher",        nbin, -4, 4 );
  if (Use["FisherG"])       gghistFiG     = new TH1F( "ggMva_FisherG",       "ggMva_FisherG",       nbin, -1, 1 );
  if (Use["BoostedFisher"]) gghistFiB     = new TH1F( "ggMva_BoostedFisher", "ggMva_BoostedFisher", nbin, -2, 2 );
  if (Use["LD"]){           gghistLD      = new TH1F( "ggMva_LD",            "ggMva_LD",            nbin, -2, 2 );
    ffhistLD      = new TH1F( "ffMva_LD",            "ffMva_LD",            nbin, -2, 2 );
    fghistLD      = new TH1F( "fgMva_LD",            "fgMva_LD",            nbin, -2, 2 );
    gammafakehistLD      = new TH1F( "gammafakeMva_LD",            "gammafakeMva_LD",            nbin, -2, 2 );
    gfhistLD      = new TH1F( "gfMva_LD",            "gfMva_LD",            nbin, -2, 2 );
    eghistLD      = new TH1F( "egMva_LD",            "egMva_LD",            nbin, -2, 2 );
    eehistLD      = new TH1F( "eeMva_LD",            "eeMva_LD",            nbin, -2, 2 );
    gammafakehistLD_rw     = new TH1F( "gammafakeMva_LD_reweight_binned",           "gammafakeMva_LD_reweight_binned",           nbin, -2., 2. );
    ffhistLD_rw     = new TH1F( "ffMva_LD_reweight_binned",           "ffMva_LD_reweight_binned",           nbin, -2., 2. );}
  if (Use["MLP"])           gghistNn      = new TH1F( "ggMva_MLP",           "ggMva_MLP",           nbin, -1.25, 1.5 );
  if (Use["MLPBFGS"])       gghistNnbfgs  = new TH1F( "ggMva_MLPBFGS",       "ggMva_MLPBFGS",       nbin, -1.25, 1.5 );
  if (Use["MLPBNN"])        gghistNnbnn   = new TH1F( "ggMva_MLPBNN",        "ggMva_MLPBNN",        nbin, -1.25, 1.5 );
  if (Use["CFMlpANN"])      gghistNnC     = new TH1F( "ggMva_CFMlpANN",      "ggMva_CFMlpANN",      nbin,  0, 1 );
  if (Use["TMlpANN"])       gghistNnT     = new TH1F( "ggMva_TMlpANN",       "ggMva_TMlpANN",       nbin, -1.3, 1.3 );
  if (Use["BDT"]){         
    gghistBdt     = new TH1F( "ggMva_BDT",           "ggMva_BDT",           nbin, -2., 2. );
    gfhistBdt     = new TH1F( "gfMva_BDT",           "gfMva_BDT",           nbin, -2., 2. );
    fghistBdt     = new TH1F( "fgMva_BDT",           "fgMva_BDT",           nbin, -2., 2. );
    gammafakehistBdt     = new TH1F( "gammafakeMva_BDT",           "gammafakeMva_BDT",           nbin, -2., 2. );
    ffhistBdt     = new TH1F( "ffMva_BDT",           "ffMva_BDT",           nbin, -2., 2. );
    eghistBdt     = new TH1F( "egMva_BDT",           "egMva_BDT",           nbin, -2., 2. );
    eehistBdt     = new TH1F( "eeMva_BDT",           "eeMva_BDT",           nbin, -2., 2. );
    gammafakehistBdt_rw     = new TH1F( "gammafakeMva_BDT_reweight_binned",           "gammafakeMva_BDT_reweight_binned",           nbin, -2., 2. );
    ffhistBdt_rw     = new TH1F( "ffMva_BDT_reweight_binned",           "ffMva_BDT_reweight_binned",           nbin, -2., 2. );}
  //cout<<"ggHist after : "<<gghistBdt<<endl;
  if (Use["BDTD"])          gghistBdtD    = new TH1F( "ggMva_BDTD",          "ggMva_BDTD",          nbin, -2., 2. );
  if (Use["BDTG"])          gghistBdtG    = new TH1F( "ggMva_BDTG",          "ggMva_BDTG",          nbin, -1.0, 1.0 );
  if (Use["RuleFit"])       gghistRf      = new TH1F( "ggMva_RuleFit",       "ggMva_RuleFit",       nbin, -2.0, 2.0 );
  if (Use["SVM"]){          gghistSVM     = new TH1F( "ggMva_SVM",           "ggMva_SVM",           nbin,  0.0, 2.0 );
    gfhistSVM     = new TH1F( "gfMva_SVM",           "gfMva_SVM",           nbin,  0.0, 2.0 );
    fghistSVM     = new TH1F( "fgMva_SVM",           "fgMva_SVM",           nbin,  0.0, 2.0 );
    gammafakehistSVM     = new TH1F( "gammafakeMva_SVM",           "gammafakeMva_SVM",           nbin,  0.0, 2.0 );
    ffhistSVM     = new TH1F( "ffMva_SVM",           "ffMva_SVM",           nbin,  0.0, 2.0 );
    eghistSVM     = new TH1F( "egMva_SVM",           "egMva_SVM",           nbin,  0.0, 2.0 );
    eehistSVM     = new TH1F( "eeMva_SVM",           "eeMva_SVM",           nbin,  0.0, 2.0 );
    gammafakehistSVM_rw     = new TH1F( "gammafakeMva_SVM_reweight_binned",           "gammafakeMva_SVM_reweight_binned",           nbin, -2., 2. );
    ffhistSVM_rw     = new TH1F( "ffMva_SVM_reweight_binned",           "ffMva_SVM_reweight_binned",           nbin, -2., 2. );}
  if (Use["SVM_Gauss"])     gghistSVMG    = new TH1F( "ggMva_SVM_Gauss",     "ggMva_SVM_Gauss",     nbin,  0.0, 2.0 );
  if (Use["SVM_Poly"])      gghistSVMP    = new TH1F( "ggMva_SVM_Poly",      "ggMva_SVM_Poly",      nbin,  0.0, 2.0 );
  if (Use["SVM_Lin"])       gghistSVML    = new TH1F( "ggMva_SVM_Lin",       "ggMva_SVM_Lin",       nbin,  0.0, 2.0 );
  if (Use["FDA_MT"])        gghistFDAMT   = new TH1F( "ggMva_FDA_MT",        "ggMva_FDA_MT",        nbin, -2.0, 3.0 );
  if (Use["FDA_GA"])        gghistFDAGA   = new TH1F( "ggMva_FDA_GA",        "ggMva_FDA_GA",        nbin, -2.0, 3.0 );
  if (Use["Category"])      gghistCat     = new TH1F( "ggMva_Category",      "ggMva_Category",      nbin, -2., 2. );
  if (Use["Plugin"])        gghistPBdt    = new TH1F( "ggMva_PBDT",          "ggMva_PBDT",           nbin, -2., 2. );

  TH2F* ggMet_vs_BDT = new TH2F("ggMet_vs_BDT","",nbin,-1.,1.,200,0.,1000.);
  TH2F* ffMet_vs_BDT = new TH2F("ffMet_vs_BDT","",nbin,-1.,1.,200,0.,1000.);
  if(printLevel>0) cout<<"TMVA processes defined" << endl;

  //vectors for Run&Event numbers - print out at end
  vector< pair<int, int> > ggRunEvent,eeRunEvent,ffRunEvent,gammafakeRunEvent,egRunEvent;
  vector< pair<int, int> > ggJetReqRunEvent,eeJetReqRunEvent,ffJetReqRunEvent,gammafakeJetReqRunEvent,egJetReqRunEvent;
  vector< pair<int, int> > gg2JetReqRunEvent,ee2JetReqRunEvent,ff2JetReqRunEvent,gammafake2JetReqRunEvent,eg2JetReqRunEvent;
  vector< pair<int, int> > failMetFilterRunEvent;

  //toy diempt plots to get errors 
  TString ggtitle="",eetitle="",fftitle="",gammafaketitle="",eeSBLowtitle="",eeSBHightitle="";
  TString ggtitle_JetReq="",eetitle_JetReq="",fftitle_JetReq="",gammafaketitle_JetReq="",eeSBLowtitle_JetReq="",eeSBHightitle_JetReq="";
  TString ggtitle_2JetReq="",eetitle_2JetReq="",fftitle_2JetReq="",gammafaketitle_2JetReq="",eeSBLowtitle_2JetReq="",eeSBHightitle_2JetReq="";
  //float Val=0., Err=0.;

  if(printLevel>0) cout<<"Create Toys directory" << endl;
  TDirectory *toys = fout->mkdir("Toys");
  toys->cd();
  if(printLevel>0) cout<<"Toys directory created" << endl;

  vector<TH1F*> eeMetValues,ffMetValues;
  vector<TH1F*> eeMet_reweight_binned_toy;
  vector<TH1F*> eeSidebandLowMet_reweight_binned_toy;
  vector<TH1F*> eeSidebandHighMet_reweight_binned_toy;
  vector<TH1F*> ffMet_reweight_binned_toy,ffMet_reweight_binned_toy_JetReq,ffMet_reweight_binned_toy_2JetReq;
  vector<TH1F*> gammafakeMet_reweight_binned_toy,gammafakeMet_reweight_binned_toy_JetReq,gammafakeMet_reweight_binned_toy_2JetReq;
  vector<TH1F*> eeMetValues_JetReq,ffMetValues_JetReq;
  vector<TH1F*> eeMetValues_2JetReq,ffMetValues_2JetReq;
  vector<TH1F*> eeMet_reweight_binned_toy_JetReq;
  vector<TH1F*> eeMet_reweight_binned_toy_2JetReq;
  vector<TH1F*> eeSidebandLowMet_reweight_binned_toy_JetReq;
  vector<TH1F*> eeSidebandHighMet_reweight_binned_toy_JetReq;
  vector<TH1F*> eeSidebandLowMet_reweight_binned_toy_2JetReq;
  vector<TH1F*> eeSidebandHighMet_reweight_binned_toy_2JetReq;

  vector<TH1F*> h_ffMetChi2,h_ffMetChi2_JetReq,h_ffMetChi2_2JetReq;
  vector<TH1F*> h_ffMetChi2PF,h_ffMetChi2PF_JetReq,h_ffMetChi2PF_2JetReq;
  vector<TH1F*> h_gfMetChi2PF,h_gfMetChi2PF_JetReq,h_gfMetChi2PF_2JetReq;
  vector<TH1F*> h_fgMetChi2PF,h_fgMetChi2PF_JetReq,h_fgMetChi2PF_2JetReq;
  vector<TH1F*> h_gammafakeMetChi2PF,h_gammafakeMetChi2PF_JetReq,h_gammafakeMetChi2PF_2JetReq;

  for(int i=0;i<1000;i++){
    eetitle="eeMet_toy_";eetitle+=i+1;
    eeSBLowtitle="eeSidebandLowMet_toy_";eeSBLowtitle+=i+1;
    eeSBHightitle="eeSidebandHighMet_toy_";eeSBHightitle+=i+1;
    fftitle="ffMet_toy_";fftitle+=i+1;
    gammafaketitle="gammafakeMet_toy_";gammafaketitle+=i+1;

    eeMet_reweight_binned_toy.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));
    eeSidebandLowMet_reweight_binned_toy.push_back( new TH1F(eeSBLowtitle,eeSBLowtitle,200,0.,1000.));
    eeSidebandHighMet_reweight_binned_toy.push_back( new TH1F(eeSBHightitle,eeSBHightitle,200,0.,1000.));
    ffMet_reweight_binned_toy.push_back( new TH1F(fftitle,fftitle,200,0.,1000.));
    gammafakeMet_reweight_binned_toy.push_back( new TH1F(gammafaketitle,gammafaketitle,200,0.,1000.));

    eetitle_JetReq="ee_JetReqMet_toy_";eetitle_JetReq+=i+1;
    eeSBLowtitle_JetReq="eeSideband_JetReqLowMet_toy_";eeSBLowtitle_JetReq+=i+1;
    eeSBHightitle_JetReq="eeSideband_JetReqHighMet_toy_";eeSBHightitle_JetReq+=i+1;
    fftitle_JetReq="ff_JetReqMet_toy_";fftitle_JetReq+=i+1;
    gammafaketitle_JetReq="gammafake_JetReqMet_toy_";gammafaketitle_JetReq+=i+1;

    eeMet_reweight_binned_toy_JetReq.push_back( new TH1F(eetitle_JetReq,eetitle_JetReq,200,0.,1000.));
    eeSidebandLowMet_reweight_binned_toy_JetReq.push_back( new TH1F(eeSBLowtitle_JetReq,eeSBLowtitle_JetReq,200,0.,1000.));
    eeSidebandHighMet_reweight_binned_toy_JetReq.push_back( new TH1F(eeSBHightitle_JetReq,eeSBHightitle_JetReq,200,0.,1000.));
    ffMet_reweight_binned_toy_JetReq.push_back( new TH1F(fftitle_JetReq,fftitle_JetReq,200,0.,1000.));
    gammafakeMet_reweight_binned_toy_JetReq.push_back( new TH1F(gammafaketitle_JetReq,gammafaketitle_JetReq,200,0.,1000.));

    eetitle_2JetReq="ee_2JetReqMet_toy_";eetitle_2JetReq+=i+1;
    eeSBLowtitle_2JetReq="eeSideband_2JetReqLowMet_toy_";eeSBLowtitle_2JetReq+=i+1;
    eeSBHightitle_2JetReq="eeSideband_2JetReqHighMet_toy_";eeSBHightitle_2JetReq+=i+1;
    fftitle_2JetReq="ff_2JetReqMet_toy_";fftitle_2JetReq+=i+1;
    gammafaketitle_2JetReq="gammafake_2JetReqMet_toy_";gammafaketitle_2JetReq+=i+1;

    eeMet_reweight_binned_toy_2JetReq.push_back( new TH1F(eetitle_2JetReq,eetitle_2JetReq,200,0.,1000.));
    eeSidebandLowMet_reweight_binned_toy_2JetReq.push_back( new TH1F(eeSBLowtitle_2JetReq,eeSBLowtitle_2JetReq,200,0.,1000.));
    eeSidebandHighMet_reweight_binned_toy_2JetReq.push_back( new TH1F(eeSBHightitle_2JetReq,eeSBHightitle_2JetReq,200,0.,1000.));
    ffMet_reweight_binned_toy_2JetReq.push_back( new TH1F(fftitle_2JetReq,fftitle_2JetReq,200,0.,1000.));
    gammafakeMet_reweight_binned_toy_2JetReq.push_back( new TH1F(gammafaketitle_2JetReq,gammafaketitle_2JetReq,200,0.,1000.));

    if(i<51){
      eetitle="ffMet_Cut_";eetitle+=i+1;eetitle+="GeV";
      h_ffMetChi2.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));
      eetitle="ffMet_Cut_";eetitle+=i+1;eetitle+="GeV_JetReq";
      h_ffMetChi2_JetReq.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));
      eetitle="ffMet_Cut_";eetitle+=i+1;eetitle+="GeV_2JetReq";
      h_ffMetChi2_2JetReq.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));

      eetitle="ffMet_Cut_";eetitle+=i+1;eetitle+="GeV_PF";
      h_ffMetChi2PF.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));
      eetitle="ffMet_Cut_";eetitle+=i+1;eetitle+="GeV_PF_JetReq";
      h_ffMetChi2PF_JetReq.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));
      eetitle="ffMet_Cut_";eetitle+=i+1;eetitle+="GeV_PF_2JetReq";
      h_ffMetChi2PF_2JetReq.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));

      eetitle="gfMet_Cut_";eetitle+=i+1;eetitle+="GeV_PF";
      h_gfMetChi2PF.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));
      eetitle="gfMet_Cut_";eetitle+=i+1;eetitle+="GeV_PF_JetReq";
      h_gfMetChi2PF_JetReq.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));
      eetitle="gfMet_Cut_";eetitle+=i+1;eetitle+="GeV_PF_2JetReq";
      h_gfMetChi2PF_2JetReq.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));

      eetitle="fgMet_Cut_";eetitle+=i+1;eetitle+="GeV_PF";
      h_fgMetChi2PF.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));
      eetitle="fgMet_Cut_";eetitle+=i+1;eetitle+="GeV_PF_JetReq";
      h_fgMetChi2PF_JetReq.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));
      eetitle="fgMet_Cut_";eetitle+=i+1;eetitle+="GeV_PF_2JetReq";
      h_fgMetChi2PF_2JetReq.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));

      eetitle="gammafakeMet_Cut_";eetitle+=i+1;eetitle+="GeV_PF";
      h_gammafakeMetChi2PF.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));
      eetitle="gammafakeMet_Cut_";eetitle+=i+1;eetitle+="GeV_PF_JetReq";
      h_gammafakeMetChi2PF_JetReq.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));
      eetitle="gammafakeMet_Cut_";eetitle+=i+1;eetitle+="GeV_PF_2JetReq";
      h_gammafakeMetChi2PF_2JetReq.push_back( new TH1F(eetitle,eetitle,200,0.,1000.));

    }

  }
  fout->cd();

  if(printLevel>0) cout<<"Define job-wide variables " << endl;
  //two susy::photon pointers, later they will be used for the top two photon candidates
  susy::Photon* PhoOne = new susy::Photon; PhoOne->Init();
  susy::Photon* PhoTwo = new susy::Photon; PhoTwo->Init();
  susy::PFJet* DiJetPtJet1 = new susy::PFJet; DiJetPtJet1->Init();
  susy::PFJet* DiJetPtJet2 = new susy::PFJet; DiJetPtJet2->Init();
  susy::PFJet* invmassJet1 = new susy::PFJet; invmassJet1->Init();
  susy::PFJet* invmassJet2 = new susy::PFJet; invmassJet2->Init();
  std::pair<float,float> ggPTs=make_pair(0.,0.),eePTs=make_pair(0.,0.),egPTs=make_pair(0.,0.);
  std::pair<float,float> ggPTs_JetReq=make_pair(0.,0.),eePTs_JetReq=make_pair(0.,0.),egPTs_JetReq=make_pair(0.,0.);
  std::pair<float,float> ggPTs_2JetReq=make_pair(0.,0.),eePTs_2JetReq=make_pair(0.,0.),egPTs_2JetReq=make_pair(0.,0.);

  //susy::Photon* PhoThree = new susy::Photon; PhoThree->Init();
  //counters for the number of events
  int ngg=0,nggDirectEWK=0,nggDirectEWK_JetReq=0,nDirectEWK=0,ngf=0,nfg=0,ngammafake=0, ngge=0, nggee=0, neg=0, nee=0, neef=0, neeg=0, neegg=0, neeSideBand=0, nff=0, numFFsignalTriggerOnly=0, numFFsignalTrigger=0, ndiPho=0, ndiPhoCands=0, neMu=0, nMuMu=0,nHasDiJetPt=0,nNotHasDiJetPt=0;
  int ngg_JetReq=0, ngf_JetReq=0,nfg_JetReq=0,ngammafake_JetReq=0, neg_JetReq=0, nee_JetReq=0, neeSideBand_JetReq=0, nff_JetReq=0, ndiPho_JetReq=0, ndiPhoCands_JetReq=0;
  int ngg_2JetReq=0, ngf_2JetReq=0,nfg_2JetReq=0,ngammafake_2JetReq=0, neg_2JetReq=0, nee_2JetReq=0, neeSideBand_2JetReq=0, nff_2JetReq=0, ndiPho_2JetReq=0, ndiPhoCands_2JetReq=0;
  int nee_matrix_lead=0,nee_matrix_lead_JetReq=0,nee_matrix_lead_2JetReq=0,nff_matrix_lead=0,nff_matrix_lead_JetReq=0,nff_matrix_lead_2JetReq=0;
  int nee_matrix_trail=0,nee_matrix_trail_JetReq=0,nee_matrix_trail_2JetReq=0,nff_matrix_trail=0,nff_matrix_trail_JetReq=0,nff_matrix_trail_2JetReq=0;
  int nFailJetMETcut_gg=0,nFailJetMETcut_ee=0,nFailJetMETcut_eg=0,nFailJetMETcut_ff=0,nFailJetMETcut_gammafake=0,nFailJetMETcut_gf=0,nFailJetMETcut_fg=0;
  int nPhoCandsFailDphiCut=0,nFakeCandsFailDphiCut=0,nPhoCandsTotal=0,nFakeCandsTotal=0;
  //int pfPho=0,notPfPho=0;
  //int nfgg=0, nfeg=0, nfee=0;
  //int nfg=0, nfe=0;
  //counters for random things I want to keep track of
  int nTwoPhosAndTwoFakes=0;
  int nThreePhoEvents=0, nThreeFakeEvents=0;
  int nFourPhoEvents=0, nFourFakeEvents=0;
  int nPhosFailDR=0, nFakesFailDR=0;
  int nPhosFailDphi=0, nFakesFailDphi=0;
  int eleCount=0,pfEleCount=0,MvaEleCount=0;
  int oldP=0,newP=0,ffMVAcounter=0,egMVAcounter=0;

  float numVert[100]={0.},ggnumVert[100]={0.},egnumVert[100]={0.},eenumVert[100]={0.},ffnumVert[100]={0.},gfnumVert[100]={0.},fgnumVert[100]={0.},gammafakenumVert[100]={0.};
  TRandom rando;
  if(printLevel>0) cout<<"Job-wide variables defined" << endl;

  //define bin-wise MET corrections from DiEMPt ratios
  //TFile f_weights("/data/ndpc3/b/dmorse/RA3/AnalysisOutput/hist_Data2011_Filter_JsonHLTnVertexTwo40-25GeVBarrelPhosWithR9-HoverE-CaloIdL-R9idOrIsoVL_RhoPileupCorr_Photon_Analysis_OldRatios_NewJetDefWithMuons.root","READ");

  if(printLevel>0)cout<<"Read in weights histogram" << endl;
  TFile f_weights("reweights.root","READ");
  if(printLevel>0)cout<<"Weights histogram read in" << endl;
  f_weights.cd();
  TString eeWeightTitle="",ffWeightTitle="",eeWeightTitleJet="",ffWeightTitleJet="",eeSideBandLowWeightTitleJet="",eeSideBandHighWeightTitleJet="",eeSideBandLowWeightTitle="",eeSideBandHighWeightTitle="",gfWeightTitle="",gfWeightTitleJet="",fgWeightTitle="",fgWeightTitleJet="",gammafakeWeightTitle="",gammafakeWeightTitleJet="";  
  TString eeWeightTitle_JetReq="",ffWeightTitle_JetReq="",eeWeightTitleJet_JetReq="",ffWeightTitleJet_JetReq="",eeSideBandLowWeightTitleJet_JetReq="",eeSideBandHighWeightTitleJet_JetReq="",eeSideBandLowWeightTitle_JetReq="",eeSideBandHighWeightTitle_JetReq="",fgWeightTitle_JetReq="",fgWeightTitleJet_JetReq="",gfWeightTitle_JetReq="",gfWeightTitleJet_JetReq="",gammafakeWeightTitle_JetReq="",gammafakeWeightTitleJet_JetReq="";
  TString eeWeightTitle_2JetReq="",ffWeightTitle_2JetReq="",eeWeightTitleJet_2JetReq="",ffWeightTitleJet_2JetReq="",eeSideBandLowWeightTitleJet_2JetReq="",eeSideBandHighWeightTitleJet_2JetReq="",eeSideBandLowWeightTitle_2JetReq="",eeSideBandHighWeightTitle_2JetReq="",fgWeightTitle_2JetReq="",fgWeightTitleJet_2JetReq="",gfWeightTitle_2JetReq="",gfWeightTitleJet_2JetReq="",gammafakeWeightTitle_2JetReq="",gammafakeWeightTitleJet_2JetReq="";
  //TH1F *h_weightsEE = (TH1F*)f_weights.Get("ggeeDiEMPtRatio");
  //TH1F *h_weightsFF = (TH1F*)f_weights.Get("ggffDiEMPtRatio");
  vector< pair<float,float> > EEreweights[4];//full,0jet,1jet,>=2jet  filled by bins of diempt
  vector< pair<float,float> > FFreweights[4];
  vector< pair<float,float> > GFreweights[4];
  vector< pair<float,float> > FGreweights[4];
  vector< pair<float,float> > GammaFakereweights[4];
  vector< pair<float,float> >  EESideBandLowReweights[4];
  vector< pair<float,float> >  EESideBandHighReweights[4];
  vector< pair<float,float> >  EESideBandLowReweightsJet[4];
  vector< pair<float,float> >  EESideBandHighReweightsJet[4];
  vector< pair<float,float> >  EEreweightsJet[4];
  vector< pair<float,float> >  FFreweightsJet[4];
  vector< pair<float,float> >  GFreweightsJet[4];
  vector< pair<float,float> >  FGreweightsJet[4];
  vector< pair<float,float> >  GammaFakereweightsJet[4];
  vector<TH1F*> h_weightsEEVec;
  vector<TH1F*> h_weightsFFVec;
  vector<TH1F*> h_weightsGFVec;
  vector<TH1F*> h_weightsFGVec;
  vector<TH1F*> h_weightsGammaFakeVec;
  vector<TH1F*> h_weightsEEJetVec;
  vector<TH1F*> h_weightsFFJetVec;
  vector<TH1F*> h_weightsGFJetVec;
  vector<TH1F*> h_weightsFGJetVec;
  vector<TH1F*> h_weightsGammaFakeJetVec;
  vector<TH1F*> h_weightsEEsidebandLowVec;
  vector<TH1F*> h_weightsEEsidebandHighVec;
  vector<TH1F*> h_weightsEEsidebandLowJetVec;
  vector<TH1F*> h_weightsEEsidebandHighJetVec;
  vector< pair<float,float> > EEreweights_JetReq[4];//full,0jet,1jet,>=2jet  filled by bins of diempt
  vector< pair<float,float> > FFreweights_JetReq[4];
  vector< pair<float,float> > GFreweights_JetReq[4];
  vector< pair<float,float> > FGreweights_JetReq[4];
  vector< pair<float,float> > GammaFakereweights_JetReq[4];
  vector< pair<float,float> >  EEreweightsJet_JetReq[4];
  vector< pair<float,float> >  FFreweightsJet_JetReq[4];
  vector< pair<float,float> >  GFreweightsJet_JetReq[4];
  vector< pair<float,float> >  FGreweightsJet_JetReq[4];
  vector< pair<float,float> >  GammaFakereweightsJet_JetReq[4];
  vector< pair<float,float> >  EESideBandLowReweights_JetReq[4];
  vector< pair<float,float> >  EESideBandHighReweights_JetReq[4];
  vector< pair<float,float> >  EESideBandLowReweightsJet_JetReq[4];
  vector< pair<float,float> >  EESideBandHighReweightsJet_JetReq[4];
  vector< pair<float,float> > EEreweights_2JetReq[4];//full,0jet,1jet,>=2jet  filled by bins of diempt
  vector< pair<float,float> > FFreweights_2JetReq[4];
  vector< pair<float,float> > GFreweights_2JetReq[4];
  vector< pair<float,float> > FGreweights_2JetReq[4];
  vector< pair<float,float> > GammaFakereweights_2JetReq[4];
  vector< pair<float,float> >  EEreweightsJet_2JetReq[4];
  vector< pair<float,float> >  FFreweightsJet_2JetReq[4];
  vector< pair<float,float> >  GFreweightsJet_2JetReq[4];
  vector< pair<float,float> >  FGreweightsJet_2JetReq[4];
  vector< pair<float,float> >  GammaFakereweightsJet_2JetReq[4];
  vector< pair<float,float> >  EESideBandLowReweights_2JetReq[4];
  vector< pair<float,float> >  EESideBandHighReweights_2JetReq[4];
  vector< pair<float,float> >  EESideBandLowReweightsJet_2JetReq[4];
  vector< pair<float,float> >  EESideBandHighReweightsJet_2JetReq[4];
  vector<TH1F*> h_weightsEEVec_JetReq;
  vector<TH1F*> h_weightsEEJetVec_JetReq;
  vector<TH1F*> h_weightsFFVec_JetReq;
  vector<TH1F*> h_weightsFFJetVec_JetReq;
  vector<TH1F*> h_weightsGFVec_JetReq;
  vector<TH1F*> h_weightsGFJetVec_JetReq;
  vector<TH1F*> h_weightsFGVec_JetReq;
  vector<TH1F*> h_weightsFGJetVec_JetReq;
  vector<TH1F*> h_weightsGammaFakeVec_JetReq;
  vector<TH1F*> h_weightsGammaFakeJetVec_JetReq;
  vector<TH1F*> h_weightsEEsidebandLowVec_JetReq;
  vector<TH1F*> h_weightsEEsidebandHighVec_JetReq;
  vector<TH1F*> h_weightsEEsidebandLowJetVec_JetReq;
  vector<TH1F*> h_weightsEEsidebandHighJetVec_JetReq;
  vector<TH1F*> h_weightsEEVec_2JetReq;
  vector<TH1F*> h_weightsEEJetVec_2JetReq;
  vector<TH1F*> h_weightsFFVec_2JetReq;
  vector<TH1F*> h_weightsFFJetVec_2JetReq;
  vector<TH1F*> h_weightsGFVec_2JetReq;
  vector<TH1F*> h_weightsGFJetVec_2JetReq;
  vector<TH1F*> h_weightsFGVec_2JetReq;
  vector<TH1F*> h_weightsFGJetVec_2JetReq;
  vector<TH1F*> h_weightsGammaFakeVec_2JetReq;
  vector<TH1F*> h_weightsGammaFakeJetVec_2JetReq;
  vector<TH1F*> h_weightsEEsidebandLowVec_2JetReq;
  vector<TH1F*> h_weightsEEsidebandHighVec_2JetReq;
  vector<TH1F*> h_weightsEEsidebandLowJetVec_2JetReq;
  vector<TH1F*> h_weightsEEsidebandHighJetVec_2JetReq;
  if(printLevel>0)cout<<"before grabbing weights histograms"<<endl;
  for(int i=0;i<4;i++){
    eeWeightTitle="ggeeDiEMPtRatio";
    eeWeightTitleJet="ggeeDiJetPtRatio";
    eeSideBandLowWeightTitle="ggeeSideBandLowDiEMPtRatio";eeSideBandHighWeightTitle="ggeeSideBandHighDiEMPtRatio";
    eeSideBandLowWeightTitleJet="ggeeSideBandLowDiJetPtRatio";eeSideBandHighWeightTitleJet="ggeeSideBandHighDiJetPtRatio";
    eeWeightTitle_JetReq="ggeeDiEMPtRatio_JetReq";
    eeWeightTitleJet_JetReq="ggeeDiJetPtRatio_JetReq";
    eeSideBandLowWeightTitle_JetReq="ggeeSideBandLowDiEMPtRatio_JetReq";eeSideBandHighWeightTitle_JetReq="ggeeSideBandHighDiEMPtRatio_JetReq";
    eeSideBandLowWeightTitleJet_JetReq="ggeeSideBandLowDiJetPtRatio_JetReq";eeSideBandHighWeightTitleJet_JetReq="ggeeSideBandHighDiJetPtRatio_JetReq";
    eeWeightTitle_2JetReq="ggeeDiEMPtRatio_JetReq";
    eeWeightTitleJet_2JetReq="ggeeDiJetPtRatio_JetReq";
    eeSideBandLowWeightTitle_2JetReq="ggeeSideBandLowDiEMPtRatio_JetReq";eeSideBandHighWeightTitle_2JetReq="ggeeSideBandHighDiEMPtRatio_JetReq";
    eeSideBandLowWeightTitleJet_2JetReq="ggeeSideBandLowDiJetPtRatio_JetReq";eeSideBandHighWeightTitleJet_2JetReq="ggeeSideBandHighDiJetPtRatio_JetReq";

    ffWeightTitle="ggffDiEMPtRatio";ffWeightTitleJet="ggffDiJetPtRatio";
    gfWeightTitle="gggfDiEMPtRatio";gfWeightTitleJet="gggfDiJetPtRatio";
    fgWeightTitle="ggfgDiEMPtRatio";fgWeightTitleJet="ggfgDiJetPtRatio";
    gammafakeWeightTitle="gggammafakeDiEMPtRatio";gammafakeWeightTitleJet="gggammafakeDiJetPtRatio";
    ffWeightTitle_JetReq="ggffDiEMPtRatio_JetReq";ffWeightTitleJet_JetReq="ggffDiJetPtRatio_JetReq";
    gfWeightTitle_JetReq="gggfDiEMPtRatio_JetReq";gfWeightTitleJet_JetReq="gggfDiJetPtRatio_JetReq";
    fgWeightTitle_JetReq="ggfgDiEMPtRatio_JetReq";fgWeightTitleJet_JetReq="ggfgDiJetPtRatio_JetReq";
    gammafakeWeightTitle_JetReq="gggammafakeDiEMPtRatio_JetReq";gammafakeWeightTitleJet_JetReq="gggammafakeDiJetPtRatio_JetReq";
    ffWeightTitle_2JetReq="ggffDiEMPtRatio_2JetReq";ffWeightTitleJet_2JetReq="ggffDiJetPtRatio_2JetReq";
    gfWeightTitle_2JetReq="gggfDiEMPtRatio_2JetReq";gfWeightTitleJet_2JetReq="gggfDiJetPtRatio_2JetReq";
    fgWeightTitle_2JetReq="ggfgDiEMPtRatio_2JetReq";fgWeightTitleJet_2JetReq="ggfgDiJetPtRatio_2JetReq";
    gammafakeWeightTitle_2JetReq="gggammafakeDiEMPtRatio_2JetReq";gammafakeWeightTitleJet_2JetReq="gggammafakeDiJetPtRatio_2JetReq";
    //fgWeightTitle="gggfDiEMPtRatio";fgWeightTitleJet="gggfDiJetPtRatio";fgWeightTitle_JetReq="gggfDiEMPtRatio_JetReq";fgWeightTitleJet_JetReq="gggfDiJetPtRatio_JetReq";
    //gammafakeWeightTitle="gggfDiEMPtRatio";gammafakeWeightTitleJet="gggfDiJetPtRatio";gammafakeWeightTitle_JetReq="gggfDiEMPtRatio_JetReq";gammafakeWeightTitleJet_JetReq="gggfDiJetPtRatio_JetReq";

    if(i==0){
      h_weightsEEVec.push_back((TH1F*)f_weights.Get(eeWeightTitle));
      h_weightsFFVec.push_back((TH1F*)f_weights.Get(ffWeightTitle));
      h_weightsGammaFakeVec.push_back((TH1F*)f_weights.Get(gammafakeWeightTitle));
      h_weightsGFVec.push_back((TH1F*)f_weights.Get(gfWeightTitle));
      h_weightsFGVec.push_back((TH1F*)f_weights.Get(fgWeightTitle));
      h_weightsEEJetVec.push_back((TH1F*)f_weights.Get(eeWeightTitleJet));
      h_weightsFFJetVec.push_back((TH1F*)f_weights.Get(ffWeightTitleJet));
      h_weightsGFJetVec.push_back((TH1F*)f_weights.Get(gfWeightTitleJet));
      h_weightsFGJetVec.push_back((TH1F*)f_weights.Get(fgWeightTitleJet));
      h_weightsGammaFakeJetVec.push_back((TH1F*)f_weights.Get(gammafakeWeightTitleJet));
      h_weightsEEsidebandLowVec.push_back((TH1F*)f_weights.Get(eeSideBandLowWeightTitle));
      h_weightsEEsidebandHighVec.push_back((TH1F*)f_weights.Get(eeSideBandHighWeightTitle));
      h_weightsEEsidebandLowJetVec.push_back((TH1F*)f_weights.Get(eeSideBandLowWeightTitleJet));
      h_weightsEEsidebandHighJetVec.push_back((TH1F*)f_weights.Get(eeSideBandHighWeightTitleJet));
      h_weightsEEVec_JetReq.push_back((TH1F*)f_weights.Get(eeWeightTitle_JetReq));
      h_weightsFGVec_JetReq.push_back((TH1F*)f_weights.Get(fgWeightTitle_JetReq));
      h_weightsGFVec_JetReq.push_back((TH1F*)f_weights.Get(gfWeightTitle_JetReq));
      h_weightsGammaFakeVec_JetReq.push_back((TH1F*)f_weights.Get(gammafakeWeightTitle_JetReq));
      h_weightsFFVec_JetReq.push_back((TH1F*)f_weights.Get(ffWeightTitle_JetReq));
      h_weightsEEJetVec_JetReq.push_back((TH1F*)f_weights.Get(eeWeightTitleJet_JetReq));
      h_weightsFGJetVec_JetReq.push_back((TH1F*)f_weights.Get(fgWeightTitleJet_JetReq));
      h_weightsGFJetVec_JetReq.push_back((TH1F*)f_weights.Get(gfWeightTitleJet_JetReq));
      h_weightsGammaFakeJetVec_JetReq.push_back((TH1F*)f_weights.Get(gammafakeWeightTitleJet_JetReq));
      h_weightsFFJetVec_JetReq.push_back((TH1F*)f_weights.Get(ffWeightTitleJet_JetReq));
      h_weightsEEsidebandLowVec_JetReq.push_back((TH1F*)f_weights.Get(eeSideBandLowWeightTitle_JetReq));
      h_weightsEEsidebandHighVec_JetReq.push_back((TH1F*)f_weights.Get(eeSideBandHighWeightTitle_JetReq));
      h_weightsEEsidebandLowJetVec_JetReq.push_back((TH1F*)f_weights.Get(eeSideBandLowWeightTitleJet_JetReq));
      h_weightsEEsidebandHighJetVec_JetReq.push_back((TH1F*)f_weights.Get(eeSideBandHighWeightTitleJet_JetReq));
      h_weightsEEVec_2JetReq.push_back((TH1F*)f_weights.Get(eeWeightTitle_2JetReq));
      h_weightsFGVec_2JetReq.push_back((TH1F*)f_weights.Get(fgWeightTitle_2JetReq));
      h_weightsGFVec_2JetReq.push_back((TH1F*)f_weights.Get(gfWeightTitle_2JetReq));
      h_weightsGammaFakeVec_2JetReq.push_back((TH1F*)f_weights.Get(gammafakeWeightTitle_2JetReq));
      h_weightsFFVec_2JetReq.push_back((TH1F*)f_weights.Get(ffWeightTitle_2JetReq));
      h_weightsEEJetVec_2JetReq.push_back((TH1F*)f_weights.Get(eeWeightTitleJet_2JetReq));
      h_weightsFGJetVec_2JetReq.push_back((TH1F*)f_weights.Get(fgWeightTitleJet_2JetReq));
      h_weightsGFJetVec_2JetReq.push_back((TH1F*)f_weights.Get(gfWeightTitleJet_2JetReq));
      h_weightsGammaFakeJetVec_2JetReq.push_back((TH1F*)f_weights.Get(gammafakeWeightTitleJet_2JetReq));
      h_weightsFFJetVec_2JetReq.push_back((TH1F*)f_weights.Get(ffWeightTitleJet_2JetReq));
      h_weightsEEsidebandLowVec_2JetReq.push_back((TH1F*)f_weights.Get(eeSideBandLowWeightTitle_2JetReq));
      h_weightsEEsidebandHighVec_2JetReq.push_back((TH1F*)f_weights.Get(eeSideBandHighWeightTitle_2JetReq));
      h_weightsEEsidebandLowJetVec_2JetReq.push_back((TH1F*)f_weights.Get(eeSideBandLowWeightTitleJet_2JetReq));
      h_weightsEEsidebandHighJetVec_2JetReq.push_back((TH1F*)f_weights.Get(eeSideBandHighWeightTitleJet_2JetReq));
    }
    else{
      //first diEMPt
      eeWeightTitle+="_";eeWeightTitle+=i-1;eeWeightTitle+="Jet";//i-1 to get 0Jet,1Jet,2Jet instead of 1Jet, etc.  (0th element is full dist.)
      ffWeightTitle+="_";ffWeightTitle+=i-1;ffWeightTitle+="Jet";
      gfWeightTitle+="_";gfWeightTitle+=i-1;gfWeightTitle+="Jet";
      fgWeightTitle+="_";fgWeightTitle+=i-1;fgWeightTitle+="Jet";
      gammafakeWeightTitle+="_";gammafakeWeightTitle+=i-1;gammafakeWeightTitle+="Jet";
      if(printLevel>0)cout<<"eeWeightTitle="<<eeWeightTitle<<endl;
      h_weightsEEVec.push_back((TH1F*)f_weights.Get(eeWeightTitle));
      h_weightsFFVec.push_back((TH1F*)f_weights.Get(ffWeightTitle));
      h_weightsGFVec.push_back((TH1F*)f_weights.Get(gfWeightTitle));
      h_weightsFGVec.push_back((TH1F*)f_weights.Get(fgWeightTitle));
      h_weightsGammaFakeVec.push_back((TH1F*)f_weights.Get(gammafakeWeightTitle));
      //now diJetPt
      eeWeightTitleJet+="_";eeWeightTitleJet+=i-1;eeWeightTitleJet+="Jet";
      ffWeightTitleJet+="_";ffWeightTitleJet+=i-1;ffWeightTitleJet+="Jet";
      gfWeightTitleJet+="_";gfWeightTitleJet+=i-1;gfWeightTitleJet+="Jet";
      fgWeightTitleJet+="_";fgWeightTitleJet+=i-1;fgWeightTitleJet+="Jet";
      gammafakeWeightTitleJet+="_";gammafakeWeightTitleJet+=i-1;gammafakeWeightTitleJet+="Jet";
      eeSideBandLowWeightTitleJet+="_";eeSideBandLowWeightTitleJet+=i-1;eeSideBandLowWeightTitleJet+="Jet";
      eeSideBandHighWeightTitleJet+="_";eeSideBandHighWeightTitleJet+=i-1;eeSideBandHighWeightTitleJet+="Jet";
      eeSideBandLowWeightTitle+="_";eeSideBandLowWeightTitle+=i-1;eeSideBandLowWeightTitle+="Jet";
      eeSideBandHighWeightTitle+="_";eeSideBandHighWeightTitle+=i-1;eeSideBandHighWeightTitle+="Jet";
      if(printLevel>0)cout<<"eeWeightTitleJet="<<eeWeightTitleJet<<endl;
      h_weightsEEJetVec.push_back((TH1F*)f_weights.Get(eeWeightTitleJet));
      h_weightsFFJetVec.push_back((TH1F*)f_weights.Get(ffWeightTitleJet));
      h_weightsFGJetVec.push_back((TH1F*)f_weights.Get(fgWeightTitleJet));
      h_weightsGFJetVec.push_back((TH1F*)f_weights.Get(gfWeightTitleJet));
      h_weightsGammaFakeJetVec.push_back((TH1F*)f_weights.Get(gammafakeWeightTitleJet));
      h_weightsEEsidebandLowVec.push_back((TH1F*)f_weights.Get(eeSideBandLowWeightTitle));
      h_weightsEEsidebandHighVec.push_back((TH1F*)f_weights.Get(eeSideBandHighWeightTitle));
      h_weightsEEsidebandLowJetVec.push_back((TH1F*)f_weights.Get(eeSideBandLowWeightTitleJet));
      h_weightsEEsidebandHighJetVec.push_back((TH1F*)f_weights.Get(eeSideBandHighWeightTitleJet));
      //first diEMPt
      eeWeightTitle_JetReq+="_";eeWeightTitle_JetReq+=i-1;eeWeightTitle_JetReq+="Jet";//i-1 to get 0Jet,1Jet,2Jet instead of 1Jet, etc.  (0th element is full dist.)
      ffWeightTitle_JetReq+="_";ffWeightTitle_JetReq+=i-1;ffWeightTitle_JetReq+="Jet";
      fgWeightTitle_JetReq+="_";fgWeightTitle_JetReq+=i-1;fgWeightTitle_JetReq+="Jet";
      gfWeightTitle_JetReq+="_";gfWeightTitle_JetReq+=i-1;gfWeightTitle_JetReq+="Jet";
      gammafakeWeightTitle_JetReq+="_";gammafakeWeightTitle_JetReq+=i-1;gammafakeWeightTitle_JetReq+="Jet";
      if(printLevel>0)cout<<"eeWeightTitle_JetReq="<<eeWeightTitle_JetReq<<endl;
      h_weightsEEVec_JetReq.push_back((TH1F*)f_weights.Get(eeWeightTitle_JetReq));
      h_weightsFFVec_JetReq.push_back((TH1F*)f_weights.Get(ffWeightTitle_JetReq));
      h_weightsFGVec_JetReq.push_back((TH1F*)f_weights.Get(fgWeightTitle_JetReq));
      h_weightsGFVec_JetReq.push_back((TH1F*)f_weights.Get(gfWeightTitle_JetReq));
      h_weightsGammaFakeVec_JetReq.push_back((TH1F*)f_weights.Get(gammafakeWeightTitle_JetReq));
      //now diJetPt
      eeWeightTitleJet_JetReq+="_";eeWeightTitleJet_JetReq+=i-1;eeWeightTitleJet_JetReq+="Jet";
      ffWeightTitleJet_JetReq+="_";ffWeightTitleJet_JetReq+=i-1;ffWeightTitleJet_JetReq+="Jet";
      gfWeightTitleJet_JetReq+="_";gfWeightTitleJet_JetReq+=i-1;gfWeightTitleJet_JetReq+="Jet";
      fgWeightTitleJet_JetReq+="_";fgWeightTitleJet_JetReq+=i-1;fgWeightTitleJet_JetReq+="Jet";
      gammafakeWeightTitleJet_JetReq+="_";gammafakeWeightTitleJet_JetReq+=i-1;gammafakeWeightTitleJet_JetReq+="Jet";
      eeSideBandLowWeightTitle_JetReq+="_";eeSideBandLowWeightTitle_JetReq+=i-1;eeSideBandLowWeightTitle_JetReq+="Jet";
      eeSideBandHighWeightTitle_JetReq+="_";eeSideBandHighWeightTitle_JetReq+=i-1;eeSideBandHighWeightTitle_JetReq+="Jet";
      eeSideBandLowWeightTitleJet_JetReq+="_";eeSideBandLowWeightTitleJet_JetReq+=i-1;eeSideBandLowWeightTitleJet_JetReq+="Jet";
      eeSideBandHighWeightTitleJet_JetReq+="_";eeSideBandHighWeightTitleJet_JetReq+=i-1;eeSideBandHighWeightTitleJet_JetReq+="Jet";
      if(printLevel>0)cout<<"eeWeightTitleJet_JetReq="<<eeWeightTitleJet_JetReq<<endl;
      h_weightsEEJetVec_JetReq.push_back((TH1F*)f_weights.Get(eeWeightTitleJet_JetReq));
      h_weightsFFJetVec_JetReq.push_back((TH1F*)f_weights.Get(ffWeightTitleJet_JetReq));
      h_weightsFGJetVec_JetReq.push_back((TH1F*)f_weights.Get(fgWeightTitleJet_JetReq));
      h_weightsGFJetVec_JetReq.push_back((TH1F*)f_weights.Get(gfWeightTitleJet_JetReq));
      h_weightsGammaFakeJetVec_JetReq.push_back((TH1F*)f_weights.Get(gammafakeWeightTitleJet_JetReq));
      h_weightsEEsidebandLowVec_JetReq.push_back((TH1F*)f_weights.Get(eeSideBandLowWeightTitle_JetReq));
      h_weightsEEsidebandHighVec_JetReq.push_back((TH1F*)f_weights.Get(eeSideBandHighWeightTitle_JetReq));
      h_weightsEEsidebandLowJetVec_JetReq.push_back((TH1F*)f_weights.Get(eeSideBandLowWeightTitleJet_JetReq));
      h_weightsEEsidebandHighJetVec_JetReq.push_back((TH1F*)f_weights.Get(eeSideBandHighWeightTitleJet_JetReq));
      //2jet
      //first diEMPt
      eeWeightTitle_2JetReq+="_";eeWeightTitle_2JetReq+=i-1;eeWeightTitle_2JetReq+="Jet";//i-1 to get 0Jet,1Jet,2Jet instead of 1Jet, etc.  (0th element is full dist.)
      ffWeightTitle_2JetReq+="_";ffWeightTitle_2JetReq+=i-1;ffWeightTitle_2JetReq+="Jet";
      fgWeightTitle_2JetReq+="_";fgWeightTitle_2JetReq+=i-1;fgWeightTitle_2JetReq+="Jet";
      gfWeightTitle_2JetReq+="_";gfWeightTitle_2JetReq+=i-1;gfWeightTitle_2JetReq+="Jet";
      gammafakeWeightTitle_2JetReq+="_";gammafakeWeightTitle_2JetReq+=i-1;gammafakeWeightTitle_2JetReq+="Jet";
      if(printLevel>0)cout<<"eeWeightTitle_2JetReq="<<eeWeightTitle_2JetReq<<endl;
      h_weightsEEVec_2JetReq.push_back((TH1F*)f_weights.Get(eeWeightTitle_2JetReq));
      h_weightsFFVec_2JetReq.push_back((TH1F*)f_weights.Get(ffWeightTitle_2JetReq));
      h_weightsFGVec_2JetReq.push_back((TH1F*)f_weights.Get(fgWeightTitle_2JetReq));
      h_weightsGFVec_2JetReq.push_back((TH1F*)f_weights.Get(gfWeightTitle_2JetReq));
      h_weightsGammaFakeVec_2JetReq.push_back((TH1F*)f_weights.Get(gammafakeWeightTitle_2JetReq));
      //now diJetPt
      eeWeightTitleJet_2JetReq+="_";eeWeightTitleJet_2JetReq+=i-1;eeWeightTitleJet_2JetReq+="Jet";
      ffWeightTitleJet_2JetReq+="_";ffWeightTitleJet_2JetReq+=i-1;ffWeightTitleJet_2JetReq+="Jet";
      gfWeightTitleJet_2JetReq+="_";gfWeightTitleJet_2JetReq+=i-1;gfWeightTitleJet_2JetReq+="Jet";
      fgWeightTitleJet_2JetReq+="_";fgWeightTitleJet_2JetReq+=i-1;fgWeightTitleJet_2JetReq+="Jet";
      gammafakeWeightTitleJet_2JetReq+="_";gammafakeWeightTitleJet_2JetReq+=i-1;gammafakeWeightTitleJet_2JetReq+="Jet";
      eeSideBandLowWeightTitle_2JetReq+="_";eeSideBandLowWeightTitle_2JetReq+=i-1;eeSideBandLowWeightTitle_2JetReq+="Jet";
      eeSideBandHighWeightTitle_2JetReq+="_";eeSideBandHighWeightTitle_2JetReq+=i-1;eeSideBandHighWeightTitle_2JetReq+="Jet";
      eeSideBandLowWeightTitleJet_2JetReq+="_";eeSideBandLowWeightTitleJet_2JetReq+=i-1;eeSideBandLowWeightTitleJet_2JetReq+="Jet";
      eeSideBandHighWeightTitleJet_2JetReq+="_";eeSideBandHighWeightTitleJet_2JetReq+=i-1;eeSideBandHighWeightTitleJet_2JetReq+="Jet";
      if(printLevel>0)cout<<"eeWeightTitleJet_2JetReq="<<eeWeightTitleJet_2JetReq<<endl;
      h_weightsEEJetVec_2JetReq.push_back((TH1F*)f_weights.Get(eeWeightTitleJet_2JetReq));
      h_weightsFFJetVec_2JetReq.push_back((TH1F*)f_weights.Get(ffWeightTitleJet_2JetReq));
      h_weightsFGJetVec_2JetReq.push_back((TH1F*)f_weights.Get(fgWeightTitleJet_2JetReq));
      h_weightsGFJetVec_2JetReq.push_back((TH1F*)f_weights.Get(gfWeightTitleJet_2JetReq));
      h_weightsGammaFakeJetVec_2JetReq.push_back((TH1F*)f_weights.Get(gammafakeWeightTitleJet_2JetReq));
      h_weightsEEsidebandLowVec_2JetReq.push_back((TH1F*)f_weights.Get(eeSideBandLowWeightTitle_2JetReq));
      h_weightsEEsidebandHighVec_2JetReq.push_back((TH1F*)f_weights.Get(eeSideBandHighWeightTitle_2JetReq));
      h_weightsEEsidebandLowJetVec_2JetReq.push_back((TH1F*)f_weights.Get(eeSideBandLowWeightTitleJet_2JetReq));
      h_weightsEEsidebandHighJetVec_2JetReq.push_back((TH1F*)f_weights.Get(eeSideBandHighWeightTitleJet_2JetReq));
    }
  }
  if(printLevel>0)cout<<"after grabbing weights histograms"<<endl;
 
  for(int j=0;j<4;j++)
    {
      EEreweights[j].clear();EEreweightsJet[j].clear();FFreweights[j].clear();FFreweightsJet[j].clear();
      FGreweights[j].clear();FGreweightsJet[j].clear();GFreweights[j].clear();GFreweightsJet[j].clear();GammaFakereweights[j].clear();GammaFakereweightsJet[j].clear();
      EESideBandLowReweightsJet[j].clear();EESideBandHighReweightsJet[j].clear();EESideBandLowReweights[j].clear();EESideBandHighReweights[j].clear();
      EEreweights_JetReq[j].clear();EEreweightsJet_JetReq[j].clear();FFreweights_JetReq[j].clear();FFreweightsJet_JetReq[j].clear();
      FGreweights_JetReq[j].clear();FGreweightsJet_JetReq[j].clear();GFreweights_JetReq[j].clear();GFreweightsJet_JetReq[j].clear();GammaFakereweights_JetReq[j].clear();GammaFakereweightsJet_JetReq[j].clear();
      EESideBandLowReweightsJet_JetReq[j].clear();EESideBandHighReweightsJet_JetReq[j].clear();EESideBandLowReweights_JetReq[j].clear();EESideBandHighReweights_JetReq[j].clear();
      EEreweights_2JetReq[j].clear();EEreweightsJet_2JetReq[j].clear();FFreweights_2JetReq[j].clear();FFreweightsJet_2JetReq[j].clear();
      FGreweights_2JetReq[j].clear();FGreweightsJet_2JetReq[j].clear();GFreweights_2JetReq[j].clear();GFreweightsJet_2JetReq[j].clear();GammaFakereweights_2JetReq[j].clear();GammaFakereweightsJet_2JetReq[j].clear();
      EESideBandLowReweightsJet_2JetReq[j].clear();EESideBandHighReweightsJet_2JetReq[j].clear();EESideBandLowReweights_2JetReq[j].clear();EESideBandHighReweights_2JetReq[j].clear();
      if(printLevel>0)cout<<"Inside filling weight vector, j= "<<j<<endl;
      for(int i=0;i<numBins;i++){
	//0-th index should be bin 1
	EEreweights[j].push_back(make_pair(h_weightsEEVec[j]->GetBinContent(i+1),h_weightsEEVec[j]->GetBinError(i+1)));
	if(printLevel>0)cout<<"Line: "<<__LINE__<<endl;
	FFreweights[j].push_back(make_pair(h_weightsFFVec[j]->GetBinContent(i+1),h_weightsFFVec[j]->GetBinError(i+1)));
	if(printLevel>0)cout<<"Line: "<<__LINE__<<endl;
	GFreweights[j].push_back(make_pair(h_weightsGFVec[j]->GetBinContent(i+1),h_weightsGFVec[j]->GetBinError(i+1)));
	FGreweights[j].push_back(make_pair(h_weightsFGVec[j]->GetBinContent(i+1),h_weightsFGVec[j]->GetBinError(i+1)));
	GammaFakereweights[j].push_back(make_pair(h_weightsGammaFakeVec[j]->GetBinContent(i+1),h_weightsGammaFakeVec[j]->GetBinError(i+1)));
	if(printLevel>0)cout<<"Line: "<<__LINE__<<endl;
	
	EEreweightsJet[j].push_back(make_pair(h_weightsEEJetVec[j]->GetBinContent(i+1),h_weightsEEJetVec[j]->GetBinError(i+1)));
	FFreweightsJet[j].push_back(make_pair(h_weightsFFJetVec[j]->GetBinContent(i+1),h_weightsFFJetVec[j]->GetBinError(i+1)));
	//cout<<"FF diJet weights bin:"<<i+1<<"  weight:"<<h_weightsFFJetVec[j]->GetBinContent(i+1)<<"  error:"<<h_weightsFFJetVec[j]->GetBinError(i+1)<<endl;
	GFreweightsJet[j].push_back(make_pair(h_weightsGFJetVec[j]->GetBinContent(i+1),h_weightsGFJetVec[j]->GetBinError(i+1)));
	FGreweightsJet[j].push_back(make_pair(h_weightsFGJetVec[j]->GetBinContent(i+1),h_weightsFGJetVec[j]->GetBinError(i+1)));
	GammaFakereweightsJet[j].push_back(make_pair(h_weightsGammaFakeJetVec[j]->GetBinContent(i+1),h_weightsGammaFakeJetVec[j]->GetBinError(i+1)));
	EESideBandLowReweights[j].push_back(make_pair(h_weightsEEsidebandLowVec[j]->GetBinContent(i+1),h_weightsEEsidebandLowVec[j]->GetBinError(i+1)));
	EESideBandHighReweights[j].push_back(make_pair(h_weightsEEsidebandHighVec[j]->GetBinContent(i+1),h_weightsEEsidebandHighVec[j]->GetBinError(i+1)));
	EESideBandLowReweightsJet[j].push_back(make_pair(h_weightsEEsidebandLowJetVec[j]->GetBinContent(i+1),h_weightsEEsidebandLowJetVec[j]->GetBinError(i+1)));
	EESideBandHighReweightsJet[j].push_back(make_pair(h_weightsEEsidebandHighJetVec[j]->GetBinContent(i+1),h_weightsEEsidebandHighJetVec[j]->GetBinError(i+1)));
	EEreweights_JetReq[j].push_back(make_pair(h_weightsEEVec_JetReq[j]->GetBinContent(i+1),h_weightsEEVec_JetReq[j]->GetBinError(i+1)));
	EEreweightsJet_JetReq[j].push_back(make_pair(h_weightsEEJetVec_JetReq[j]->GetBinContent(i+1),h_weightsEEJetVec_JetReq[j]->GetBinError(i+1)));
	FFreweights_JetReq[j].push_back(make_pair(h_weightsFFVec_JetReq[j]->GetBinContent(i+1),h_weightsFFVec_JetReq[j]->GetBinError(i+1)));
	FFreweightsJet_JetReq[j].push_back(make_pair(h_weightsFFJetVec_JetReq[j]->GetBinContent(i+1),h_weightsFFJetVec_JetReq[j]->GetBinError(i+1)));
	GFreweights_JetReq[j].push_back(make_pair(h_weightsGFVec_JetReq[j]->GetBinContent(i+1),h_weightsGFVec_JetReq[j]->GetBinError(i+1)));
	GFreweightsJet_JetReq[j].push_back(make_pair(h_weightsGFJetVec_JetReq[j]->GetBinContent(i+1),h_weightsGFJetVec_JetReq[j]->GetBinError(i+1)));
	FGreweights_JetReq[j].push_back(make_pair(h_weightsFGVec_JetReq[j]->GetBinContent(i+1),h_weightsFGVec_JetReq[j]->GetBinError(i+1)));
	FGreweightsJet_JetReq[j].push_back(make_pair(h_weightsFGJetVec_JetReq[j]->GetBinContent(i+1),h_weightsFGJetVec_JetReq[j]->GetBinError(i+1)));
	GammaFakereweights_JetReq[j].push_back(make_pair(h_weightsGammaFakeVec_JetReq[j]->GetBinContent(i+1),h_weightsGammaFakeVec_JetReq[j]->GetBinError(i+1)));
	GammaFakereweightsJet_JetReq[j].push_back(make_pair(h_weightsGammaFakeJetVec_JetReq[j]->GetBinContent(i+1),h_weightsGammaFakeJetVec_JetReq[j]->GetBinError(i+1)));
	EESideBandLowReweights_JetReq[j].push_back(make_pair(h_weightsEEsidebandLowVec_JetReq[j]->GetBinContent(i+1),h_weightsEEsidebandLowVec_JetReq[j]->GetBinError(i+1)));
	EESideBandHighReweights_JetReq[j].push_back(make_pair(h_weightsEEsidebandHighVec_JetReq[j]->GetBinContent(i+1),h_weightsEEsidebandHighVec_JetReq[j]->GetBinError(i+1)));
	EESideBandLowReweightsJet_JetReq[j].push_back(make_pair(h_weightsEEsidebandLowJetVec_JetReq[j]->GetBinContent(i+1),h_weightsEEsidebandLowJetVec_JetReq[j]->GetBinError(i+1)));
	EESideBandHighReweightsJet_JetReq[j].push_back(make_pair(h_weightsEEsidebandHighJetVec_JetReq[j]->GetBinContent(i+1),h_weightsEEsidebandHighJetVec_JetReq[j]->GetBinError(i+1)));
	EEreweights_2JetReq[j].push_back(make_pair(h_weightsEEVec_2JetReq[j]->GetBinContent(i+1),h_weightsEEVec_2JetReq[j]->GetBinError(i+1)));
	EEreweightsJet_2JetReq[j].push_back(make_pair(h_weightsEEJetVec_2JetReq[j]->GetBinContent(i+1),h_weightsEEJetVec_2JetReq[j]->GetBinError(i+1)));
	FFreweights_2JetReq[j].push_back(make_pair(h_weightsFFVec_2JetReq[j]->GetBinContent(i+1),h_weightsFFVec_2JetReq[j]->GetBinError(i+1)));
	FFreweightsJet_2JetReq[j].push_back(make_pair(h_weightsFFJetVec_2JetReq[j]->GetBinContent(i+1),h_weightsFFJetVec_2JetReq[j]->GetBinError(i+1)));
	GFreweights_2JetReq[j].push_back(make_pair(h_weightsGFVec_2JetReq[j]->GetBinContent(i+1),h_weightsGFVec_2JetReq[j]->GetBinError(i+1)));
	GFreweightsJet_2JetReq[j].push_back(make_pair(h_weightsGFJetVec_2JetReq[j]->GetBinContent(i+1),h_weightsGFJetVec_2JetReq[j]->GetBinError(i+1)));
	FGreweights_2JetReq[j].push_back(make_pair(h_weightsFGVec_2JetReq[j]->GetBinContent(i+1),h_weightsFGVec_2JetReq[j]->GetBinError(i+1)));
	FGreweightsJet_2JetReq[j].push_back(make_pair(h_weightsFGJetVec_2JetReq[j]->GetBinContent(i+1),h_weightsFGJetVec_2JetReq[j]->GetBinError(i+1)));
	GammaFakereweights_2JetReq[j].push_back(make_pair(h_weightsGammaFakeVec_2JetReq[j]->GetBinContent(i+1),h_weightsGammaFakeVec_2JetReq[j]->GetBinError(i+1)));
	GammaFakereweightsJet_2JetReq[j].push_back(make_pair(h_weightsGammaFakeJetVec_2JetReq[j]->GetBinContent(i+1),h_weightsGammaFakeJetVec_2JetReq[j]->GetBinError(i+1)));
	EESideBandLowReweights_2JetReq[j].push_back(make_pair(h_weightsEEsidebandLowVec_2JetReq[j]->GetBinContent(i+1),h_weightsEEsidebandLowVec_2JetReq[j]->GetBinError(i+1)));
	EESideBandHighReweights_2JetReq[j].push_back(make_pair(h_weightsEEsidebandHighVec_2JetReq[j]->GetBinContent(i+1),h_weightsEEsidebandHighVec_2JetReq[j]->GetBinError(i+1)));
	EESideBandLowReweightsJet_2JetReq[j].push_back(make_pair(h_weightsEEsidebandLowJetVec_2JetReq[j]->GetBinContent(i+1),h_weightsEEsidebandLowJetVec_2JetReq[j]->GetBinError(i+1)));
	EESideBandHighReweightsJet_2JetReq[j].push_back(make_pair(h_weightsEEsidebandHighJetVec_2JetReq[j]->GetBinContent(i+1),h_weightsEEsidebandHighJetVec_2JetReq[j]->GetBinError(i+1)));
      }
    }
 
  if(printLevel>0)cout<<"Line: "<<__LINE__<<endl;
  f_weights.Close();
  if(printLevel>0)cout<<"Line: "<<__LINE__<<endl;
  fout->cd();
  if(printLevel>0)cout<<"Line: "<<__LINE__<<endl;

  TFile f_fakeRateWeights("fakeRateReweights.root","READ");
  TFile f_fakeRateWeights_2D("fakeRateReweights_2D.root","READ");
  f_fakeRateWeights.cd();
  TH1F* h_fakeRate_full = (TH1F*)f_fakeRateWeights.Get("h_scale_unbinned");
  float fakeRateFull = h_fakeRate_full->GetBinContent(1);float fakeRateFullErr = h_fakeRate_full->GetBinError(1);
  TH1F* h_fakeRate_pt = (TH1F*)f_fakeRateWeights.Get("h_scale_pt");
  TH1F* h_fakeRate_nvtx = (TH1F*)f_fakeRateWeights.Get("h_scale_nVtx");
  TH1F* h_fakeRate_eta = (TH1F*)f_fakeRateWeights.Get("h_scale_eta");
  f_fakeRateWeights_2D.cd();
  TH2F* h_fakeRate_pt_nvtx = (TH2F*)f_fakeRateWeights_2D.Get("h_pt_nVtx");
  //2D fake rates are in percent, so:
  h_fakeRate_pt_nvtx->Scale(0.01);
  //f_fakeRateWeights.Close();
  fout->cd();

  TH1F* puweights;
  //Get MC pileup weight
  //TFile f_PUweights("PUweightsGluGluH.root","READ");
  //TFile f_PUweights("PUweightsVBFH.root","READ");
  //TFile f_PUweights("PUweightsTTH.root","READ");
  //TFile f_PUweights("PUweightsWZH.root","READ");
  //TFile f_PUweights("PUweightsForBino.root","READ");
  //TFile f_PUweights("PUweightsDiPhoBorn.root","READ");
  //TFile f_PUweights("PUweightsDiPhoBox.root","READ");
  //TFile f_PUweights("PUweightsQCD30_40.root","READ");
  TFile f_PUweights("PUweightsQCD40_inf.root","READ");
  //TFile f_PUweights("PUweightsGJet20_40.root","READ");
  //TFile f_PUweights("PUweightsGJet40_inf.root","READ");
  f_PUweights.cd();
  //puweights = (TH1F*)f_PUweights.Get("PUweightsBino");
  puweights = (TH1F*)f_PUweights.Get("PUweights");
  //f_PUweights.Close();
  fout->cd();
  float PUweight=1.;

  TH1F *SMmet,*SMinvmass,*BGmet,*BGinvmass,*NewHiggsMet; 
  TH1F* h_MassAndMetProbs = new TH1F("MassAndMetProbs","SM_BG_NewHiggs, filling 1 for only highest fraction",3,1,4);
  TH1F* h_MassAndMetProbs_Corr = new TH1F("MassAndMetProbs_Corr","SM_BG_NewHiggs, filling fractions",3,1,4);
  TH1F* h_MassAndMetProbs_CorrNorm = new TH1F("MassAndMetProbs_CorrNorm","SM_BG_NewHiggs, filling fractions, event normalized to unity",3,1,4);
  TFile f_MetAndMassShapes("MetAndMassShapes.root","READ");
  f_MetAndMassShapes.cd();
  SMmet=(TH1F*)f_MetAndMassShapes.Get("StandardModelHiggsMet");
  SMinvmass=(TH1F*)f_MetAndMassShapes.Get("StandardModelHiggsInvarMass");
  BGmet=(TH1F*)f_MetAndMassShapes.Get("BackgroundMet");
  BGinvmass=(TH1F*)f_MetAndMassShapes.Get("BackgroundInvarMass");
  NewHiggsMet=(TH1F*)f_MetAndMassShapes.Get("NewHiggsMet");
  fout->cd();

  //define NVertex and Rho Correction factors
  if(doRhoCorrection)cout<<"Applying Rho Pileup corrections!"<<endl;
  else cout<<"Applying NO Pileup corrections!"<<endl;
  
  //bool done=false;

  // to check duplicated events
  std::map<int, std::set<int> > allEvents;

  // start event looping
  Long64_t nbytes = 0, nb = 0;
  for (Long64_t jentry=0; jentry < processNEvents; jentry++) {


    /*
      if(enableFilter) {
      bool filterThis = 1;//(isgg || isee || iseg || isff || isgammafake || isgg_JetReq || isee_JetReq || iseg_JetReq || isff_JetReq || isgammafake_JetReq);
      //bool filterThis = ( (isgg || isgg_JetReq) && met->met()>100 );
      if(filterThis) {
      nFiltered++;
      filterTree->Fill();
      }
      }// if(enableFilter)
    */
    
    //  if(!event->isRealData){GGtrain=true;FFtrain=true;EGtrain=true;}
    //  else{GGtrain=false;FFtrain=true;EGtrain=true;}
    
    //make sure we are not trying to do multiple corrections at once
    if(doNVertexCorrection && doRhoCorrection){
      cout<<"Trying to correct for both NVertex and Rho!!!!!"<<endl;
      break;
    }

    //  bool filterThis = false;//want to keep subset of events

    if(printLevel>0) cout << endl << "Get the tree contents." << endl;

    // if( (int)(((float)jentry/processNEvents)*100)%10==0 )cout << (int)(((float)jentry/processNEvents)*100) << " percent done..." << endl;

    Long64_t ientry = LoadTree(jentry);
    if (ientry < 0) break;
    nb = fChain->GetEntry(jentry);   nbytes += nb;

    //if(done)break;

    //if(event->runNumber>190999)continue;
    //done=true;

    //cout << "Run:"
    //<< event->runNumber << ", Event:" << event->eventNumber << endl;


    if(printLevel>0 || (printInterval > 0 && (jentry >= printInterval && jentry%printInterval == 0)) ) {
      cout <</* endl <<*/ int(jentry) << " events processed with Run:"
	   << event->runNumber << ", Event:" << event->eventNumber << endl;
    }

    //cout<<event->runNumber<<"  "<<event->luminosityBlockNumber<<"  "<<event->avgInsRecLumi<<"  "<<event->intgRecLumi<<endl;
    //if(printLevel>0) cout << "Initialize any global variables to be reset per event." << endl;

    //InitializePerEvent();

    if(!event->isRealData &&jentry==0){
      cout<<"Neutralino Mass: " <<event->gridParams["mChi0"]<<endl;
      cout<<"Gluino Mass: " <<event->gridParams["mGluino"]<<endl;
      cout<<"Squark Mass: " <<event->gridParams["mSquark"]<<endl;
      cout<<"Cross Section: " <<event->gridParams["xsec"]<<endl;
      //cout<<"ptHat: " <<event->gridParams["ptHat"]<<endl;
    }
    /*
      if(!event->isRealData){
      cout<<"ptHat: " <<event->gridParams["ptHat"]<<"  ptHat Weight = 1./pow((ptHat/15.),4.5) = "<<1./pow((event->gridParams["ptHat"]/15.),4.5)<<endl;
      }
    */
    float Rho = event->rho, RhoB = event->rhoBarrel, Rho25 = event->rho25;
    float metReweightDiEMPt=0.,metReweightDiJetPt=0.,metReweightDiJetPtError=0.;

    if(event->runNumber>=0/* && event->runNumber<=175831*/){
      
      //check from gg events that I don't have 
      /*
	if(event->isRealData){
	if(
	(event->runNumber==176797 && event->eventNumber==282232912)   ||
	(event->runNumber==172949 && event->eventNumber==367225623) 
	){
	  
	cout<<"Run: "<<event->runNumber<<"  Event: "<<event->eventNumber<<endl;
	if(!isInJson(event->runNumber,event->luminosityBlockNumber))cout<<"Not In JSON!"<<endl;
	else{ cout<<"Is In Json"<<endl;
	    
	bool passHLT_Test =  (useTrigger ? PassTriggers() : true);
	if(!passHLT_Test)cout<<"Does NOT Pass HLT!"<<endl;
	else{ cout<<"Passes HLT!"<<endl;
	      
	int NVertex=0;
	for(std::vector<susy::Vertex>::iterator Vtx_it = event->vertices.begin(); Vtx_it<event->vertices.end(); Vtx_it++){
	if(    !Vtx_it->isFake() 
	&& Vtx_it->ndof>4 
	&& fabs(Vtx_it->position.z()<24.0) 
	&& sqrt(Vtx_it->position.x()*Vtx_it->position.x()+Vtx_it->position.y()*Vtx_it->position.y())<2.0 ) NVertex++;
	}
	if(NVertex>=1)cout<<"At least one good vertex!"<<endl;
	else cout<<"-----No good vertex!"<<endl;
	std::map<TString, std::vector<susy::Photon> >::iterator phoMap = event->photons.find("photons");
	if(phoMap == event->photons.end()) {
	if(event->photons.size() > 0) cout << "photon collection is not available!" << endl;
	}
	else {
		
	//cout<<"pho_Cands size: "<<pho_Cands.size()<<endl;
	//cout<<"fake_Cands size: "<<fake_Cands.size()<<endl;
		
	for(std::vector<susy::Photon>::iterator it_Pho_Test = phoMap->second.begin(); it_Pho_Test!= phoMap->second.end(); it_Pho_Test++) {
	if(it_Pho_Test == phoMap->second.begin()){
	cout << "Number of photons: "<<phoMap->second.size()<<endl;
	}
	cout<<"--------Photon Et: "<<it_Pho_Test->momentum.Et()<<"  Eta: "<<it_Pho_Test->caloPosition.Eta()<<"  Phi: "<<it_Pho_Test->caloPosition.Phi()<<endl;
	if(it_Pho_Test->isEB()&& !it_Pho_Test->isEBEtaGap() 
	&& !it_Pho_Test->isEBPhiGap() && !it_Pho_Test->isEERingGap() 
	&& !it_Pho_Test->isEEDeeGap() && !it_Pho_Test->isEBEEGap() )cout<<"Is EB Fed!"<<endl;
	else{ cout<<"Is NOT EB Fed!"<<endl;
	if(!it_Pho_Test->isEB()) cout<<"Is NOT EB!"<<endl;
	if(it_Pho_Test->isEBEtaGap()) cout<<"Is isEBEtaGap!"<<endl;
	if(it_Pho_Test->isEBPhiGap()) cout<<"Is isEBPhiGap!"<<endl;
	if(it_Pho_Test->isEERingGap()) cout<<"Is isEERingGap!"<<endl;
	if(it_Pho_Test->isEEDeeGap()) cout<<"Is isEEDeeGap!"<<endl;
	if(it_Pho_Test->isEBEEGap()) cout<<"Is isEBEEGap!"<<endl;
	}
	cout<<"Ecal Iso: "<<it_Pho_Test->ecalRecHitSumEtConeDR04<<" Cut: "<<4.2+0.006*it_Pho_Test->momentum.Et()<<endl;
	cout<<"Hcal Iso: "<<it_Pho_Test->hcalTowerSumEtConeDR04()<<" Cut: "<<2.2+0.0025*it_Pho_Test->momentum.Et()<<endl;
	cout<<"Track Iso: "<<it_Pho_Test->trkSumPtHollowConeDR04<<" Cut: "<<2.0+0.001*it_Pho_Test->momentum.Et()<<endl;
	cout<<"Comb Iso: "<<it_Pho_Test->ecalRecHitSumEtConeDR03 - PUCorr_ECAL*Rho25 + it_Pho_Test->hcalTowerSumEtConeDR03() - PUCorr_HCAL*Rho25 + it_Pho_Test->trkSumPtHollowConeDR03 - PUCorr_TRACK*Rho25<< " Cut: "<<6.0<<endl;
	cout<<"SigmaIetaIeta: "<<it_Pho_Test->sigmaIetaIeta<<endl;
	cout<<"H/E: "<<it_Pho_Test->hadronicOverEm<<endl;
	cout<<"Number of Pixel Seeds: "<<it_Pho_Test->nPixelSeeds<<endl;
		  
	}
	}
	}
	}
	Print(*event);
	}
	} //End of test 
      */ 
      
      
      nCnt[0]++; // total number of events   
      
      if(printLevel>0) cout << "Apply good run list." << endl;
      if(printLevel>0) cout<<"runNumber="<<event->runNumber<<"  lumiNumber="<<event->luminosityBlockNumber<<endl;
      if(!event->isRealData)useJSON=false;
      if(useJSON){
	if(!isInJson(event->runNumber,event->luminosityBlockNumber)) continue;
      }

      nCnt[1]++; // total number of events that pass Json
      // uncomment this to print all ntuple variables
      //Print(*event);

      if(printLevel>0) cout << "Check duplicated events for data only." << endl;
     
      if(event->isRealData){
	bool duplicateEvent = ! (allEvents[event->runNumber].insert(event->eventNumber)).second;
	if(duplicateEvent){
	  cout<<"Duplicate Event! Run "<<event->runNumber<<" Event "<<event->eventNumber<<endl;
	  continue;
	}
      }
      nCnt[2]++;//number of events that pass duplicate check
    
      float numTrueInt = -1;
      if(!event->isRealData){		
	susy::PUSummaryInfoCollection::const_iterator iBX = event->pu.begin();
	for(std::vector<susy::PUSummaryInfo>::iterator PU_it = event->pu.begin(); PU_it != event->pu.end(); PU_it++){
	  if(PU_it->BX==0){
	    // cout<<"PU_it numTrueInt: "<<PU_it->trueNumInteractions<<endl;
	  }
	}
	bool foundInTimeBX = false;
	while((iBX != event->pu.end()) && !foundInTimeBX) {
	  if(iBX->BX == 0) {
	    numTrueInt = iBX->trueNumInteractions;
	    foundInTimeBX = true;
	  }
	  ++iBX;
	}
      }
      h_numTrueInt->Fill(numTrueInt);
      //cout<<"numTrueInt:"<<numTrueInt<<endl;

      if(printLevel>0) cout << "Apply trigger selection in the event." << endl;
      bool passHLT = (useTrigger ? PassTriggers() : true);
      if(!passHLT )continue;//only accept events which pass our trigger(s)
      nCnt[3]++;// number of events that pass trigger

      if(printLevel>0) cout << "Find primary vertex in the event." << endl;
      TVector3* primVtx = 0;
      if(event->vertices.size() > 0) primVtx = &(event->vertices[0].position);
      if(primVtx) h_vtxZ->Fill(primVtx->Z());
      h_bsZ->Fill(event->beamSpot.Z());

      //  Get NVertex and Rho for event
      int NVertex=0;
      for(std::vector<susy::Vertex>::iterator Vtx_it = event->vertices.begin(); Vtx_it<event->vertices.end(); Vtx_it++){
	if(    !Vtx_it->isFake() 
	       && Vtx_it->ndof>4 
	       && fabs(Vtx_it->position.z()<24.0) 
	       && sqrt(Vtx_it->position.x()*Vtx_it->position.x()+Vtx_it->position.y()*Vtx_it->position.y())<2.0 ) NVertex++;
      }
      h_rho->Fill(Rho);h_NVertex->Fill(NVertex);
      h_rhoBarrel->Fill(RhoB);
      numVert[NVertex]++;

      //Require at least 1 good vertex
      if(NVertex<1){
	if(printLevel>0){cout<<"No Good Vertex!!!!  Run: "<<event->runNumber<<"  Event: "<<event->eventNumber<<endl;}
	continue;
      }
      nCnt[4]++;// number of events that pass nVertex>=1


      if(event->isRealData && !event->passMetFilters()){failMetFilterRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));continue;}
      nCnt[5]++;// number of events that pass all Met filters

      if(printLevel>0) cout << "Select which met will be used in the event." << endl;
      std::map<TString, susy::MET>::iterator met_it = event->metMap.find("pfMet");
      if(met_it == event->metMap.end()) {
	cout << "MET map is not available!!!" << endl;
	continue;
      }
      susy::MET* met = &(met_it->second);
      h_met->Fill(met->met());
      h_sumEt->Fill(met->sumEt);

      std::map<TString, susy::MET>::iterator metCorr_it = event->metMap.find("pfType1CorrectedMet");
      if(metCorr_it == event->metMap.end()) {
	cout << "Corrected MET map is not available!!!" << endl;
	continue;
      }
      susy::MET* Type1CorrMet = &(metCorr_it->second);
      h_Type1CorrMet->Fill(Type1CorrMet->met());
      h_Type1CorrSumEt->Fill(Type1CorrMet->sumEt);
      /*
	std::map<TString, susy::MET>::iterator metCorr01_it = event->metMap.find("pfType01CorrectedMet");
	if(metCorr01_it == event->metMap.end()) {
	cout << "Corrected MET map is not available!!!" << endl;
	continue;
	}
	susy::MET* Type01CorrMet = &(metCorr01_it->second);
	h_Type01CorrMet->Fill(Type01CorrMet->met());
	h_Type01CorrSumEt->Fill(Type01CorrMet->sumEt);
      */
      std::map<TString, susy::MET>::iterator genMet_it = event->metMap.find("genMetTrue");
      if(genMet_it == event->metMap.end() && !event->isRealData) {
	cout << "GEN MET map is not available!!!" << endl;
	continue;
      }
      susy::MET* GenMet = &(genMet_it->second);
      h_GenMet->Fill(GenMet->met());
      h_GenSumEt->Fill(GenMet->sumEt);



      if(printLevel>0)cout<<"Line 1387, numTrueInt="<<numTrueInt<<endl;

      int PUbin=0;
      float ptHat=0.;
      if(!event->isRealData){
	PUbin = puweights->FindBin(double(numTrueInt));
	if(printLevel>0)cout<<"Line 1390, PUbin="<<PUbin<<endl;
	PUweight =/* 1;*/puweights->GetBinContent(PUbin);
	ptHat=event->gridParams["ptHat"];
	//if(!event->isRealData && ptHat>=100)continue;
	h_ptHat->Fill(ptHat,PUweight);
	h_met_vs_ptHat->Fill(ptHat,met->met());
	float ptHatWeight=1.;
	if(ptHat>0)ptHatWeight=1./pow((ptHat/15.),4.5);
	if(printLevel>0)cout<<"Line "<<__LINE__<<", PUweight="<<PUweight<<endl;
	if(printLevel>0)cout<<"Line "<<__LINE__<<", ptHat="<<event->gridParams["ptHat"]<<endl;
	if(printLevel>0)cout<<"Line "<<__LINE__<<", ptHatWeight="<<ptHatWeight<<endl;
	PUweight*=ptHatWeight;
	h_ptHat_reweight->Fill(ptHat,PUweight);

      }
      if(printLevel>0)cout<<"Line "<<__LINE__<<", PUweight="<<PUweight<<endl;



      float qReco=0.,qGen=0.;
      TLorentzVector LVreco,LVrecoType1,LVgen;
      std::map<TString, std::vector<susy::Photon> >::iterator phoMapMet = event->photons.find("photons");
      if(phoMapMet != event->photons.end()) {
	
	//loop over photon collection 
	for(std::vector<susy::Photon>::iterator it_PhoMet = phoMapMet->second.begin(); it_PhoMet != phoMapMet->second.end(); it_PhoMet++) {
	  qReco+=it_PhoMet->momentum.Et();
	  LVreco+=it_PhoMet->momentum;
	}
      }
      std::map<TString, std::vector<susy::Electron> >::iterator eleMapMet = event->electrons.find("gsfElectrons");
      if(eleMapMet != event->electrons.end()) {
	//loop over electron collection 
	for(std::vector<susy::Electron>::iterator it_EleMet = eleMapMet->second.begin(); it_EleMet != eleMapMet->second.end(); it_EleMet++) {
	  qReco+=it_EleMet->momentum.Et();
	  LVreco+=it_EleMet->momentum;
	}
      }
      std::map<TString, std::vector<susy::Muon> >::iterator muMapMet = event->muons.find("muons");
      if(muMapMet != event->muons.end()) {	
	for(std::vector<susy::Muon>::iterator it_MuMet = muMapMet->second.begin(); it_MuMet != muMapMet->second.end(); it_MuMet++) {
	  qReco+=it_MuMet->momentum.Et();
	  LVreco+=it_MuMet->momentum;
	}
      }
      if(!event->isRealData){
	for(std::vector<susy::Particle>::iterator Part_itMet = event->genParticles.begin(); Part_itMet != event->genParticles.end(); Part_itMet++){
	  if(fabs(Part_itMet->pdgId)==22 || fabs(Part_itMet->pdgId)==11 || fabs(Part_itMet->pdgId)==13){
	    qGen+=Part_itMet->momentum.Et();
	    LVgen+=Part_itMet->momentum;
	  }
	}
      }
      /*
	float resOverResponse = (-met->met()+qReco)*qReco/fabs(qReco);
	float resOverResponseType1 = (-Type1CorrMet->met()+qReco)*qReco/fabs(qReco);
	float resOverResponseGen = (-GenMet->met()+qGen)*qGen/fabs(qGen);
      */
      TLorentzVector LVmet;LVmet.SetX(met->metX());LVmet.SetY(met->metY());LVmet.SetZ(0);LVmet.SetT(0);
      float resOverResponse = -LVreco.Dot(LVmet+LVreco)/fabs(LVreco.Mag());
      float resOverResponseType1 = -(Type1CorrMet->met()+qReco)*qReco/fabs(qReco);
      float resOverResponseGen = -(GenMet->met()+qGen)*qGen/fabs(qGen);
      /* cout<<"diff Reco: "<<-met->met()+qReco<<endl;
	 cout<<"resOverResponse      : "<<resOverResponse<<endl;
	 cout<<"resOverResponseType1 : "<<resOverResponseType1<<endl;
	 cout<<"resOverResponseGen   : "<<resOverResponseGen<<endl;
      */
      h_InstLumi->Fill(event->avgInsRecLumi);
      h_NVertexVsInstLumi->Fill(event->avgInsRecLumi,NVertex);

      //check if event is direct electroweak production
      bool isDirectEWK=false;
      if(!event->isRealData){
	float nearestDR=999.;
	for(std::vector<susy::Particle>::iterator Part_it = event->genParticles.begin(); Part_it != event->genParticles.end(); Part_it++){
	  Short_t momIndex = Part_it->motherIndex;
	  if(fabs(Part_it->pdgId)>1000021 && fabs(Part_it->pdgId)<1000039 &&
	     ((fabs(event->genParticles[momIndex].pdgId))<=6
	      || (fabs(event->genParticles[momIndex].pdgId))==21
	      || (fabs(event->genParticles[momIndex].pdgId))==22
	      || (fabs(event->genParticles[momIndex].pdgId))==23
	      || (fabs(event->genParticles[momIndex].pdgId))==24) ){	
	    isDirectEWK=true;nDirectEWK++;h_MetDirectEWK->Fill(met->met());h_DirectEWK_ggMom->Fill(event->genParticles[momIndex].pdgId);
	  }
	}
      }
      
      if(printLevel>0) cout << "Find PFelectrons in the event." << endl;
      //----------
      //find PFelectrons, apply quality cuts
      //----------
      std::vector<susy::Electron*>   pfEles;
      int nGsf=0,nPF=0,nGsf_NoQcut=0,nPF_NoQcut=0,nMva_NoQcut=0;
      std::map<TString, std::vector<susy::Electron> >::iterator eleMap = event->electrons.find("gsfElectrons");
      if(eleMap != event->electrons.end()) {
	nGsf=0;nPF=0;nGsf_NoQcut=0;nPF_NoQcut=0;nMva_NoQcut=0;
	//loop over electron collection 
	for(std::vector<susy::Electron>::iterator it_Ele = eleMap->second.begin(); it_Ele != eleMap->second.end(); it_Ele++) {
	  if(printLevel>0) cout<<"looping over electron collection"<<endl;
	  eleCount++;nGsf_NoQcut++;
	  if(it_Ele->isPF()){ pfEleCount++;nPF_NoQcut++;}//continue;
	  if(it_Ele->passingMvaPreselection()){ MvaEleCount++;nMva_NoQcut++;}
	  else continue;
	  float Iso=0.;
	  /*if(it_Ele->isPF())*/Iso=it_Ele->chargedHadronIso + it_Ele->neutralHadronIso + it_Ele->photonIso;
	  //else Iso=it_Ele->dr03EcalRecHitSumEt + it_Ele->dr03HcalDepth1TowerSumEt + it_Ele->dr03HcalDepth2TowerSumEt + it_Ele->dr03TkSumPt;
	  float pt=it_Ele->momentum.Pt();
	  
	  if(fabs(it_Ele->momentum.Eta())>2.5) continue;
	  if(pt<15) continue;
	  if(Iso/pt>0.2) continue;
	  
	  //nGsf++;
	  
	  pfEles.push_back(&*it_Ele);
	}//end it_Ele electron loop
	//sort pfEles by Pt
	std::sort(pfEles.begin(), pfEles.end(), EtGreater<susy::Electron>);
	if(printLevel>0)cout<<"pfEles size= "<<pfEles.size()<<endl;
	h_NumGsfEles_NoQcut->Fill(nGsf_NoQcut);
	h_NumPfEles_NoQcut->Fill(nPF_NoQcut);
	h_NumMvaEles_NoQcut->Fill(nMva_NoQcut);
	h_NumGsfEles->Fill(nGsf);
	h_NumPfEles->Fill(nPF);
      }//end eleMap

      if(printLevel>0) cout << "Find Muons in the event." << endl;
      //----------
      //find Muons, apply quality cuts
      //----------
      std::vector<susy::Muon*>   Muons;
      //loop over muon collection 

      std::map<TString, std::vector<susy::Muon> >::iterator muMap = event->muons.find("muons");
      if(muMap != event->muons.end()) {	
	for(std::vector<susy::Muon>::iterator it_Mu = muMap->second.begin(); it_Mu != muMap->second.end(); it_Mu++) {
	  if(printLevel>0) cout<<"looping over muon collection"<<endl;
	  
	  MuCount->Fill(0);
	  //std::map<TString,UChar_t>::iterator idPairMu = it_Mu->idPairs.find("muidGlobalMuonPromptTight");
	  //if(idPairMu == it_Mu->idPairs.end()) continue;MuCount->Fill(1);
	  //if(int(idPairMu->second) == 0) continue;MuCount->Fill(2);
	  
	  if(!it_Mu->isGlobalMuon()) continue;MuCount->Fill(1);
	  if(!it_Mu->isPFMuon()) continue;MuCount->Fill(2);
	  
	  float pt = it_Mu->momentum.Pt();
	  float combIso=(it_Mu->ecalIsoR03 + it_Mu->hcalIsoR03 + it_Mu->trackIsoR03);
	  float combIsoPF=( it_Mu->sumChargedHadronPt04 + std::max(0.,it_Mu->sumNeutralHadronEt04+it_Mu->sumPhotonEt04-0.5*it_Mu->sumPUPt04) );
	  //float combIsoPF=( it_Mu->sumChargedHadronPt04 + it_Mu->sumNeutralHadronEt04 + it_Mu->sumPhotonEt04 );
	  float relIso = combIso/pt;
	  float relIsoPF = combIsoPF/pt;
	  float eta = fabs(it_Mu->momentum.Eta());
	  susy::Track& innerTrack = event->tracks[it_Mu->trackIndex];
	  //float d0 = d0correction(event->beamSpot,combinedTrack);
	  float numberOfValidPixelHits = innerTrack.numberOfValidPixelHits;
	  float d0 = innerTrack.d0();
	  float dZ = innerTrack.dz();
	  float numberOfValidTrackerHits = it_Mu->nValidTrackerHits;
	  float numberOfValidMuonHits = it_Mu->nValidMuonHits;
	  float chi2OverNdof = innerTrack.normChi2();
	  //cout<<"Muon d0: "<<d0<<endl;
	  //cout<<"Muon dZ: "<<dZ<<endl;
	  
	  h_MuPt->Fill(pt);
	  h_Mud0->Fill(d0);
	  h_MudZ->Fill(dZ);
	  h_MuCombIso->Fill(combIso);
	  h_MuRelIso->Fill(relIso);
	  h_MuEcalIso->Fill(it_Mu->ecalIsoR03);
	  h_MuHcalIso->Fill(it_Mu->hcalIsoR03);
	  h_MuTrackIso->Fill(it_Mu->trackIsoR03);
	  if(pt < 15) continue;MuCount->Fill(3);
	  if(fabs(eta) > 2.5) continue;MuCount->Fill(4);
	  if(chi2OverNdof > 10)continue;MuCount->Fill(5);
	  if(numberOfValidMuonHits<=0)continue;MuCount->Fill(6);
	  if(std::fabs(d0) > 0.2) continue;MuCount->Fill(7);
	  if(std::fabs(dZ) > 0.5) continue;MuCount->Fill(8);
	  if(numberOfValidPixelHits<=0)continue;MuCount->Fill(9);
	  if(numberOfValidTrackerHits<11)continue;MuCount->Fill(10);
	  //don't have trackerlayerswithmeasurement or numberofmatchedstations
	  //id from https://twiki.cern.ch/twiki/bin/view/CMSPublic/SWGuideMuonId
	  
	  if(relIsoPF > 0.2) continue;MuCount->Fill(11);
	  
	  Muons.push_back(&*it_Mu);
	}//end it_Mu muon loop
      }
      //sort Muons by Pt
      std::sort(Muons.begin(), Muons.end(), EtGreater<susy::Muon>);
      if(printLevel>0)cout<<"Muons size= "<<Muons.size()<<endl;
      h_NumMuons->Fill((int)Muons.size());
      
      //----------JETS------------
      std::pair< std::vector<susy::PFJet*>,std::vector<susy::PFJet*> >   pfJets;
      std::vector<susy::PFJet*> MHTpfJets;
      std::vector<susy::PFJet*> pfJetsFail;
      bool isJetFail=false;
      /*
      // setup on-the-fly jet corrections for PFJets
      std::vector<JetCorrectorParameters> pfJECs;
    
      pfJECs.push_back(JetCorrectorParameters("../jec/Jec11_V1_AK5PF_L1FastJet.txt"));
      pfJECs.push_back(JetCorrectorParameters("../jec/Jec11_V1_AK5PF_L2Relative.txt"));
      pfJECs.push_back(JetCorrectorParameters("../jec/Jec11_V1_AK5PF_L3Absolute.txt"));
    
      FactorizedJetCorrector pfJetCorrector(pfJECs);
      */
      if(printLevel>0) cout << "Find pfJets in the event." << endl;

      std::map<TString,susy::PFJetCollection>::iterator pfJets_it = event->pfJets.find("ak5");

      if(pfJets_it != event->pfJets.end()){

	susy::PFJetCollection& jetColl = pfJets_it->second;

	for(std::vector<susy::PFJet>::iterator it = jetColl.begin(); it != jetColl.end(); it++) {
	  isJetFail=false;
	  /*
	    pfJetCorrector.setJetEta(it->momentum.Eta());
	    pfJetCorrector.setJetPt(it->momentum.Pt());
	    pfJetCorrector.setJetA(it->jetArea);
	    pfJetCorrector.setRho(Rho);
	    double corr = pfJetCorrector.getCorrection();
	  */
	  // set up corrections for PFJets
	  std::map<TString,Float_t>::iterator s_it_L1FastL2L3 = it->jecScaleFactors.find("L1FastL2L3");
	  std::map<TString,Float_t>::iterator s_it_L2L3       = it->jecScaleFactors.find("L2L3");
	  if (s_it_L1FastL2L3 == it->jecScaleFactors.end() || s_it_L2L3 == it->jecScaleFactors.end()) {
	    if (s_it_L1FastL2L3 == it->jecScaleFactors.end())cout << "L1FastL2L3 JEC is not available for this jet!!!" << endl;
	    if (s_it_L2L3 == it->jecScaleFactors.end()) cout << "L2L3 JEC is not available for this jet!!!" << endl;
	    continue;
	  }
	  float scale = s_it_L1FastL2L3->second;
	  float scaleMatch = s_it_L1FastL2L3->second/s_it_L2L3->second;
	  //cout<<"scaleMatch: "<<scaleMatch<<endl;
	  //if(printLevel>0) cout << "PFJet stored (" << scale << "), onTheFly (" << corr << ")" << endl;

	  if(printLevel==-1)cout<<"jet #"<<std::distance(jetColl.begin(),it)<<" eta: "<<it->momentum.Eta()<<"  phi: "<<it->momentum.Phi()<<"  pT: "<<it->momentum.Pt()<<endl;

	  TLorentzVector corrP4 = scale * it->momentum;
	  TLorentzVector corrP4Match = scaleMatch * it->momentum;
	  bool go=true;
	  //This is for diJetPt Jet Matching
	  //cout<<"phoMatch jet pt: "<<corrP4Match.Pt()<<"  eta: "<<std::abs(corrP4Match.Eta())<<endl;
	  if( it->momentum.Pt()>=20. && std::abs(it->momentum.Eta())<=2.5 ){//changed to use uncorrected, as it tends to push pt below 20...
	    it->momentum=corrP4Match;
	    //cout<<"selected phoMatch jet pt: "<<it->momentum.Pt()<<"  eta: "<<std::abs(it->momentum.Eta())<<endl;
	    pfJets.second.push_back(&*it); 
	  }
	  //This is for pfJets
	  float MHTThreshold=30.;
	  float JetThreshold=30.;
	  if(   corrP4.Pt()>=MHTThreshold
		&& std::abs(corrP4.Eta()) <= 2.5
		&& it->nConstituents>1
		//use uncorrected jet E for fractions
		&& it->neutralHadronEnergy/it->momentum.E()<0.99
		&& it->neutralEmEnergy/it->momentum.E()<0.99 
		&& it->passPuJetIdLoose(susy::kFull)
		) {
	    if(std::abs(corrP4.Eta()) >= 2.4){
	      //cout<<"Jet Eta:            "<<it->momentum.Eta()<<endl;
	      //set jet momentum to L1FastL2L3 corrected one
	      it->momentum=corrP4;
	      //cout<<"Jet corrP4 Eta:     "<<it->momentum.Eta()<<endl;
	      MHTpfJets.push_back(&*it);
	      if(corrP4.Pt()>=JetThreshold)pfJets.first.push_back(&*it);
	    }
	    else if( it->chargedMultiplicity>0 
		     && it->chargedHadronEnergy/it->momentum.E()>0
		     && it->chargedEmEnergy/it->momentum.E()<0.99){
	      it->momentum=corrP4;
	      MHTpfJets.push_back(&*it);
	      if(corrP4.Pt()>=JetThreshold)pfJets.first.push_back(&*it);
	    }
	  }
	  else if(corrP4.Pt()>=JetThreshold && std::abs(corrP4.Eta()) <= 2.5){
	    go=true;
	    for(std::vector<susy::Electron*>::iterator ele_it = pfEles.begin();ele_it!=pfEles.end();ele_it++){
	      if(isSameObject((*ele_it)->momentum,it->momentum,0.5)){go=false;}
	    }
	    for(std::vector<susy::Muon*>::iterator mu_it = Muons.begin();mu_it!=Muons.end();mu_it++){
	      if(isSameObject((*mu_it)->momentum,it->momentum,0.5)){go=false;}
	    }
	    //cout<<"Jet with Pt>50 fails id criteria!  Event:"<<event->eventNumber<<"  Run:"<<event->runNumber<<endl;
	    if(go){
	      isJetFail=true;
	      /*cout<<"Jet         Pt:     "<<it->momentum.Pt()<<endl;
		cout<<"Jet CorrP4  Pt:     "<<corrP4.Pt()<<endl<<endl;*/
	      pfJetsFail.push_back(&*it);
	    }
	  }//end JetFail
	}// for jet
      }// if not end

      //std::sort(pfJets.begin(),pfJets.end(),EtGreater<susy::PFJet>);
  
      bool AtLeastOnePFJet = false;
      bool doJetReq=false,doJetReqFake=false,do2JetReq=false,do2JetReqFake=false,has_dphiJet=0;
      int numPho25Gev=0, numPho40Gev=0, numPho25GevHE=0, numPho40GevHE=0;
      if(pfJets.first.size()>0) AtLeastOnePFJet=true;
      //------end JETS--------------

      if(printLevel>0) cout << "Find loose and tight photons in the event." << endl;
      //----------
      //find photons, sort by energy
      double leadEtCut=40.0,
	trailEtCut    =25.0,
	maxEta        =1.4442,
	maxR9         =1.0,
	maxHoverE     =0.05,
	maxSihih      =0.012,
	maxCombIso    =6.0,
	maxFakeCombIso=20.0,
	maxMETdphi    =2.8,
	//minJetMETdphi     =0.5;
	minJetMETdphi     =-999.;
      //----------
      std::map<TString, std::vector<susy::Photon> >::iterator phoMap = event->photons.find("photons");
      //std::map<TString, std::vector<susy::Photon> >::iterator phoMap = event->photons.find("pfPhotonTranslator:pfphot");
      if(phoMap != event->photons.end()) {
      
	//   Need to sort Photons and select two with largest Pt.  
      
	std::vector<susy::Photon*>   pho_Cands;
	std::vector<susy::Photon*>   GFpho_Cands;
	std::vector<susy::Photon*>   pho_CandsNminus3;
	std::vector<susy::Photon*>   pho_Cands_NoEtCut;
	std::vector<susy::Photon*>   pho_Cands_EBEE;
	std::vector<susy::Photon*>   fake_Cands;

	//Criteria to Filter events
	int filterCheck=0, GreaterThan43=0;
    
	//loop over photon collection 
	for(std::vector<susy::Photon>::iterator it_Pho = phoMap->second.begin(); it_Pho != phoMap->second.end(); it_Pho++) {
	  if(printLevel>0) cout<<"looping over photon collection"<<endl;

	
	  //do things that want all photons with no cuts here:
	  //if(it_Pho->isPF())pfPho++;
	  //else notPfPho++;

	  h_SeedTime->Fill(it_Pho->seedTime);
	  h_MetVsSeedTime->Fill(it_Pho->seedTime, met->met());
	  h_SeedTimeVsEta->Fill(it_Pho->caloPosition.Eta(),it_Pho->seedTime);
	  h_SeedTimeVSE->Fill(it_Pho->seedTime,it_Pho->momentum.E());
	  h_SigIetaIeta_allPho->Fill(it_Pho->sigmaIetaIeta);
	  h_PhoPt->Fill(it_Pho->momentum.Pt());
	  h_PhoPt_ptHatReweight->Fill(it_Pho->momentum.Pt(),PUweight);
	  h_Pho_CombinedIsoDR03->Fill(it_Pho->ecalRecHitSumEtConeDR03+it_Pho->hcalTowerSumEtConeDR03()+it_Pho->trkSumPtHollowConeDR03);
	  h_Pho_ChargedHadronIso->Fill(it_Pho->chargedHadronIso);
	  h_Pho_NeutralHadronIso->Fill(it_Pho->neutralHadronIso); 
	  h_Pho_PhotonIso->Fill(it_Pho->photonIso);
	  h_Pho_PfCombinedIso->Fill(it_Pho->chargedHadronIso+it_Pho->neutralHadronIso+it_Pho->photonIso);
	  h_Pho_ChargedHadronIsoDeposit->Fill(it_Pho->chargedHadronIsoDeposit);
	  h_Pho_NeutralHadronIsoDeposit->Fill(it_Pho->neutralHadronIsoDeposit); 
	  h_Pho_PhotonIsoDeposit->Fill(it_Pho->photonIsoDeposit);
	  h_Pho_PfCombinedIsoDeposit->Fill(it_Pho->chargedHadronIsoDeposit+it_Pho->neutralHadronIsoDeposit+it_Pho->photonIsoDeposit);

	  bool passR9  = (useTrigger ? PassTrigger("HLT_Photon36_R9Id85_Photon22_R9Id85_v") : true);
	  if(passR9)h_R9fromR9trig->Fill(it_Pho->r9);

	  h_EcalIsoDR03_allPho->Fill(it_Pho->ecalRecHitSumEtConeDR03);
	  h_EcalIsoDR03RhoCorr_allPho->Fill(it_Pho->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25);
	  h_HcalIsoDR03_allPho->Fill(it_Pho->hcalTowerSumEtConeDR03());
	  h_HcalIsoDR03RhoCorr_allPho->Fill(it_Pho->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25);
	  h_TrackIsoDR03_allPho->Fill(it_Pho->trkSumPtHollowConeDR03);
	  h_CombIsoDR03_allPho->Fill(it_Pho->ecalRecHitSumEtConeDR03+it_Pho->hcalTowerSumEtConeDR03()+it_Pho->trkSumPtHollowConeDR03);
	  h_CombIsoDR03RhoCorr_allPho->Fill(it_Pho->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25+it_Pho->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25+it_Pho->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);

	  
	  //ignore event if there are not at least 2 photon candidates 
	  //if(event->isRealData){
	  //if(phoMap->second.size()<2) break;//break not continue since we want to exit phoMap iterator if there are not at least two photons in event
	  //}
	  
	  bool phoCand=false, fakeCand=false, GFphoCand=false;
	  //----------------set up cuts-------------------
	  float ecalIsoDR03=it_Pho->ecalRecHitSumEtConeDR03;
	  float hcalIsoDR03=it_Pho->hcalTowerSumEtConeDR03();
	  float trackIsoDR03=it_Pho->trkSumPtHollowConeDR03;
	  float ecalIsoDR04=it_Pho->ecalRecHitSumEtConeDR04;
	  float hcalIsoDR04=it_Pho->hcalTowerSumEtConeDR04();
	  float trackIsoDR04=it_Pho->trkSumPtHollowConeDR04;
	  float chargedHadronIso=it_Pho->chargedHadronIso;
	  float neutralHadronIso=it_Pho->neutralHadronIso;
	  float photonIso=it_Pho->photonIso;
	  float PhoEt=it_Pho->momentum.Et();
	  // fiducial cuts. Look for only barrel now
	  bool etaCut = (std::abs(it_Pho->caloPosition.Eta()) < maxEta);

	  // Spike cleaning
	  h_r9->Fill(it_Pho->r9);
	  bool isSpike = (it_Pho->r9>maxR9 || it_Pho->sigmaIetaIeta<=0.001 || it_Pho->sigmaIphiIphi<=0.001);
	  //if(isSpike) continue;
	  h_SeedTime_afterR9->Fill(it_Pho->seedTime);
	  h_SeedTimeVSE_afterR9->Fill(it_Pho->seedTime,it_Pho->momentum.E());

	  // Et cuts, 25 GeV for trailing photons. Will apply tighter for the leading one.
	  bool EtCut = (PhoEt > trailEtCut);
	  bool EtCutLead = (PhoEt > leadEtCut);
	  // cuts containing EE cases for later use, but EE is not used for the time being.

	  // H/E (in trigger, 0.15 for EB, 0.10 for EE)
	  bool heCut = (it_Pho->hadTowOverEm < maxHoverE);
	  bool heCutLoose = (it_Pho->hadTowOverEm < 0.1);
	  // sigma_ietaieta (in trigger 0.014 for EB, 0.034 for EE)
	  bool sIetaCut = (it_Pho->sigmaIetaIeta < maxSihih);
	  //bool sIetaCut = true;
	  // Ecal Isolation
	  bool ecalIsoCut = (ecalIsoDR04 < 4.2 + 0.006*PhoEt + 0.183*Rho25);
	  bool ecalIsoCutdR03 = (ecalIsoDR03 < 4.2 + 0.006*PhoEt);
	  // Hcal Isolation
	  bool hcalIsoCut = (hcalIsoDR04 < 2.2 + 0.0025*PhoEt + 0.062*Rho25);
	  bool hcalIsoCutdR03 = (hcalIsoDR03 < 2.2 + 0.0025*PhoEt);
	  // Track Isolation
	  bool trackIsoCut = (trackIsoDR04 < 2.0 + 0.001*PhoEt + 0.0167*Rho25);
	  bool trackIsoCutdR03 = (trackIsoDR03 < 2.0 + 0.001*PhoEt);

	  //PF Isolation
	  //bool PfIsoCut = (chargedHadronIso+neutralHadronIso+photonIso)/PhoEt < 0.2;
	  bool PfIsoCut = (chargedHadronIso+neutralHadronIso+photonIso - (PUCorr_chargedHadron+PUCorr_neutralHadron+PUCorr_photon)*Rho25 )<8.5; 
	  bool Iso2012IdCutLoose = false,Iso2012IdCutMed = false,Iso2012IdCutTight = false;
	  if(fabs(it_Pho->caloPosition.Eta())<1.0){
	    Iso2012IdCutLoose=((chargedHadronIso<2.6+0.012*Rho25) && (neutralHadronIso<3.5+PhoEt*0.04+0.03*Rho25) && (photonIso<1.3+PhoEt*0.005+.148*Rho25));
	    Iso2012IdCutMed=((chargedHadronIso<1.5+0.012*Rho25) && (neutralHadronIso<1.0+PhoEt*0.04+0.03*Rho25) && (photonIso<0.7+PhoEt*0.005+.148*Rho25));
	    Iso2012IdCutTight=((chargedHadronIso<0.7+0.012*Rho25) && (neutralHadronIso<0.4+PhoEt*0.04+0.03*Rho25) && (photonIso<0.5+PhoEt*0.005+.148*Rho25));
	  }
	  else{
	    Iso2012IdCutLoose=((chargedHadronIso<2.6+0.010*Rho25) && (neutralHadronIso<3.5+PhoEt*0.04+0.057*Rho25) && (photonIso<1.3+PhoEt*0.005+.130*Rho25));
	    Iso2012IdCutMed=((chargedHadronIso<1.5+0.010*Rho25) && (neutralHadronIso<1.0+PhoEt*0.04+0.057*Rho25) && (photonIso<0.7+PhoEt*0.005+.130*Rho25));
	    Iso2012IdCutTight=((chargedHadronIso<0.7+0.010*Rho25) && (neutralHadronIso<0.4+PhoEt*0.04+0.057*Rho25) && (photonIso<0.5+PhoEt*0.005+.130*Rho25));
	  }	
	  bool Iso2012IdFakeCutLoose = false,CHIso2012IdFakeCutLoose = false,Iso2012IdFakeCutMed = false,CHIso2012IdFakeCutMed = false,Iso2012IdFakeCutTight = false;
	  if(fabs(it_Pho->caloPosition.Eta())<1.0){
	    Iso2012IdFakeCutLoose=((chargedHadronIso<15.+0.012*Rho25) && (neutralHadronIso<3.5+PhoEt*0.04+0.03*Rho25) && (photonIso<1.3+PhoEt*0.005+.148*Rho25));
	    Iso2012IdFakeCutMed=((chargedHadronIso<15.0+0.012*Rho25) && (neutralHadronIso<1.0+PhoEt*0.04+0.03*Rho25) && (photonIso<0.7+PhoEt*0.005+.148*Rho25));
	    Iso2012IdFakeCutTight=(/*(chargedHadronIso>0.7+0.012*Rho25) &&*/ (neutralHadronIso<0.4+PhoEt*0.04+0.03*Rho25) && (photonIso<0.5+PhoEt*0.005+.148*Rho25));
	    //CHIso2012IdFakeCutLoose=( ((chargedHadronIso<2.6+0.012*Rho25) && (photonIso>1.3+PhoEt*0.005+.148*Rho25)) || ((chargedHadronIso>2.6+0.012*Rho25) && (photonIso<1.3+PhoEt*0.005+.148*Rho25)) );
	    CHIso2012IdFakeCutLoose=(chargedHadronIso>2.6+0.012*Rho25);
	    CHIso2012IdFakeCutMed=(chargedHadronIso<1.5+0.012*Rho25);
	  }
	  else{
	    Iso2012IdFakeCutLoose=((chargedHadronIso<15.+0.010*Rho25) && (neutralHadronIso<3.5+PhoEt*0.04+0.057*Rho25) && (photonIso<1.3+PhoEt*0.005+.130*Rho25));
	    Iso2012IdFakeCutMed=((chargedHadronIso<15.0+0.010*Rho25) && (neutralHadronIso<1.0+PhoEt*0.04+0.057*Rho25) && (photonIso<0.7+PhoEt*0.005+.130*Rho25));
	    Iso2012IdFakeCutTight=(/*(chargedHadronIso>0.7+0.010*Rho25) &&*/ (neutralHadronIso<0.4+PhoEt*0.04+0.057*Rho25) && (photonIso<0.5+PhoEt*0.005+.130*Rho25));
	    //CHIso2012IdFakeCutLoose=( ((chargedHadronIso<2.6+0.010*Rho25) && (photonIso>1.3+PhoEt*0.005+.130*Rho25)) || ((chargedHadronIso>2.6+0.010*Rho25) && (photonIso<1.3+PhoEt*0.005+.130*Rho25)) );
	    CHIso2012IdFakeCutLoose= (chargedHadronIso>2.6+0.010*Rho25);
	    CHIso2012IdFakeCutMed=(chargedHadronIso<1.5+0.010*Rho25);
	  }	
	  bool Iso2012IdFakeCutLoosePhoIso = false,CHIso2012IdFakeCutLoosePhoIso = false;
	  if(fabs(it_Pho->caloPosition.Eta())<1.0){
	    Iso2012IdFakeCutLoosePhoIso=((chargedHadronIso<2.6+0.012*Rho25) && (neutralHadronIso<3.5+PhoEt*0.04+0.03*Rho25) && (photonIso<50.+PhoEt*0.005+.148*Rho25));
	    CHIso2012IdFakeCutLoosePhoIso=(photonIso>1.3+0.012*Rho25);
	  }
	  else{
	    Iso2012IdFakeCutLoosePhoIso=((chargedHadronIso<2.6+0.010*Rho25) && (neutralHadronIso<3.5+PhoEt*0.04+0.057*Rho25) && (photonIso<50.+PhoEt*0.005+.130*Rho25));
	    CHIso2012IdFakeCutLoosePhoIso= (photonIso>1.3+0.010*Rho25);
	  }	
	  //combined cuts
	  //  bool combIsoCut =( ( ecalIsoDR03 + hcalIsoDR03 + trackIsoDR03 ) < 6.0 );
	  bool combIsoCut =( ( ecalIsoDR03+hcalIsoDR03+trackIsoDR03 - (PUCorr_ECAL+PUCorr_HCAL+PUCorr_TRACK)*Rho25 ) < maxCombIso );
	  bool combIsoFakeHighCut =( ( ecalIsoDR03+hcalIsoDR03+trackIsoDR03 - (PUCorr_ECAL+PUCorr_HCAL+PUCorr_TRACK)*Rho25 ) < maxFakeCombIso );
	  bool PfIsoFakeHighCut = (chargedHadronIso+neutralHadronIso+photonIso - (PUCorr_chargedHadron+PUCorr_neutralHadron+PUCorr_photon)*Rho25)<27.0;
	  bool stdIsoCut = (ecalIsoCut+hcalIsoCut+trackIsoCut);
	  //hlt cuts
	  bool ecalIsoVLcut = ( ecalIsoDR03  < 6.0 + 0.012*PhoEt );
	  bool hcalIsoVLcut = ( hcalIsoDR03 < 4.0 + 0.005*PhoEt );
	  bool trackIsoVLcut = ( trackIsoDR03  < 4.0 + 0.002*PhoEt );
	  bool IsoVLCut = ( ecalIsoVLcut && hcalIsoVLcut && trackIsoVLcut);
	  bool CaloIdLCut = ( (it_Pho->hadronicOverEm < 0.15) && (it_Pho->sigmaIetaIeta < 0.014) );
	  bool R9TriggerCut = (it_Pho->r9 > 0.8);
	  //Pixel cut
	  bool pixelCut = (it_Pho->nPixelSeeds==0);
	  bool elevetocut = (it_Pho->passelectronveto == 1);

	  bool R9Id85=it_Pho->r9>0.85;
	  bool CaloId10=( it_Pho->hadronicOverEm<0.1 && it_Pho->sigmaIetaIeta < 0.014 );
	  bool Iso50=(ecalIsoDR03<5.0 + 0.012*PhoEt
		      && hcalIsoDR03<5.0 + 0.005*PhoEt
		      && trackIsoDR03<5.0+ 0.002*PhoEt
		      );
	  bool R9Id85orCaloId10andIso50Cut = R9Id85 || ( CaloId10 && Iso50 );


	  bool METdPhiCut = getDphi(it_Pho->caloPosition.Phi(),met->mEt.Phi())<maxMETdphi;

	  bool PhoCutPF =  ( etaCut && EtCut && !isSpike && heCut && Iso2012IdCutLoose && sIetaCut);
	  //bool FakeCutPF = ( etaCut && EtCut && !isSpike && heCut && pixelCut /*&& elevetocut*/ && Iso2012IdFakeCutLoose) && (CHIso2012IdFakeCutLoose || !sIetaCut);	  
	  bool FakeCutPF = ( etaCut && EtCut && !isSpike && heCut && pixelCut /*&& elevetocut*/ && Iso2012IdFakeCutLoose/*PhoIso*/) && (CHIso2012IdFakeCutLoose/*PhoIso*/ || !sIetaCut);	  
	  //for purity study
	  //bool PhoCutPF =  ( etaCut && EtCut && !isSpike && heCut && Iso2012IdCutLoose/* && sIetaCut*/);
	  //bool FakeCutPF = ( etaCut && EtCut && !isSpike && heCut && pixelCut /*&& elevetocut*/ && Iso2012IdFakeCutLoose) && (CHIso2012IdFakeCutLoose/* || !sIetaCut*/);	  
	  bool PhoCutPFwithDphiCuts =  ( etaCut && EtCut && !isSpike && heCut && Iso2012IdCutLoose && sIetaCut && METdPhiCut);
	  bool FakeCutPFwithDphiCuts = ( etaCut && EtCut && !isSpike && heCut && pixelCut /*&& elevetocut*/ && Iso2012IdFakeCutLoose && METdPhiCut) && (CHIso2012IdFakeCutLoose || !sIetaCut);	  

	  h_FakeCuts->Fill(0);
	  if(etaCut){
	    h_FakeCuts->Fill(1);
	    if(EtCut){
	      h_FakeCuts->Fill(2);
	      if(!isSpike){
		h_FakeCuts->Fill(3);
		if(heCut){
		  h_FakeCuts->Fill(4);
		  if(pixelCut){
		    h_FakeCuts->Fill(5);
		    if(Iso2012IdFakeCutLoose){
		      h_FakeCuts->Fill(6);
		      if((CHIso2012IdFakeCutLoose || !sIetaCut)){
			h_FakeCuts->Fill(7);
			if(CHIso2012IdFakeCutLoose){
			  h_FakeCuts->Fill(8);
			  if(!sIetaCut){
			    h_FakeCuts->Fill(9);
			  }
			}
		      }
		    }
		  }
		}
	      }
	    }
	  }


	  if(PhoCutPF){
	    nPhoCandsTotal++;
	    if(!PhoCutPFwithDphiCuts) nPhoCandsFailDphiCut++;
	  }
	  if(FakeCutPF){
	    nFakeCandsTotal++;
	    if(!FakeCutPFwithDphiCuts)nFakeCandsFailDphiCut++;
	  }
	  bool PhoCutEBEE = (/*etaCut && */EtCut && !isSpike && heCut && combIsoCut && sIetaCut /*&& CaloId10 && Iso50*/);
	  bool PhoCut = (etaCut && EtCut && !isSpike && heCut && combIsoCut && sIetaCut /*&& CaloId10 && Iso50*/);
	  //bool PhoCut = (etaCut && EtCut && !isSpike && heCut && combIsoCut && sIetaCut && R9Id85orCaloId10andIso50Cut);
	  bool StdPhoCut = (etaCut && EtCut && !isSpike && heCut && stdIsoCut && sIetaCut && CaloId10 && Iso50);
	  bool PhoCutNoEtCut = (etaCut && !isSpike && heCut && combIsoCut && sIetaCut && CaloIdLCut && !pixelCut && IsoVLCut);
	  bool PhoCutNminus3 = (etaCut && EtCut && !isSpike && heCut && sIetaCut && pixelCut && CaloId10 && Iso50);
	  bool FakeCut = ( etaCut && EtCut && !isSpike && heCut && pixelCut && combIsoFakeHighCut /*&& R9Id85orCaloId10andIso50Cut*/ ) && (!combIsoCut || !sIetaCut);
	  bool StdFakeCut = ( etaCut && EtCut && !isSpike && heCut && pixelCut && combIsoFakeHighCut && R9Id85orCaloId10andIso50Cut ) && (!hcalIsoCut || !trackIsoCut || !sIetaCut);

	  //bool FakeCut = ( etaCut && EtCut && !isSpike && heCut && pixelCut && combIsoFakeHighCut && R9Id85orCaloId10andIso50Cut && (!combIsoCut || !sIetaCut) );

	  bool Pho25gev = (etaCut && EtCut);
	  bool Pho40gev = (etaCut && EtCutLead);
	  bool Pho25gevHE = (etaCut && EtCut && heCut);
	  bool Pho40gevHE = (etaCut && EtCutLead && heCut);
	  if(Pho25gev)numPho25Gev++;
	  if(Pho40gev)numPho40Gev++;
	  if(Pho25gevHE)numPho25GevHE++;
	  if(Pho40gevHE)numPho40GevHE++;//use these to build numOne25GeVPhoEvents , etc.

	  bool PhoCutNew = (etaCut && EtCut && !isSpike && heCut && combIsoCut && sIetaCut && CaloId10 && Iso50);
	  bool PhoCutOld = (etaCut && EtCut && !isSpike && heCut && combIsoCut && sIetaCut && CaloIdLCut && IsoVLCut);

	  if(PhoCutOld)oldP++;
	  if(PhoCutNew)newP++;

	  bool passHLT_Pho  = (useTrigger ? PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_CaloId10_Iso50_v") : true);
	  
	  bool passHLT_Fake = (useTrigger ? ( PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_CaloId10_Iso50_v")
					      || PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_R9Id85_v") 
					      || PassTrigger("HLT_Photon36_R9Id85_Photon22_CaloId10_Iso50_v")
					      || PassTrigger("HLT_Photon36_R9Id85_Photon22_R9Id85_v") ) : true);

	  //----set up filtered events-----------
	  if(PhoEt > 30.0 && heCut) filterCheck++;
	  if(PhoEt > 43.0) GreaterThan43++;
	  //-------------------------------------
	

	  //Now fill pho_Cands and fake_Cands
	  //pho_Cands is for e and g
	  //fake_Cands is for ff only
	  //need to decide on trigger requirement; e.g. ggf, but event doesn't pass CaloIso_CaloId trigger, can it become gf?
	  if( PhoCutPF || FakeCutPF ){
	    GFphoCand=true;  GFpho_Cands.push_back(&*it_Pho);//let gammafake come from any HLT path, just like ff
	    //if( passHLT_Pho){
	    phoCand=true;  pho_Cands.push_back(&*it_Pho);
	    //GFphoCand=true;  GFpho_Cands.push_back(&*it_Pho);//let gammafake come from signal HLT path only, just like gg, eg, ee
	    //}
	  }
	  if( FakeCutPF/* && passHLT_Fake*/){
	    fakeCand=true; fake_Cands.push_back(&*it_Pho);
	  }
	  if( PhoCutNoEtCut && passHLT_Pho){
	    pho_Cands_NoEtCut.push_back(&*it_Pho);
	  }

	  if( PhoCutNminus3 && passHLT_Pho){
	    /*phoCandNminus3=true;  */pho_CandsNminus3.push_back(&*it_Pho);
	  }
	  if(PhoCutEBEE){pho_Cands_EBEE.push_back(&*it_Pho);}

	  if(etaCut && EtCut && !isSpike && heCut && CaloIdLCut && (IsoVLCut || R9TriggerCut)){
	    h_CombIsoNminus4->Fill(ecalIsoDR03-PUCorr_ECAL*Rho25+hcalIsoDR03-PUCorr_HCAL*Rho25+trackIsoDR03-PUCorr_TRACK*Rho25);
	    h_SigIetaIetaNminus4->Fill(it_Pho->sigmaIetaIeta);
	    h_EcalIsoDR03VsCombIsoDR03Nminus4->Fill(ecalIsoDR03-PUCorr_ECAL*Rho25+hcalIsoDR03-PUCorr_HCAL*Rho25+trackIsoDR03-PUCorr_TRACK*Rho25,ecalIsoDR03-PUCorr_ECAL*Rho25);
	    h_HcalIsoDR03VsCombIsoDR03Nminus4->Fill(ecalIsoDR03-PUCorr_ECAL*Rho25+hcalIsoDR03-PUCorr_HCAL*Rho25+trackIsoDR03-PUCorr_TRACK*Rho25,hcalIsoDR03-PUCorr_HCAL*Rho25);
	    h_TrackIsoDR03VsCombIsoDR03Nminus4->Fill(ecalIsoDR03-PUCorr_ECAL*Rho25+hcalIsoDR03-PUCorr_HCAL*Rho25+trackIsoDR03-PUCorr_TRACK*Rho25,trackIsoDR03-PUCorr_TRACK*Rho25);
	  }

	  if( etaCut && EtCut && !isSpike && heCut && sIetaCut && pixelCut && CaloIdLCut && (IsoVLCut || R9TriggerCut)){
	    if(met->met()<30){
	      h_BgroundCombIsoDR03Nminus3->Fill(ecalIsoDR03+hcalIsoDR03+trackIsoDR03);
	      h_BgroundCombIsoDR04Nminus3->Fill(ecalIsoDR04+hcalIsoDR04+trackIsoDR04);
	    }
	    if(ecalIsoCut && trackIsoCut){
	      h_HcalIsoDR03Nminus1->Fill(hcalIsoDR03);
	      h_HcalIsoDR04Nminus1->Fill(hcalIsoDR04);
	      if(met->met()<30){
		h_BgroundHcalIsoDR03Nminus1->Fill(hcalIsoDR03);
	      }
	    }
	    if(hcalIsoCut && trackIsoCut){
	      h_EcalIsoDR03Nminus1->Fill(ecalIsoDR03);
	      h_EcalIsoDR04Nminus1->Fill(ecalIsoDR04);
	      if(met->met()<30){
		h_BgroundEcalIsoDR03Nminus1->Fill(ecalIsoDR03);
	      }
	    }
	    if(ecalIsoCut && hcalIsoCut){
	      h_TrackIsoDR03Nminus1->Fill(trackIsoDR03);
	      h_TrackIsoDR04Nminus1->Fill(trackIsoDR04);
	      if(met->met()<30){
		h_BgroundTrackIsoDR03Nminus1->Fill(trackIsoDR03);
	      }
	    }
	  }
	

	  // Fill lots of plots
	  if(etaCut && EtCut && !isSpike){
	    h_EcalIsoVsNVertex->Fill(NVertex+1,ecalIsoDR04);
	    h_HcalIsoVsNVertex->Fill(NVertex+1,hcalIsoDR04);
	    h_TrackIsoVsNVertex->Fill(NVertex+1,trackIsoDR04);
	    if(heCut){
	      //h_Rho_VS_NVertex_afterHE->Fill(NVertex,Rho);
	      //h_Rho_VS_NVertex_Prof_afterHE->Fill(NVertex,Rho);
	      //DR03 cone study
	      h_EcalIsoDR03->Fill(ecalIsoDR03);
	      h_HcalIsoDR03->Fill(hcalIsoDR03);
	      h_TrackIsoDR03->Fill(trackIsoDR03);
	      h_EcalIsoDR04->Fill(ecalIsoDR04);
	      h_HcalIsoDR04->Fill(hcalIsoDR04);
	      if(hcalIsoCut){
		h_EcalIso->Fill(ecalIsoDR04);
	      }
	      if(ecalIsoCut){
		h_HcalIso->Fill(hcalIsoDR04);
		if(hcalIsoCut){
		  h_EcalIso_Preselection->Fill(ecalIsoDR04);
		  h_HcalIso_Preselection->Fill(hcalIsoDR04);
		  h_TrackIso_Preselection->Fill(trackIsoDR04);
		  h_EcalIso_Preselection_NVertex_Corrected->Fill(ecalIsoDR04 - 0.127*NVertex);
		  h_HcalIso_Preselection_NVertex_Corrected->Fill(hcalIsoDR04 - 0.0428*NVertex);
		  h_TrackIso_Preselection_NVertex_Corrected->Fill(trackIsoDR04 - (-0.03527)*NVertex);
		  h_EcalIso_Preselection_Rho_Corrected->Fill(ecalIsoDR04 - 0.2888*Rho);
		  h_HcalIso_Preselection_Rho_Corrected->Fill(hcalIsoDR04 - 0.106*Rho);
		  h_TrackIso_Preselection_Rho_Corrected->Fill(trackIsoDR04 - 0.09845*Rho);
		  h_TrackIso->Fill(trackIsoDR04);
		  h_PixelSeeds->Fill(it_Pho->nPixelSeeds);
		  if(AtLeastOnePFJet){h_PixelSeeds_JetReq->Fill(it_Pho->nPixelSeeds);}		  
		}
	      }
	    }//if(heCut)
	  }//if(etaCut && EtCut && !isSpike)
     
	  if(printLevel>0) cout<<"End of Photon Loop"<<endl;
	}//for(it_Pho)

	if(numPho25Gev>0){
	  numOne25GeVPhoEvents++;
	  if(numPho25GevHE>0)numOne25GeVPhoEventsPassHE++;
	  if(numPho25Gev>1){
	    numTwo25GeVPhoEvents++;
	    if(numPho25GevHE>1)numTwo25GeVPhoEventsPassHE++;
	    if(numPho40Gev>0)numTwo40_25GeVPhoEvents++;
	  }
	  if(numPho25GevHE>1 && numPho40GevHE>0)numTwo40_25GeVPhoEventsPassHE++;
	}
	
	//sort pho_Cands and fake_Cands by Pt
	std::sort(pho_Cands.begin(), pho_Cands.end(), EtGreater<susy::Photon>);
	if(printLevel>0)cout<<"phoCands size= "<<pho_Cands.size()<<endl;
	std::sort(GFpho_Cands.begin(), GFpho_Cands.end(), EtGreater<susy::Photon>);
	if(printLevel>0)cout<<"GFphoCands size= "<<GFpho_Cands.size()<<endl;
	std::sort(pho_CandsNminus3.begin(), pho_CandsNminus3.end(), EtGreater<susy::Photon>);
	std::sort(pho_Cands_EBEE.begin(), pho_Cands_EBEE.end(), EtGreater<susy::Photon>);
	std::sort(fake_Cands.begin(), fake_Cands.end(), EtGreater<susy::Photon>);
	if(printLevel>0)cout<<"fakeCands size= "<<fake_Cands.size()<<endl;

	//fill number of candidate plots
	int g=0,e=0;
	for(int k=0;k<int(pho_Cands.size());k++){
	  if(pho_Cands[k]->nPixelSeeds==0)g++;
	  else e++;
	}
	h_NumE_NumG->Fill(e,g);
	h_NumE_NumG_NumF->Fill(e,g,fake_Cands.size());
	h_NPhoCands->Fill(pho_Cands.size());
	h_NFakeCands->Fill(fake_Cands.size());
	h_NPho_NFake->Fill(pho_Cands.size(),fake_Cands.size());
      
	for(std::vector<susy::Photon*>::iterator pho_it_EBEE = pho_Cands_EBEE.begin();pho_it_EBEE!=pho_Cands_EBEE.end();pho_it_EBEE++){
	  h_TrigPhosEta->Fill((*pho_it_EBEE)->caloPosition.Eta());
	  if(pho_it_EBEE==pho_Cands_EBEE.begin() || pho_it_EBEE==++(pho_Cands_EBEE.begin()))h_TrigPhosEta_TopTwo->Fill((*pho_it_EBEE)->caloPosition.Eta());
	}

	//Make e-mu and mu-mu samples
	if(printLevel>0)cout<<"Fill eMu sample"<<endl;
	if( pho_Cands.size()>0 && Muons.size()>0 && ( (*pho_Cands.begin())->momentum.Et()>leadEtCut || (*Muons.begin())->momentum.Et()>leadEtCut ) ){
	  //First eMu
	  for(std::vector<susy::Photon*>::iterator pho_it_eMu = pho_Cands.begin();pho_it_eMu!=pho_Cands.end();pho_it_eMu++){
	    if((*pho_it_eMu)->nPixelSeeds>0){//want electrons only
	      for(std::vector<susy::Muon*>::iterator mu_it_eMu = Muons.begin();mu_it_eMu!=Muons.end();mu_it_eMu++){
		if((*pho_it_eMu)->momentum.Et()>leadEtCut || (*mu_it_eMu)->momentum.Et()>leadEtCut){
		  if( InvariantMass((*pho_it_eMu)->momentum,(*mu_it_eMu)->momentum)>71 && InvariantMass((*pho_it_eMu)->momentum,(*mu_it_eMu)->momentum)<111){
		    h_eMu_InvarMass_FullRange->Fill(InvariantMass((*pho_it_eMu)->momentum,(*mu_it_eMu)->momentum));
		    h_eMu_MET_FullRange->Fill(met->met());
		    if( InvariantMass((*pho_it_eMu)->momentum,(*mu_it_eMu)->momentum)>81 && InvariantMass((*pho_it_eMu)->momentum,(*mu_it_eMu)->momentum)<101){
		      h_eMu_InvarMass->Fill(InvariantMass((*pho_it_eMu)->momentum,(*mu_it_eMu)->momentum));
		      h_eMu_MET->Fill(met->met());
		      neMu++;
		    }//end 81-101 InvarMass
		  }//end 71-111 InvarMass
		}//end 40 gev requirements
	      }//end mu_it iterator
	    }//end pixel seed requirement
	  }//end pho_it_eMu iterator -- end eMu
	}//end e-mu
	if(printLevel>0)cout<<"Fill MuMu sample"<<endl;
	//Now mu-mu	
	if(Muons.size()>1 && (*Muons.begin())->momentum.Et()>leadEtCut){
	  for(std::vector<susy::Muon*>::iterator mu_it1_mumu = Muons.begin();mu_it1_mumu<(Muons.end())-1;mu_it1_mumu++){
	    for(std::vector<susy::Muon*>::iterator mu_it2_mumu = ++mu_it1_mumu;mu_it2_mumu!=Muons.end();mu_it2_mumu++){
	      if((*mu_it1_mumu)->momentum.Et()>leadEtCut || (*mu_it2_mumu)->momentum.Et()>leadEtCut){
		float muInvMass=InvariantMass((*mu_it1_mumu)->momentum,(*mu_it2_mumu)->momentum);
		if( muInvMass>71 && muInvMass<111){
		  h_MuMu_InvarMass_FullRange->Fill(muInvMass);
		  h_MuMu_MET_FullRange->Fill(met->met());
		  if( muInvMass>81 && muInvMass<101){
		    h_MuMu_InvarMass->Fill(muInvMass);
		    h_MuMu_MET->Fill(met->met());
		    nMuMu++;
		  }//end 81-101 InvarMass
		}//end 71-111 InvarMass
	      }//end 40 gev requirements
	    }//end second iterator ( mu_it2_mumu )
	  }//end first iterator ( mu_it1_mumu ) -- end MuMu
	}//end mu-mu
	  
	//Now back to photons

	if(printLevel>0)cout<<"Just sorted pho and fake Cands, about to create PhoOne and PhoTwo"<<endl;
	//Now we have sorted into two candidate samples, pho_Cands and fake_Cands, which are mutually exclusive on photon to photon basis
	//
	//need to make sure I can't get e.g. a gg and ff from one event.
  
	bool isgg=false, isee=false, iseg=false, isff=false,isgf=false,isfg=false,isgammafake=false, isgg_JetReq=false, isee_JetReq=false, iseg_JetReq=false, isff_JetReq=false,isgf_JetReq=false,isfg_JetReq=false,isgammafake_JetReq=false,isgg_2JetReq=false, isee_2JetReq=false, iseg_2JetReq=false, isff_2JetReq=false,isgf_2JetReq=false,isfg_2JetReq=false,isgammafake_2JetReq=false;
	bool PhosTooCloseDR=true, FakesTooCloseDR=true, PhosTooCloseDphi=true, FakesTooCloseDphi=true, PhoMetOverlap=true, FakePhoMetOverlap=true,gfTooCloseDR=true,gfTooCloseDPhi=true,gfMetOverlap=true;
	bool JetIsolatedFromBothPhos=false, JetIsolatedFromBothFakes=false, JetIsolatedFromPhoAndFake=false;
	bool TwoPhosAndTwoFakes=false;
	bool ThreePhoEvent=false, ThreeFakeEvent=false, FourPhoEvent=false, FourFakeEvent=false;
	bool UsingThirdPho=false,UsingThirdFake=false;
	bool breakPho=false, breakPho_JetReq=false, breakFake=false, breakFake_JetReq=false,breakPhoFake=false, breakPhoFake_JetReq=false;
	bool HasDiJetPt=false,has_dphiJet=0;
	int JetCounter=0;
	float ClosestDR=0.,tempClosestDR=0.;
	float ClosestDPhi=0.,tempClosestDPhi=0.;
	float RazrMr=0.,RazrR2=0.;
	float PhotonLessHt=0.,alphaT=0.;
	bool IsGoodJet=true;
	bool passJetMETcut=true;
	bool dogg=false,doee=false,doeg=false,doff=false,dogammafake=false,dogf=false,dofg=false;
	TLorentzVector MHT,R_clust,R_unclust;

	float ReducedMet=0.;

	susy::PFJet *dphiJet(0);
	//------------check of how many events have >=3 pho_Cands or fake_Cands------------	
	if(pho_Cands.size()>=3){nThreePhoEvents++;ThreePhoEvent=true;if(pho_Cands.size()>=4){nFourPhoEvents++;FourPhoEvent=true;}}
	if(fake_Cands.size()>=3){nThreeFakeEvents++;ThreeFakeEvent=true;if(fake_Cands.size()>=4){nFourFakeEvents++;FourFakeEvent=true;}}
	//---------------------------------------------------------------------------------
        
	//If there are at least 2 photon candidates, check pixel seeds and sort into gg, eg, ee
	if( pho_Cands.size()>=2 && (*pho_Cands.begin())->momentum.Et()>leadEtCut){ //make sure top pT object has at least 40GeV
	  ndiPhoCands++;if(printLevel>0)cout<<"pho_Cands.size()>=2 && (*pho_Cands.begin())->momentum.Et()>"<<leadEtCut<<endl;
	  if(fake_Cands.size()>=2){TwoPhosAndTwoFakes=true;nTwoPhosAndTwoFakes++;}
	  //Now do no jet req case
	  if(printLevel>0)cout<<"Now do phoCands no jet req case"<<endl;
	  //This mades sure the two pho objects are separated by dPhi>0.05 for no jet req case
	  PhosTooCloseDR=true;PhosTooCloseDphi=true;PhoMetOverlap=true;breakPho=false;doJetReq=false;do2JetReq=false;JetIsolatedFromBothPhos=false;
	  for(std::vector<susy::Photon*>::iterator pho_it = pho_Cands.begin();pho_it<(pho_Cands.end())-1;pho_it++){
	    if(breakPho)break;
	    PhoOne=*pho_it;if(PhoOne->momentum.Pt()<leadEtCut)break;
	    for(std::vector<susy::Photon*>::iterator pho_it2 = (pho_it+1);pho_it2!=pho_Cands.end();pho_it2++){
	      //require dPhi>0.05,dR>0.6
	      if(   !isSameObject(PhoOne->caloPosition,(*pho_it2)->caloPosition,0.6) 
		    && !tooClosePhi(PhoOne->caloPosition,(*pho_it2)->caloPosition,0.05) 
		    //dPhi cut between photons and MET
		    /*  && !tooClosePhi(PhoOne->caloPosition,met->mEt,0.05)
			&& !tooClosePhi((*pho_it2)->caloPosition,met->mEt,0.05) */  ){
		PhoTwo=*pho_it2;PhosTooCloseDR=false;PhosTooCloseDphi=false;PhoMetOverlap=false;breakPho=true;
		//This checks if there is at least one loose jet separated by 0.5 from both phos
		if(!PhosTooCloseDR && !PhosTooCloseDphi && AtLeastOnePFJet){// && !PhoMetOverlap){
		  //use pfJets.first because this is for all jets
		  for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.first.begin(); jet_it != pfJets.first.end(); jet_it++){
		    IsGoodJet=true;
		    //first clean from eles and muons
		    for(std::vector<susy::Electron*>::iterator ele_it = pfEles.begin();ele_it!=pfEles.end();ele_it++){
		      if(isSameObject((*ele_it)->momentum,(*jet_it)->momentum,0.5)){IsGoodJet=false;break;}
		    }
		    for(std::vector<susy::Muon*>::iterator mu_it = Muons.begin();mu_it!=Muons.end();mu_it++){
		      if(isSameObject((*mu_it)->momentum,(*jet_it)->momentum,0.5)){IsGoodJet=false;break;}
		    }
		    h_PfJet_pT->Fill((*jet_it)->momentum.Pt());h_PfJet_eta->Fill((*jet_it)->momentum.Eta());h_PfJet_phi->Fill((*jet_it)->momentum.Phi());
		    //now clean from the 2 pho objects
		    if(IsGoodJet){
		      if(!isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5) && !isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5)){
			h_PfJet_phoCleaned_pT->Fill((*jet_it)->momentum.Pt());
			h_PfJet_phoCleaned_eta->Fill((*jet_it)->momentum.Eta());h_PfJet_phoCleaned_phi->Fill((*jet_it)->momentum.Phi());
			JetIsolatedFromBothPhos=true;ndiPhoCands_JetReq++;break;
		      }
		    }
		  }
		}
		if(JetIsolatedFromBothPhos==true)doJetReq=true;
		break;
	      }
	      else{
		if(isSameObject(PhoOne->caloPosition,(*pho_it2)->caloPosition,0.6)){
		  PhosTooCloseDR=true;nPhosFailDR++;
		  if(printLevel>0)cout <<"PhosFailDR!"<< "  Run: "<<event->runNumber<<"  Event: "<<event->eventNumber<<"\n";
		}
		if(tooClosePhi(PhoOne->caloPosition,(*pho_it2)->caloPosition,0.05)){
		  PhosTooCloseDphi=true;nPhosFailDphi++;
		  if(printLevel>0)cout <<"PhosFailDphi!"<< "  Run: "<<event->runNumber<<"  Event: "<<event->eventNumber<<"\n";
		}	     
	      }
	    }
	  }
	  if(printLevel>0)cout<<"doJetReq: "<<doJetReq<<endl;
	
	  if(1/* && !(event->runNumber==194224 && event->eventNumber==284501624) &&
		 !(event->runNumber==190906 && event->eventNumber==232143784)*/
	     ){//overlap with ff
	    if(PhoOne->momentum.Et()>leadEtCut){
	      if(!PhosTooCloseDR && !PhosTooCloseDphi && !PhoMetOverlap){
		if(printLevel>0)cout<<"Now inside phoCands no jet req case"<<endl;
		RazrMr = GetRazrMr(PhoOne,PhoTwo);
		RazrR2 = GetRazrR2(PhoOne,PhoTwo,met);
		//try invariant mass cut to get rid of crap in tail
		//InvMassGen=InvariantMass();
		TVector3 vPos = (event->vertices[0]).position;
		TVector3 dirPhoOne=PhoOne->caloPosition - vPos,dirPhoTwo=PhoTwo->caloPosition - vPos;
		TVector3 pOne=dirPhoOne.Unit()*(PhoOne->MVAcorrMomentum).E(),pTwo=dirPhoTwo.Unit()*(PhoTwo->MVAcorrMomentum).E();
		TLorentzVector p4PhoOneVcorr(pOne.x(),pOne.y(),pOne.z(),(PhoOne->MVAcorrMomentum).E()),p4PhoTwoVcorr(pTwo.x(),pTwo.y(),pTwo.z(),(PhoTwo->MVAcorrMomentum).E());
		InvMass=InvariantMass(PhoOne->momentum,PhoTwo->momentum);
		float InvMassMVAcorr=InvariantMass(PhoOne->MVAcorrMomentum,PhoTwo->MVAcorrMomentum);
		float InvMassMVAcorrVertexCorr=InvariantMass(p4PhoOneVcorr,p4PhoTwoVcorr);
		InvMass=InvMassMVAcorrVertexCorr;
		diEMpt=GetDiEmPt(PhoOne,PhoTwo);
		float diJETpt=0.;
		if(InvMass>-9999.){
		  //find out how many isolated jets
		  ClosestDR=999.;
		  ClosestDPhi=999.;
		  JetCounter=0;
		  passJetMETcut=true;
		  //use pfJets.first here because we want all jets
		  for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.first.begin(); jet_it != pfJets.first.end(); jet_it++){	
		    //to be counted as a jet, it must be dr>0.5 separated from the 2 objects, plus pfEles and pfMuons	
		    IsGoodJet=true;
		    bool check=true;
		    if(isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5)){IsGoodJet=false;}		  
		    if(isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5)){IsGoodJet=false;}
		    check=IsGoodJet;
		    for(std::vector<susy::Electron*>::iterator ele_it = pfEles.begin();ele_it!=pfEles.end();ele_it++){
		      if(isSameObject((*ele_it)->momentum,(*jet_it)->momentum,0.5)){IsGoodJet=false;}
		    }
		    if(check && !IsGoodJet) nCnt[6]++; //number of jets that fail ele cleaning from e/g
		    check=true;
		    for(std::vector<susy::Muon*>::iterator mu_it = Muons.begin();mu_it!=Muons.end();mu_it++){
		      if(isSameObject((*mu_it)->momentum,(*jet_it)->momentum,0.5)){IsGoodJet=false;}
		    }
		    if(check && !IsGoodJet) nCnt[7]++; //number of jets that fail muon cleaning from e/g
		    if(IsGoodJet){
		      JetCounter++;
		      if(JetCounter==1)invmassJet1=(*jet_it);if(JetCounter==2)invmassJet2=(*jet_it);
		      tempClosestDR = ( (getDR(PhoOne->caloPosition,(*jet_it)->momentum) < getDR(PhoTwo->caloPosition,(*jet_it)->momentum)) ? getDR(PhoOne->caloPosition,(*jet_it)->momentum) : getDR(PhoTwo->caloPosition,(*jet_it)->momentum) );
		      if(tempClosestDR<ClosestDR)ClosestDR=tempClosestDR;
		      tempClosestDPhi = ( (fabs(getDphi(PhoOne->caloPosition.Phi(),(*jet_it)->momentum.Phi())) < fabs(getDphi(PhoTwo->caloPosition.Phi(),(*jet_it)->momentum.Phi()))) ? fabs(getDphi(PhoOne->caloPosition.Phi(),(*jet_it)->momentum.Phi())) : fabs(getDphi(PhoTwo->caloPosition.Phi(),(*jet_it)->momentum.Phi())) );
		      if(tempClosestDPhi<ClosestDPhi){ClosestDPhi=tempClosestDPhi;dphiJet=(*jet_it);has_dphiJet=1;}
		      if(getDphi((*jet_it)->momentum.Phi(),met->mEt.Phi())<minJetMETdphi)passJetMETcut=false;
		    }
		  }
		  //Try to match pho objects to jets
		  //here use pfJets.second because we want to use l1FastL2L2/L2L3 for jet matching
		  HasDiJetPt=false;
		  MatchPhosToJets(PhoOne,PhoTwo,pfJets.second,DiJetPtJet1,DiJetPtJet2,HasDiJetPt,0.3);
		  if(HasDiJetPt)nHasDiJetPt++;
		  else nNotHasDiJetPt++;
		  metReweightDiEMPt=0.,metReweightDiJetPt=0.,metReweightDiJetPtError=0.;
		  if(HasDiJetPt) diJETpt=GetDiJetPt(DiJetPtJet1,DiJetPtJet2);
		  else diJETpt=diEMpt;
		  dPhi = std::fabs(TVector2::Phi_mpi_pi(PhoOne->caloPosition.Phi() - PhoTwo->caloPosition.Phi()));
		  if(HasDiJetPt) alphaT = GetAlphaT(DiJetPtJet1->momentum, DiJetPtJet2->momentum);
		  else alphaT = GetAlphaT(PhoOne->momentum, PhoTwo->momentum);
		  if(HasDiJetPt) PhotonLessHt=GetPhotonLessHt(met->sumEt,DiJetPtJet1->momentum,DiJetPtJet2->momentum);
		  else PhotonLessHt=GetPhotonLessHt(met->sumEt,PhoOne->momentum,PhoTwo->momentum);
		  //-----------
		  CategorizeEvents(PhoOne,PhoTwo,Rho25,dogg,doee,doeg,doff,dogammafake,dogf,dofg,useTrigger);//new way to sort events
		  //CategorizeEventsPhoIso(PhoOne,PhoTwo,Rho25,dogg,doee,doeg,doff,dogammafake,dogf,dofg,useTrigger);//new way to sort events
		  if(!passJetMETcut){
		    if(dogg)nFailJetMETcut_gg++;
		    if(doee  && InvMass>81 && InvMass<101)nFailJetMETcut_ee++;
		    if(doeg)nFailJetMETcut_eg++;
		    if(doff)nFailJetMETcut_ff++;
		    if(dogammafake)nFailJetMETcut_gammafake++;
		    if(dogf)nFailJetMETcut_gf++;
		    if(dofg)nFailJetMETcut_fg++;
		    continue;
		  }
		  //-----------
		  for(std::vector<susy::PFJet*>::iterator MHTjet_it = MHTpfJets.begin(); MHTjet_it != MHTpfJets.end(); MHTjet_it++){
		    //cout<<getDR(PhoOne->caloPosition,(*MHTjet_it)->momentum)<<endl<<getDR(PhoTwo->caloPosition,(*MHTjet_it)->momentum)<<endl;
		    if(getDR(PhoOne->caloPosition,(*MHTjet_it)->momentum)<0.5)continue;
		    if(getDR(PhoTwo->caloPosition,(*MHTjet_it)->momentum)<0.5)continue;
		    MHT+=(*MHTjet_it)->momentum;
		    //cout<<MHT.Et()<<"  "<<MHT.Pt()<<endl;
		  }
		  //R_clust = MHT;
		  MHT*=-1;
		  /*for(std::vector<susy::PFParticle*>::iteratot pfPart_it = event->pfParticles.begin(); pfPart_it != event->pfParticles.end(); pfPart_it++){
		    R_unclust+=pfPart_it->momentum;
		    }
		    R_unclust-=PhoOne->momentum;R_unclust-=PhoTwo->momentum;
		  */
		  //cout<<MHT.Et()<<"  "<<MHT.Pt()<<endl;
		  TLorentzVector diPhoRed=PhoOne->momentum+PhoTwo->momentum;
		  ReducedMet = sqrt((met->metX()+diPhoRed.Px())*(met->metX()+diPhoRed.Px())+(met->metY()+diPhoRed.Py())*(met->metY()+diPhoRed.Py()));
		  //cout<<"metX: "<<met->metX()<<"  diPhoX: "<<diPhoRed.Px()<<endl;
		  //cout<<"metY: "<<met->metY()<<"  diPhoY: "<<diPhoRed.Py()<<endl<<endl;
		  //look for pixel seeds - if neither have, -> gg
		  if( dogg /*PhoOne->nPixelSeeds==0 && PhoTwo->nPixelSeeds==0*/){
		    if(printLevel>0)cout<<"Inside gg"<<endl;
		    //require seed time within +-3ns for no jet requirement case
		    //if(fabs(PhoOne->seedTime)<3. && fabs(PhoTwo->seedTime)<3.){
		    ngg++;isgg=true;ggnumVert[NVertex]++;

		    susy::Particle *PhoOneGen(0),*PhoTwoGen(0);
		    bool goForGen=false;
		    for(std::vector<susy::Particle>::iterator Part_it = event->genParticles.begin(); Part_it != event->genParticles.end(); Part_it++){
		      Short_t momIndex = Part_it->motherIndex;
		      float drClose1=999.,drClose2=999.;
		      bool goForGen1=false,goForGen2=false;
		      //if(Part_it->pdgId==21)cout<<endl<<"Gluon!"<<endl<<endl;
		      //if(event->genParticles[Part_it->motherIndex].pdgId==21)cout<<endl<<"Gluon Mother!"<<endl<<endl;
		      if(Part_it->status == 1){
			if(getDR(PhoOne->momentum,Part_it->momentum)<drClose1 && abs(PhoOne->momentum.Pt()-Part_it->momentum.Pt())/PhoOne->momentum.Pt()<.15){drClose1=getDR(PhoOne->momentum,Part_it->momentum);PhoOneGen=&*Part_it;goForGen1=true;}
			if(getDR(PhoTwo->momentum,Part_it->momentum)<drClose2 && abs(PhoTwo->momentum.Pt()-Part_it->momentum.Pt())/PhoTwo->momentum.Pt()<.15){drClose2=getDR(PhoTwo->momentum,Part_it->momentum);PhoTwoGen=&*Part_it;goForGen2=true;}
			if(goForGen1 && goForGen2)goForGen=true;
		      }
		    }
		    /*
		      if(goForGen){cout<<"gg PhoOne pdgId: "<<PhoOneGen->pdgId<<" and mother: "<<event->genParticles[PhoOneGen->motherIndex].pdgId;
		      if(HasDiJetPt){cout<<" and associated jet flavor alg: "<<DiJetPtJet1->algDefFlavour<<" and phy: "<<DiJetPtJet1->phyDefFlavour<<endl;}else cout<<endl;}
		      if(goForGen){cout<<"  PhoTwo pdgId: "<<PhoTwoGen->pdgId<<" and mother: "<<event->genParticles[PhoTwoGen->motherIndex].pdgId;
		      if(HasDiJetPt){cout<<" and associated jet flavor alg: "<<DiJetPtJet2->algDefFlavour<<" and phy: "<<DiJetPtJet2->phyDefFlavour<<endl;}else cout<<endl;}
		    */
		    if(HasDiJetPt){
		      h_ggPhoJetMatchFlavor_alg->Fill(fabs(DiJetPtJet1->algDefFlavour));h_ggPhoJetMatchFlavor_alg->Fill(fabs(DiJetPtJet2->algDefFlavour));
		      h_ggPhoJetMatchFlavor_phy->Fill(fabs(DiJetPtJet1->phyDefFlavour));h_ggPhoJetMatchFlavor_phy->Fill(fabs(DiJetPtJet2->phyDefFlavour));
		      h_ggMETvsPhoJetMatchFlavorLead->Fill(fabs(DiJetPtJet1->algDefFlavour),met->met());
		      h_ggMETvsPhoJetMatchFlavorTrail->Fill(fabs(DiJetPtJet2->algDefFlavour),met->met());
		    }
		    h_ggMHT->Fill(MHT.Pt(),PUweight);
		    h_ggMetSig->Fill(met->significance,PUweight);
		    h_ggMetSigVsSumEt->Fill(met->sumEt,met->significance,PUweight);
		    h_ggReduMet->Fill(ReducedMet,PUweight);
		    h_ggReduMetVsDiEmPt->Fill(diEMpt,ReducedMet,PUweight);
		    if(JetCounter==0)h_ggReduMetVsDiEmPt_0Jet->Fill(diEMpt,ReducedMet,PUweight);
		    if(JetCounter==1)h_ggReduMetVsDiEmPt_1Jet->Fill(diEMpt,ReducedMet,PUweight);
		    if(JetCounter>1)h_ggReduMetVsDiEmPt_2Jet->Fill(diEMpt,ReducedMet,PUweight);
		    h_ptHat_gg->Fill(ptHat);
		    h_met_vs_ptHat_gg->Fill(ptHat,met->met());
		    vector<float> MetAndInvMassProbs = GetMetAndInvMassProbs(InvMass,met->met(),SMmet,SMinvmass,BGmet,BGinvmass,NewHiggsMet);
		    float SMhiggs=MetAndInvMassProbs[0],BGhiggs=MetAndInvMassProbs[1],NewHiggs=MetAndInvMassProbs[2];
		    if(printLevel>0)cout<<"gg vals: SM:"<<SMhiggs<<"  BG:"<<BGhiggs<<"  NewHiggs:"<<NewHiggs<<endl;
		    if(SMhiggs>BGhiggs && SMhiggs>NewHiggs)h_MassAndMetProbs->Fill(1);
		    if(BGhiggs>SMhiggs && BGhiggs>NewHiggs)h_MassAndMetProbs->Fill(2);
		    if(NewHiggs>SMhiggs && NewHiggs>BGhiggs)h_MassAndMetProbs->Fill(3);
		    if(SMhiggs>0)h_MassAndMetProbs_Corr->Fill(1,SMhiggs);
		    if(BGhiggs>0)h_MassAndMetProbs_Corr->Fill(2,BGhiggs);
		    if(NewHiggs>0)h_MassAndMetProbs_Corr->Fill(3,NewHiggs);
		    float N_i = 1./(SMhiggs+BGhiggs+NewHiggs);
		    if(printLevel>0)cout<<"N_i:"<<N_i<<endl;
		    SMhiggs*=N_i;BGhiggs*=N_i;NewHiggs*=N_i;
		    if(printLevel>0)cout<<"gg vals: SM:"<<SMhiggs<<"  BG:"<<BGhiggs<<"  NewHiggs:"<<NewHiggs<<endl<<endl;
		    //nSMhiggs+=SMhiggs; nBGhiggs+=BGhiggs;
		    if(SMhiggs>0)h_MassAndMetProbs_CorrNorm->Fill(1,SMhiggs);
		    if(BGhiggs>0)h_MassAndMetProbs_CorrNorm->Fill(2,BGhiggs);
		    if(NewHiggs>0)h_MassAndMetProbs_CorrNorm->Fill(3,NewHiggs);
		    h_nJets_gg->Fill(JetCounter);
		    h_ClosestDR_gg->Fill(ClosestDR);
		    for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.first.begin(); jet_it != pfJets.first.end(); jet_it++){
		      h_DRfromJets_gg->Fill(getDR(PhoOne->caloPosition, (*jet_it)->momentum),getDR(PhoTwo->caloPosition, (*jet_it)->momentum));
		    }
		    h_ClosestDPhi_gg->Fill(ClosestDPhi);
		    ggPTs=make_pair(PhoOne->momentum.Pt(),PhoTwo->momentum.Pt());
		    h_NVertexVsMET_gg->Fill(met->met(),NVertex);
		    h_ggPerInstLumi->Fill(event->avgInsRecLumi);
		    if(NVertex<10)h_ggMet_NV0_10->Fill(met->met());
		    else if(NVertex>=10 && NVertex<15)h_ggMet_NV10_15->Fill(met->met());
		    else if(NVertex>=15)h_ggMet_NV15up->Fill(met->met());
		    if(event->isRealData && met->met()>100)cout<<"gg Event with MET="<<met->met()<<"  Run: "<<event->runNumber<<"  Lumi: "<<event->luminosityBlockNumber<<"  Event: "<<event->eventNumber<<"  PhoOne pT:"<<PhoOne->momentum.Pt()<<"  PhoTwo pT:"<<PhoTwo->momentum.Pt()<<endl;
		    ggRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
		    h_SeedTimeVsEta_gg->Fill(PhoOne->caloPosition.Eta(),PhoOne->seedTime);
		    h_SeedTimeVsEta_gg->Fill(PhoTwo->caloPosition.Eta(),PhoTwo->seedTime);
		    h_MetVsSeedTime_gg->Fill(PhoOne->seedTime, met->met());
		    h_MetVsSeedTime_gg->Fill(PhoTwo->seedTime, met->met());
		    if(isJetFail){bool go2=true;
		      for(std::vector<susy::PFJet*>::iterator jet_it = pfJetsFail.begin(); jet_it != pfJetsFail.end(); jet_it++){	
			if( isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5) || isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5) ) go2=false;
		      }
		      if(go2){nCnt[8]++;h_ggMet_JetFail->Fill(met->met());h_MET_JetFail->Fill(met->met());}
		    }
		    // Di-Jet Pt
		    if(HasDiJetPt){
		      h_ggDiJetPt->Fill(diJETpt);
		      h_ggDiJetPtOverDiEMPtVsDiEMPt->Fill(diEMpt,diJETpt/diEMpt);
		      h_PfJet_phoMatched_gg_pT->Fill(DiJetPtJet1->momentum.Pt());h_PfJet_phoMatched_gg_pT->Fill(DiJetPtJet2->momentum.Pt());
		      h_PfJet_phoMatched_gg_eta->Fill(DiJetPtJet1->momentum.Eta());h_PfJet_phoMatched_gg_phi->Fill(DiJetPtJet1->momentum.Phi());
		      h_PfJet_phoMatched_gg_eta->Fill(DiJetPtJet2->momentum.Eta());h_PfJet_phoMatched_gg_phi->Fill(DiJetPtJet2->momentum.Phi());
		    }
		    else{h_ggDiJetPt->Fill(diEMpt);}
		    //trailing leg photon for background
		    if(met->met()<30.){
		      h_BgroundCombIsoDR03Nminus3trail->Fill(PhoTwo->ecalRecHitSumEtConeDR03+PhoTwo->hcalTowerSumEtConeDR03()+PhoTwo->trkSumPtHollowConeDR03);
		      h_BgroundCombIsoDR04Nminus3trail->Fill(PhoTwo->ecalRecHitSumEtConeDR04+PhoTwo->hcalTowerSumEtConeDR04()+PhoTwo->trkSumPtHollowConeDR04);
		      h_BgroundEcalIsoDR03Nminus1trail->Fill(PhoTwo->ecalRecHitSumEtConeDR03);
		      h_BgroundHcalIsoDR03Nminus1trail->Fill(PhoTwo->hcalTowerSumEtConeDR03());
		      h_BgroundTrackIsoDR03Nminus1trail->Fill(PhoTwo->trkSumPtHollowConeDR03);
		    }
		    h_r9_gg->Fill(PhoOne->r9);h_r9_gg->Fill(PhoTwo->r9);
		    h_ggPt->Fill(PhoOne->momentum.Pt());h_ggPt->Fill(PhoTwo->momentum.Pt());
		    h_ggPtLead->Fill(PhoOne->momentum.Pt());h_ggPtTrail->Fill(PhoTwo->momentum.Pt());
		    h_ggEta->Fill(PhoOne->caloPosition.Eta());h_ggPhi->Fill(PhoOne->caloPosition.Phi());
		    h_ggEta->Fill(PhoTwo->caloPosition.Eta());h_ggPhi->Fill(PhoTwo->caloPosition.Phi());
		    h_sumEt_gg->Fill(met->sumEt);
		    h_Type1CorrSumEt_gg->Fill(Type1CorrMet->sumEt);
		    h_ggMet->Fill(met->met(),PUweight);
		    h_ggType1CorrMet->Fill(Type1CorrMet->met(),PUweight);
		    TLorentzVector DiPho = PhoOne->momentum + PhoTwo->momentum;
		    if(InvMassMVAcorrVertexCorr>120 && InvMassMVAcorrVertexCorr<130){
		      h_ggMETInvarMass120_130->Fill(met->met(),PUweight);h_ggMetMT_120_InvMass_130->Fill(TransverseMass(DiPho,met->mEt));
		      h_ggMetInvarMass_120_InvMass_130->Fill(InvariantMass(InvMassMVAcorrVertexCorr,DiPho,met->mEt));
		    }
		    if(InvMassMVAcorrVertexCorr>123 && InvMassMVAcorrVertexCorr<128){
		      h_ggMETInvarMass123_128->Fill(met->met(),PUweight);
		      h_ggMetInvarMass_123_InvMass_128->Fill(InvariantMass(InvMassMVAcorrVertexCorr,DiPho,met->mEt));
		    }
		    if(InvMassMVAcorrVertexCorr>95 && InvMassMVAcorrVertexCorr<110){
		      h_ggMETInvarMass95_110->Fill(met->met(),PUweight);h_ggMetMT_95_InvMass_110->Fill(TransverseMass(DiPho,met->mEt));
		      h_ggMetInvarMass_95_InvMass_110->Fill(InvariantMass(InvMassMVAcorrVertexCorr,DiPho,met->mEt));
		    }
		    if(InvMassMVAcorrVertexCorr>135 && InvMassMVAcorrVertexCorr<160){
		      h_ggMETInvarMass135_160->Fill(met->met(),PUweight);h_ggMetMT_135_InvMass_160->Fill(TransverseMass(DiPho,met->mEt));
		      h_ggMetInvarMass_135_InvMass_160->Fill(InvariantMass(InvMassMVAcorrVertexCorr,DiPho,met->mEt));
		    }
		    h_ggSigIetaIeta->Fill(PhoOne->sigmaIetaIeta);h_ggSigIetaIeta->Fill(PhoTwo->sigmaIetaIeta);
		    h_ggDiEMPt->Fill(diEMpt);
		    if(InvMass<40.)h_ggDiEMPtInvMassBelow40->Fill(diEMpt);
		    else h_ggDiEMPtInvMassAbove40->Fill(diEMpt);
		    h_ggInvarMass->Fill(InvMass,PUweight);
		    h_ggMetVsInvarMass->Fill(InvMass,met->met(),PUweight);
		    h_ggInvarMassMVAcorr->Fill(InvMassMVAcorr,PUweight);
		    h_ggInvarMassMVAcorrVertexCorr->Fill(InvMassMVAcorrVertexCorr,PUweight);
		    h_ggInvarMassMVAcorrVertexCorr_vs_Met->Fill(met->met(),InvMassMVAcorrVertexCorr);
		    h_ggPtOverInvarMassLead->Fill(PhoOne->momentum.Pt()/InvMass,PUweight);
		    h_ggPtOverInvarMassTrail->Fill(PhoTwo->momentum.Pt()/InvMass,PUweight);
		    h_ggMetMT->Fill(TransverseMass(DiPho,met->mEt));
		    h_ggMetInvarMass->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		    if(met->met()>30){
		      h_ggInvarMassMET30->Fill(InvMass,PUweight);
		      h_ggMetMT_MET30->Fill(TransverseMass(DiPho,met->mEt));
		      h_ggMetInvarMass_MET30->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		      h_ggInvarMassMET30MVAcorr->Fill(InvMassMVAcorrVertexCorr,PUweight);
		      if(met->met()>40){
			h_ggInvarMassMET40->Fill(InvMass,PUweight);
			h_ggMetMT_MET40->Fill(TransverseMass(DiPho,met->mEt));
			h_ggMetInvarMass_MET40->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			h_ggInvarMassMET40MVAcorr->Fill(InvMassMVAcorrVertexCorr,PUweight);
			if(met->met()>50){
			  h_ggInvarMassMET50->Fill(InvMass,PUweight);
			  h_ggMetMT_MET50->Fill(TransverseMass(DiPho,met->mEt));
			  h_ggMetInvarMass_MET50->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			  h_ggInvarMassMET50MVAcorr->Fill(InvMassMVAcorrVertexCorr,PUweight);
			  if(met->met()>60){
			    h_ggInvarMassMET60->Fill(InvMass,PUweight);
			    h_ggMetMT_MET60->Fill(TransverseMass(DiPho,met->mEt));
			    h_ggMetInvarMass_MET60->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			    h_ggInvarMassMET60MVAcorr->Fill(InvMassMVAcorrVertexCorr,PUweight);
			    if(met->met()>70){
			      h_ggInvarMassMET70->Fill(InvMass,PUweight);
			      h_ggMetMT_MET70->Fill(TransverseMass(DiPho,met->mEt));
			      h_ggMetInvarMass_MET70->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			      h_ggInvarMassMET70MVAcorr->Fill(InvMassMVAcorrVertexCorr,PUweight);
			      if(met->met()>80){
				h_ggInvarMassMET80->Fill(InvMass,PUweight);
				h_ggMetMT_MET80->Fill(TransverseMass(DiPho,met->mEt));
				h_ggMetInvarMass_MET80->Fill(InvariantMass(InvMass,DiPho,met->mEt));
				h_ggInvarMassMET80MVAcorr->Fill(InvMassMVAcorrVertexCorr,PUweight);
				if(met->met()>100){
				  h_ggInvarMassMET100->Fill(InvMass,PUweight);
				  h_ggMetMT_MET100->Fill(TransverseMass(DiPho,met->mEt));
				  h_ggMetInvarMass_MET100->Fill(InvariantMass(InvMass,DiPho,met->mEt));
				  h_ggInvarMassMET100MVAcorr->Fill(InvMassMVAcorrVertexCorr,PUweight);
				}
			      }
			    }
			  }
			}
		      }
		    }
		    h_rho_gg->Fill(Rho);h_NVertex_gg->Fill(NVertex);
		    h_EcalIsoDR03_gg->Fill(PhoOne->ecalRecHitSumEtConeDR03);h_EcalIsoDR03_gg->Fill(PhoTwo->ecalRecHitSumEtConeDR03);
		    h_EcalIsoDR03RhoCorr_gg->Fill(PhoOne->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25);h_EcalIsoDR03RhoCorr_gg->Fill(PhoTwo->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25);
		    h_HcalIsoDR03_gg->Fill(PhoOne->hcalTowerSumEtConeDR03());h_HcalIsoDR03_gg->Fill(PhoTwo->hcalTowerSumEtConeDR03());
		    h_HcalIsoDR03RhoCorr_gg->Fill(PhoOne->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25);h_HcalIsoDR03RhoCorr_gg->Fill(PhoTwo->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25);
		    h_TrackIsoDR03_gg->Fill(PhoOne->trkSumPtHollowConeDR03);h_TrackIsoDR03_gg->Fill(PhoTwo->trkSumPtHollowConeDR03);
		    h_TrackIsoDR03RhoCorr_gg->Fill(PhoOne->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);h_TrackIsoDR03RhoCorr_gg->Fill(PhoTwo->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);
		    h_CombIsoDR03_gg->Fill(PhoOne->ecalRecHitSumEtConeDR03+PhoOne->hcalTowerSumEtConeDR03()+PhoOne->trkSumPtHollowConeDR03);
		    h_CombIsoDR03_gg->Fill(PhoTwo->ecalRecHitSumEtConeDR03+PhoTwo->hcalTowerSumEtConeDR03()+PhoTwo->trkSumPtHollowConeDR03);
		    h_CombIsoDR03RhoCorr_gg->Fill(PhoOne->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25+PhoOne->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25+PhoOne->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);
		    h_CombIsoDR03RhoCorr_gg->Fill(PhoTwo->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25+PhoTwo->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25+PhoTwo->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);

		    float CHpuCorrPhoOne=0.,CHpuCorrPhoTwo=0.,NHpuCorrPhoOne=0.,NHpuCorrPhoTwo=0.,PHpuCorrPhoOne=0.,PHpuCorrPhoTwo=0.;
		    if(fabs(PhoOne->caloPosition.Eta())<1.0){CHpuCorrPhoOne=0.012;NHpuCorrPhoOne=0.03;PHpuCorrPhoOne=0.148;}
		    else {CHpuCorrPhoOne=0.010;NHpuCorrPhoOne=0.057;PHpuCorrPhoOne=0.130;}
		    if(fabs(PhoTwo->caloPosition.Eta())<1.0){CHpuCorrPhoTwo=0.012;NHpuCorrPhoTwo=0.03;PHpuCorrPhoTwo=0.148;}
		    else {CHpuCorrPhoTwo=0.010;NHpuCorrPhoTwo=0.057;PHpuCorrPhoTwo=0.130;}
		    h_ChargedHadronIso_gg->Fill(PhoOne->chargedHadronIso-CHpuCorrPhoOne*Rho25);
		    h_ChargedHadronIso_gg->Fill(PhoTwo->chargedHadronIso-CHpuCorrPhoTwo*Rho25);
		    h_NeutralHadronIso_gg->Fill(PhoOne->neutralHadronIso-PhoOne->momentum.Et()*0.04-NHpuCorrPhoOne*Rho25);
		    h_NeutralHadronIso_gg->Fill(PhoTwo->neutralHadronIso-PhoTwo->momentum.Et()*0.04-NHpuCorrPhoTwo*Rho25);
		    h_PhotonIso_gg->Fill(PhoOne->photonIso-PhoOne->momentum.Et()*0.005-PHpuCorrPhoOne*Rho25);
		    h_PhotonIso_gg->Fill(PhoTwo->photonIso-PhoTwo->momentum.Et()*0.005-PHpuCorrPhoTwo*Rho25);
		    h_gg_1v2_ChargedHadronIso->Fill(PhoOne->chargedHadronIso-CHpuCorrPhoOne*Rho25,PhoTwo->chargedHadronIso-CHpuCorrPhoTwo*Rho25);
		    h_gg_1v2_NeutralHadronIso->Fill(PhoOne->neutralHadronIso-PhoOne->momentum.Et()*0.04-NHpuCorrPhoOne*Rho25,PhoTwo->neutralHadronIso-PhoTwo->momentum.Et()*0.04-NHpuCorrPhoTwo*Rho25);
		    h_gg_1v2_PhotonIso->Fill(PhoOne->photonIso-PhoOne->momentum.Et()*0.005-PHpuCorrPhoOne*Rho25,PhoTwo->photonIso-PhoTwo->momentum.Et()*0.005-PHpuCorrPhoTwo*Rho25);
		    h_gg_1v2_SigIetaIeta->Fill(PhoOne->sigmaIetaIeta,PhoTwo->sigmaIetaIeta);
		    h_DiEMPtVsMet_gg->Fill(met->met(),diEMpt);
		    if(HasDiJetPt){
		      h_ggscalarDiJetPt_vs_DiJetPt->Fill(diJETpt,PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());
		      if(JetCounter==0){h_ggDiJetPt_0Jet->Fill(diJETpt);h_ggDiEMPt_0Jet->Fill(diEMpt);h_ggDiJetPt_scalar_0Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		      else if(JetCounter==1){h_ggDiJetPt_1Jet->Fill(diJETpt);h_ggDiEMPt_1Jet->Fill(diEMpt);h_ggDiJetPt_scalar_1Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		      else if(JetCounter>=2){h_ggDiJetPt_2Jet->Fill(diJETpt);h_ggDiEMPt_2Jet->Fill(diEMpt);h_ggDiJetPt_scalar_2Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		      if(JetCounter>2){h_ggDiJetPt_MoreThan2Jets->Fill(diJETpt);}
		      h_DiJetPtVsMet_gg->Fill(met->met(),diJETpt);
		    }
		    else{
		      h_ggscalarDiJetPt_vs_DiJetPt->Fill(diEMpt,PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());
		      if(JetCounter==0){h_ggDiJetPt_0Jet->Fill(diEMpt);h_ggDiEMPt_0Jet->Fill(diEMpt);h_ggDiJetPt_scalar_0Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		      else if(JetCounter==1){h_ggDiJetPt_1Jet->Fill(diEMpt);h_ggDiEMPt_1Jet->Fill(diEMpt);h_ggDiJetPt_scalar_1Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		      else if(JetCounter>=2){h_ggDiJetPt_2Jet->Fill(diEMpt);h_ggDiEMPt_2Jet->Fill(diEMpt);h_ggDiJetPt_scalar_2Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		      if(JetCounter>2){h_ggDiJetPt_MoreThan2Jets->Fill(diEMpt);}
		      h_ggMet_NoJetMatch->Fill(met->met());
		      h_DiJetPtVsMet_gg->Fill(met->met(),diEMpt);
		    }
		    h_ggDiJetPt_scalar->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());
		    h_ggMR->Fill(RazrMr);
		    h_ggR2->Fill(RazrR2);
		    h_ggR2vsMR->Fill(RazrMr,RazrR2);
		    int n_e=0;
		    TLorentzVector pho3mom=0.;
		    for(std::vector<susy::Photon*>::iterator pho_it = pho_Cands.begin();pho_it<pho_Cands.end();pho_it++){
		      if(!isSameObject(PhoOne->caloPosition,(*pho_it)->caloPosition,0.1) 
			 && !isSameObject(PhoTwo->caloPosition,(*pho_it)->caloPosition,0.1) ){
			if((*pho_it)->nPixelSeeds>0){
			  if(n_e==0){
			    ngge++;
			    h_ggePt->Fill(PhoOne->momentum.Pt());h_ggePt->Fill(PhoTwo->momentum.Pt());
			    h_ggePt->Fill((*pho_it)->momentum.Pt());
			    h_ggeElePt->Fill((*pho_it)->momentum.Pt());
			    h_ggeMet->Fill(met->met());
			    h_ggeSigIetaIeta->Fill(PhoOne->sigmaIetaIeta);h_ggeSigIetaIeta->Fill(PhoTwo->sigmaIetaIeta);
			    h_ggeSigIetaIeta->Fill((*pho_it)->sigmaIetaIeta);
			    h_ggeDiEMPt->Fill(diEMpt);
			    h_ggeTriEMPt->Fill(GetTriEmPt(PhoOne,PhoTwo,(*pho_it)));
			    h_ggeInvarMass->Fill((PhoOne->momentum+PhoTwo->momentum+(*pho_it)->momentum).M());
			    if(met->met()>30)h_ggeInvarMassMET30->Fill((PhoOne->momentum+PhoTwo->momentum+(*pho_it)->momentum).M());
			    h_rho_gge->Fill(Rho);h_NVertex_gge->Fill(NVertex);
			    n_e++;
			    pho3mom=(*pho_it)->momentum;
			  }
			  else if(n_e==1){
			    nggee++;
			    h_ggeePt->Fill(PhoOne->momentum.Pt());h_ggeePt->Fill(PhoTwo->momentum.Pt());
			    h_ggeePt->Fill((*pho_it)->momentum.Pt());
			    h_ggeeElePt->Fill((*pho_it)->momentum.Pt());
			    h_ggeeMet->Fill(met->met());
			    h_ggeeSigIetaIeta->Fill(PhoOne->sigmaIetaIeta);h_ggeeSigIetaIeta->Fill(PhoTwo->sigmaIetaIeta);
			    h_ggeeSigIetaIeta->Fill((*pho_it)->sigmaIetaIeta);
			    h_ggeeDiEMPt->Fill(diEMpt);
			    h_ggeeInvarMass->Fill((PhoOne->momentum+PhoTwo->momentum+pho3mom+(*pho_it)->momentum).M());
			    h_ggeeInvarMass_gg->Fill((PhoOne->momentum+PhoTwo->momentum).M());
			    h_ggeeInvarMass_ee->Fill((pho3mom+(*pho_it)->momentum).M());
			    h_rho_ggee->Fill(Rho);h_NVertex_ggee->Fill(NVertex);
			  }
			}//end nPixelSeeds>0
			else{
			  h_gggMet->Fill(met->met());
			  h_gggInvarMass_OneTwo->Fill((PhoOne->momentum+PhoTwo->momentum+PhoTwo->momentum).M());
			  h_gggInvarMass_TwoThree->Fill((PhoTwo->momentum+PhoTwo->momentum+(*pho_it)->momentum).M());
			  h_gggInvarMass_OneThree->Fill((PhoOne->momentum+PhoTwo->momentum+(*pho_it)->momentum).M());
			}
		      }
		    }//end gge
		    //now ggMuon
		    for(std::vector<susy::Muon*>::iterator mu_it = Muons.begin();mu_it!=Muons.end();mu_it++){
		      h_ggmMet->Fill(met->met());
		      h_ggmInvarMass->Fill(InvMassMVAcorrVertexCorr);
		      if(met->met()>30)h_ggmInvarMassMET30->Fill(InvMassMVAcorrVertexCorr);
		    }//end ggm
		    h_ggdPhi->Fill(dPhi);
		    h_ggdR->Fill(getDR(PhoOne->momentum,PhoTwo->momentum));
		    h_ggAlphaT->Fill(alphaT);
		    if(JetCounter==0)h_ggAlphaT_0Jet->Fill(alphaT);
		    h_ggPhotonLessHt->Fill(PhotonLessHt);
		    h_ggPhotonLessHtVsMET->Fill(met->met(),PhotonLessHt);
		    h_ggMETdPhi->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		    h_ggMETdPhi->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		    if(JetCounter==0){h_ggMETdPhi_0Jet->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ggMETdPhi_0Jet->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));}
		    else if(JetCounter==1){h_ggMETdPhi_1Jet->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ggMETdPhi_1Jet->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));}
		    else if(JetCounter>1){h_ggMETdPhi_2Jet->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ggMETdPhi_2Jet->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));}
		    h_ggMETdPhi_vs_Met->Fill(met->met(),getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		    h_ggMETdPhi_vs_Met->Fill(met->met(),getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		    h_ggMETdPhiLead->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		    h_ggMETdPhiTrail->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		    if(has_dphiJet){h_gg_JetMETdPhi->Fill(getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));		    
		      h_gg_JetMETdPhi_vs_Met->Fill(met->met(),getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));}
		    h_ggSystem_METdPhi->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi()));
		    h_DiEMPtVsMetDphi_gg->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		    h_DiEMPtVsMetDphi_gg->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		    h_DiEMPtVsMetDphiLead_gg->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		    h_DiEMPtVsMetDphiTrail_gg->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		    h_MetVsMetDphi_gg->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),met->met());
		    h_MetVsMetDphi_gg->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),met->met());
		    h_MetVsMetDphiLead_gg->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),met->met());
		    h_MetVsMetDphiTrail_gg->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),met->met());  
		    if (GG)
		      {
			if(GGtrain){
			  cout<<"gg ";
			  if (!met->sumEt)
			    std::cout << "0 ";
			  else
			    std::cout << met->sumEt << " ";
			  if (!dPhi)
			    std::cout << "0 ";
			  else
			    std::cout << dPhi << " ";
			  if (!PhoOne)
			    std::cout << "0 ";
			  else if (!met->mEt.Phi())
			    std::cout << "0 ";
			  else if (!getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()))
			    std::cout << "0 ";
			  else
			    std::cout << getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()) << " ";
			  if (!PhoTwo)
			    std::cout << "0 ";
			  else if (!getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()))
			    std::cout << "0 ";
			  else
			    std::cout << getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()) << " ";
			  if(!PhoOne || !PhoTwo)
			    std::cout << "0 ";
			  else if(!met->mEt.Phi())
			    std::cout << "0 ";
			  else if (!getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi()))
			    std::cout << "0 ";
			  else
			    std::cout << getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi()) << " ";
			  //if (!alphaT)
			  //std::cout << "0 ";
			  //else
			  //std::cout << alphaT << " ";
			  if (!PhotonLessHt)
			    std::cout << "0 ";
			  else
			    std::cout << PhotonLessHt << " ";	  
			  if (!diEMpt)
			    std::cout << "0 ";
			  else
			    std::cout << diEMpt << " ";
			  if (!InvMass)
			    std::cout << "0 ";
			  else
			    std::cout << InvMass << " ";
			  if (!met->met())
			    std::cout << "0 ";
			  else
			    std::cout << met->met() << " "; 
			  if (!RazrMr)
			    std::cout << "0 ";
			  else
			    std::cout << RazrMr << " ";
			  if(!PUweight)
			    std::cout << "0 " <<endl;
			  else
			    std::cout << PUweight << endl;
			}
			varsumEt = met->sumEt;
			vardPhi = dPhi;
			varMETdPhiLead = getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi());
			varMETdPhiTrail =  getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi());
			varSystemMETdPhi = getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi());
			//varAlphaT = alphaT;
			varPhotonLessHT = PhotonLessHt;
			varInvarMass = InvMass;
			varMet = met->met();
			varMR = RazrMr;
			
			if (Use["Likelihood"   ])   gghistLk     ->Fill( reader->EvaluateMVA( "Likelihood method"    ) );
			if (Use["LikelihoodD"  ])   gghistLkD    ->Fill( reader->EvaluateMVA( "LikelihoodD method"   ) );
			if (Use["LikelihoodPCA"])   gghistLkPCA  ->Fill( reader->EvaluateMVA( "LikelihoodPCA method" ) );
			if (Use["LikelihoodKDE"])   gghistLkKDE  ->Fill( reader->EvaluateMVA( "LikelihoodKDE method" ) );
			if (Use["LikelihoodMIX"])   gghistLkMIX  ->Fill( reader->EvaluateMVA( "LikelihoodMIX method" ) );
			if (Use["PDERS"        ])   gghistPD     ->Fill( reader->EvaluateMVA( "PDERS method"         ) );
			if (Use["PDERSD"       ])   gghistPDD    ->Fill( reader->EvaluateMVA( "PDERSD method"        ) );
			if (Use["PDERSPCA"     ])   gghistPDPCA  ->Fill( reader->EvaluateMVA( "PDERSPCA method"      ) );
			if (Use["KNN"          ])   gghistKNN    ->Fill( reader->EvaluateMVA( "KNN method"           ) );
			if (Use["HMatrix"      ])   gghistHm     ->Fill( reader->EvaluateMVA( "HMatrix method"       ) );
			if (Use["Fisher"       ])   gghistFi     ->Fill( reader->EvaluateMVA( "Fisher method"        ) );
			if (Use["FisherG"      ])   gghistFiG    ->Fill( reader->EvaluateMVA( "FisherG method"       ) );
			if (Use["BoostedFisher"])   gghistFiB    ->Fill( reader->EvaluateMVA( "BoostedFisher method" ) );
			if (Use["LD"           ])   gghistLD     ->Fill( reader->EvaluateMVA( "LD method"            ) );
			if (Use["MLP"          ])   gghistNn     ->Fill( reader->EvaluateMVA( "MLP method"           ) );
			if (Use["MLPBFGS"      ])   gghistNnbfgs ->Fill( reader->EvaluateMVA( "MLPBFGS method"       ) );
			if (Use["MLPBNN"       ])   gghistNnbnn  ->Fill( reader->EvaluateMVA( "MLPBNN method"        ) );
			if (Use["CFMlpANN"     ])   gghistNnC    ->Fill( reader->EvaluateMVA( "CFMlpANN method"      ) );
			if (Use["TMlpANN"      ])   gghistNnT    ->Fill( reader->EvaluateMVA( "TMlpANN method"       ) );
			if (Use["BDT"]){   
			  gghistBdt->Fill(reader->EvaluateMVA("BDT method"));
			  ggMet_vs_BDT->Fill(reader->EvaluateMVA("BDT method"),met->met()); }
			if (Use["BDTD"         ])   gghistBdtD   ->Fill( reader->EvaluateMVA( "BDTD method"          ) );
			if (Use["BDTG"         ])   gghistBdtG   ->Fill( reader->EvaluateMVA( "BDTG method"          ) );
			if (Use["RuleFit"      ])   gghistRf     ->Fill( reader->EvaluateMVA( "RuleFit method"       ) );
			if (Use["SVM"          ])   gghistSVM    ->Fill( reader->EvaluateMVA( "SVM method"           ) );
			if (Use["SVM_Gauss"    ])   gghistSVMG   ->Fill( reader->EvaluateMVA( "SVM_Gauss method"     ) );
			if (Use["SVM_Poly"     ])   gghistSVMP   ->Fill( reader->EvaluateMVA( "SVM_Poly method"      ) );
			if (Use["SVM_Lin"      ])   gghistSVML   ->Fill( reader->EvaluateMVA( "SVM_Lin method"       ) );
			if (Use["FDA_MT"       ])   gghistFDAMT  ->Fill( reader->EvaluateMVA( "FDA_MT method"        ) );
			if (Use["FDA_GA"       ])   gghistFDAGA  ->Fill( reader->EvaluateMVA( "FDA_GA method"        ) );
			if (Use["Category"     ])   gghistCat    ->Fill( reader->EvaluateMVA( "Category method"      ) );
			if (Use["Plugin"       ])   gghistPBdt   ->Fill( reader->EvaluateMVA( "P_BDT method"         ) );
		      }
		    //cout<<"reader BDT score: "<<reader->EvaluateMVA("BDT method")<<endl;
		    if(reader->EvaluateMVA("BDT method")){
		      h_ggdPhi_BDT->Fill(dPhi/*,PUweight*/);
		      h_sumEt_gg_BDT->Fill(met->sumEt/*,PUweight*/);
		      h_ggMETdPhiLead_BDT->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())/*,PUweight*/);
		      h_ggMETdPhiTrail_BDT->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())/*,PUweight*/);
		      h_ggSystem_METdPhi_BDT->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi())/*,PUweight*/);
		      h_ggAlphaT_BDT->Fill(alphaT/*,PUweight*/);
		      h_ggPhotonLessHt_BDT->Fill(PhotonLessHt/*,PUweight*/);
		      h_ggInvarMass_BDT->Fill(InvMass/*,PUweight*/);
		      h_ggMet_BDT->Fill(met->met()/*,PUweight*/);
		      h_ggMR_BDT->Fill(RazrMr/*,PUweight*/);
		      if(InvMass<86 || InvMass>96){
			h_ggdPhi_BDT_NoZ->Fill(dPhi/*,PUweight*/);
			h_sumEt_gg_BDT_NoZ->Fill(met->sumEt/*,PUweight*/);
			h_ggMETdPhiLead_BDT_NoZ->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())/*,PUweight*/);
			h_ggMETdPhiTrail_BDT_NoZ->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())/*,PUweight*/);
			h_ggSystem_METdPhi_BDT_NoZ->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi())/*,PUweight*/);
			h_ggAlphaT_BDT_NoZ->Fill(alphaT/*,PUweight*/);
			h_ggPhotonLessHt_BDT_NoZ->Fill(PhotonLessHt/*,PUweight*/);
			h_ggInvarMass_BDT_NoZ->Fill(InvMass/*,PUweight*/);
			h_ggMet_BDT_NoZ->Fill(met->met()/*,PUweight*/);
			h_ggMR_BDT_NoZ->Fill(RazrMr/*,PUweight*/);
		      }
		    }
		    if(reader->EvaluateMVA("BDT method")<-.45){
		      h_ggdPhi_BDTltMinusPoint45->Fill(dPhi/*,PUweight*/);
		      h_sumEt_gg_BDTltMinusPoint45->Fill(met->sumEt/*,PUweight*/);
		      h_ggMETdPhiLead_BDTltMinusPoint45->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())/*,PUweight*/);
		      h_ggMETdPhiTrail_BDTltMinusPoint45->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())/*,PUweight*/);
		      h_ggSystem_METdPhi_BDTltMinusPoint45->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi())/*,PUweight*/);
		      h_ggAlphaT_BDTltMinusPoint45->Fill(alphaT/*,PUweight*/);
		      h_ggPhotonLessHt_BDTltMinusPoint45->Fill(PhotonLessHt/*,PUweight*/);
		      h_ggInvarMass_BDTltMinusPoint45->Fill(InvMass/*,PUweight*/);
		      h_ggMet_BDTltMinusPoint45->Fill(met->met()/*,PUweight*/);
		      h_ggMR_BDTltMinusPoint45->Fill(RazrMr/*,PUweight*/);
		    }
		    if(met->met()<40){
		      h_ggdPhi_METlt40->Fill(dPhi/*,PUweight*/);
		      h_sumEt_gg_METlt40->Fill(met->sumEt/*,PUweight*/);
		      h_ggMETdPhiLead_METlt40->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())/*,PUweight*/);
		      h_ggMETdPhiTrail_METlt40->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())/*,PUweight*/);
		      h_ggSystem_METdPhi_METlt40->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi())/*,PUweight*/);
		      h_ggAlphaT_METlt40->Fill(alphaT/*,PUweight*/);
		      h_ggPhotonLessHt_METlt40->Fill(PhotonLessHt/*,PUweight*/);
		      h_ggInvarMass_METlt40->Fill(InvMass/*,PUweight*/);
		      h_ggMet_METlt40->Fill(met->met()/*,PUweight*/);
		      h_ggMR_METlt40->Fill(RazrMr/*,PUweight*/);
		    }
		    if(!event->isRealData && isDirectEWK){
		      nggDirectEWK++;
		      h_ggMetDirectEWK->Fill(met->met(),PUweight);
		      if(doJetReq){nggDirectEWK_JetReq++;h_ggMetDirectEWK_JetReq->Fill(met->met(),PUweight);}
		    }
		    if(doJetReq){
		      if(printLevel>0)cout<<"Inside gg_JetReq"<<endl;
		      ngg_JetReq++;isgg_JetReq=true;
		      h_ggMHT_JetReq->Fill(MHT.Pt(),PUweight);
		      ggPTs_JetReq=make_pair(PhoOne->momentum.Pt(),PhoTwo->momentum.Pt());
		      ggJetReqRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
		      h_SeedTimeVsEta_gg_JetReq->Fill(PhoOne->caloPosition.Eta(),PhoOne->seedTime);
		      h_SeedTimeVsEta_gg_JetReq->Fill(PhoTwo->caloPosition.Eta(),PhoTwo->seedTime);
		      h_ggMet_JetReq->Fill(met->met(),PUweight);
		      if(InvMassMVAcorrVertexCorr>120 && InvMassMVAcorrVertexCorr<130)h_ggMETInvarMass120_130_JetReq->Fill(met->met(),PUweight);
		      if(InvMassMVAcorrVertexCorr>123 && InvMassMVAcorrVertexCorr<128)h_ggMETInvarMass123_128_JetReq->Fill(met->met(),PUweight);
		      if(InvMassMVAcorrVertexCorr>95  && InvMassMVAcorrVertexCorr<110)h_ggMETInvarMass95_110_JetReq->Fill(met->met(),PUweight);
		      if(InvMassMVAcorrVertexCorr>135 && InvMassMVAcorrVertexCorr<160)h_ggMETInvarMass135_160_JetReq->Fill(met->met(),PUweight);
		      h_ggDiEMPt_JetReq->Fill(diEMpt);		  
		      if(event->isRealData && met->met()>100)cout<<"gg_JetReq Event with MET="<<met->met()<<"  Run: "<<event->runNumber<<"  Lumi: "<<event->luminosityBlockNumber<<"  Event: "<<event->eventNumber<<"  PhoOne pT:"<<PhoOne->momentum.Pt()<<"  PhoTwo pT:"<<PhoTwo->momentum.Pt()<<endl;
		    
		      // Di-Jet Pt
		      if(HasDiJetPt){
			h_ggDiJetPt_JetReq->Fill(diJETpt);
			h_ggDiJetPtOverDiEMPtVsDiEMPt_JetReq->Fill(diEMpt,diJETpt/diEMpt);
		      }
		      else{h_ggDiJetPt_JetReq->Fill(diEMpt);}
		      h_ggInvarMass_JetReq->Fill(InvMass,PUweight);
		      if(met->met()>30){
			h_ggInvarMassMET30_JetReq->Fill(InvMass,PUweight);
			if(met->met()>40){
			  h_ggInvarMassMET40_JetReq->Fill(InvMass,PUweight);
			  if(met->met()>50){
			    h_ggInvarMassMET50_JetReq->Fill(InvMass,PUweight);
			    if(met->met()>60){
			      h_ggInvarMassMET60_JetReq->Fill(InvMass,PUweight);
			      if(met->met()>70){
				h_ggInvarMassMET70_JetReq->Fill(InvMass,PUweight);
				if(met->met()>80){
				  h_ggInvarMassMET80_JetReq->Fill(InvMass,PUweight);
				  if(met->met()>100){
				    h_ggInvarMassMET100_JetReq->Fill(InvMass,PUweight);
				  }
				}
			      }
			    }
			  }
			}
		      }
		      h_ggInvarMassMVAcorr_JetReq->Fill(InvMassMVAcorr,PUweight);
		      h_ggInvarMassMVAcorrVertexCorr_JetReq->Fill(InvMassMVAcorrVertexCorr,PUweight);
		      h_ggInvarMassMVAcorrVertexCorr_JetReq_vs_Met->Fill(met->met(),InvMassMVAcorrVertexCorr);
		      if(HasDiJetPt){
			if(JetCounter==0){h_ggDiJetPt_JetReq_0Jet->Fill(diJETpt);h_ggDiEMPt_JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_ggDiJetPt_JetReq_1Jet->Fill(diJETpt);h_ggDiEMPt_JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_ggDiJetPt_JetReq_2Jet->Fill(diJETpt);h_ggDiEMPt_JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_ggDiJetPt_JetReq_MoreThan2Jets->Fill(diJETpt);}
		      }
		      else{
			if(JetCounter==0){h_ggDiJetPt_JetReq_0Jet->Fill(diEMpt);h_ggDiEMPt_JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_ggDiJetPt_JetReq_1Jet->Fill(diEMpt);h_ggDiEMPt_JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_ggDiJetPt_JetReq_2Jet->Fill(diEMpt);h_ggDiEMPt_JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_ggDiJetPt_JetReq_MoreThan2Jets->Fill(diEMpt);}
			h_ggMet_NoJetMatch_JetReq->Fill(met->met());
		      }
		    }
		    if(doJetReq && JetCounter>=2){
		      if(printLevel>0)cout<<"Inside gg_2JetReq"<<endl;
		      ngg_2JetReq++;isgg_2JetReq=true;
		      h_ggMHT_2JetReq->Fill(MHT.Pt(),PUweight);
		      ggPTs_2JetReq=make_pair(PhoOne->momentum.Pt(),PhoTwo->momentum.Pt());
		      gg2JetReqRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
		      h_SeedTimeVsEta_gg_2JetReq->Fill(PhoOne->caloPosition.Eta(),PhoOne->seedTime);
		      h_SeedTimeVsEta_gg_2JetReq->Fill(PhoTwo->caloPosition.Eta(),PhoTwo->seedTime);
		      h_ggMet_2JetReq->Fill(met->met(),PUweight);
		      h_ggInvarMassJets_2JetReq->Fill(InvariantMass(invmassJet1->momentum,invmassJet2->momentum),PUweight);
		      if(InvMassMVAcorrVertexCorr>120 && InvMassMVAcorrVertexCorr<130)h_ggMETInvarMass120_130_2JetReq->Fill(met->met(),PUweight);
		      if(InvMassMVAcorrVertexCorr>123 && InvMassMVAcorrVertexCorr<128)h_ggMETInvarMass123_128_2JetReq->Fill(met->met(),PUweight);
		      if(InvMassMVAcorrVertexCorr>95  && InvMassMVAcorrVertexCorr<110)h_ggMETInvarMass95_110_2JetReq->Fill(met->met(),PUweight);
		      if(InvMassMVAcorrVertexCorr>135 && InvMassMVAcorrVertexCorr<160)h_ggMETInvarMass135_160_2JetReq->Fill(met->met(),PUweight);
		      h_ggDiEMPt_2JetReq->Fill(diEMpt);		  
		      if(event->isRealData && met->met()>100)cout<<"gg_2JetReq Event with MET="<<met->met()<<"  Run: "<<event->runNumber<<"  Lumi: "<<event->luminosityBlockNumber<<"  Event: "<<event->eventNumber<<"  PhoOne pT:"<<PhoOne->momentum.Pt()<<"  PhoTwo pT:"<<PhoTwo->momentum.Pt()<<endl;
		    
		      // Di-Jet Pt
		      if(HasDiJetPt){
			h_ggDiJetPt_2JetReq->Fill(diJETpt);
			h_ggDiJetPtOverDiEMPtVsDiEMPt_2JetReq->Fill(diEMpt,diJETpt/diEMpt);
		      }
		      else{h_ggDiJetPt_2JetReq->Fill(diEMpt);}
		      h_ggInvarMass_2JetReq->Fill(InvMass,PUweight);
		      if(met->met()>30){
			h_ggInvarMassMET30_2JetReq->Fill(InvMass,PUweight);
			if(met->met()>40){
			  h_ggInvarMassMET40_2JetReq->Fill(InvMass,PUweight);
			  if(met->met()>50){
			    h_ggInvarMassMET50_2JetReq->Fill(InvMass,PUweight);
			    if(met->met()>60){
			      h_ggInvarMassMET60_2JetReq->Fill(InvMass,PUweight);
			      if(met->met()>70){
				h_ggInvarMassMET70_2JetReq->Fill(InvMass,PUweight);
				if(met->met()>80){
				  h_ggInvarMassMET80_2JetReq->Fill(InvMass,PUweight);
				  if(met->met()>100){
				    h_ggInvarMassMET100_2JetReq->Fill(InvMass,PUweight);
				  }
				}
			      }
			    }
			  }
			}
		      }
		      if(HasDiJetPt){
			if(JetCounter==0){h_ggDiJetPt_2JetReq_0Jet->Fill(diJETpt);h_ggDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_ggDiJetPt_2JetReq_1Jet->Fill(diJETpt);h_ggDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_ggDiJetPt_2JetReq_2Jet->Fill(diJETpt);h_ggDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_ggDiJetPt_2JetReq_MoreThan2Jets->Fill(diJETpt);}
		      }
		      else{
			if(JetCounter==0){h_ggDiJetPt_2JetReq_0Jet->Fill(diEMpt);h_ggDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_ggDiJetPt_2JetReq_1Jet->Fill(diEMpt);h_ggDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_ggDiJetPt_2JetReq_2Jet->Fill(diEMpt);h_ggDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_ggDiJetPt_2JetReq_MoreThan2Jets->Fill(diEMpt);}
			h_ggMet_NoJetMatch_2JetReq->Fill(met->met());
		      }
		    }
		    //}//seedTime
		  }//end gg (nPixelSeeds==0)
		  // look for pixel seeds - if both have at least one, -> ee
		  else if( doee /*PhoOne->nPixelSeeds>0 && PhoTwo->nPixelSeeds>0*/){
		    if(printLevel>0)cout<<"Inside ee"<<endl;
		    isee=true;//need this here for filtering purposes, so sideband ends up in dataset	
		    eePTs=make_pair(PhoOne->momentum.Pt(),PhoTwo->momentum.Pt());
		    //Require 81<InvariantMass<101
		    h_eeInvarMassFullRange->Fill(InvMass);
		    h_eeMetFullRange->Fill(met->met());
		    if(PhoTwo->momentum.Pt()>25 && PhoTwo->momentum.Pt()<40)h_eeInvarMassFullRange_Pt25to40->Fill(InvMass);
		    if(PhoOne->momentum.Pt()>40 && PhoOne->momentum.Pt()<45)h_eeInvarMassFullRange_Pt40to45->Fill(InvMass);
		    else if(PhoOne->momentum.Pt()>45 && PhoOne->momentum.Pt()<50)h_eeInvarMassFullRange_Pt45to50->Fill(InvMass);
		    else if(PhoOne->momentum.Pt()>50 && PhoOne->momentum.Pt()<69)h_eeInvarMassFullRange_Pt50to60->Fill(InvMass);
		    else if(PhoOne->momentum.Pt()>60 && PhoOne->momentum.Pt()<80)h_eeInvarMassFullRange_Pt60to80->Fill(InvMass);
		    else if(PhoOne->momentum.Pt()>80)h_eeInvarMassFullRange_Pt80->Fill(InvMass);
		    h_sumEt_eeFullRange->Fill(met->sumEt);
		    if(InvMass<40.)h_eeDiEMPtInvMassBelow40->Fill(diEMpt);
		    else h_eeDiEMPtInvMassAbove40->Fill(diEMpt);
		    if( InvMass > 81. && InvMass < 101.){
		      if(printLevel>0)cout<<"Inside ee  Z peak"<<endl;
		      //require seed time within +-3ns for no jet requirement case
		      //if(fabs(PhoOne->seedTime)<3. && fabs(PhoTwo->seedTime)<3.){
		      nee++;
		      h_eeMHT->Fill(MHT.Pt(),PUweight);
		      //check sihih for matrix method
		      if(PhoOne->sigmaIetaIeta<maxSihih)nee_matrix_lead++;
		      if(PhoTwo->sigmaIetaIeta<maxSihih)nee_matrix_trail++;
		      eenumVert[NVertex]++;
		      h_nJets_ee->Fill(JetCounter);
		      h_ClosestDR_ee->Fill(ClosestDR);
		      for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.first.begin(); jet_it != pfJets.first.end(); jet_it++){
			h_DRfromJets_ee->Fill(getDR(PhoOne->caloPosition, (*jet_it)->momentum),getDR(PhoTwo->caloPosition, (*jet_it)->momentum));
		      }
		      h_ClosestDPhi_ee->Fill(ClosestDPhi);
		      TLorentzVector DiPhoEE = PhoOne->momentum + PhoTwo->momentum;
		      h_eeMetMT->Fill(TransverseMass(DiPhoEE,met->mEt));
		      if(met->met()>30){
			h_eeInvarMassMET30->Fill(InvMass,PUweight);
			if(met->met()>40){
			  h_eeInvarMassMET40->Fill(InvMass,PUweight);
			  if(met->met()>50){
			    h_eeInvarMassMET50->Fill(InvMass,PUweight);
			    if(met->met()>60){
			      h_eeInvarMassMET60->Fill(InvMass,PUweight);
			      if(met->met()>70){
				h_eeInvarMassMET70->Fill(InvMass,PUweight);
				if(met->met()>80){
				  h_eeInvarMassMET80->Fill(InvMass,PUweight);
				  if(met->met()>100){
				    h_eeInvarMassMET100->Fill(InvMass,PUweight);
				  }
				}
			      }
			    }
			  }
			}
		      }
		      if(fake_Cands.size()>0)neef++;
		      eeRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
		      h_SeedTimeVsEta_ee->Fill(PhoOne->caloPosition.Eta(),PhoOne->seedTime);
		      h_SeedTimeVsEta_ee->Fill(PhoTwo->caloPosition.Eta(),PhoTwo->seedTime);
		      h_MetVsSeedTime_ee->Fill(PhoOne->seedTime, met->met());
		      h_MetVsSeedTime_ee->Fill(PhoTwo->seedTime, met->met());
		      h_NVertexVsMET_ee->Fill(met->met(),NVertex);
		      h_eePerInstLumi->Fill(event->avgInsRecLumi);
		      if(isJetFail){bool go2=true;
			for(std::vector<susy::PFJet*>::iterator jet_it = pfJetsFail.begin(); jet_it != pfJetsFail.end(); jet_it++){	
			  if( isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5) || isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5) ) go2=false;
			}
			if(go2){
			  nCnt[9]++;h_MET_JetFail->Fill(met->met());
			  h_eeMet_JetFail->Fill(met->met());
			  if(HasDiJetPt)h_eeDiJetPt_JetFail->Fill(diJETpt);
			  else h_eeDiJetPt_JetFail->Fill(diEMpt);
			}
		      }
		      // Di-Jet Pt
		      metReweightDiEMPt=GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first;
		      if(HasDiJetPt){
			h_eeDiJetPt->Fill(diJETpt);
			h_eeDiJetPtOverDiEMPtVsDiEMPt->Fill(diEMpt,diJETpt/diEMpt);
			h_DiJetPtVsMet_ee->Fill(met->met(),diJETpt);
			metReweightDiJetPt=GetMetReweight(diJETpt,"ee",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first*PUweight;
			metReweightDiJetPtError=GetMetReweight(diJETpt,"ee",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).second;
		      }
		      else{
			h_eeDiJetPt->Fill(diEMpt);		   
			h_DiJetPtVsMet_ee->Fill(met->met(),diEMpt);
			metReweightDiJetPt=GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first*PUweight;
			metReweightDiJetPtError=GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).second*PUweight;
		      }
		      h_r9_ee->Fill(PhoOne->r9);h_r9_ee->Fill(PhoTwo->r9);
		      h_eePt->Fill(PhoOne->momentum.Pt());h_eePt->Fill(PhoTwo->momentum.Pt());
		      h_eePtLead->Fill(PhoOne->momentum.Pt());h_eePtTrail->Fill(PhoTwo->momentum.Pt());
		      h_eeEta->Fill(PhoOne->caloPosition.Eta());h_eePhi->Fill(PhoOne->caloPosition.Phi());
		      h_eeEta->Fill(PhoTwo->caloPosition.Eta());h_eePhi->Fill(PhoTwo->caloPosition.Phi());
		      h_sumEt_ee->Fill(met->sumEt);
		      h_eeMet->Fill(met->met());
		      h_eeMet_reweight_binned->Fill(met->met(),metReweightDiEMPt);
		      h_eeMet_reweightJet_binned->Fill(met->met(),metReweightDiJetPt);
		      h_eeDiEMPt_reweight_binned->Fill(diEMpt,metReweightDiJetPt);
		      h_eeDiJetPt_reweight_binned->Fill(diJETpt,metReweightDiJetPt);
		      if(JetCounter==0)h_eeDiJetPt_reweight_binned_0Jet->Fill(diJETpt,metReweightDiJetPt);
		      else if(JetCounter==1)h_eeDiJetPt_reweight_binned_1Jet->Fill(diJETpt,metReweightDiJetPt);
		      else if(JetCounter>=2)h_eeDiJetPt_reweight_binned_2Jet->Fill(diJETpt,metReweightDiJetPt);
		      h_DiJetPtWeights_ee->Fill(metReweightDiJetPt);
		      if(NVertex<10)h_eeMet_NV0_10->Fill(met->met(),metReweightDiJetPt);
		      else if(NVertex>=10 && NVertex<15)h_eeMet_NV10_15->Fill(met->met(),metReweightDiJetPt);
		      else if(NVertex>=15)h_eeMet_NV15up->Fill(met->met(),metReweightDiJetPt);
		      if(HasDiJetPt){
			h_eescalarDiJetPt_vs_DiJetPt->Fill(diJETpt,PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());
			if(JetCounter==0){h_eeDiJetPt_0Jet->Fill(diJETpt);h_eeDiEMPt_0Jet->Fill(diEMpt);h_eeDiJetPt_scalar_0Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
			else if(JetCounter==1){h_eeDiJetPt_1Jet->Fill(diJETpt);h_eeDiEMPt_1Jet->Fill(diEMpt);h_eeDiJetPt_scalar_1Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
			else if(JetCounter>=2){h_eeDiJetPt_2Jet->Fill(diJETpt);h_eeDiEMPt_2Jet->Fill(diEMpt);h_eeDiJetPt_scalar_2Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
			if(JetCounter>2){h_eeDiJetPt_MoreThan2Jets->Fill(diJETpt);}
		      }
		      else{
			h_eescalarDiJetPt_vs_DiJetPt->Fill(diEMpt,PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());
			if(JetCounter==0){h_eeDiJetPt_0Jet->Fill(diEMpt);h_eeDiEMPt_0Jet->Fill(diEMpt);h_eeDiJetPt_scalar_0Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
			else if(JetCounter==1){h_eeDiJetPt_1Jet->Fill(diEMpt);h_eeDiEMPt_1Jet->Fill(diEMpt);h_eeDiJetPt_scalar_1Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
			else if(JetCounter>=2){h_eeDiJetPt_2Jet->Fill(diEMpt);h_eeDiEMPt_2Jet->Fill(diEMpt);h_eeDiJetPt_scalar_2Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
			if(JetCounter>2){h_eeDiJetPt_MoreThan2Jets->Fill(diEMpt);}
			h_eeMet_NoJetMatch->Fill(met->met());
		      }
		      h_eeDiJetPt_scalar->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());
		      h_eeMR->Fill(RazrMr);
		      h_eeR2->Fill(RazrR2);
		      h_eeR2vsMR->Fill(RazrMr,RazrR2);
		      h_eeMR_reweight_binned->Fill(RazrMr,GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweightsJet,EESideBandHighReweightsJet,-1).first);
		      h_eeR2_reweight_binned->Fill(RazrR2,GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweightsJet,EESideBandHighReweightsJet,-1).first);
		      h_eeR2vsMR_reweight_binned->Fill(RazrMr,RazrR2,GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweightsJet,EESideBandHighReweightsJet,-1).first);
		      toys->cd();
		      if(printLevel>0)cout<<"Inside ee  Z peak Toys"<<endl;
		      for(int i=0;i<1000;i++){
			eeMet_reweight_binned_toy[i]->Fill(met->met(),rando.Gaus(metReweightDiJetPt,metReweightDiJetPtError));
			//eeMet_reweight_binned_toy[i]->Fill(met->met(),rando.Poisson(metReweightDiJetPt));
		      }
		      if(printLevel>0)cout<<"Outside ee  Z peak Toys"<<endl;
		      fout->cd();
		      h_eeSigIetaIeta->Fill(PhoOne->sigmaIetaIeta);h_eeSigIetaIeta->Fill(PhoTwo->sigmaIetaIeta);
		      h_eeDiEMPt->Fill(diEMpt);
		      h_eePixelSeeds->Fill(PhoOne->nPixelSeeds);h_eePixelSeeds->Fill(PhoTwo->nPixelSeeds);
		      h_eeInvarMass->Fill(InvMass);
		      h_eeInvarMassMVAcorrVertexCorr->Fill(InvMassMVAcorrVertexCorr,PUweight);
		      h_eePtOverInvarMassLead->Fill(PhoOne->momentum.Pt()/InvMass,PUweight);
		      h_eePtOverInvarMassTrail->Fill(PhoTwo->momentum.Pt()/InvMass,PUweight);
		      h_rho_ee->Fill(Rho);h_NVertex_ee->Fill(NVertex);
		      h_EcalIsoDR03RhoCorr_ee->Fill(PhoOne->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25);h_EcalIsoDR03RhoCorr_ee->Fill(PhoTwo->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25);
		      h_HcalIsoDR03RhoCorr_ee->Fill(PhoOne->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25);h_HcalIsoDR03RhoCorr_ee->Fill(PhoTwo->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25);
		      h_TrackIsoDR03RhoCorr_ee->Fill(PhoOne->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);h_TrackIsoDR03RhoCorr_ee->Fill(PhoTwo->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);
		      h_CombIsoDR03RhoCorr_ee->Fill(PhoOne->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25+PhoOne->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25+PhoOne->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);
		      h_CombIsoDR03RhoCorr_ee->Fill(PhoTwo->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25+PhoTwo->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25+PhoTwo->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);
		      float CHpuCorrPhoOne=0.,CHpuCorrPhoTwo=0.,NHpuCorrPhoOne=0.,NHpuCorrPhoTwo=0.,PHpuCorrPhoOne=0.,PHpuCorrPhoTwo=0.;
		      if(fabs(PhoOne->caloPosition.Eta())<1.0){CHpuCorrPhoOne=0.012;NHpuCorrPhoOne=0.03;PHpuCorrPhoOne=0.148;}
		      else {CHpuCorrPhoOne=0.010;NHpuCorrPhoOne=0.057;PHpuCorrPhoOne=0.130;}
		      if(fabs(PhoTwo->caloPosition.Eta())<1.0){CHpuCorrPhoTwo=0.012;NHpuCorrPhoTwo=0.03;PHpuCorrPhoTwo=0.148;}
		      else {CHpuCorrPhoTwo=0.010;NHpuCorrPhoTwo=0.057;PHpuCorrPhoTwo=0.130;}
		      h_ChargedHadronIso_ee->Fill(PhoOne->chargedHadronIso-CHpuCorrPhoOne*Rho25);
		      h_ChargedHadronIso_ee->Fill(PhoTwo->chargedHadronIso-CHpuCorrPhoTwo*Rho25);
		      h_NeutralHadronIso_ee->Fill(PhoOne->neutralHadronIso-PhoOne->momentum.Et()*0.04-NHpuCorrPhoOne*Rho25);
		      h_NeutralHadronIso_ee->Fill(PhoTwo->neutralHadronIso-PhoTwo->momentum.Et()*0.04-NHpuCorrPhoTwo*Rho25);
		      h_PhotonIso_ee->Fill(PhoOne->photonIso-PhoOne->momentum.Et()*0.005-PHpuCorrPhoOne*Rho25);
		      h_PhotonIso_ee->Fill(PhoTwo->photonIso-PhoTwo->momentum.Et()*0.005-PHpuCorrPhoTwo*Rho25);
		      h_ee_1v2_ChargedHadronIso->Fill(PhoOne->chargedHadronIso-CHpuCorrPhoOne*Rho25,PhoTwo->chargedHadronIso-CHpuCorrPhoTwo*Rho25);
		      h_ee_1v2_NeutralHadronIso->Fill(PhoOne->neutralHadronIso-PhoOne->momentum.Et()*0.04-NHpuCorrPhoOne*Rho25,PhoTwo->neutralHadronIso-PhoTwo->momentum.Et()*0.04-NHpuCorrPhoTwo*Rho25);
		      h_ee_1v2_PhotonIso->Fill(PhoOne->photonIso-PhoOne->momentum.Et()*0.005-PHpuCorrPhoOne*Rho25,PhoTwo->photonIso-PhoTwo->momentum.Et()*0.005-PHpuCorrPhoTwo*Rho25);
		      h_ee_1v2_SigIetaIeta->Fill(PhoOne->sigmaIetaIeta,PhoTwo->sigmaIetaIeta);
		      h_DiEMPtVsMet_ee->Fill(met->met(),diEMpt);
		      int n_g=0;
		      for(std::vector<susy::Photon*>::iterator pho_it = pho_Cands.begin();pho_it<pho_Cands.end();pho_it++){
			if(!isSameObject(PhoOne->caloPosition,(*pho_it)->caloPosition,0.1) 
			   && !isSameObject(PhoTwo->caloPosition,(*pho_it)->caloPosition,0.1) ){
			  if((*pho_it)->nPixelSeeds==0){
			    if(n_g==0){
			      neeg++;
			      h_eegPt->Fill(PhoOne->momentum.Pt());h_eegPt->Fill(PhoTwo->momentum.Pt());
			      h_eegPt->Fill((*pho_it)->momentum.Pt());
			      h_eegElePt->Fill((*pho_it)->momentum.Pt());
			      h_eegMet->Fill(met->met());
			      h_eegSigIetaIeta->Fill(PhoOne->sigmaIetaIeta);h_eegSigIetaIeta->Fill(PhoTwo->sigmaIetaIeta);
			      h_eegSigIetaIeta->Fill((*pho_it)->sigmaIetaIeta);
			      h_eegDiEMPt->Fill(diEMpt);
			      h_eegTriEMPt->Fill(GetTriEmPt(PhoOne,PhoTwo,(*pho_it)));
			      h_eegInvarMass->Fill(InvMass);
			      h_rho_eeg->Fill(Rho);h_NVertex_eeg->Fill(NVertex);
			      n_g++;
			    }
			    else if(n_g==1){
			      neegg++;
			      h_eeggPt->Fill(PhoOne->momentum.Pt());h_eeggPt->Fill(PhoTwo->momentum.Pt());
			      h_eeggPt->Fill((*pho_it)->momentum.Pt());
			      h_eeggElePt->Fill((*pho_it)->momentum.Pt());
			      h_eeggMet->Fill(met->met());
			      h_eeggSigIetaIeta->Fill(PhoOne->sigmaIetaIeta);h_eeggSigIetaIeta->Fill(PhoTwo->sigmaIetaIeta);
			      h_eeggSigIetaIeta->Fill((*pho_it)->sigmaIetaIeta);
			      h_eeggDiEMPt->Fill(diEMpt);
			      h_eeggInvarMass->Fill(InvMass);
			      h_rho_eegg->Fill(Rho);h_NVertex_eegg->Fill(NVertex);
			    }
			  }
			}
		      }//end eeg
		      h_eedPhi->Fill(dPhi);
		      h_eedR->Fill(getDR(PhoOne->momentum,PhoTwo->momentum));
		      h_eeAlphaT->Fill(alphaT);
		      if(JetCounter==0)h_eeAlphaT_0Jet->Fill(alphaT);
		      h_eePhotonLessHt->Fill(PhotonLessHt);
		      h_eePhotonLessHtVsMET->Fill(met->met(),PhotonLessHt);
		      h_eeMETdPhiLead->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_eeMETdPhiTrail->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		      h_eeMETdPhi->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_eeMETdPhi->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		      h_eeMETdPhi_vs_Met->Fill(met->met(),getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_eeMETdPhi_vs_Met->Fill(met->met(),getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		      if(has_dphiJet){h_ee_JetMETdPhi->Fill(getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));		    
			h_ee_JetMETdPhi_vs_Met->Fill(met->met(),getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));}
		      h_DiEMPtVsMetDphi_ee->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		      h_DiEMPtVsMetDphi_ee->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		      h_DiEMPtVsMetDphiLead_ee->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		      h_DiEMPtVsMetDphiTrail_ee->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		      h_MetVsMetDphi_ee->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),met->met());
		      h_MetVsMetDphi_ee->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),met->met());
		      h_MetVsMetDphiLead_ee->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),met->met());
		      h_MetVsMetDphiTrail_ee->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),met->met());
		      //}//seedTime
		      if (EE)
			{
			  
			  varsumEt = met->sumEt;
			  vardPhi = dPhi;
			  varMETdPhiLead = getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi());
			  varMETdPhiTrail =  getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi());
			  varSystemMETdPhi = getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi());
			  //varAlphaT = alphaT;
			  varPhotonLessHT = PhotonLessHt;
			  varInvarMass = InvMass;
			  varMet = met->met();
			  varMR = RazrMr;
			  
			  /*   if (Use["Likelihood"   ])   eehistLk     ->Fill( reader->EvaluateMVA( "Likelihood method"    ) );
			       if (Use["LikelihoodD"  ])   eehistLkD    ->Fill( reader->EvaluateMVA( "LikelihoodD method"   ) );
			       if (Use["LikelihoodPCA"])   eehistLkPCA  ->Fill( reader->EvaluateMVA( "LikelihoodPCA method" ) );
			       if (Use["LikelihoodKDE"])   eehistLkKDE  ->Fill( reader->EvaluateMVA( "LikelihoodKDE method" ) );
			       if (Use["LikelihoodMIX"])   eehistLkMIX  ->Fill( reader->EvaluateMVA( "LikelihoodMIX method" ) );
			       if (Use["PDERS"        ])   eehistPD     ->Fill( reader->EvaluateMVA( "PDERS method"         ) );
			       if (Use["PDERSD"       ])   eehistPDD    ->Fill( reader->EvaluateMVA( "PDERSD method"        ) );
			       if (Use["PDERSPCA"     ])   eehistPDPCA  ->Fill( reader->EvaluateMVA( "PDERSPCA method"      ) );
			       if (Use["KNN"          ])   eehistKNN    ->Fill( reader->EvaluateMVA( "KNN method"           ) );
			       if (Use["HMatrix"      ])   eehistHm     ->Fill( reader->EvaluateMVA( "HMatrix method"       ) );
			       if (Use["Fisher"       ])   eehistFi     ->Fill( reader->EvaluateMVA( "Fisher method"        ) );
			       if (Use["FisherG"      ])   eehistFiG    ->Fill( reader->EvaluateMVA( "FisherG method"       ) );
			       if (Use["BoostedFisher"])   eehistFiB    ->Fill( reader->EvaluateMVA( "BoostedFisher method" ) );
			       if (Use["MLP"          ])   eehistNn     ->Fill( reader->EvaluateMVA( "MLP method"           ) );
			       if (Use["MLPBFGS"      ])   eehistNnbfgs ->Fill( reader->EvaluateMVA( "MLPBFGS method"       ) );
			       if (Use["MLPBNN"       ])   eehistNnbnn  ->Fill( reader->EvaluateMVA( "MLPBNN method"        ) );
			       if (Use["CFMlpANN"     ])   eehistNnC    ->Fill( reader->EvaluateMVA( "CFMlpANN method"      ) );
			       if (Use["TMlpANN"      ])   eehistNnT    ->Fill( reader->EvaluateMVA( "TMlpANN method"       ) );
			       if (Use["BDTD"         ])   eehistBdtD   ->Fill( reader->EvaluateMVA( "BDTD method"          ) );
			       if (Use["BDTG"         ])   eehistBdtG   ->Fill( reader->EvaluateMVA( "BDTG method"          ) );
			       if (Use["RuleFit"      ])   eehistRf     ->Fill( reader->EvaluateMVA( "RuleFit method"       ) );
			       if (Use["SVM_Gauss"    ])   eehistSVMG   ->Fill( reader->EvaluateMVA( "SVM_Gauss method"     ) );
			       if (Use["SVM_Poly"     ])   eehistSVMP   ->Fill( reader->EvaluateMVA( "SVM_Poly method"      ) );
			       if (Use["SVM_Lin"      ])   eehistSVML   ->Fill( reader->EvaluateMVA( "SVM_Lin method"       ) );
			       if (Use["FDA_MT"       ])   eehistFDAMT  ->Fill( reader->EvaluateMVA( "FDA_MT method"        ) );
			       if (Use["FDA_GA"       ])   eehistFDAGA  ->Fill( reader->EvaluateMVA( "FDA_GA method"        ) );
			       if (Use["Category"     ])   eehistCat    ->Fill( reader->EvaluateMVA( "Category method"      ) );
			       if (Use["Plugin"       ])   eehistPBdt   ->Fill( reader->EvaluateMVA( "P_BDT method"         ) );*/
			  if (Use["LD"           ])   eehistLD     ->Fill( reader->EvaluateMVA( "LD method"            ) );
			  if (Use["BDT"          ])   eehistBdt    ->Fill( reader->EvaluateMVA( "BDT method"           ) );
			  if (Use["SVM"          ])   eehistSVM    ->Fill( reader->EvaluateMVA( "SVM method"           ) );
			}
		    }//81<InvMass<101
		    //now do sideband
		    if(   (InvMass > 71.  && InvMass < 81.)
			  || (InvMass > 101. && InvMass < 111.) ){
		      neeSideBand++;
		      h_eeSideBandDiEMPt->Fill(diEMpt);
		      h_eeSideBandMet->Fill(met->met());
		      h_eeSidebandMet_reweight_binned->Fill(met->met(),GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweightsJet,EESideBandHighReweightsJet,-1).first);
		      h_DiEMPtVsMet_eeSideBand->Fill(met->met(),diEMpt);
		      h_eeSideBandMR->Fill(RazrMr);
		      h_eeSideBandR2->Fill(RazrR2);
		      h_eeSideBandR2vsMR->Fill(RazrMr,RazrR2);
		      h_eeSideBandMR_reweight_binned->Fill(RazrMr,GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweightsJet,EESideBandHighReweightsJet,-1).first);
		      h_eeSideBandR2_reweight_binned->Fill(RazrR2,GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweightsJet,EESideBandHighReweightsJet,-1).first);
		      h_eeSideBandR2vsMR_reweight_binned->Fill(RazrMr,RazrR2,GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweightsJet,EESideBandHighReweightsJet,-1).first);
		      if(HasDiJetPt){
			h_eeSideBandDiJetPt->Fill(diJETpt);
			if(NVertex<10)h_eeSBMet_NV0_10->Fill(met->met(),GetMetReweight(diJETpt,"ee",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first);
			else if(NVertex>=10 && NVertex<15)h_eeSBMet_NV10_15->Fill(met->met(),GetMetReweight(diJETpt,"ee",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first);
			else if(NVertex>=15)h_eeSBMet_NV15up->Fill(met->met(),GetMetReweight(diJETpt,"ee",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first);
			if(InvMass > 71.  && InvMass < 81.){
			  h_eeSidebandLowMet_reweightJet_binned->Fill(met->met(),GetMetReweight(diJETpt,"eeSbLow",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first);
			  h_eeSideBandLowDiEMPt->Fill(diEMpt);h_eeSideBandLowDiJetPt->Fill(diJETpt);
			  if(JetCounter==0){h_eeSideBandLowDiEMPt_0Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_0Jet->Fill(diJETpt);}
			  else if(JetCounter==1){h_eeSideBandLowDiEMPt_1Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_1Jet->Fill(diJETpt);}
			  else if(JetCounter>=2){h_eeSideBandLowDiEMPt_2Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_2Jet->Fill(diJETpt);}
			  toys->cd();
			  for(int i=0;i<1000;i++){
			    eeSidebandLowMet_reweight_binned_toy[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diJETpt,"eeSbLow",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first,GetMetReweight(diJETpt,"eeSbLow",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).second));
			  }
			  fout->cd();
			}
			if(InvMass > 101.  && InvMass < 111.){
			  if(printLevel>0)cout<<"Inside ee SBhigh"<<endl;
			  h_eeSidebandHighMet_reweightJet_binned->Fill(met->met(),GetMetReweight(diJETpt,"eeSbHigh",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first);
			  h_eeSidebandHighMet_reweight_binned->Fill(met->met(),GetMetReweight(diEMpt,"eeSbHigh",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first);
			  h_eeSideBandHighDiEMPt->Fill(diEMpt);h_eeSideBandHighDiJetPt->Fill(diJETpt);
			  if(JetCounter==0){h_eeSideBandHighDiEMPt_0Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_0Jet->Fill(diJETpt);}
			  else if(JetCounter==1){h_eeSideBandHighDiEMPt_1Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_1Jet->Fill(diJETpt);}
			  else if(JetCounter>=2){h_eeSideBandHighDiEMPt_2Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_2Jet->Fill(diJETpt);}
			  toys->cd();
			  for(int i=0;i<1000;i++){
			    eeSidebandHighMet_reweight_binned_toy[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diJETpt,"eeSbHigh",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first,GetMetReweight(diJETpt,"eeSbHigh",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).second));
			  }
			  fout->cd();
			}
		      }//end if(HasDiJet)
		      else{ 
			h_eeSideBandDiJetPt->Fill(diEMpt);
			if(NVertex<10)h_eeSBMet_NV0_10->Fill(met->met(),GetMetReweight(diEMpt,"ee",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first);
			else if(NVertex>=10 && NVertex<15)h_eeSBMet_NV10_15->Fill(met->met(),GetMetReweight(diEMpt,"ee",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first);
			else if(NVertex>=15)h_eeSBMet_NV15up->Fill(met->met(),GetMetReweight(diEMpt,"ee",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first);
			if(InvMass > 71.  && InvMass < 81.){
			  h_eeSidebandLowMet_reweightJet_binned->Fill(met->met(),GetMetReweight(diEMpt,"eeSbLow",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first);
			  h_eeSideBandLowDiEMPt->Fill(diEMpt);h_eeSideBandLowDiJetPt->Fill(diEMpt);
			  if(JetCounter==0){h_eeSideBandLowDiEMPt_0Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_0Jet->Fill(diEMpt);}
			  else if(JetCounter==1){h_eeSideBandLowDiEMPt_1Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_1Jet->Fill(diEMpt);}
			  else if(JetCounter>=2){h_eeSideBandLowDiEMPt_2Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_2Jet->Fill(diEMpt);}
			  toys->cd();
			  if(printLevel>0)cout<<"Inside ee SBhigh Toys"<<endl;
			  for(int i=0;i<1000;i++){
			    eeSidebandLowMet_reweight_binned_toy[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diEMpt,"eeSbLow",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first,GetMetReweight(diEMpt,"eeSbLow",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).second));
			  }
			  fout->cd();
			}
			if(InvMass > 101.  && InvMass < 111.){
			  if(printLevel>0)cout<<"Inside ee SBlow"<<endl;
			  h_eeSidebandLowMet_reweightJet_binned->Fill(met->met(),GetMetReweight(diEMpt,"eeSbHigh",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first);
			  h_eeSideBandHighDiEMPt->Fill(diEMpt);h_eeSideBandHighDiJetPt->Fill(diEMpt);
			  if(JetCounter==0){h_eeSideBandHighDiEMPt_0Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_0Jet->Fill(diEMpt);}
			  else if(JetCounter==1){h_eeSideBandHighDiEMPt_1Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_1Jet->Fill(diEMpt);}
			  else if(JetCounter>=2){h_eeSideBandHighDiEMPt_2Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_2Jet->Fill(diEMpt);}
			  toys->cd();	
			  if(printLevel>0)cout<<"Inside ee SBlow Toys"<<endl;
			  for(int i=0;i<1000;i++){
			    eeSidebandHighMet_reweight_binned_toy[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diEMpt,"eeSbHigh",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first,GetMetReweight(diEMpt,"eeSbHigh",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).second));
			  }
			  fout->cd();
			}

		      }//end else
		    }//end sideband
		    if(printLevel>0)cout<<"Finished ee, right before ee_JetReq"<<endl;
		    //now jetreq
		    if(doJetReq){
		      isee_JetReq=true;if(printLevel>0)cout<<"Inside ee_JetReq"<<endl;
		      eePTs_JetReq=make_pair(PhoOne->momentum.Pt(),PhoTwo->momentum.Pt());
		      //Require 81<InvariantMass<101
		      h_eeInvarMassFullRange_JetReq->Fill(InvMass);
		      if( InvMass > 81. && InvMass < 101.){
			nee_JetReq++;
			h_eeMHT_JetReq->Fill(MHT.Pt(),PUweight);
			//check sihih for matrix method
			if(PhoOne->sigmaIetaIeta<maxSihih)nee_matrix_lead_JetReq++;
			if(PhoTwo->sigmaIetaIeta<maxSihih)nee_matrix_trail_JetReq++;
			//if(pfJets.size()>=2){nee_2JetReq++;}
			h_eeMet_JetReq->Fill(met->met());
			h_SeedTimeVsEta_ee_JetReq->Fill(PhoOne->caloPosition.Eta(),PhoOne->seedTime);
			h_SeedTimeVsEta_ee_JetReq->Fill(PhoTwo->caloPosition.Eta(),PhoTwo->seedTime);
			h_eeInvarMass_JetReq->Fill(InvMass);
			h_eeMet_reweight_binned_JetReq->Fill(met->met(),GetMetReweight(diEMpt,"ee",EEreweights_JetReq,FFreweights_JetReq,FGreweights_JetReq,GFreweights_JetReq,GammaFakereweights_JetReq,EESideBandLowReweights_JetReq,EESideBandHighReweights_JetReq,-1).first);
			if(HasDiJetPt){
			  h_eeMet_reweightJet_binned_JetReq->Fill(met->met(),GetMetReweight(diJETpt,"ee",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first);
			  h_DiJetPtWeights_ee_JetReq->Fill(GetMetReweight(diJETpt,"ee",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first);
			  h_eeDiJetPt_reweight_binned_JetReq->Fill(diJETpt,GetMetReweight(diJETpt,"ee",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweights_JetReq,EESideBandHighReweights_JetReq,JetCounter).first);
			  if(JetCounter==0){h_eeDiJetPt_JetReq_0Jet->Fill(diJETpt);h_eeDiEMPt_JetReq_0Jet->Fill(diEMpt);}
			  else if(JetCounter==1){h_eeDiJetPt_JetReq_1Jet->Fill(diJETpt);h_eeDiEMPt_JetReq_1Jet->Fill(diEMpt);}
			  else if(JetCounter>=2){h_eeDiJetPt_JetReq_2Jet->Fill(diJETpt);h_eeDiEMPt_JetReq_2Jet->Fill(diEMpt);}
			  if(JetCounter>2){h_eeDiJetPt_JetReq_MoreThan2Jets->Fill(diJETpt);}
			}
			else{
			  h_eeMet_reweightJet_binned_JetReq->Fill(met->met(),GetMetReweight(diEMpt,"ee",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first);
			  h_DiJetPtWeights_ee_JetReq->Fill(GetMetReweight(diEMpt,"ee",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first);
			  h_eeDiJetPt_reweight_binned_JetReq->Fill(diEMpt,GetMetReweight(diEMpt,"ee",EEreweights_JetReq,FFreweights_JetReq,FGreweights_JetReq,GFreweights_JetReq,GammaFakereweights_JetReq,EESideBandLowReweights_JetReq,EESideBandHighReweights_JetReq,JetCounter).first);
			  if(JetCounter==0){h_eeDiJetPt_JetReq_0Jet->Fill(diEMpt);h_eeDiEMPt_JetReq_0Jet->Fill(diEMpt);}
			  else if(JetCounter==1){h_eeDiJetPt_JetReq_1Jet->Fill(diEMpt);h_eeDiEMPt_JetReq_1Jet->Fill(diEMpt);}
			  else if(JetCounter>=2){h_eeDiJetPt_JetReq_2Jet->Fill(diEMpt);h_eeDiEMPt_JetReq_2Jet->Fill(diEMpt);}
			  else if(JetCounter>2){h_eeDiJetPt_JetReq_MoreThan2Jets->Fill(diEMpt);}
			  h_eeMet_NoJetMatch_JetReq->Fill(met->met());
			}
			h_eeDiEMPt_JetReq->Fill(diEMpt);
			// Di-Jet Pt
			if(HasDiJetPt){
			  h_eeDiJetPt_JetReq->Fill(diJETpt);
			  h_eeDiJetPtOverDiEMPtVsDiEMPt_JetReq->Fill(diEMpt,diJETpt/diEMpt);
			}
			else{h_eeDiJetPt_JetReq->Fill(diEMpt);}
			h_eePixelSeeds_JetReq->Fill(PhoOne->nPixelSeeds);h_eePixelSeeds_JetReq->Fill(PhoTwo->nPixelSeeds);
			//fill toys
			toys->cd();
			if(HasDiJetPt){
			  for(int i=0;i<1000;i++){
			    //title="eeMet_reweight_binned_toy";title+=i;
			    eeMet_reweight_binned_toy_JetReq[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diJETpt,"ee",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first,GetMetReweight(diJETpt,"ee",EEreweights,FFreweights,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).second));
			    //eeMet_reweight_binned_toy[i]->Fill(met->met(),rando.Poisson(GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,-1).first));
			  }
			}
			else{
			  for(int i=0;i<1000;i++){
			    //title="eeMet_reweight_binned_toy";title+=i;
			    eeMet_reweight_binned_toy_JetReq[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diEMpt,"ee",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first,GetMetReweight(diEMpt,"ee",EEreweights_JetReq,FFreweights_JetReq,FGreweights_JetReq,GFreweights_JetReq,GammaFakereweights_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).second));
			    //eeMet_reweight_binned_toy[i]->Fill(met->met(),rando.Poisson(GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,-1).first));
			  }
			}
			fout->cd();
		      }//end if(81<InvMass<101)
		      //now do sideband
		      if(   (InvMass > 71.  && InvMass < 81.)
			    || (InvMass > 101. && InvMass < 111.) ){
			neeSideBand_JetReq++;
			h_eeSideBandDiEMPt_JetReq->Fill(diEMpt);
			h_eeSideBandMet_JetReq->Fill(met->met());
			h_eeSidebandMet_reweight_binned_JetReq->Fill(met->met(),GetMetReweight(diEMpt,"ee",EEreweights_JetReq,FFreweights_JetReq,FGreweights_JetReq,GFreweights_JetReq,GammaFakereweights_JetReq,EESideBandLowReweights_JetReq,EESideBandHighReweights_JetReq,-1).first);
			if(HasDiJetPt){
			  h_eeSideBandDiJetPt_JetReq->Fill(diJETpt);
			  if(InvMass > 71.  && InvMass < 81.){
			    h_eeSidebandLowMet_reweightJet_binned_JetReq->Fill(met->met(),GetMetReweight(diJETpt,"eeSbLow",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first);
			    h_eeSideBandLowDiEMPt_JetReq->Fill(diEMpt);h_eeSideBandLowDiJetPt_JetReq->Fill(diJETpt);
			    if(JetCounter==0){h_eeSideBandLowDiEMPt_JetReq_0Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_JetReq_0Jet->Fill(diJETpt);}
			    else if(JetCounter==1){h_eeSideBandLowDiEMPt_JetReq_1Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_JetReq_1Jet->Fill(diJETpt);}
			    else if(JetCounter>=2){h_eeSideBandLowDiEMPt_JetReq_2Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_JetReq_2Jet->Fill(diJETpt);}
			    toys->cd();
			    for(int i=0;i<1000;i++){
			      eeSidebandLowMet_reweight_binned_toy_JetReq[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diJETpt,"eeSbLow",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first,GetMetReweight(diJETpt,"eeSbLow",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).second));
			    }
			    fout->cd();
			  }
			  else if(InvMass > 101.  && InvMass < 111.){
			    h_eeSidebandHighMet_reweightJet_binned_JetReq->Fill(met->met(),GetMetReweight(diJETpt,"eeSbHigh",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first);
			    h_eeSideBandHighDiEMPt_JetReq->Fill(diEMpt);h_eeSideBandHighDiJetPt_JetReq->Fill(diJETpt);
			    if(JetCounter==0){h_eeSideBandHighDiEMPt_JetReq_0Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_JetReq_0Jet->Fill(diJETpt);}
			    else if(JetCounter==1){h_eeSideBandHighDiEMPt_JetReq_1Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_JetReq_1Jet->Fill(diJETpt);}
			    else if(JetCounter>=2){h_eeSideBandHighDiEMPt_JetReq_2Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_JetReq_2Jet->Fill(diJETpt);}
			    toys->cd();
			    for(int i=0;i<1000;i++){
			      eeSidebandHighMet_reweight_binned_toy_JetReq[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diJETpt,"eeSbHigh",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first,GetMetReweight(diJETpt,"eeSbHigh",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).second));
			    }
			    fout->cd();
			  }
			}//end if(HasDiJet)
			else{ 
			  h_eeSideBandDiJetPt_JetReq->Fill(diEMpt);
			  if(InvMass > 71.  && InvMass < 81.){
			    h_eeSidebandLowMet_reweightJet_binned_JetReq->Fill(met->met(),GetMetReweight(diEMpt,"eeSbLow",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first);
			    h_eeSideBandLowDiEMPt_JetReq->Fill(diEMpt);h_eeSideBandLowDiJetPt_JetReq->Fill(diEMpt);
			    if(JetCounter==0){h_eeSideBandLowDiEMPt_JetReq_0Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_JetReq_0Jet->Fill(diEMpt);}
			    else if(JetCounter==1){h_eeSideBandLowDiEMPt_JetReq_1Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_JetReq_1Jet->Fill(diEMpt);}
			    else if(JetCounter>=2){h_eeSideBandLowDiEMPt_JetReq_2Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_JetReq_2Jet->Fill(diEMpt);}
			    toys->cd();
			    for(int i=0;i<1000;i++){
			      eeSidebandLowMet_reweight_binned_toy_JetReq[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diEMpt,"eeSbLow",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first,GetMetReweight(diEMpt,"eeSbLow",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).second));
			    }
			    fout->cd();
			  }
			  if(InvMass > 101.  && InvMass < 111.){
			    h_eeSidebandHighMet_reweightJet_binned_JetReq->Fill(met->met(),GetMetReweight(diEMpt,"eeSbHigh",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first);
			    h_eeSideBandHighDiEMPt_JetReq->Fill(diEMpt);h_eeSideBandHighDiJetPt_JetReq->Fill(diEMpt);
			    if(JetCounter==0){h_eeSideBandHighDiEMPt_0Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_JetReq_0Jet->Fill(diEMpt);}
			    else if(JetCounter==1){h_eeSideBandHighDiEMPt_JetReq_1Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_JetReq_1Jet->Fill(diEMpt);}
			    else if(JetCounter>=2){h_eeSideBandHighDiEMPt_JetReq_2Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_JetReq_2Jet->Fill(diEMpt);}
			    toys->cd();
			    for(int i=0;i<1000;i++){
			      eeSidebandHighMet_reweight_binned_toy_JetReq[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diEMpt,"eeSbHigh",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first,GetMetReweight(diEMpt,"eeSbHigh",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).second));
			    }
			    fout->cd();
			  }
			}//end else
		      }//end sideband
		    }//end ee jet req case
		    //now 2jetreq
		    if(doJetReq && JetCounter>=2){
		      isee_2JetReq=true;if(printLevel>0)cout<<"Inside ee_2JetReq"<<endl;
		      eePTs_2JetReq=make_pair(PhoOne->momentum.Pt(),PhoTwo->momentum.Pt());
		      //Require 81<InvariantMass<101
		      h_eeInvarMassFullRange_2JetReq->Fill(InvMass);
		      if( InvMass > 81. && InvMass < 101.){
			nee_2JetReq++;	  
			h_eeMHT_2JetReq->Fill(MHT.Pt(),PUweight);
			//check sihih for matrix method
			if(PhoOne->sigmaIetaIeta<maxSihih)nee_matrix_lead_2JetReq++;
			if(PhoTwo->sigmaIetaIeta<maxSihih)nee_matrix_trail_2JetReq++;
			ee2JetReqRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
			//if(pfJets.size()>=2){nee_22JetReq++;}
			h_eeMet_2JetReq->Fill(met->met());
			h_eeInvarMassJets_2JetReq->Fill(InvariantMass(invmassJet1->momentum,invmassJet2->momentum),PUweight);
			h_SeedTimeVsEta_ee_2JetReq->Fill(PhoOne->caloPosition.Eta(),PhoOne->seedTime);
			h_SeedTimeVsEta_ee_2JetReq->Fill(PhoTwo->caloPosition.Eta(),PhoTwo->seedTime);
			h_eeInvarMass_2JetReq->Fill(InvMass);
			h_eeMet_reweight_binned_2JetReq->Fill(met->met(),GetMetReweight(diEMpt,"ee",EEreweights_JetReq,FFreweights_JetReq,FGreweights_JetReq,GFreweights_JetReq,GammaFakereweights_JetReq,EESideBandLowReweights_JetReq,EESideBandHighReweights_JetReq,-1).first);
			if(HasDiJetPt){
			  h_eeMet_reweightJet_binned_2JetReq->Fill(met->met(),GetMetReweight(diJETpt,"ee",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first);
			  h_DiJetPtWeights_ee_2JetReq->Fill(GetMetReweight(diJETpt,"ee",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first);
			  h_eeDiJetPt_reweight_binned_2JetReq->Fill(diJETpt,GetMetReweight(diJETpt,"ee",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweights_2JetReq,EESideBandHighReweights_2JetReq,JetCounter).first);
			  if(JetCounter==0){h_eeDiJetPt_2JetReq_0Jet->Fill(diJETpt);h_eeDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
			  else if(JetCounter==1){h_eeDiJetPt_2JetReq_1Jet->Fill(diJETpt);h_eeDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
			  else if(JetCounter>=2){h_eeDiJetPt_2JetReq_2Jet->Fill(diJETpt);h_eeDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
			  if(JetCounter>2){h_eeDiJetPt_2JetReq_MoreThan2Jets->Fill(diJETpt);}
			}
			else{
			  h_eeMet_reweightJet_binned_2JetReq->Fill(met->met(),GetMetReweight(diEMpt,"ee",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first);
			  h_DiJetPtWeights_ee_2JetReq->Fill(GetMetReweight(diEMpt,"ee",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first);
			  h_eeDiJetPt_reweight_binned_2JetReq->Fill(diEMpt,GetMetReweight(diEMpt,"ee",EEreweights_2JetReq,FFreweights_2JetReq,FGreweights_2JetReq,GFreweights_2JetReq,GammaFakereweights_2JetReq,EESideBandLowReweights_2JetReq,EESideBandHighReweights_2JetReq,JetCounter).first);
			  if(JetCounter==0){h_eeDiJetPt_2JetReq_0Jet->Fill(diEMpt);h_eeDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
			  else if(JetCounter==1){h_eeDiJetPt_2JetReq_1Jet->Fill(diEMpt);h_eeDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
			  else if(JetCounter>=2){h_eeDiJetPt_2JetReq_2Jet->Fill(diEMpt);h_eeDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
			  else if(JetCounter>2){h_eeDiJetPt_2JetReq_MoreThan2Jets->Fill(diEMpt);}
			  h_eeMet_NoJetMatch_2JetReq->Fill(met->met());
			}
			h_eeDiEMPt_2JetReq->Fill(diEMpt);
			// Di-Jet Pt
			if(HasDiJetPt){
			  h_eeDiJetPt_2JetReq->Fill(diJETpt);
			  h_eeDiJetPtOverDiEMPtVsDiEMPt_2JetReq->Fill(diEMpt,diJETpt/diEMpt);
			}
			else{h_eeDiJetPt_2JetReq->Fill(diEMpt);}
			h_eePixelSeeds_2JetReq->Fill(PhoOne->nPixelSeeds);h_eePixelSeeds_2JetReq->Fill(PhoTwo->nPixelSeeds);
			//fill toys
			toys->cd();
			if(HasDiJetPt){
			  for(int i=0;i<1000;i++){
			    //title="eeMet_reweight_binned_toy";title+=i;
			    eeMet_reweight_binned_toy_2JetReq[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diJETpt,"ee",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first,GetMetReweight(diJETpt,"ee",EEreweights,FFreweights,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).second));
			    //eeMet_reweight_binned_toy[i]->Fill(met->met(),rando.Poisson(GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,-1).first));
			  }
			}
			else{
			  for(int i=0;i<1000;i++){
			    //title="eeMet_reweight_binned_toy";title+=i;
			    eeMet_reweight_binned_toy_2JetReq[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diEMpt,"ee",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first,GetMetReweight(diEMpt,"ee",EEreweights_2JetReq,FFreweights_2JetReq,FGreweights_2JetReq,GFreweights_2JetReq,GammaFakereweights_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).second));
			    //eeMet_reweight_binned_toy[i]->Fill(met->met(),rando.Poisson(GetMetReweight(diEMpt,"ee",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,-1).first));
			  }
			}
			fout->cd();
		      }//end if(81<InvMass<101)
		      //now do sideband
		      if(   (InvMass > 71.  && InvMass < 81.)
			    || (InvMass > 101. && InvMass < 111.) ){
			neeSideBand_2JetReq++;
			h_eeSideBandDiEMPt_2JetReq->Fill(diEMpt);
			h_eeSideBandMet_2JetReq->Fill(met->met());
			h_eeSidebandMet_reweight_binned_2JetReq->Fill(met->met(),GetMetReweight(diEMpt,"ee",EEreweights_2JetReq,FFreweights_2JetReq,FGreweights_2JetReq,GFreweights_2JetReq,GammaFakereweights_2JetReq,EESideBandLowReweights_2JetReq,EESideBandHighReweights_2JetReq,-1).first);
			if(HasDiJetPt){
			  h_eeSideBandDiJetPt_2JetReq->Fill(diJETpt);
			  if(InvMass > 71.  && InvMass < 81.){
			    h_eeSidebandLowMet_reweightJet_binned_2JetReq->Fill(met->met(),GetMetReweight(diJETpt,"eeSbLow",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first);
			    h_eeSideBandLowDiEMPt_2JetReq->Fill(diEMpt);h_eeSideBandLowDiJetPt_2JetReq->Fill(diJETpt);
			    if(JetCounter==0){h_eeSideBandLowDiEMPt_2JetReq_0Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_2JetReq_0Jet->Fill(diJETpt);}
			    else if(JetCounter==1){h_eeSideBandLowDiEMPt_2JetReq_1Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_2JetReq_1Jet->Fill(diJETpt);}
			    else if(JetCounter>=2){h_eeSideBandLowDiEMPt_2JetReq_2Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_2JetReq_2Jet->Fill(diJETpt);}
			    toys->cd();
			    for(int i=0;i<1000;i++){
			      eeSidebandLowMet_reweight_binned_toy_2JetReq[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diJETpt,"eeSbLow",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first,GetMetReweight(diJETpt,"eeSbLow",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).second));
			    }
			    fout->cd();
			  }
			  else if(InvMass > 101.  && InvMass < 111.){
			    h_eeSidebandHighMet_reweightJet_binned_2JetReq->Fill(met->met(),GetMetReweight(diJETpt,"eeSbHigh",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first);
			    h_eeSideBandHighDiEMPt_2JetReq->Fill(diEMpt);h_eeSideBandHighDiJetPt_2JetReq->Fill(diJETpt);
			    if(JetCounter==0){h_eeSideBandHighDiEMPt_2JetReq_0Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_2JetReq_0Jet->Fill(diJETpt);}
			    else if(JetCounter==1){h_eeSideBandHighDiEMPt_2JetReq_1Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_2JetReq_1Jet->Fill(diJETpt);}
			    else if(JetCounter>=2){h_eeSideBandHighDiEMPt_2JetReq_2Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_2JetReq_2Jet->Fill(diJETpt);}
			    toys->cd();
			    for(int i=0;i<1000;i++){
			      eeSidebandHighMet_reweight_binned_toy_2JetReq[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diJETpt,"eeSbHigh",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first,GetMetReweight(diJETpt,"eeSbHigh",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).second));
			    }
			    fout->cd();
			  }
			}//end if(HasDiJet)
			else{ 
			  h_eeSideBandDiJetPt_2JetReq->Fill(diEMpt);
			  if(InvMass > 71.  && InvMass < 81.){
			    h_eeSidebandLowMet_reweightJet_binned_2JetReq->Fill(met->met(),GetMetReweight(diEMpt,"eeSbLow",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first);
			    h_eeSideBandLowDiEMPt_2JetReq->Fill(diEMpt);h_eeSideBandLowDiJetPt_2JetReq->Fill(diEMpt);
			    if(JetCounter==0){h_eeSideBandLowDiEMPt_2JetReq_0Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_2JetReq_0Jet->Fill(diEMpt);}
			    else if(JetCounter==1){h_eeSideBandLowDiEMPt_2JetReq_1Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_2JetReq_1Jet->Fill(diEMpt);}
			    else if(JetCounter>=2){h_eeSideBandLowDiEMPt_2JetReq_2Jet->Fill(diEMpt);h_eeSideBandLowDiJetPt_2JetReq_2Jet->Fill(diEMpt);}
			    toys->cd();
			    for(int i=0;i<1000;i++){
			      eeSidebandLowMet_reweight_binned_toy_2JetReq[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diEMpt,"eeSbLow",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first,GetMetReweight(diEMpt,"eeSbLow",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).second));
			    }
			    fout->cd();
			  }
			  if(InvMass > 101.  && InvMass < 111.){
			    h_eeSidebandHighMet_reweightJet_binned_2JetReq->Fill(met->met(),GetMetReweight(diEMpt,"eeSbHigh",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first);
			    h_eeSideBandHighDiEMPt_2JetReq->Fill(diEMpt);h_eeSideBandHighDiJetPt_2JetReq->Fill(diEMpt);
			    if(JetCounter==0){h_eeSideBandHighDiEMPt_2JetReq_0Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_2JetReq_0Jet->Fill(diEMpt);}
			    else if(JetCounter==1){h_eeSideBandHighDiEMPt_2JetReq_1Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_2JetReq_1Jet->Fill(diEMpt);}
			    else if(JetCounter>=2){h_eeSideBandHighDiEMPt_2JetReq_2Jet->Fill(diEMpt);h_eeSideBandHighDiJetPt_2JetReq_2Jet->Fill(diEMpt);}
			    toys->cd();
			    for(int i=0;i<1000;i++){
			      eeSidebandHighMet_reweight_binned_toy_2JetReq[i]->Fill(met->met(),rando.Gaus(GetMetReweight(diEMpt,"eeSbHigh",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first,GetMetReweight(diEMpt,"eeSbHigh",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).second));
			    }
			    fout->cd();
			  }
			}//end else
		      }//end sideband
		    }//end ee 2 jet req case		  
		  }//end ee (nPixelSeeds>0)
		  // look for pixel seeds - if one has, -> eg
		  else if( doeg /*(PhoOne->nPixelSeeds==0 && PhoTwo->nPixelSeeds>0) || (PhoOne->nPixelSeeds>0 && PhoTwo->nPixelSeeds==0)*/){
		    if(printLevel>0)cout<<"Inside eg"<<endl;
		    //require seed time within +-3ns for no jet requirement case
		    //if(fabs(PhoOne->seedTime)<3. && fabs(PhoTwo->seedTime)<3.){
		    neg++;iseg=true;egnumVert[NVertex]++;	
		    h_egMHT->Fill(MHT.Pt(),PUweight);
		    h_nJets_eg->Fill(JetCounter);
		    h_ClosestDR_eg->Fill(ClosestDR);
		    for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.first.begin(); jet_it != pfJets.first.end(); jet_it++){
		      h_DRfromJets_eg->Fill(getDR(PhoOne->caloPosition, (*jet_it)->momentum),getDR(PhoTwo->caloPosition, (*jet_it)->momentum));
		    }
		    h_ClosestDPhi_eg->Fill(ClosestDPhi);
		    egPTs=make_pair(PhoOne->momentum.Pt(),PhoTwo->momentum.Pt());
		    egRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
		    h_SeedTimeVsEta_eg->Fill(PhoOne->caloPosition.Eta(),PhoOne->seedTime);
		    h_SeedTimeVsEta_eg->Fill(PhoTwo->caloPosition.Eta(),PhoTwo->seedTime);
		    h_NVertexVsMET_eg->Fill(met->met(),NVertex);
		    h_egPerInstLumi->Fill(event->avgInsRecLumi);
		    if(NVertex<10)h_egMet_NV0_10->Fill(met->met());
		    else if(NVertex>=10 && NVertex<15)h_egMet_NV10_15->Fill(met->met());
		    else if(NVertex>=15)h_egMet_NV15up->Fill(met->met());
		    if(isJetFail){bool go2=true;
		      for(std::vector<susy::PFJet*>::iterator jet_it = pfJetsFail.begin(); jet_it != pfJetsFail.end(); jet_it++){	
			if( isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5) || isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5) ) go2=false;
		      }
		      if(go2){nCnt[10]++;h_egMet_JetFail->Fill(met->met());h_MET_JetFail->Fill(met->met());}
		    }
		    h_r9_eg->Fill(PhoOne->r9);h_r9_eg->Fill(PhoTwo->r9);
		    h_egPt->Fill(PhoOne->momentum.Pt());h_egPt->Fill(PhoTwo->momentum.Pt());
		    h_egPtLead->Fill(PhoOne->momentum.Pt());h_egPtTrail->Fill(PhoTwo->momentum.Pt());
		    h_sumEt_eg->Fill(met->sumEt);
		    h_egMet->Fill(met->met());
		    float frPt=0.,frNv=0.,frEta=0.,fakeRateWeight=0.;
		    if(PhoOne->nPixelSeeds>0){
		      frPt = h_fakeRate_pt->FindBin(PhoOne->momentum.Pt())>h_fakeRate_pt->GetNbinsX() ? 
			h_fakeRate_pt->GetBinContent(h_fakeRate_pt->GetNbinsX()) : 
			h_fakeRate_pt->GetBinContent(h_fakeRate_pt->FindBin(PhoOne->momentum.Pt()));
		      frEta = h_fakeRate_eta->FindBin(fabs(PhoOne->caloPosition.Eta()))>h_fakeRate_eta->GetNbinsX() ? 
			h_fakeRate_eta->GetBinContent(h_fakeRate_eta->GetNbinsX()) : 
			h_fakeRate_eta->GetBinContent(h_fakeRate_eta->FindBin(fabs(PhoOne->caloPosition.Eta())));
		      h_PtVsMET_eg_e->Fill(met->met(),PhoOne->momentum.Pt());
		      h_NVertexVsPt_eg_e->Fill(PhoOne->momentum.Pt(),NVertex);
		      h_Pt_eg_e->Fill(PhoOne->momentum.Pt());
		    }
		    else{
		      frPt = h_fakeRate_pt->FindBin(PhoTwo->momentum.Pt())>h_fakeRate_pt->GetNbinsX() ? 
			h_fakeRate_pt->GetBinContent(h_fakeRate_pt->GetNbinsX()) : 
			h_fakeRate_pt->GetBinContent(h_fakeRate_pt->FindBin(PhoTwo->momentum.Pt()));
		      frEta = h_fakeRate_eta->FindBin(fabs(PhoTwo->caloPosition.Eta()))>h_fakeRate_eta->GetNbinsX() ? 
			h_fakeRate_eta->GetBinContent(h_fakeRate_eta->GetNbinsX()) : 
			h_fakeRate_eta->GetBinContent(h_fakeRate_eta->FindBin(fabs(PhoTwo->caloPosition.Eta())));
		      h_PtVsMET_eg_e->Fill(met->met(),PhoTwo->momentum.Pt());
		      h_NVertexVsPt_eg_e->Fill(PhoTwo->momentum.Pt(),NVertex);
		      h_Pt_eg_e->Fill(PhoTwo->momentum.Pt());
		    }
		    frNv = h_fakeRate_nvtx->FindBin(NVertex)>h_fakeRate_nvtx->GetNbinsX() ? 
		      h_fakeRate_nvtx->GetBinContent(h_fakeRate_nvtx->GetNbinsX()) : 
		      h_fakeRate_nvtx->GetBinContent(h_fakeRate_nvtx->FindBin(NVertex));
		    fakeRateWeight=frPt*frNv*frEta/(fakeRateFull*fakeRateFull);
		    h_egMet_reweight_Pt_Nvtx_Eta->Fill(met->met(),fakeRateWeight);
		    h_egMet_reweight_Pt->Fill(met->met(),frPt);
		    h_egMet_reweight_Nvtx->Fill(met->met(),frNv);
		    h_egMet_reweight_Eta->Fill(met->met(),frEta);

		    h_egType1CorrMet->Fill(Type1CorrMet->met());
		    //h_egMet_reweightNVertex->Fill(met->met(),egNVweight[NVertex-1]);
		    h_egSigIetaIeta->Fill(PhoOne->sigmaIetaIeta);h_egSigIetaIeta->Fill(PhoTwo->sigmaIetaIeta);
		    h_egDiEMPt->Fill(diEMpt);
		    if(InvMass<40.)h_egDiEMPtInvMassBelow40->Fill(diEMpt);
		    else h_egDiEMPtInvMassAbove40->Fill(diEMpt);
		    h_egPixelSeeds->Fill(PhoOne->nPixelSeeds);h_egPixelSeeds->Fill(PhoTwo->nPixelSeeds);
		    h_egInvarMass->Fill(InvMass);
		    if(met->met()>30){h_egInvarMassMET30->Fill(InvMass);h_egInvarMassMET30MVAcorr->Fill(InvMassMVAcorrVertexCorr,PUweight);}
		    if(PhoTwo->nPixelSeeds==0 && PhoTwo->momentum.Pt()>25 && PhoTwo->momentum.Pt()<40)h_egInvarMass_Pt25to40->Fill(InvMass);
		    if(PhoOne->nPixelSeeds==0 && PhoOne->momentum.Pt()>40 && PhoOne->momentum.Pt()<45)h_egInvarMass_Pt40to45->Fill(InvMass);
		    else if(PhoOne->nPixelSeeds==0 && PhoOne->momentum.Pt()>45 && PhoOne->momentum.Pt()<50)h_egInvarMass_Pt45to50->Fill(InvMass);
		    else if(PhoOne->nPixelSeeds==0 && PhoOne->momentum.Pt()>50 && PhoOne->momentum.Pt()<60)h_egInvarMass_Pt50to60->Fill(InvMass);
		    else if(PhoOne->nPixelSeeds==0 && PhoOne->momentum.Pt()>60 && PhoOne->momentum.Pt()<80)h_egInvarMass_Pt60to80->Fill(InvMass);
		    else if(PhoOne->nPixelSeeds==0 && PhoOne->momentum.Pt()>80)h_egInvarMass_Pt80->Fill(InvMass);
		    h_rho_eg->Fill(Rho);h_NVertex_eg->Fill(NVertex);
		    h_EcalIsoDR03RhoCorr_eg->Fill(PhoOne->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25);h_EcalIsoDR03RhoCorr_eg->Fill(PhoTwo->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25);
		    h_HcalIsoDR03RhoCorr_eg->Fill(PhoOne->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25);h_HcalIsoDR03RhoCorr_eg->Fill(PhoTwo->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25);
		    h_TrackIsoDR03RhoCorr_eg->Fill(PhoOne->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);h_TrackIsoDR03RhoCorr_eg->Fill(PhoTwo->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);
		    h_CombIsoDR03RhoCorr_eg->Fill(PhoOne->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25+PhoOne->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25+PhoOne->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);
		    h_CombIsoDR03RhoCorr_eg->Fill(PhoTwo->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25+PhoTwo->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25+PhoTwo->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);
		    float CHpuCorrPhoOne=0.,CHpuCorrPhoTwo=0.,NHpuCorrPhoOne=0.,NHpuCorrPhoTwo=0.,PHpuCorrPhoOne=0.,PHpuCorrPhoTwo=0.;
		    if(fabs(PhoOne->caloPosition.Eta())<1.0){CHpuCorrPhoOne=0.012;NHpuCorrPhoOne=0.03;PHpuCorrPhoOne=0.148;}
		    else {CHpuCorrPhoOne=0.010;NHpuCorrPhoOne=0.057;PHpuCorrPhoOne=0.130;}
		    if(fabs(PhoTwo->caloPosition.Eta())<1.0){CHpuCorrPhoTwo=0.012;NHpuCorrPhoTwo=0.03;PHpuCorrPhoTwo=0.148;}
		    else {CHpuCorrPhoTwo=0.010;NHpuCorrPhoTwo=0.057;PHpuCorrPhoTwo=0.130;}
		    h_ChargedHadronIso_eg->Fill(PhoOne->chargedHadronIso-CHpuCorrPhoOne*Rho25);
		    h_ChargedHadronIso_eg->Fill(PhoTwo->chargedHadronIso-CHpuCorrPhoTwo*Rho25);
		    h_NeutralHadronIso_eg->Fill(PhoOne->neutralHadronIso-PhoOne->momentum.Et()*0.04-NHpuCorrPhoOne*Rho25);
		    h_NeutralHadronIso_eg->Fill(PhoTwo->neutralHadronIso-PhoTwo->momentum.Et()*0.04-NHpuCorrPhoTwo*Rho25);
		    h_PhotonIso_eg->Fill(PhoOne->photonIso-PhoOne->momentum.Et()*0.005-PHpuCorrPhoOne*Rho25);
		    h_PhotonIso_eg->Fill(PhoTwo->photonIso-PhoTwo->momentum.Et()*0.005-PHpuCorrPhoTwo*Rho25);
		    h_eg_1v2_ChargedHadronIso->Fill(PhoOne->chargedHadronIso-CHpuCorrPhoOne*Rho25,PhoTwo->chargedHadronIso-CHpuCorrPhoTwo*Rho25);
		    h_eg_1v2_NeutralHadronIso->Fill(PhoOne->neutralHadronIso-PhoOne->momentum.Et()*0.04-NHpuCorrPhoOne*Rho25,PhoTwo->neutralHadronIso-PhoTwo->momentum.Et()*0.04-NHpuCorrPhoTwo*Rho25);
		    h_eg_1v2_PhotonIso->Fill(PhoOne->photonIso-PhoOne->momentum.Et()*0.005-PHpuCorrPhoOne*Rho25,PhoTwo->photonIso-PhoTwo->momentum.Et()*0.005-PHpuCorrPhoTwo*Rho25);
		    h_eg_1v2_SigIetaIeta->Fill(PhoOne->sigmaIetaIeta,PhoTwo->sigmaIetaIeta);
		    h_DiEMPtVsMet_eg->Fill(met->met(),diEMpt);
		    if(HasDiJetPt){
		      if(JetCounter==0){h_egDiJetPt_0Jet->Fill(diJETpt);h_egDiEMPt_0Jet->Fill(diEMpt);}
		      else if(JetCounter==1){h_egDiJetPt_1Jet->Fill(diJETpt);h_egDiEMPt_1Jet->Fill(diEMpt);}
		      else if(JetCounter>=2){h_egDiJetPt_2Jet->Fill(diJETpt);h_egDiEMPt_2Jet->Fill(diEMpt);}
		      if(JetCounter>2){h_egDiJetPt_MoreThan2Jets->Fill(diJETpt);}
		      h_DiJetPtVsMet_eg->Fill(met->met(),diJETpt);
		    }
		    else{
		      if(JetCounter==0){h_egDiJetPt_0Jet->Fill(diEMpt);h_egDiEMPt_0Jet->Fill(diEMpt);}
		      else if(JetCounter==1){h_egDiJetPt_1Jet->Fill(diEMpt);h_egDiEMPt_1Jet->Fill(diEMpt);}
		      else if(JetCounter>=2){h_egDiJetPt_2Jet->Fill(diEMpt);h_egDiEMPt_2Jet->Fill(diEMpt);}
		      if(JetCounter>2){h_egDiJetPt_MoreThan2Jets->Fill(diEMpt);}
		      h_egMet_NoJetMatch->Fill(met->met());
		      h_DiJetPtVsMet_eg->Fill(met->met(),diEMpt);
		    }		  
		    h_egMR->Fill(RazrMr);
		    h_egR2->Fill(RazrR2);
		    h_egR2vsMR->Fill(RazrMr,RazrR2);
		    h_egdPhi->Fill(dPhi);
		    h_egdR->Fill(getDR(PhoOne->momentum,PhoTwo->momentum));
		    h_egAlphaT->Fill(alphaT);
		    if(JetCounter==0)h_egAlphaT_0Jet->Fill(alphaT);
		    h_egPhotonLessHt->Fill(PhotonLessHt);
		    h_egPhotonLessHtVsMET->Fill(met->met(),PhotonLessHt);
		    h_egMETdPhiLead->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		    h_egMETdPhiTrail->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		    h_egMETdPhi->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		    h_egMETdPhi->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		    h_DiEMPtVsMetDphi_eg->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		    h_DiEMPtVsMetDphi_eg->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		    h_DiEMPtVsMetDphiLead_eg->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		    h_DiEMPtVsMetDphiTrail_eg->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		    h_MetVsMetDphi_eg->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),met->met());
		    h_MetVsMetDphi_eg->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),met->met());
		    h_MetVsMetDphiLead_eg->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),met->met());
		    h_MetVsMetDphiTrail_eg->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),met->met());
		    //}//seedTime
		    if (EG)
		      {
			if(EGtrain){
			  cout<<"egcounter"<<egMVAcounter<<" ";
			  if (!met->sumEt)
			    std::cout << "0 ";
			  else
			    std::cout << met->sumEt << " ";
			  if (!dPhi)
			    std::cout << "0 ";
			  else
			    std::cout << dPhi << " ";
			  if (!PhoOne)
			    std::cout << "0 ";
			  else if (!met->mEt.Phi())
			    std::cout << "0 ";
			  else if (!getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()))
			    std::cout << "0 ";
			  else
			    std::cout << getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()) << " ";
			  if (!PhoTwo)
			    std::cout << "0 ";
			  else if (!getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()))
			    std::cout << "0 ";
			  else
			    std::cout << getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()) << " ";
			  if(!PhoOne || !PhoTwo)
			    std::cout << "0 ";
			  else if(!met->mEt.Phi())
			    std::cout << "0 ";
			  else if (!getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi()))
			    std::cout << "0 ";
			  else
			    std::cout << getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi()) << " ";
			  /*   if (!alphaT)
			       std::cout << "0 ";
			       else
			       std::cout << alphaT << " ";*/
			  if (!PhotonLessHt)
			    std::cout << "0 ";
			  else
			    std::cout << PhotonLessHt << " ";	  
			  if (!diEMpt)
			    std::cout << "0 ";
			  else
			    std::cout << diEMpt << " ";
			  if (!InvMass)
			    std::cout << "0 ";
			  else
			    std::cout << InvMass << " ";
			  if (!met->met())
			    std::cout << "0 ";
			  else
			    std::cout << met->met() << " ";
			  if (!RazrMr)
			    std::cout << "0 ";
			  else
			    std::cout << RazrMr << " ";
			  // std::cout << "0.018 " << endl;//eg fake rate
			  //std::cout << "0.005372 " << endl;//scaled by ff/eg
			  std::cout<< 0.021*(130262./237218.) << " "<<endl;//scaled by ff/eg with new fake rate
			}
			
			if(egMVAcounter==9)egMVAcounter=0;
			else egMVAcounter++;
			if(egMVAcounter!=1){
			  if(reader->EvaluateMVA("BDT method")){
			    h_egdPhi_BDT->Fill(dPhi/*,MVAweight*/);
			    h_sumEt_eg_BDT->Fill(met->sumEt/*,MVAweight*/);
			    h_egMETdPhiLead_BDT->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
			    h_egMETdPhiTrail_BDT->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
			    h_egSystem_METdPhi_BDT->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi())/*,MVAweight*/);
			    h_egAlphaT_BDT->Fill(alphaT/*,MVAweight*/);
			    h_egPhotonLessHt_BDT->Fill(PhotonLessHt/*,MVAweight*/);
			    h_egInvarMass_BDT->Fill(InvMass/*,MVAweight*/);
			    h_egMet_BDT->Fill(met->met()/*,MVAweight*/);
			    h_egMR_BDT->Fill(RazrMr/*,MVAweight*/);
			    if(InvMass<86 || InvMass>96){
			      h_egdPhi_BDT_NoZ->Fill(dPhi/*,MVAweight*/);
			      h_sumEt_eg_BDT_NoZ->Fill(met->sumEt/*,MVAweight*/);
			      h_egMETdPhiLead_BDT_NoZ->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
			      h_egMETdPhiTrail_BDT_NoZ->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
			      h_egSystem_METdPhi_BDT_NoZ->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi())/*,MVAweight*/);
			      h_egAlphaT_BDT_NoZ->Fill(alphaT/*,MVAweight*/);
			      h_egPhotonLessHt_BDT_NoZ->Fill(PhotonLessHt/*,MVAweight*/);
			      h_egInvarMass_BDT_NoZ->Fill(InvMass/*,MVAweight*/);
			      h_egMet_BDT_NoZ->Fill(met->met()/*,MVAweight*/);
			      h_egMR_BDT_NoZ->Fill(RazrMr/*,MVAweight*/);
			    }
			  } 
			}
			varsumEt = met->sumEt;
			vardPhi = dPhi;
			varMETdPhiLead = getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi());
			varMETdPhiTrail =  getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi());
			varSystemMETdPhi = getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi());
			//	varAlphaT = alphaT;
			varPhotonLessHT = PhotonLessHt;
			varInvarMass = InvMass;
			varMet = met->met();
			varMR = RazrMr;
			
			/*   if (Use["Likelihood"   ])   eghistLk     ->Fill( reader->EvaluateMVA( "Likelihood method"    ) );
			     if (Use["LikelihoodD"  ])   eghistLkD    ->Fill( reader->EvaluateMVA( "LikelihoodD method"   ) );
			     if (Use["LikelihoodPCA"])   eghistLkPCA  ->Fill( reader->EvaluateMVA( "LikelihoodPCA method" ) );
			     if (Use["LikelihoodKDE"])   eghistLkKDE  ->Fill( reader->EvaluateMVA( "LikelihoodKDE method" ) );
			     if (Use["LikelihoodMIX"])   eghistLkMIX  ->Fill( reader->EvaluateMVA( "LikelihoodMIX method" ) );
			     if (Use["PDERS"        ])   eghistPD     ->Fill( reader->EvaluateMVA( "PDERS method"         ) );
			     if (Use["PDERSD"       ])   eghistPDD    ->Fill( reader->EvaluateMVA( "PDERSD method"        ) );
			     if (Use["PDERSPCA"     ])   eghistPDPCA  ->Fill( reader->EvaluateMVA( "PDERSPCA method"      ) );
			     if (Use["KNN"          ])   eghistKNN    ->Fill( reader->EvaluateMVA( "KNN method"           ) );
			     if (Use["HMatrix"      ])   eghistHm     ->Fill( reader->EvaluateMVA( "HMatrix method"       ) );
			     if (Use["Fisher"       ])   eghistFi     ->Fill( reader->EvaluateMVA( "Fisher method"        ) );
			     if (Use["FisherG"      ])   eghistFiG    ->Fill( reader->EvaluateMVA( "FisherG method"       ) );
			     if (Use["BoostedFisher"])   eghistFiB    ->Fill( reader->EvaluateMVA( "BoostedFisher method" ) );
			     if (Use["MLP"          ])   eghistNn     ->Fill( reader->EvaluateMVA( "MLP method"           ) );
			     if (Use["MLPBFGS"      ])   eghistNnbfgs ->Fill( reader->EvaluateMVA( "MLPBFGS method"       ) );
			     if (Use["MLPBNN"       ])   eghistNnbnn  ->Fill( reader->EvaluateMVA( "MLPBNN method"        ) );
			     if (Use["CFMlpANN"     ])   eghistNnC    ->Fill( reader->EvaluateMVA( "CFMlpANN method"      ) );
			     if (Use["TMlpANN"      ])   eghistNnT    ->Fill( reader->EvaluateMVA( "TMlpANN method"       ) );
			     if (Use["BDTD"         ])   eghistBdtD   ->Fill( reader->EvaluateMVA( "BDTD method"          ) );
			     if (Use["BDTG"         ])   eghistBdtG   ->Fill( reader->EvaluateMVA( "BDTG method"          ) );
			     if (Use["RuleFit"      ])   eghistRf     ->Fill( reader->EvaluateMVA( "RuleFit method"       ) );
			     if (Use["SVM_Gauss"    ])   eghistSVMG   ->Fill( reader->EvaluateMVA( "SVM_Gauss method"     ) );
			     if (Use["SVM_Poly"     ])   eghistSVMP   ->Fill( reader->EvaluateMVA( "SVM_Poly method"      ) );
			     if (Use["SVM_Lin"      ])   eghistSVML   ->Fill( reader->EvaluateMVA( "SVM_Lin method"       ) );
			     if (Use["FDA_MT"       ])   eghistFDAMT  ->Fill( reader->EvaluateMVA( "FDA_MT method"        ) );
			     if (Use["FDA_GA"       ])   eghistFDAGA  ->Fill( reader->EvaluateMVA( "FDA_GA method"        ) );
			     if (Use["Category"     ])   eghistCat    ->Fill( reader->EvaluateMVA( "Category method"      ) );
			     if (Use["Plugin"       ])   eghistPBdt   ->Fill( reader->EvaluateMVA( "P_BDT method"         ) );*/
			if (Use["LD"           ])   eghistLD     ->Fill( reader->EvaluateMVA( "LD method"            ) );
			if (Use["BDT"          ])   eghistBdt    ->Fill( reader->EvaluateMVA( "BDT method"           ) );
			if (Use["SVM"          ])   eghistSVM    ->Fill( reader->EvaluateMVA( "SVM method"           ) );
		      }
		    if(doJetReq){
		      if(printLevel>0)cout<<"Inside eg_JetReq"<<endl;
		      neg_JetReq++;iseg_JetReq=true;
		      h_egMHT_JetReq->Fill(MHT.Pt(),PUweight);
		      egPTs_JetReq=make_pair(PhoOne->momentum.Pt(),PhoTwo->momentum.Pt());
		      egJetReqRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
		      h_egMet_JetReq->Fill(met->met());
		      float frPt_JetReq=0.,frNv_JetReq=0.,frEta_JetReq=0.,fakeRateWeight_JetReq=0.;
		      if(PhoOne->nPixelSeeds>0){
			frPt_JetReq = h_fakeRate_pt->FindBin(PhoOne->momentum.Pt())>h_fakeRate_pt->GetNbinsX() ? 
			  h_fakeRate_pt->GetBinContent(h_fakeRate_pt->GetNbinsX()) : 
			  h_fakeRate_pt->GetBinContent(h_fakeRate_pt->FindBin(PhoOne->momentum.Pt()));
			frEta_JetReq = h_fakeRate_eta->FindBin(fabs(PhoOne->caloPosition.Eta()))>h_fakeRate_eta->GetNbinsX() ? 
			  h_fakeRate_eta->GetBinContent(h_fakeRate_eta->GetNbinsX()) : 
			  h_fakeRate_eta->GetBinContent(h_fakeRate_eta->FindBin(fabs(PhoOne->caloPosition.Eta())));
		      }
		      else{
			frPt_JetReq = h_fakeRate_pt->FindBin(PhoOne->momentum.Pt())>h_fakeRate_pt->GetNbinsX() ? 
			  h_fakeRate_pt->GetBinContent(h_fakeRate_pt->GetNbinsX()) : 
			  h_fakeRate_pt->GetBinContent(h_fakeRate_pt->FindBin(PhoTwo->momentum.Pt()));
			frEta_JetReq = h_fakeRate_eta->FindBin(fabs(PhoTwo->caloPosition.Eta()))>h_fakeRate_eta->GetNbinsX() ? 
			  h_fakeRate_eta->GetBinContent(h_fakeRate_eta->GetNbinsX()) : 
			  h_fakeRate_eta->GetBinContent(h_fakeRate_eta->FindBin(fabs(PhoTwo->caloPosition.Eta())));
		      }
		      frNv_JetReq = h_fakeRate_nvtx->FindBin(NVertex)>h_fakeRate_nvtx->GetNbinsX() ? 
			h_fakeRate_nvtx->GetBinContent(h_fakeRate_nvtx->GetNbinsX()) : 
			h_fakeRate_nvtx->GetBinContent(h_fakeRate_nvtx->FindBin(NVertex));
		      fakeRateWeight_JetReq=frPt_JetReq*frNv_JetReq*frEta_JetReq/(fakeRateFull*fakeRateFull);
		      h_egMet_reweight_Pt_Nvtx_Eta_JetReq->Fill(met->met(),fakeRateWeight_JetReq);
		      h_egMet_reweight_Pt_JetReq->Fill(met->met(),frPt_JetReq);
		      h_egMet_reweight_Nvtx_JetReq->Fill(met->met(),frNv_JetReq);
		      h_egMet_reweight_Eta_JetReq->Fill(met->met(),frEta_JetReq);
		      
		      h_SeedTimeVsEta_eg_JetReq->Fill(PhoOne->caloPosition.Eta(),PhoOne->seedTime);
		      h_SeedTimeVsEta_eg_JetReq->Fill(PhoTwo->caloPosition.Eta(),PhoTwo->seedTime);
		      h_egDiEMPt_JetReq->Fill(diEMpt);
		      h_egPixelSeeds_JetReq->Fill(PhoOne->nPixelSeeds);h_egPixelSeeds_JetReq->Fill(PhoTwo->nPixelSeeds);
		      h_egInvarMass_JetReq->Fill(InvMass);
		      if(HasDiJetPt){
			if(JetCounter==0){h_egDiJetPt_JetReq_0Jet->Fill(diJETpt);h_egDiEMPt_JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_egDiJetPt_JetReq_1Jet->Fill(diJETpt);h_egDiEMPt_JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_egDiJetPt_JetReq_2Jet->Fill(diJETpt);h_egDiEMPt_JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_egDiJetPt_JetReq_MoreThan2Jets->Fill(diJETpt);}
		      }
		      else{
			if(JetCounter==0){h_egDiJetPt_JetReq_0Jet->Fill(diEMpt);h_egDiEMPt_JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_egDiJetPt_JetReq_1Jet->Fill(diEMpt);h_egDiEMPt_JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_egDiJetPt_JetReq_2Jet->Fill(diEMpt);h_egDiEMPt_JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_egDiJetPt_MoreThan2Jets->Fill(diEMpt);}
			h_egMet_NoJetMatch_JetReq->Fill(met->met());
		      }
		    
		    }//end eg jet req case
		    if(doJetReq && JetCounter>=2){
		      if(printLevel>0)cout<<"Inside eg_2JetReq"<<endl;
		      neg_2JetReq++;iseg_2JetReq=true;
		      h_egMHT_2JetReq->Fill(MHT.Pt(),PUweight);
		      egPTs_2JetReq=make_pair(PhoOne->momentum.Pt(),PhoTwo->momentum.Pt());
		      eg2JetReqRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
		      h_egMet_2JetReq->Fill(met->met());
		      float frPt_2JetReq=0.,frNv_2JetReq=0.,frEta_2JetReq=0.,fakeRateWeight_2JetReq=0.;
		      if(PhoOne->nPixelSeeds>0){
			frPt_2JetReq = h_fakeRate_pt->FindBin(PhoOne->momentum.Pt())>h_fakeRate_pt->GetNbinsX() ? 
			  h_fakeRate_pt->GetBinContent(h_fakeRate_pt->GetNbinsX()) : 
			  h_fakeRate_pt->GetBinContent(h_fakeRate_pt->FindBin(PhoOne->momentum.Pt()));
			frEta_2JetReq = h_fakeRate_eta->FindBin(fabs(PhoOne->caloPosition.Eta()))>h_fakeRate_eta->GetNbinsX() ? 
			  h_fakeRate_eta->GetBinContent(h_fakeRate_eta->GetNbinsX()) : 
			  h_fakeRate_eta->GetBinContent(h_fakeRate_eta->FindBin(fabs(PhoOne->caloPosition.Eta())));
		      }
		      else{
			frPt_2JetReq = h_fakeRate_pt->FindBin(PhoTwo->momentum.Pt())>h_fakeRate_pt->GetNbinsX() ? 
			  h_fakeRate_pt->GetBinContent(h_fakeRate_pt->GetNbinsX()) : 
			  h_fakeRate_pt->GetBinContent(h_fakeRate_pt->FindBin(PhoTwo->momentum.Pt()));
			frEta_2JetReq = h_fakeRate_eta->FindBin(fabs(PhoTwo->caloPosition.Eta()))>h_fakeRate_eta->GetNbinsX() ? 
			  h_fakeRate_eta->GetBinContent(h_fakeRate_eta->GetNbinsX()) : 
			  h_fakeRate_eta->GetBinContent(h_fakeRate_eta->FindBin(fabs(PhoTwo->caloPosition.Eta())));
		      }
		      frNv_2JetReq = h_fakeRate_nvtx->FindBin(NVertex)>h_fakeRate_nvtx->GetNbinsX() ? 
			h_fakeRate_nvtx->GetBinContent(h_fakeRate_nvtx->GetNbinsX()) : 
			h_fakeRate_nvtx->GetBinContent(h_fakeRate_nvtx->FindBin(NVertex));
		      fakeRateWeight_2JetReq=frPt_2JetReq*frNv_2JetReq*frEta_2JetReq/(fakeRateFull*fakeRateFull);
		      h_egMet_reweight_Pt_Nvtx_Eta_2JetReq->Fill(met->met(),fakeRateWeight_2JetReq);
		      h_egMet_reweight_Pt_2JetReq->Fill(met->met(),frPt_2JetReq);
		      h_egMet_reweight_Nvtx_2JetReq->Fill(met->met(),frNv_2JetReq);
		      h_egMet_reweight_Eta_2JetReq->Fill(met->met(),frEta_2JetReq);
		      
		      h_SeedTimeVsEta_eg_2JetReq->Fill(PhoOne->caloPosition.Eta(),PhoOne->seedTime);
		      h_SeedTimeVsEta_eg_2JetReq->Fill(PhoTwo->caloPosition.Eta(),PhoTwo->seedTime);
		      h_egDiEMPt_2JetReq->Fill(diEMpt);
		      h_egPixelSeeds_2JetReq->Fill(PhoOne->nPixelSeeds);h_egPixelSeeds_2JetReq->Fill(PhoTwo->nPixelSeeds);
		      h_egInvarMass_2JetReq->Fill(InvMass);
		      if(HasDiJetPt){
			if(JetCounter==0){h_egDiJetPt_2JetReq_0Jet->Fill(diJETpt);h_egDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_egDiJetPt_2JetReq_1Jet->Fill(diJETpt);h_egDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_egDiJetPt_2JetReq_2Jet->Fill(diJETpt);h_egDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_egDiJetPt_2JetReq_MoreThan2Jets->Fill(diJETpt);}
		      }
		      else{
			if(JetCounter==0){h_egDiJetPt_2JetReq_0Jet->Fill(diEMpt);h_egDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_egDiJetPt_2JetReq_1Jet->Fill(diEMpt);h_egDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_egDiJetPt_2JetReq_2Jet->Fill(diEMpt);h_egDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_egDiJetPt_MoreThan2Jets->Fill(diEMpt);}
			h_egMet_NoJetMatch_2JetReq->Fill(met->met());
		      }
		    
		    }//end eg 2 jet req case
		  }//end eg (nPixelSeeds)
		}//end if(InvMass>40)
	      }//end if(!PhosTooCloseDR && !PhosTooCloseDphi)
	    }//end if(PhoOne->momentum.Et()>40.) - end gg,ee,eg no jet req case
	  }
	  //}//if pho_Cands>=2 && ...//commented out to include fakes
	
	  has_dphiJet=0;
	  //now do fakes; now ff
	  if(doff /*fake_Cands.size()>=2 && (*fake_Cands.begin())->momentum.Et()>leadEtCut*/){  //can't make this an else if, what to do if there are gg and ff?
	    //if(pho_Cands.size()>=2){TwoPhosAndTwoFakes=true;nTwoPhosAndTwoFakes++;}
	    //if(checkDouble){cout<<"PhoOne and PhoTwo getting reassigned!!!!"<<endl;}
	    //ndiPhoCands++;
	    //Loop through pho_Cands to assign PhoOne and PhoTwo
	    //This mades sure the two pho objects are separated by dR>0.8 && dPhi>0.05 for no jet req case
	    //	    	  FakesTooCloseDR=true;FakesTooCloseDphi=true;FakePhoMetOverlap=true;breakFake=false;
	    //	      for(std::vector<susy::Photon*>::iterator fake_it = fake_Cands.begin();fake_it<(fake_Cands.end())-1;fake_it++){
	    //	      if(breakFake)break;
	    //	      PhoOne=*fake_it;
	    //	      for(std::vector<susy::Photon*>::iterator fake_it2 = (fake_it+1);fake_it2!=fake_Cands.end();fake_it2++){
	    //	      if(   !isSameObject(PhoOne->caloPosition,(*fake_it2)->caloPosition,0.6) 
	    //	      && !tooClosePhi(PhoOne->caloPosition,(*fake_it2)->caloPosition,0.05)  
	    //	      //dPhi cut between photons and MET
	    //	      // && !tooClosePhi(PhoOne->caloPosition,met->mEt,0.05)
	    //	      //   && !tooClosePhi((*fake_it2)->caloPosition,met->mEt,0.05)     ){
	    //	      PhoTwo=*fake_it2;FakesTooCloseDR=false;FakesTooCloseDphi=false;FakePhoMetOverlap=false;breakFake=true;
	    //	      //This checks if there is at least one loose jet separated by 0.5 from both phos
	    //	      doJetReqFake=false;JetIsolatedFromBothPhos=false;
	    //	      if(!FakesTooCloseDR && !FakesTooCloseDphi && AtLeastOnePFJet )[// && !FakePhoMetOverlap ){
	    //	      //use pfJets.first here because we want all jets
	    //	      for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.first.begin(); jet_it != pfJets.first.end(); jet_it++){	
	    //	      IsGoodJet=true;
	    //	      //first clean from eles and muons
	    //	      for(std::vector<susy::Electron*>::iterator ele_it = pfEles.begin();ele_it!=pfEles.end();ele_it++){
	    //	      if(isSameObject((*ele_it)->momentum,(*jet_it)->momentum,0.5)){IsGoodJet=false;break;}
	    //	      }
	    //	      for(std::vector<susy::Muon*>::iterator mu_it = Muons.begin();mu_it!=Muons.end();mu_it++){
	    //	      if(isSameObject((*mu_it)->momentum,(*jet_it)->momentum,0.5)){IsGoodJet=false;break;}
	    //	      }
	    //	      //now clean from the 2 pho objects
	    //	      if(IsGoodJet){
	    //	      if(!isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5) && !isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5)){
	    //	      JetIsolatedFromBothPhos=true;ndiPhoCands_JetReq++;break;
	    //	      }
	    //	      else{JetIsolatedFromBothPhos=false;}
	    //	      }
	    //	      }
	    //	      }
	    //	      if(JetIsolatedFromBothPhos==true)doJetReqFake=true;
	    //	      break;
	    //	      }
	    //	      else{
	    //	      if(isSameObject(PhoOne->caloPosition,(*fake_it2)->caloPosition,0.6)){
	    //	      FakesTooCloseDR=true;nFakesFailDR++;
	    //	      if(printLevel>0)cout <<"FakesFailDR!"<< "  Run: "<<event->runNumber<<"  Event: "<<event->eventNumber<<"\n";
	    //	      }
	    //	      if(tooClosePhi(PhoOne->caloPosition,(*fake_it2)->caloPosition,0.05)){
	    //	      FakesTooCloseDphi=true;nFakesFailDphi++;
	    //	      if(printLevel>0)cout <<"FakesFailDphi!"<< "  Run: "<<event->runNumber<<"  Event: "<<event->eventNumber<<"\n";
	    //	      }	     
	    //	      }
	    //	      }
	    //	      }
	    if(printLevel>0)cout<<"doJetReqFake: "<<doJetReq<<endl;
	    if(printLevel>0)cout<<"We are about to do fake algo"<<endl;
	    //if(!FakesTooCloseDR && !FakesTooCloseDphi && !FakePhoMetOverlap){
	    if(!PhosTooCloseDR && !PhosTooCloseDphi && !PhoMetOverlap){
	      if(printLevel>0)cout<<"Passes too close dr and dphi and fakephometoverlap"<<endl;
	      if(PhoOne->momentum.Et()>leadEtCut || PhoTwo->momentum.Et()>leadEtCut){
		if(printLevel>0)cout<<"Inside fake lead et cut"<<endl;
		RazrMr = GetRazrMr(PhoOne,PhoTwo);
		RazrR2 = GetRazrR2(PhoOne,PhoTwo,met);
		TVector3 vPos = (event->vertices[0]).position;
		TVector3 dirPhoOne=PhoOne->caloPosition - vPos,dirPhoTwo=PhoTwo->caloPosition - vPos;
		TVector3 pOne=dirPhoOne.Unit()*(PhoOne->MVAcorrMomentum).E(),pTwo=dirPhoTwo.Unit()*(PhoTwo->MVAcorrMomentum).E();
		TLorentzVector p4PhoOneVcorr(pOne.x(),pOne.y(),pOne.z(),(PhoOne->MVAcorrMomentum).E()),p4PhoTwoVcorr(pTwo.x(),pTwo.y(),pTwo.z(),(PhoTwo->MVAcorrMomentum).E());
		InvMass=InvariantMass(PhoOne->momentum,PhoTwo->momentum);
		float InvMassMVAcorr=InvariantMass(PhoOne->MVAcorrMomentum,PhoTwo->MVAcorrMomentum);
		float InvMassMVAcorrVertexCorr=InvariantMass(p4PhoOneVcorr,p4PhoTwoVcorr);
		InvMass=InvMassMVAcorrVertexCorr;
		diEMpt=GetDiEmPt(PhoOne,PhoTwo);
		float diJETpt=0.;
		//try invariant mass cut to get rid of crap in tail
		if(InvMass>-9999.){
		  //find out how many isolated jets
		  ClosestDR=999.;
		  ClosestDPhi=999.;
		  JetCounter=0;
		  passJetMETcut=true;
		  //use pfJets.first here because we want all jets
		  for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.first.begin(); jet_it != pfJets.first.end(); jet_it++){	
		    //to be counted as a jet, it must be dr>0.5 separated from the 2 objects, plus pfEles and pfMuons	
		    IsGoodJet=true;
		    //		    for(std::vector<susy::Photon*>::iterator eg_it = pho_Cands.begin();eg_it!=pho_Cands.end();eg_it++){
		    //		      if(isSameObject((*eg_it)->caloPosition,(*jet_it)->momentum,0.5)){IsGoodJet=false;}
		    //		    }
		    //		    for(std::vector<susy::Photon*>::iterator f_it = pho_Cands.begin();f_it!=fake_Cands.end();f_it++){
		    //		      if(isSameObject((*f_it)->caloPosition,(*jet_it)->momentum,0.5)){IsGoodJet=false;}
		    //		    }
		    bool check=true;
		    if(isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5)){IsGoodJet=false;}		  
		    if(isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5)){IsGoodJet=false;}
		    check=IsGoodJet;
		    for(std::vector<susy::Electron*>::iterator ele_it = pfEles.begin();ele_it!=pfEles.end();ele_it++){
		      if(isSameObject((*ele_it)->momentum,(*jet_it)->momentum,0.5)){IsGoodJet=false;}
		    }
		    if(check && !IsGoodJet) nCnt[11]++; //number of jets that fail ele cleaning from e/g
		    check=IsGoodJet;
 		    for(std::vector<susy::Muon*>::iterator mu_it = Muons.begin();mu_it!=Muons.end();mu_it++){
		      if(isSameObject((*mu_it)->momentum,(*jet_it)->momentum,0.5)){IsGoodJet=false;}
		    }
		    if(check && !IsGoodJet) nCnt[12]++; //number of jets that fail muon cleaning from e/g
		    if(IsGoodJet){
		      JetCounter++;
		      if(JetCounter==1)invmassJet1=(*jet_it);if(JetCounter==2)invmassJet2=(*jet_it);
		      tempClosestDR = ( (getDR(PhoOne->caloPosition,(*jet_it)->momentum) < getDR(PhoTwo->caloPosition,(*jet_it)->momentum)) ? getDR(PhoOne->caloPosition,(*jet_it)->momentum) : getDR(PhoTwo->caloPosition,(*jet_it)->momentum) );
		      if(tempClosestDR<ClosestDR)ClosestDR=tempClosestDR;
		      tempClosestDPhi = ( (fabs(getDphi(PhoOne->caloPosition.Phi(),(*jet_it)->momentum.Phi())) < fabs(getDphi(PhoTwo->caloPosition.Phi(),(*jet_it)->momentum.Phi()))) ? fabs(getDphi(PhoOne->caloPosition.Phi(),(*jet_it)->momentum.Phi())) : fabs(getDphi(PhoTwo->caloPosition.Phi(),(*jet_it)->momentum.Phi())) );
		      if(tempClosestDPhi<ClosestDPhi){ClosestDPhi=tempClosestDPhi;dphiJet=(*jet_it);has_dphiJet=1;}
		      if(getDphi((*jet_it)->momentum.Phi(),met->mEt.Phi())<minJetMETdphi)passJetMETcut=false;
		    }
		  }
		  //old way of counting jets - only require jet to be isolated from PhoOne and PhoTwo
		  //		      for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.begin(); jet_it != pfJets.end(); jet_it++){	
		  //		      if(!isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5) && !isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5)){
		  //		      JetCounter++;
		  //		      }
		  //		      }	
		  //if(!passJetMETcut){nFailJetMETcut_ff++;continue;}
		  //require seed time within +-3ns for no jet requirement case
		  //if(fabs(PhoOne->seedTime)<3. && fabs(PhoTwo->seedTime)<3.){
		  if(1/* && !(event->runNumber==194115 && event->eventNumber==385483032) &&
			 !(event->runNumber==198955 && event->eventNumber==355810580) &&
			 !(event->runNumber==198969 && event->eventNumber==1380470230) &&
			 !(event->runNumber==201278 && event->eventNumber==412449998) &&
			 !isgg && !iseg && !isee*/
		     ){//overlap with gg/ee/eg
		    if(isgg || isee || iseg){
		      if(isgg)cout<<"gg and ff event! ggPTs:"<<ggPTs.first<<" , "<<ggPTs.second<<endl;
		      if(isee)cout<<"ee and ff event! eePTs:"<<eePTs.first<<" , "<<eePTs.second<<endl;
		      if(iseg)cout<<"eg and ff event! egPTs:"<<egPTs.first<<" , "<<egPTs.second<<endl;
		      cout<<"                 ffPTs:"<<PhoOne->momentum.Pt()<<" , "<<PhoTwo->momentum.Pt()<<"   Run:"<<event->runNumber<<"  Event:"<<event->eventNumber<<endl;
		    }
		    if(printLevel>0)cout<<"Inside ff"<<endl;
		    nff++;isff=true;
		    if(HasDiJetPt){
		      h_ffPhoJetMatchFlavor_alg->Fill(fabs(DiJetPtJet1->algDefFlavour));h_ffPhoJetMatchFlavor_alg->Fill(fabs(DiJetPtJet2->algDefFlavour));
		      h_ffPhoJetMatchFlavor_phy->Fill(fabs(DiJetPtJet1->phyDefFlavour));h_ffPhoJetMatchFlavor_phy->Fill(fabs(DiJetPtJet2->phyDefFlavour));
		      h_ffMETvsPhoJetMatchFlavorLead->Fill(fabs(DiJetPtJet1->algDefFlavour),met->met());
		      h_ffMETvsPhoJetMatchFlavorTrail->Fill(fabs(DiJetPtJet2->algDefFlavour),met->met());
		    }
		    h_ffMHT->Fill(MHT.Pt(),PUweight);
		    h_ffMetSig->Fill(met->significance,PUweight);
		    h_ffMetSigVsSumEt->Fill(met->sumEt,met->significance,PUweight);
		    h_ffReduMet->Fill(ReducedMet,PUweight);
		    h_ffReduMetVsDiEmPt->Fill(diEMpt,ReducedMet,PUweight);
		    if(JetCounter==0)h_ffReduMetVsDiEmPt_0Jet->Fill(diEMpt,ReducedMet,PUweight);
		    if(JetCounter==1)h_ffReduMetVsDiEmPt_1Jet->Fill(diEMpt,ReducedMet,PUweight);
		    if(JetCounter>1)h_ffReduMetVsDiEmPt_2Jet->Fill(diEMpt,ReducedMet,PUweight);
		    h_ptHat_ff->Fill(ptHat);
		    h_met_vs_ptHat_ff->Fill(ptHat,met->met());
		    //check sihih for matrix method
		    if(PhoOne->sigmaIetaIeta<maxSihih)nff_matrix_lead++;
		    if(PhoTwo->sigmaIetaIeta<maxSihih)nff_matrix_trail++;
		    ffnumVert[NVertex]++;
		    h_nJets_ff->Fill(JetCounter);
		    h_ClosestDR_ff->Fill(ClosestDR);
		    for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.first.begin(); jet_it != pfJets.first.end(); jet_it++){
		      h_DRfromJets_ff->Fill(getDR(PhoOne->caloPosition, (*jet_it)->momentum),getDR(PhoTwo->caloPosition, (*jet_it)->momentum));
		    }
		    h_ClosestDPhi_ff->Fill(ClosestDPhi);
		    ffRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
		    h_SeedTimeVsEta_ff->Fill(PhoOne->caloPosition.Eta(),PhoOne->seedTime);
		    h_SeedTimeVsEta_ff->Fill(PhoTwo->caloPosition.Eta(),PhoTwo->seedTime);
		    h_MetVsSeedTime_ff->Fill(PhoOne->seedTime, met->met());
		    h_MetVsSeedTime_ff->Fill(PhoTwo->seedTime, met->met());
		    h_NVertexVsMET_ff->Fill(met->met(),NVertex);
		    h_ffPerInstLumi->Fill(event->avgInsRecLumi);
		    if(isJetFail){bool go2=true;
		      for(std::vector<susy::PFJet*>::iterator jet_it = pfJetsFail.begin(); jet_it != pfJetsFail.end(); jet_it++){	
			if( isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5) || isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5) ) go2=false;
		      }
		      if(go2){nCnt[13]++;h_ffMet_JetFail->Fill(met->met());h_MET_JetFail->Fill(met->met());}
		    }
		    // Di-Jet Pt
		    //Try to match pho objects to jets
		    //use pfJets.second here because we want L1FastL2L3/L2L3 for e/g/f matching
		    MatchPhosToJets(PhoOne,PhoTwo,pfJets.second,DiJetPtJet1,DiJetPtJet2,HasDiJetPt,0.3);
		    metReweightDiEMPt=0.,metReweightDiJetPt=0.,metReweightDiJetPtError=0.;
		    metReweightDiEMPt=GetMetReweight(diEMpt,"ff",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first*PUweight;
		    if(HasDiJetPt){
		      diJETpt = GetDiJetPt(DiJetPtJet1,DiJetPtJet2);
		      h_ffDiJetPt->Fill(diJETpt);
		      h_ffDiJetPtOverDiEMPtVsDiEMPt->Fill(diEMpt,diJETpt/diEMpt);
		      metReweightDiJetPt=GetMetReweight(diJETpt,"ff",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first*PUweight;
		      metReweightDiJetPtError=GetMetReweight(diJETpt,"ff",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).second*PUweight;
		      h_PfJet_phoMatched_ff_pT->Fill(DiJetPtJet1->momentum.Pt());h_PfJet_phoMatched_ff_pT->Fill(DiJetPtJet2->momentum.Pt());
		      h_PfJet_phoMatched_ff_eta->Fill(DiJetPtJet1->momentum.Eta());h_PfJet_phoMatched_ff_phi->Fill(DiJetPtJet1->momentum.Phi());
		      h_PfJet_phoMatched_ff_eta->Fill(DiJetPtJet2->momentum.Eta());h_PfJet_phoMatched_ff_phi->Fill(DiJetPtJet2->momentum.Phi());
		    }
		    else{
		      diJETpt=diEMpt;
		      h_ffDiJetPt->Fill(diEMpt);
		      metReweightDiJetPt=GetMetReweight(diEMpt,"ff",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first*PUweight;
		      metReweightDiJetPtError=GetMetReweight(diEMpt,"ff",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).second*PUweight;
		    }
		    //cout<<"HasDiJetPt: " << HasDiJetPt<<"  DiEMPt: "<<diEMpt<<"  DiJETpt: "<<diJETpt<<endl;
		    h_r9_ff->Fill(PhoOne->r9);h_r9_ff->Fill(PhoTwo->r9);
		    h_ffPt->Fill(PhoOne->momentum.Pt());h_ffPt->Fill(PhoTwo->momentum.Pt());
		    h_ffPtLead->Fill(PhoOne->momentum.Pt());h_ffPtTrail->Fill(PhoTwo->momentum.Pt());
		    h_ffEta->Fill(PhoOne->caloPosition.Eta());h_ffPhi->Fill(PhoOne->caloPosition.Phi());
		    h_ffEta->Fill(PhoTwo->caloPosition.Eta());h_ffPhi->Fill(PhoTwo->caloPosition.Phi());
		    h_sumEt_ff->Fill(met->sumEt);
		    h_ffMet->Fill(met->met(),PUweight);
		    bool trigs[4]={0,0,0,0};
		    if(PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_CaloId10_Iso50_v")){trigs[0]=1;
		      h_ffMet_CaloIso_CaloIso->Fill(met->met(),PUweight);h_ffMet_CaloIso_CaloIso_reweightJet_binned->Fill(met->met(),metReweightDiJetPt);}
		    if(PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_R9Id85_v")){trigs[1]=1;
		      h_ffMet_CaloIso_R9Id->Fill(met->met(),PUweight);h_ffMet_CaloIso_R9Id_reweightJet_binned->Fill(met->met(),metReweightDiJetPt);}
		    if(PassTrigger("HLT_Photon36_R9Id85_Photon22_CaloId10_Iso50_v")){trigs[2]=1;
		      h_ffMet_R9Id_CaloIso->Fill(met->met(),PUweight);h_ffMet_R9Id_CaloIso_reweightJet_binned->Fill(met->met(),metReweightDiJetPt);}
		    if(PassTrigger("HLT_Photon36_R9Id85_Photon22_R9Id85_v")){trigs[3]=1;
		      h_ffMet_R9Id_R9Id->Fill(met->met(),PUweight);h_ffMet_R9Id_R9Id_reweightJet_binned->Fill(met->met(),metReweightDiJetPt);}
		    //what to do here to keep track of triggers fired (or not)?
		    // int ffTriggers[4][4][4][4];
		    if(trigs[0])numFFsignalTrigger++;
		    if(trigs[0] && !trigs[1] && !trigs[2] && !trigs[3])numFFsignalTriggerOnly++;
		    for(int i=0;i<4;i++){
		      for(int j=0;j<4;j++){
			if(i<=j && trigs[i] && trigs[j]){h_ffTriggers->Fill(i+1,j+1);}
		      }
		    }
		    if( trigs[0] && !trigs[1] && !trigs[2] && !trigs[3]){
		      h_ffTriggersOnly->Fill(1,1);h_ffMet_CaloIso_CaloIso_Only->Fill(met->met(),PUweight);
		      h_ffSigIetaIeta_1v2_vs_Met_CaloIso_CaloIso_Only->Fill(PhoOne->sigmaIetaIeta,PhoTwo->sigmaIetaIeta,met->met());
		      h_ffMETdPhi_CaloIso_CaloIso_Only->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_CaloIso_CaloIso_Only->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_vs_Met_CaloIso_CaloIso_Only->Fill(met->met(),getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_vs_Met_CaloIso_CaloIso_Only->Fill(met->met(),getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		      if(has_dphiJet){h_ff_JetMETdPhi_CaloIso_CaloIso_Only->Fill(getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));		    
			h_ff_JetMETdPhi_vs_Met_CaloIso_CaloIso_Only->Fill(met->met(),getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));}
		      h_ffSigIetaIeta_vs_Met_lead_CaloIso_CaloIso_Only->Fill(met->met(),PhoOne->sigmaIetaIeta);
		      h_ffSigIetaIeta_vs_Met_trail_CaloIso_CaloIso_Only->Fill(met->met(),PhoTwo->sigmaIetaIeta);
		    }
		    if(!trigs[0] &&  trigs[1] && !trigs[2] && !trigs[3]){
		      h_ffTriggersOnly->Fill(2,2);h_ffMet_CaloIso_R9Id_Only->Fill(met->met(),PUweight);
		      h_ffSigIetaIeta_1v2_vs_Met_CaloIso_R9Id_Only->Fill(PhoOne->sigmaIetaIeta,PhoTwo->sigmaIetaIeta,met->met());
		      h_ffMETdPhi_CaloIso_R9Id_Only->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_CaloIso_R9Id_Only->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_vs_Met_CaloIso_R9Id_Only->Fill(met->met(),getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_vs_Met_CaloIso_R9Id_Only->Fill(met->met(),getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		      if(has_dphiJet){h_ff_JetMETdPhi_CaloIso_R9Id_Only->Fill(getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));		    
			h_ff_JetMETdPhi_vs_Met_CaloIso_R9Id_Only->Fill(met->met(),getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));}
		      h_ffSigIetaIeta_vs_Met_lead_CaloIso_R9Id_Only->Fill(met->met(),PhoOne->sigmaIetaIeta);
		      h_ffSigIetaIeta_vs_Met_trail_CaloIso_R9Id_Only->Fill(met->met(),PhoTwo->sigmaIetaIeta);
		    }
		    if(!trigs[0] && !trigs[1] &&  trigs[2] && !trigs[3]){
		      h_ffTriggersOnly->Fill(3,3);h_ffMet_R9Id_CaloIso_Only->Fill(met->met(),PUweight);
		      h_ffSigIetaIeta_1v2_vs_Met_R9Id_CaloIso_Only->Fill(PhoOne->sigmaIetaIeta,PhoTwo->sigmaIetaIeta,met->met());
		      h_ffMETdPhi_R9Id_CaloIso_Only->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_R9Id_CaloIso_Only->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_vs_Met_R9Id_CaloIso_Only->Fill(met->met(),getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_vs_Met_R9Id_CaloIso_Only->Fill(met->met(),getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		      if(has_dphiJet){h_ff_JetMETdPhi_R9Id_CaloIso_Only->Fill(getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));		    
			h_ff_JetMETdPhi_vs_Met_R9Id_CaloIso_Only->Fill(met->met(),getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));}
		      h_ffSigIetaIeta_vs_Met_lead_R9Id_CaloIso_Only->Fill(met->met(),PhoOne->sigmaIetaIeta);
		      h_ffSigIetaIeta_vs_Met_trail_R9Id_CaloIso_Only->Fill(met->met(),PhoTwo->sigmaIetaIeta);
		    }
		    if(!trigs[0] && !trigs[1] && !trigs[2] &&  trigs[3]){
		      h_ffTriggersOnly->Fill(4,4);h_ffMet_R9Id_R9Id_Only->Fill(met->met(),PUweight);
		      h_ffSigIetaIeta_1v2_vs_Met_R9Id_R9Id_Only->Fill(PhoOne->sigmaIetaIeta,PhoTwo->sigmaIetaIeta,met->met());
		      h_ffMETdPhi_R9Id_R9Id_Only->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_R9Id_R9Id_Only->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_vs_Met_R9Id_R9Id_Only->Fill(met->met(),getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_vs_Met_R9Id_R9Id_Only->Fill(met->met(),getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		      if(has_dphiJet){h_ff_JetMETdPhi_R9Id_R9Id_Only->Fill(getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));		    
			h_ff_JetMETdPhi_vs_Met_R9Id_R9Id_Only->Fill(met->met(),getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));}
		      h_ffSigIetaIeta_vs_Met_lead_R9Id_R9Id_Only->Fill(met->met(),PhoOne->sigmaIetaIeta);
		      h_ffSigIetaIeta_vs_Met_trail_R9Id_R9Id_Only->Fill(met->met(),PhoTwo->sigmaIetaIeta);
		    }
		    if(has_dphiJet){h_ff_JetMETdPhi->Fill(getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));		    
		      h_ff_JetMETdPhi_vs_Met->Fill(met->met(),getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));}
		    h_ffSigIetaIeta_1v2_vs_Met->Fill(PhoOne->sigmaIetaIeta,PhoTwo->sigmaIetaIeta,met->met());
		    h_ffSigIetaIeta_vs_Met_lead->Fill(met->met(),PhoOne->sigmaIetaIeta);
		    h_ffSigIetaIeta_vs_Met_trail->Fill(met->met(),PhoTwo->sigmaIetaIeta);
		    h_ffType1CorrMet->Fill(Type1CorrMet->met(),PUweight);
		    float CHpuCorrPhoOne=0.,CHpuCorrPhoTwo=0.,NHpuCorrPhoOne=0.,NHpuCorrPhoTwo=0.,PHpuCorrPhoOne=0.,PHpuCorrPhoTwo=0.;
		    if(fabs(PhoOne->caloPosition.Eta())<1.0){CHpuCorrPhoOne=0.012;NHpuCorrPhoOne=0.03;PHpuCorrPhoOne=0.148;}
		    else {CHpuCorrPhoOne=0.010;NHpuCorrPhoOne=0.057;PHpuCorrPhoOne=0.130;}
		    if(fabs(PhoTwo->caloPosition.Eta())<1.0){CHpuCorrPhoTwo=0.012;NHpuCorrPhoTwo=0.03;PHpuCorrPhoTwo=0.148;}
		    else {CHpuCorrPhoTwo=0.010;NHpuCorrPhoTwo=0.057;PHpuCorrPhoTwo=0.130;}
		    h_ChargedHadronIso_ff->Fill(PhoOne->chargedHadronIso-CHpuCorrPhoOne*Rho25);
		    h_ChargedHadronIso_ff->Fill(PhoTwo->chargedHadronIso-CHpuCorrPhoTwo*Rho25);
		    h_NeutralHadronIso_ff->Fill(PhoOne->neutralHadronIso-PhoOne->momentum.Et()*0.04-NHpuCorrPhoOne*Rho25);
		    h_NeutralHadronIso_ff->Fill(PhoTwo->neutralHadronIso-PhoTwo->momentum.Et()*0.04-NHpuCorrPhoTwo*Rho25);
		    h_PhotonIso_ff->Fill(PhoOne->photonIso-PhoOne->momentum.Et()*0.005-PHpuCorrPhoOne*Rho25);
		    h_PhotonIso_ff->Fill(PhoTwo->photonIso-PhoTwo->momentum.Et()*0.005-PHpuCorrPhoTwo*Rho25);
		    h_ff_1v2_ChargedHadronIso->Fill(PhoOne->chargedHadronIso-CHpuCorrPhoOne*Rho25,PhoTwo->chargedHadronIso-CHpuCorrPhoTwo*Rho25);
		    h_ff_1v2_NeutralHadronIso->Fill(PhoOne->neutralHadronIso-PhoOne->momentum.Et()*0.04-NHpuCorrPhoOne*Rho25,PhoTwo->neutralHadronIso-PhoTwo->momentum.Et()*0.04-NHpuCorrPhoTwo*Rho25);
		    h_ff_1v2_PhotonIso->Fill(PhoOne->photonIso-PhoOne->momentum.Et()*0.005-PHpuCorrPhoOne*Rho25,PhoTwo->photonIso-PhoTwo->momentum.Et()*0.005-PHpuCorrPhoTwo*Rho25);
		    h_ff_1v2_SigIetaIeta->Fill(PhoOne->sigmaIetaIeta,PhoTwo->sigmaIetaIeta);
		    for(int i=0;i<50;i++){
		      if((PhoOne->ecalRecHitSumEtConeDR03+PhoOne->hcalTowerSumEtConeDR03()+PhoOne->trkSumPtHollowConeDR03-PUCorr_ECAL*Rho25-PUCorr_HCAL*Rho25-PUCorr_TRACK*Rho25)<(float)(i+1) 
			 && (PhoTwo->ecalRecHitSumEtConeDR03+PhoTwo->hcalTowerSumEtConeDR03()+PhoTwo->trkSumPtHollowConeDR03-PUCorr_ECAL*Rho25-PUCorr_HCAL*Rho25-PUCorr_TRACK*Rho25)<(float)(i+1)){
		      
			h_ffMetChi2[i]->Fill(met->met());
		      }
		      if( ((fabs(PhoOne->caloPosition.Eta())<1.0 && (PhoOne->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			   || (fabs(PhoOne->caloPosition.Eta())>1.0 && (PhoOne->chargedHadronIso-0.010*Rho25)<(float)(i+1)))
			  && ((fabs(PhoTwo->caloPosition.Eta())<1.0 && (PhoTwo->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			      || (fabs(PhoTwo->caloPosition.Eta())>1.0 && (PhoTwo->chargedHadronIso-0.010*Rho25)<(float)(i+1))) ){
			h_ffMetChi2PF[i]->Fill(met->met());
		      }
		    }
		    h_ffMet_reweight_binned->Fill(met->met(),metReweightDiEMPt);		  
		    h_ffDiEMPt_reweight_binned->Fill(diEMpt,metReweightDiEMPt);
		    //h_ffMet_reweightNVertex->Fill(met->met(),ffNVweight[NVertex-1]);
		  
		    h_ffMet_reweightJet_binned->Fill(met->met(),metReweightDiJetPt);
		    h_ffMHT_reweight->Fill(MHT.Pt(),metReweightDiJetPt);
		    h_DiJetPtWeights_ff->Fill(metReweightDiJetPt);
		    h_ffDiJetPt_reweight_binned->Fill(diJETpt,metReweightDiJetPt);
		    if(JetCounter==0)h_ffDiJetPt_reweight_binned_0Jet->Fill(diJETpt,metReweightDiJetPt);
		    else if(JetCounter==1)h_ffDiJetPt_reweight_binned_1Jet->Fill(diJETpt,metReweightDiJetPt);
		    else if(JetCounter>=2)h_ffDiJetPt_reweight_binned_2Jet->Fill(diJETpt,metReweightDiJetPt);
		    if(NVertex<10)h_ffMet_NV0_10->Fill(met->met(),metReweightDiJetPt);
		    else if(NVertex>=10 && NVertex<15)h_ffMet_NV10_15->Fill(met->met(),metReweightDiJetPt);
		    else if(NVertex>=15)h_ffMet_NV15up->Fill(met->met(),metReweightDiJetPt);
		    if(!HasDiJetPt){h_ffMet_NoJetMatch->Fill(met->met());}
		    toys->cd();
		    for(int i=0;i<1000;i++){
		      ffMet_reweight_binned_toy[i]->Fill(met->met(),rando.Gaus(metReweightDiJetPt,metReweightDiJetPtError));
		      //ffMet_reweight_binned_toy[i]->Fill(met->met(),rando.Poisson(metReweightDiJetPt));
		    }
		    fout->cd();
		    h_ffSigIetaIeta->Fill(PhoOne->sigmaIetaIeta);h_ffSigIetaIeta->Fill(PhoTwo->sigmaIetaIeta);
		    h_ffDiEMPt->Fill(diEMpt);
		    if(InvMass<40.)h_ffDiEMPtInvMassBelow40->Fill(diEMpt);
		    else h_ffDiEMPtInvMassAbove40->Fill(diEMpt);
		    h_ffInvarMass->Fill(InvMass);	
		    h_ffPtOverInvarMassLead->Fill(PhoOne->momentum.Pt()/InvMass,PUweight);
		    h_ffPtOverInvarMassTrail->Fill(PhoTwo->momentum.Pt()/InvMass,PUweight);
		    if(met->met()>30){h_ffInvarMassMET30->Fill(InvMass);h_ffInvarMassMET30MVAcorr->Fill(InvMassMVAcorrVertexCorr,PUweight);}
		    h_rho_ff->Fill(Rho);h_NVertex_ff->Fill(NVertex);
		    h_EcalIsoDR03RhoCorr_ff->Fill(PhoOne->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25);h_EcalIsoDR03RhoCorr_ff->Fill(PhoTwo->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25);
		    h_HcalIsoDR03RhoCorr_ff->Fill(PhoOne->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25);h_HcalIsoDR03RhoCorr_ff->Fill(PhoTwo->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25);
		    h_TrackIsoDR03RhoCorr_ff->Fill(PhoOne->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);h_TrackIsoDR03RhoCorr_ff->Fill(PhoTwo->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);
		    h_CombIsoDR03RhoCorr_ff->Fill(PhoOne->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25+PhoOne->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25+PhoOne->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);
		    h_CombIsoDR03RhoCorr_ff->Fill(PhoTwo->ecalRecHitSumEtConeDR03-PUCorr_ECAL*Rho25+PhoTwo->hcalTowerSumEtConeDR03()-PUCorr_HCAL*Rho25+PhoTwo->trkSumPtHollowConeDR03-PUCorr_TRACK*Rho25);
		    h_DiEMPtVsMet_ff->Fill(met->met(),diEMpt);
		    if(HasDiJetPt){
		      h_ffscalarDiJetPt_vs_DiJetPt->Fill(diJETpt,PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());
		      if(JetCounter==0){h_ffDiJetPt_0Jet->Fill(diJETpt);h_ffDiEMPt_0Jet->Fill(diEMpt);h_ffDiJetPt_scalar_0Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		      else if(JetCounter==1){h_ffDiJetPt_1Jet->Fill(diJETpt);h_ffDiEMPt_1Jet->Fill(diEMpt);h_ffDiJetPt_scalar_1Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		      else if(JetCounter>=2){h_ffDiJetPt_2Jet->Fill(diJETpt);h_ffDiEMPt_2Jet->Fill(diEMpt);h_ffDiJetPt_scalar_2Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		      if(JetCounter>2){h_ffDiJetPt_MoreThan2Jets->Fill(diJETpt);}
		      h_DiJetPtVsMet_ff->Fill(met->met(),diJETpt);
		    }
		    else{
		      h_ffscalarDiJetPt_vs_DiJetPt->Fill(diEMpt,PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());
		      if(JetCounter==0){h_ffDiJetPt_0Jet->Fill(diEMpt);h_ffDiEMPt_0Jet->Fill(diEMpt);h_ffDiJetPt_scalar_0Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		      else if(JetCounter==1){h_ffDiJetPt_1Jet->Fill(diEMpt);h_ffDiEMPt_1Jet->Fill(diEMpt);h_ffDiJetPt_scalar_1Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		      else if(JetCounter>=2){h_ffDiJetPt_2Jet->Fill(diEMpt);h_ffDiEMPt_2Jet->Fill(diEMpt);h_ffDiJetPt_scalar_2Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		      if(JetCounter>2){h_ffDiJetPt_MoreThan2Jets->Fill(diEMpt);}
		      h_DiJetPtVsMet_ff->Fill(met->met(),diEMpt);
		    }
		    h_ffDiJetPt_scalar->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());
		    h_ffMR->Fill(RazrMr);
		    h_ffR2->Fill(RazrR2);
		    h_ffR2vsMR->Fill(RazrMr,RazrR2);
		    h_ffMR_reweight_binned->Fill(RazrMr,GetMetReweight(diEMpt,"ff",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,-1).first);
		    h_ffR2_reweight_binned->Fill(RazrR2,GetMetReweight(diEMpt,"ff",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,-1).first);
		    h_ffR2vsMR_reweight_binned->Fill(RazrMr,RazrR2,GetMetReweight(diEMpt,"ff",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,-1).first);
		    dPhi = std::fabs(TVector2::Phi_mpi_pi(PhoOne->caloPosition.Phi() - PhoTwo->caloPosition.Phi()));
		    if(HasDiJetPt) alphaT = GetAlphaT(DiJetPtJet1->momentum, DiJetPtJet2->momentum);
		    else alphaT = GetAlphaT(PhoOne->momentum, PhoTwo->momentum);
		    if(HasDiJetPt) PhotonLessHt=GetPhotonLessHt(met->sumEt,DiJetPtJet1->momentum,DiJetPtJet2->momentum);
		    else PhotonLessHt=GetPhotonLessHt(met->sumEt,PhoOne->momentum,PhoTwo->momentum);
		    h_ffdPhi->Fill(dPhi);
		    h_ffdR->Fill(getDR(PhoOne->momentum,PhoTwo->momentum));
		    h_ffAlphaT->Fill(alphaT);
		    if(JetCounter==0)h_ffAlphaT_0Jet->Fill(alphaT);
		    h_ffPhotonLessHt->Fill(PhotonLessHt);
		    h_ffPhotonLessHtVsMET->Fill(met->met(),PhotonLessHt);
		    h_ffMETdPhiLead->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		    h_ffMETdPhiTrail->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		    h_ffMETdPhi->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		    h_ffMETdPhi->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		    h_ffMETdPhi_vs_Met->Fill(met->met(),getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		    h_ffMETdPhi_vs_Met->Fill(met->met(),getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		    if(JetCounter==0){h_ffMETdPhi_0Jet->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_0Jet->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));}
		    else if(JetCounter==1){h_ffMETdPhi_1Jet->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_1Jet->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));}
		    else if(JetCounter>1){h_ffMETdPhi_2Jet->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		      h_ffMETdPhi_2Jet->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));}
		    h_ffSystem_METdPhi->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi()));
		    h_DiEMPtVsMetDphi_ff->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		    h_DiEMPtVsMetDphi_ff->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		    h_DiEMPtVsMetDphiLead_ff->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		    h_DiEMPtVsMetDphiTrail_ff->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),diEMpt);
		    h_MetVsMetDphi_ff->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),met->met());
		    h_MetVsMetDphi_ff->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),met->met());
		    h_MetVsMetDphiLead_ff->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),met->met());
		    h_MetVsMetDphiTrail_ff->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),met->met());
		    float MVAweight=0;
		    if(HasDiJetPt)MVAweight=metReweightDiJetPt;
		    else MVAweight=metReweightDiEMPt;	
		    if (FF)
		      {
			if(FFtrain){
			  cout<<"ffcounter"<<ffMVAcounter<<" ";
			  if (!met->sumEt)
			    std::cout << "0 ";
			  else
			    std::cout << met->sumEt << " ";
			  if (!dPhi)
			    std::cout << "0 ";
			  else
			    std::cout << dPhi << " ";
			  if (!PhoOne)
			    std::cout << "0 ";
			  else if (!met->mEt.Phi())
			    std::cout << "0 ";
			  else if (!getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()))
			    std::cout << "0 ";
			  else
			    std::cout << getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()) << " ";
			  if (!PhoTwo)
			    std::cout << "0 ";
			  else if (!getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()))
			    std::cout << "0 ";
			  else
			    std::cout << getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()) << " ";
			  if(!PhoOne || !PhoTwo)
			    std::cout << "0 ";
			  else if(!met->mEt.Phi())
			    std::cout << "0 ";
			  else if (!getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi()))
			    std::cout << "0 ";
			  else
			    std::cout << getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi()) << " ";
			  /*   if (!alphaT)
			       std::cout << "0 ";
			       else
			       std::cout << alphaT << " ";*/
			  if (!PhotonLessHt)
			    std::cout << "0 ";
			  else
			    std::cout << PhotonLessHt << " ";	  
			  if (!diEMpt)
			    std::cout << "0 ";
			  else
			    std::cout << diEMpt << " ";
			  if (!InvMass)
			    std::cout << "0 ";
			  else
			    std::cout << InvMass << " ";
			  if (!met->met())
			    std::cout << "0 ";
			  else
			    std::cout << met->met() << " ";
			  if (!RazrMr)
			    std::cout << "0 ";
			  else
			    std::cout << RazrMr << " ";
			  if(!MVAweight)
			    std::cout << "0 " <<endl;
			  else
			    std::cout << MVAweight << endl;
			}
		      
			if(ffMVAcounter==9)ffMVAcounter=0;
			else ffMVAcounter++;
			varsumEt = met->sumEt;
			vardPhi = dPhi;
			varMETdPhiLead = getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi());
			varMETdPhiTrail =  getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi());
			varSystemMETdPhi = getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi());
			//varAlphaT = alphaT;
			varPhotonLessHT = PhotonLessHt;
			varInvarMass = InvMass;
			varMet = met->met();
			varMR = RazrMr;

			/*   if (Use["Likelihood"   ])   ffhistLk     ->Fill( reader->EvaluateMVA( "Likelihood method"    ) );
			     if (Use["LikelihoodD"  ])   ffhistLkD    ->Fill( reader->EvaluateMVA( "LikelihoodD method"   ) );
			     if (Use["LikelihoodPCA"])   ffhistLkPCA  ->Fill( reader->EvaluateMVA( "LikelihoodPCA method" ) );
			     if (Use["LikelihoodKDE"])   ffhistLkKDE  ->Fill( reader->EvaluateMVA( "LikelihoodKDE method" ) );
			     if (Use["LikelihoodMIX"])   ffhistLkMIX  ->Fill( reader->EvaluateMVA( "LikelihoodMIX method" ) );
			     if (Use["PDERS"        ])   ffhistPD     ->Fill( reader->EvaluateMVA( "PDERS method"         ) );
			     if (Use["PDERSD"       ])   ffhistPDD    ->Fill( reader->EvaluateMVA( "PDERSD method"        ) );
			     if (Use["PDERSPCA"     ])   ffhistPDPCA  ->Fill( reader->EvaluateMVA( "PDERSPCA method"      ) );
			     if (Use["KNN"          ])   ffhistKNN    ->Fill( reader->EvaluateMVA( "KNN method"           ) );
			     if (Use["HMatrix"      ])   ffhistHm     ->Fill( reader->EvaluateMVA( "HMatrix method"       ) );
			     if (Use["Fisher"       ])   ffhistFi     ->Fill( reader->EvaluateMVA( "Fisher method"        ) );
			     if (Use["FisherG"      ])   ffhistFiG    ->Fill( reader->EvaluateMVA( "FisherG method"       ) );
			     if (Use["BoostedFisher"])   ffhistFiB    ->Fill( reader->EvaluateMVA( "BoostedFisher method" ) );
			     if (Use["MLP"          ])   ffhistNn     ->Fill( reader->EvaluateMVA( "MLP method"           ) );
			     if (Use["MLPBFGS"      ])   ffhistNnbfgs ->Fill( reader->EvaluateMVA( "MLPBFGS method"       ) );
			     if (Use["MLPBNN"       ])   ffhistNnbnn  ->Fill( reader->EvaluateMVA( "MLPBNN method"        ) );
			     if (Use["CFMlpANN"     ])   ffhistNnC    ->Fill( reader->EvaluateMVA( "CFMlpANN method"      ) );
			     if (Use["TMlpANN"      ])   ffhistNnT    ->Fill( reader->EvaluateMVA( "TMlpANN method"       ) );
			     if (Use["BDTD"         ])   ffhistBdtD   ->Fill( reader->EvaluateMVA( "BDTD method"          ) );
			     if (Use["BDTG"         ])   ffhistBdtG   ->Fill( reader->EvaluateMVA( "BDTG method"          ) );
			     if (Use["RuleFit"      ])   ffhistRf     ->Fill( reader->EvaluateMVA( "RuleFit method"       ) );
			     if (Use["SVM_Gauss"    ])   ffhistSVMG   ->Fill( reader->EvaluateMVA( "SVM_Gauss method"     ) );
			     if (Use["SVM_Poly"     ])   ffhistSVMP   ->Fill( reader->EvaluateMVA( "SVM_Poly method"      ) );
			     if (Use["SVM_Lin"      ])   ffhistSVML   ->Fill( reader->EvaluateMVA( "SVM_Lin method"       ) );
			     if (Use["FDA_MT"       ])   ffhistFDAMT  ->Fill( reader->EvaluateMVA( "FDA_MT method"        ) );
			     if (Use["FDA_GA"       ])   ffhistFDAGA  ->Fill( reader->EvaluateMVA( "FDA_GA method"        ) );
			     if (Use["Category"     ])   ffhistCat    ->Fill( reader->EvaluateMVA( "Category method"      ) );
			     if (Use["Plugin"       ])   ffhistPBdt   ->Fill( reader->EvaluateMVA( "P_BDT method"         ) );*/
			if (Use["LD"           ]){
			  ffhistLD->Fill( reader->EvaluateMVA( "LD method"            ) );
			  ffhistLD_rw->Fill( reader->EvaluateMVA( "LD method" ), MVAweight);
			}
			if (Use["BDT"          ]){   
			  ffhistBdt   ->Fill( reader->EvaluateMVA( "BDT method" ) );
			  ffhistBdt_rw->Fill( reader->EvaluateMVA( "BDT method" ), MVAweight);
			  ffMet_vs_BDT->Fill(reader->EvaluateMVA("BDT method"),met->met()); 
			}
			if (Use["SVM"          ]){  
			  ffhistSVM   ->Fill( reader->EvaluateMVA( "SVM method"           ) );
			  ffhistSVM_rw->Fill( reader->EvaluateMVA( "SVM method" ), MVAweight);
			}
		      }
		    if(ffMVAcounter!=1){
		      if(reader->EvaluateMVA("BDT method")){
			h_ffdPhi_BDT->Fill(dPhi/*,MVAweight*/);
			h_sumEt_ff_BDT->Fill(met->sumEt/*,MVAweight*/);
			h_ffMETdPhiLead_BDT->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
			h_ffMETdPhiTrail_BDT->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
			h_ffSystem_METdPhi_BDT->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi())/*,MVAweight*/);
			h_ffAlphaT_BDT->Fill(alphaT/*,MVAweight*/);
			h_ffPhotonLessHt_BDT->Fill(PhotonLessHt/*,MVAweight*/);
			h_ffInvarMass_BDT->Fill(InvMass/*,MVAweight*/);
			h_ffMet_BDT->Fill(met->met()/*,MVAweight*/);
			h_ffMR_BDT->Fill(RazrMr/*,MVAweight*/);
			h_ffdPhi_BDT_reweight->Fill(dPhi,MVAweight);
			h_sumEt_ff_BDT_reweight->Fill(met->sumEt,MVAweight);
			h_ffMETdPhiLead_BDT_reweight->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),MVAweight);
			h_ffMETdPhiTrail_BDT_reweight->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),MVAweight);
			h_ffSystem_METdPhi_BDT_reweight->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi()),MVAweight);
			h_ffAlphaT_BDT_reweight->Fill(alphaT,MVAweight);
			h_ffPhotonLessHt_BDT_reweight->Fill(PhotonLessHt,MVAweight);
			h_ffInvarMass_BDT_reweight->Fill(InvMass,MVAweight);
			h_ffMet_BDT_reweight->Fill(met->met(),MVAweight);
			h_ffMR_BDT_reweight->Fill(RazrMr,MVAweight);
			if(InvMass<86 || InvMass>96){
			  h_ffdPhi_BDT_NoZ->Fill(dPhi/*,MVAweight*/);
			  h_sumEt_ff_BDT_NoZ->Fill(met->sumEt/*,MVAweight*/);
			  h_ffMETdPhiLead_BDT_NoZ->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
			  h_ffMETdPhiTrail_BDT_NoZ->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
			  h_ffSystem_METdPhi_BDT_NoZ->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi())/*,MVAweight*/);
			  h_ffAlphaT_BDT_NoZ->Fill(alphaT/*,MVAweight*/);
			  h_ffPhotonLessHt_BDT_NoZ->Fill(PhotonLessHt/*,MVAweight*/);
			  h_ffInvarMass_BDT_NoZ->Fill(InvMass/*,MVAweight*/);
			  h_ffMet_BDT_NoZ->Fill(met->met()/*,MVAweight*/);
			  h_ffMR_BDT_NoZ->Fill(RazrMr/*,MVAweight*/);
			  h_ffdPhi_BDT_NoZ_reweight->Fill(dPhi,MVAweight);
			  h_sumEt_ff_BDT_NoZ_reweight->Fill(met->sumEt,MVAweight);
			  h_ffMETdPhiLead_BDT_NoZ_reweight->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),MVAweight);
			  h_ffMETdPhiTrail_BDT_NoZ_reweight->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),MVAweight);
			  h_ffSystem_METdPhi_BDT_NoZ_reweight->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi()),MVAweight);
			  h_ffAlphaT_BDT_NoZ_reweight->Fill(alphaT,MVAweight);
			  h_ffPhotonLessHt_BDT_NoZ_reweight->Fill(PhotonLessHt,MVAweight);
			  h_ffInvarMass_BDT_NoZ_reweight->Fill(InvMass,MVAweight);
			  h_ffMet_BDT_NoZ_reweight->Fill(met->met(),MVAweight);
			  h_ffMR_BDT_NoZ_reweight->Fill(RazrMr,MVAweight);
			}
		      } 
		      if(reader->EvaluateMVA("BDT method")<-.45){
			h_ffdPhi_BDTltMinusPoint45->Fill(dPhi/*,MVAweight*/);
			h_sumEt_ff_BDTltMinusPoint45->Fill(met->sumEt/*,MVAweight*/);
			h_ffMETdPhiLead_BDTltMinusPoint45->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
			h_ffMETdPhiTrail_BDTltMinusPoint45->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
			h_ffSystem_METdPhi_BDTltMinusPoint45->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi())/*,MVAweight*/);
			h_ffAlphaT_BDTltMinusPoint45->Fill(alphaT/*,MVAweight*/);
			h_ffPhotonLessHt_BDTltMinusPoint45->Fill(PhotonLessHt/*,MVAweight*/);
			h_ffInvarMass_BDTltMinusPoint45->Fill(InvMass/*,MVAweight*/);
			h_ffMet_BDTltMinusPoint45->Fill(met->met()/*,MVAweight*/);
			h_ffMR_BDTltMinusPoint45->Fill(RazrMr/*,MVAweight*/);
		      } 
		      if(met->met()<40){
			h_ffdPhi_METlt40->Fill(dPhi/*,MVAweight*/);
			h_sumEt_ff_METlt40->Fill(met->sumEt/*,MVAweight*/);
			h_ffMETdPhiLead_METlt40->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
			h_ffMETdPhiTrail_METlt40->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
			h_ffSystem_METdPhi_METlt40->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi())/*,MVAweight*/);
			h_ffAlphaT_METlt40->Fill(alphaT/*,MVAweight*/);
			h_ffPhotonLessHt_METlt40->Fill(PhotonLessHt/*,MVAweight*/);
			h_ffInvarMass_METlt40->Fill(InvMass/*,MVAweight*/);
			h_ffMet_METlt40->Fill(met->met()/*,MVAweight*/);
			h_ffMR_METlt40->Fill(RazrMr/*,MVAweight*/);
		      }
		    }
		    //}//seedTime	
		  }//end gg/ee/eg and ff events
		  //}//end if(PhoOne->momentum.Et()>leadEtCut) - end ff no jet req case
		  if(doJetReq /*Fake && !isgg_JetReq && !iseg_JetReq && !isee_JetReq*/){
		    if(printLevel>0)cout<<"Inside ff_JetReq"<<endl;
		    nff_JetReq++;isff_JetReq=true;
		    h_ffMHT_JetReq->Fill(MHT.Pt(),PUweight);
		    //check sihih for matrix method
		    if(PhoOne->sigmaIetaIeta<maxSihih)nff_matrix_lead_JetReq++;
		    if(PhoTwo->sigmaIetaIeta<maxSihih)nff_matrix_trail_JetReq++;
		    ffJetReqRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
		    h_ffMet_JetReq->Fill(met->met(),PUweight);
		    for(int i=0;i<50;i++){
		      float CHpuCorrPhoOne=0.,CHpuCorrPhoTwo=0.;
		      if(fabs(PhoOne->caloPosition.Eta())<1.0)CHpuCorrPhoOne=0.012;
		      else CHpuCorrPhoOne=0.010;
		      if(fabs(PhoTwo->caloPosition.Eta())<1.0)CHpuCorrPhoTwo=0.012;
		      else CHpuCorrPhoTwo=0.010;
		      if((PhoOne->ecalRecHitSumEtConeDR03+PhoOne->hcalTowerSumEtConeDR03()+PhoOne->trkSumPtHollowConeDR03-PUCorr_ECAL*Rho25-PUCorr_HCAL*Rho25-PUCorr_TRACK*Rho25)<(float)(i+1) 
			 && (PhoTwo->ecalRecHitSumEtConeDR03+PhoTwo->hcalTowerSumEtConeDR03()+PhoTwo->trkSumPtHollowConeDR03-PUCorr_ECAL*Rho25-PUCorr_HCAL*Rho25-PUCorr_TRACK*Rho25)<(float)(i+1) ){
			h_ffMetChi2_JetReq[i]->Fill(met->met());
		      }
		      if(  ((fabs(PhoOne->caloPosition.Eta())<1.0 && (PhoOne->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			    || (fabs(PhoOne->caloPosition.Eta())>1.0 && (PhoOne->chargedHadronIso-0.010*Rho25)<(float)(i+1)))
			   && ((fabs(PhoTwo->caloPosition.Eta())<1.0 && (PhoTwo->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			       || (fabs(PhoTwo->caloPosition.Eta())>1.0 && (PhoTwo->chargedHadronIso-0.010*Rho25)<(float)(i+1))) ){
			h_ffMetChi2PF_JetReq[i]->Fill(met->met());
		      }
		    }
		    h_SeedTimeVsEta_ff_JetReq->Fill(PhoOne->caloPosition.Eta(),PhoOne->seedTime);
		    h_SeedTimeVsEta_ff_JetReq->Fill(PhoTwo->caloPosition.Eta(),PhoTwo->seedTime);
		    h_ffDiEMPt_JetReq->Fill(diEMpt);
		    h_ffDiEMPt_reweight_binned_JetReq->Fill(diEMpt,metReweightDiEMPt);
		    //h_ffPixelSeeds_JetReq->Fill(PhoOne->nPixelSeeds);h_ffPixelSeeds_JetReq->Fill(PhoTwo->nPixelSeeds);
		    h_ffInvarMass_JetReq->Fill(InvMass);
		    // Di-Jet Pt
		    //Try to match pho objects to jets
		    //use pfJets.second here because we want L1FastL2L3/L2L3 for e/g/f matching
		    MatchPhosToJets(PhoOne,PhoTwo,pfJets.second,DiJetPtJet1,DiJetPtJet2,HasDiJetPt,0.3);
		    float metReweightDiEMPt_JetReq=0.,metReweightDiJetPt_JetReq=0.,metReweightDiJetPtError_JetReq=0.;
		    metReweightDiEMPt_JetReq=GetMetReweight(diEMpt,"ff",EEreweights_JetReq,FFreweights_JetReq,FGreweights_JetReq,GFreweights_JetReq,GammaFakereweights_JetReq,EESideBandLowReweights_JetReq,EESideBandHighReweights_JetReq,JetCounter).first*PUweight;
		    if(HasDiJetPt){
		      diJETpt = GetDiJetPt(DiJetPtJet1,DiJetPtJet2);
		      h_ffDiJetPt_JetReq->Fill(diJETpt);
		      h_ffDiJetPtOverDiEMPtVsDiEMPt_JetReq->Fill(diEMpt,diJETpt/diEMpt);
		      if(JetCounter==0){h_ffDiJetPt_JetReq_0Jet->Fill(diJETpt);h_ffDiEMPt_JetReq_0Jet->Fill(diEMpt);}
		      else if(JetCounter==1){h_ffDiJetPt_JetReq_1Jet->Fill(diJETpt);h_ffDiEMPt_JetReq_1Jet->Fill(diEMpt);}
		      else if(JetCounter>=2){h_ffDiJetPt_JetReq_2Jet->Fill(diJETpt);h_ffDiEMPt_JetReq_2Jet->Fill(diEMpt);}
		      if(JetCounter>2){h_ffDiJetPt_JetReq_MoreThan2Jets->Fill(diJETpt);}
		      metReweightDiJetPt_JetReq=GetMetReweight(diJETpt,"ff",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first*PUweight;
		      metReweightDiJetPtError_JetReq=GetMetReweight(diJETpt,"ff",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).second*PUweight;
		    }
		    else{
		      h_ffDiJetPt_JetReq->Fill(diEMpt);
		      metReweightDiJetPt_JetReq=GetMetReweight(diEMpt,"ff",EEreweights_JetReq,FFreweights_JetReq,FGreweights_JetReq,GFreweights_JetReq,GammaFakereweights_JetReq,EESideBandLowReweights_JetReq,EESideBandHighReweights_JetReq,JetCounter).first*PUweight;
		      metReweightDiJetPtError_JetReq=GetMetReweight(diEMpt,"ff",EEreweights_JetReq,FFreweights_JetReq,FGreweights_JetReq,GFreweights_JetReq,GammaFakereweights_JetReq,EESideBandLowReweights_JetReq,EESideBandHighReweights_JetReq,JetCounter).second*PUweight;
		      if(JetCounter==0){h_ffDiJetPt_JetReq_0Jet->Fill(diEMpt);h_ffDiEMPt_JetReq_0Jet->Fill(diEMpt);}
		      else if(JetCounter==1){h_ffDiJetPt_JetReq_1Jet->Fill(diEMpt);h_ffDiEMPt_JetReq_1Jet->Fill(diEMpt);}
		      else if(JetCounter>=2){h_ffDiJetPt_JetReq_2Jet->Fill(diEMpt);h_ffDiEMPt_JetReq_2Jet->Fill(diEMpt);}
		      if(JetCounter>2){h_ffDiJetPt_JetReq_MoreThan2Jets->Fill(diEMpt);}
		      h_ffMet_NoJetMatch_JetReq->Fill(met->met());
		    }
		    h_ffMet_reweight_binned_JetReq->Fill(met->met(),metReweightDiEMPt_JetReq);
		    h_ffMet_reweightJet_binned_JetReq->Fill(met->met(),metReweightDiJetPt_JetReq);
		    h_ffMHT_reweight_JetReq->Fill(MHT.Pt(),metReweightDiJetPt);
		    h_DiJetPtWeights_ff_JetReq->Fill(metReweightDiJetPt_JetReq);
		    h_ffDiJetPt_reweight_binned_JetReq->Fill(diJETpt,metReweightDiJetPt_JetReq);
		    toys->cd();
		    for(int i=0;i<1000;i++){
		      ffMet_reweight_binned_toy_JetReq[i]->Fill(met->met(),rando.Gaus(metReweightDiJetPt_JetReq,metReweightDiJetPtError_JetReq));
		      //ffMet_reweight_binned_toy[i]->Fill(met->met(),rando.Poisson());
		    }
		    fout->cd();
		    if(JetCounter>=2){ 
		      if(printLevel>0)cout<<"Inside ff_2JetReq"<<endl;
		      nff_2JetReq++;isff_2JetReq=true;
		      h_ffMHT_2JetReq->Fill(MHT.Pt(),PUweight);
		      //check sihih for matrix method
		      if(PhoOne->sigmaIetaIeta<maxSihih)nff_matrix_lead_2JetReq++;
		      if(PhoTwo->sigmaIetaIeta<maxSihih)nff_matrix_trail_2JetReq++;
		      ff2JetReqRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
		      h_ffMet_2JetReq->Fill(met->met(),PUweight);
		      h_ffInvarMassJets_2JetReq->Fill(InvariantMass(invmassJet1->momentum,invmassJet2->momentum),PUweight);
		      for(int i=0;i<50;i++){
			float CHpuCorrPhoOne=0.,CHpuCorrPhoTwo=0.;
			if(fabs(PhoOne->caloPosition.Eta())<1.0)CHpuCorrPhoOne=0.012;
			else CHpuCorrPhoOne=0.010;
			if(fabs(PhoTwo->caloPosition.Eta())<1.0)CHpuCorrPhoTwo=0.012;
			else CHpuCorrPhoTwo=0.010;
			if((PhoOne->ecalRecHitSumEtConeDR03+PhoOne->hcalTowerSumEtConeDR03()+PhoOne->trkSumPtHollowConeDR03-PUCorr_ECAL*Rho25-PUCorr_HCAL*Rho25-PUCorr_TRACK*Rho25)<(float)(i+1) 
			   && (PhoTwo->ecalRecHitSumEtConeDR03+PhoTwo->hcalTowerSumEtConeDR03()+PhoTwo->trkSumPtHollowConeDR03-PUCorr_ECAL*Rho25-PUCorr_HCAL*Rho25-PUCorr_TRACK*Rho25)<(float)(i+1) ){
			  h_ffMetChi2_2JetReq[i]->Fill(met->met());
			}
			if(  ((fabs(PhoOne->caloPosition.Eta())<1.0 && (PhoOne->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			      || (fabs(PhoOne->caloPosition.Eta())>1.0 && (PhoOne->chargedHadronIso-0.010*Rho25)<(float)(i+1)))
			     && ((fabs(PhoTwo->caloPosition.Eta())<1.0 && (PhoTwo->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
				 || (fabs(PhoTwo->caloPosition.Eta())>1.0 && (PhoTwo->chargedHadronIso-0.010*Rho25)<(float)(i+1))) ){
			  h_ffMetChi2PF_2JetReq[i]->Fill(met->met());
			}
		      }
		      h_SeedTimeVsEta_ff_2JetReq->Fill(PhoOne->caloPosition.Eta(),PhoOne->seedTime);
		      h_SeedTimeVsEta_ff_2JetReq->Fill(PhoTwo->caloPosition.Eta(),PhoTwo->seedTime);
		      h_ffDiEMPt_2JetReq->Fill(diEMpt);
		      h_ffDiEMPt_reweight_binned_2JetReq->Fill(diEMpt,metReweightDiEMPt);
		      //h_ffPixelSeeds_2JetReq->Fill(PhoOne->nPixelSeeds);h_ffPixelSeeds_2JetReq->Fill(PhoTwo->nPixelSeeds);
		      h_ffInvarMass_2JetReq->Fill(InvMass);
		      // Di-Jet Pt
		      //Try to match pho objects to jets
		      //use pfJets.second here because we want L1FastL2L3/L2L3 for e/g/f matching
		      MatchPhosToJets(PhoOne,PhoTwo,pfJets.second,DiJetPtJet1,DiJetPtJet2,HasDiJetPt,0.3);
		      float metReweightDiEMPt_2JetReq=0.,metReweightDiJetPt_2JetReq=0.,metReweightDiJetPtError_2JetReq=0.;
		      metReweightDiEMPt_2JetReq=GetMetReweight(diEMpt,"ff",EEreweights_2JetReq,FFreweights_2JetReq,FGreweights_2JetReq,GFreweights_2JetReq,GammaFakereweights_2JetReq,EESideBandLowReweights_2JetReq,EESideBandHighReweights_2JetReq,JetCounter).first*PUweight;
		      if(HasDiJetPt){
			diJETpt = GetDiJetPt(DiJetPtJet1,DiJetPtJet2);
			h_ffDiJetPt_2JetReq->Fill(diJETpt);
			h_ffDiJetPtOverDiEMPtVsDiEMPt_2JetReq->Fill(diEMpt,diJETpt/diEMpt);
			if(JetCounter==0){h_ffDiJetPt_2JetReq_0Jet->Fill(diJETpt);h_ffDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_ffDiJetPt_2JetReq_1Jet->Fill(diJETpt);h_ffDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_ffDiJetPt_2JetReq_2Jet->Fill(diJETpt);h_ffDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_ffDiJetPt_2JetReq_MoreThan2Jets->Fill(diJETpt);}
			metReweightDiJetPt_2JetReq=GetMetReweight(diJETpt,"ff",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first*PUweight;
			metReweightDiJetPtError_2JetReq=GetMetReweight(diJETpt,"ff",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).second*PUweight;
		      }
		      else{
			h_ffDiJetPt_2JetReq->Fill(diEMpt);
			metReweightDiJetPt_2JetReq=GetMetReweight(diEMpt,"ff",EEreweights_2JetReq,FFreweights_2JetReq,FGreweights_2JetReq,GFreweights_2JetReq,GammaFakereweights_2JetReq,EESideBandLowReweights_2JetReq,EESideBandHighReweights_2JetReq,JetCounter).first*PUweight;
			metReweightDiJetPtError_2JetReq=GetMetReweight(diEMpt,"ff",EEreweights_2JetReq,FFreweights_2JetReq,FGreweights_2JetReq,GFreweights_2JetReq,GammaFakereweights_2JetReq,EESideBandLowReweights_2JetReq,EESideBandHighReweights_2JetReq,JetCounter).second*PUweight;
			if(JetCounter==0){h_ffDiJetPt_2JetReq_0Jet->Fill(diEMpt);h_ffDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_ffDiJetPt_2JetReq_1Jet->Fill(diEMpt);h_ffDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_ffDiJetPt_2JetReq_2Jet->Fill(diEMpt);h_ffDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_ffDiJetPt_2JetReq_MoreThan2Jets->Fill(diEMpt);}
			h_ffMet_NoJetMatch_2JetReq->Fill(met->met());
		      }
		      h_ffMet_reweight_binned_2JetReq->Fill(met->met(),metReweightDiEMPt_2JetReq);
		      h_ffMet_reweightJet_binned_2JetReq->Fill(met->met(),metReweightDiJetPt_2JetReq);
		      h_ffMHT_reweight_2JetReq->Fill(MHT.Pt(),metReweightDiJetPt);
		      h_DiJetPtWeights_ff_2JetReq->Fill(metReweightDiJetPt_2JetReq);
		      h_ffDiJetPt_reweight_binned_2JetReq->Fill(diJETpt,metReweightDiJetPt_2JetReq);
		      toys->cd();
		      for(int i=0;i<1000;i++){
			ffMet_reweight_binned_toy_2JetReq[i]->Fill(met->met(),rando.Gaus(metReweightDiJetPt_2JetReq,metReweightDiJetPtError_2JetReq));
			//ffMet_reweight_binned_toy[i]->Fill(met->met(),rando.Poisson());
		      }
		      fout->cd();
		    }//end 2 jet req fake
		  }//end jet req fake
		}//end InvMass
	      }//end if(Et>leadEtCut) 
	    }//end if(!FakesTooCloseDR && !FakesTooCloseDphi) // commented out to keep in pho loop
	  }//if fake_Cands>=2 && ... - end ff // commented out to keep in pho loop
	  //
	  if(printLevel>0)cout<<"We are now done with the ff algo"<<endl;
	  has_dphiJet=0;
	  /*
	    if (!met->sumEt)
	    std::cout << "0 ";
	    else
	    std::cout << met->sumEt << " ";
	    if (!dPhi)
	    std::cout << "0 ";
	    else
	    std::cout << dPhi << " ";
	    if (!PhoOne)
	    std::cout << "0 ";
	    else if (!met->mEt.Phi())
	    std::cout << "0 ";
	    else if (!getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()))
	    std::cout << "0 ";
	    else
	    std::cout << getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()) << " ";
	    if (!PhoTwo)
	    std::cout << "0 ";
	    else if (!getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()))
	    std::cout << "0 ";
	    else
	    std::cout << getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()) << " ";
	    if (!alphaT)
	    std::cout << "0 ";
	    else
	    std::cout << alphaT << " ";
	    if (!PhotonLessHt)
	    std::cout << "0 ";
	    else
	    std::cout << PhotonLessHt << " ";	  
	    if (!diEMpt)
	    std::cout << "0 ";
	    else
	    std::cout << diEMpt << " ";
	    if (!InvMass)
	    std::cout << "0 ";
	    else
	    std::cout << InvMass << " ";
	    std::cout << met->met() << " " << RazrMr << endl;
	  */
	  if(isgg || isee || iseg || isff) ndiPho++;
	  if(isgg_JetReq || isee_JetReq || iseg_JetReq || isff_JetReq) ndiPho_JetReq++;
	      
	  //Make gf sample
	  //need to use GFpho_Cands to let photons from fake HLT in
	  if( dogammafake){ //!isgg && !isff){
	    if( 1 ){//GFpho_Cands.size()>=1 && fake_Cands.size()>=1){
	      //		   gfTooCloseDR=true;gfTooCloseDPhi=true;gfMetOverlap=true;breakPhoFake=false;doJetReq=false;JetIsolatedFromPhoAndFake=false;
	      //		   for(std::vector<susy::Photon*>::iterator pho_it = GFpho_Cands.begin();pho_it<GFpho_Cands.end();pho_it++){
	      //		   if(breakPhoFake)break;
	      //		   PhoOne=*pho_it;
	      //		   for(std::vector<susy::Photon*>::iterator fake_it = fake_Cands.begin();fake_it!=fake_Cands.end();fake_it++){
	      //		   if( !isSameObject(PhoOne->caloPosition,(*fake_it)->caloPosition,0.6) 
	      //		   && !tooClosePhi(PhoOne->caloPosition,(*fake_it)->caloPosition,0.05) 
	      //		   //dPhi cut between photons and MET
	      //		   //  && !tooClosePhi(PhoOne->caloPosition,met->mEt,0.05)
	      //		   //	  && !tooClosePhi((*fake_it)->caloPosition,met->mEt,0.05) 
	      //		   && (PhoOne->momentum.Et()>leadEtCut || (*fake_it)->momentum.Et()>leadEtCut) ){
	      //		   PhoTwo=*fake_it;gfTooCloseDR=false;gfTooCloseDPhi=false;gfMetOverlap=false;breakPhoFake=true;
	      //		   if(!gfTooCloseDR && !gfTooCloseDPhi && AtLeastOnePFJet )[// && !gfMetOverlap){
	      //		   //use pfJets.first because this is for all jets
	      //		   for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.first.begin(); jet_it != pfJets.first.end(); jet_it++){
	      //		   IsGoodJet=true;
	      //		   //first clean from eles and muons
	      //		   for(std::vector<susy::Electron*>::iterator ele_it = pfEles.begin();ele_it!=pfEles.end();ele_it++){
	      //		   if(isSameObject((*ele_it)->momentum,(*jet_it)->momentum,0.5)){IsGoodJet=false;break;}
	      //		   }
	      //		   for(std::vector<susy::Muon*>::iterator mu_it = Muons.begin();mu_it!=Muons.end();mu_it++){
	      //		   if(isSameObject((*mu_it)->momentum,(*jet_it)->momentum,0.5)){IsGoodJet=false;break;}
	      //		   }
	      //		   //now clean from the 2 pho objects
	      //		   if(IsGoodJet){
	      //		   if(!isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5) && !isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5)){
	      //		   JetIsolatedFromBothPhos=true;ndiPhoCands_JetReq++;break;
	      //		   }
	      //		   }
	      //		   }
	      //		   }
	      //		   if(JetIsolatedFromBothPhos==true)doJetReq=true;
	      //		   break;
	      //		   }//end same object, tooclosephi
	      //		   //}//end fake loop
	      //		   //}//end pho loop
	      if(printLevel>0)cout<<"doJetReq: "<<doJetReq<<endl;
	      if(!PhosTooCloseDR && !PhosTooCloseDphi && !PhoMetOverlap){
		TVector3 vPos = (event->vertices[0]).position;
		TVector3 dirPhoOne=PhoOne->caloPosition - vPos,dirPhoTwo=PhoTwo->caloPosition - vPos;
		TVector3 pOne=dirPhoOne.Unit()*(PhoOne->MVAcorrMomentum).E(),pTwo=dirPhoTwo.Unit()*(PhoTwo->MVAcorrMomentum).E();
		TLorentzVector p4PhoOneVcorr(pOne.x(),pOne.y(),pOne.z(),(PhoOne->MVAcorrMomentum).E()),p4PhoTwoVcorr(pTwo.x(),pTwo.y(),pTwo.z(),(PhoTwo->MVAcorrMomentum).E());
		InvMass=InvariantMass(PhoOne->momentum,PhoTwo->momentum);
		float InvMassMVAcorr=InvariantMass(PhoOne->MVAcorrMomentum,PhoTwo->MVAcorrMomentum);
		float InvMassMVAcorrVertexCorr=InvariantMass(p4PhoOneVcorr,p4PhoTwoVcorr);
		InvMass=InvMassMVAcorrVertexCorr;
		diEMpt=GetDiEmPt(PhoOne,PhoTwo);
		float diJETpt=0.;  //find out how many isolated jets
		ClosestDR=999.;
		ClosestDPhi=999.;
		JetCounter=0;
		passJetMETcut=true;
		//use pfJets.first here because we want all jets
		for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.first.begin(); jet_it != pfJets.first.end(); jet_it++){	
		  //to be counted as a jet, it must be dr>0.5 separated from the 2 objects, plus pfEles and pfMuons	
		  IsGoodJet=true;
		  bool check=true;
		  if(isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5)){IsGoodJet=false;}		  
		  if(isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5)){IsGoodJet=false;}
		  check=IsGoodJet;
		  for(std::vector<susy::Electron*>::iterator ele_it = pfEles.begin();ele_it!=pfEles.end();ele_it++){
		    if(isSameObject((*ele_it)->momentum,(*jet_it)->momentum,0.5)){IsGoodJet=false;}
		  }
		  if(check && !IsGoodJet) nCnt[6]++; //number of jets that fail ele cleaning from e/g
		  check=true;
		  for(std::vector<susy::Muon*>::iterator mu_it = Muons.begin();mu_it!=Muons.end();mu_it++){
		    if(isSameObject((*mu_it)->momentum,(*jet_it)->momentum,0.5)){IsGoodJet=false;}
		  }
		  if(check && !IsGoodJet) nCnt[7]++; //number of jets that fail muon cleaning from e/g
		  if(IsGoodJet){
		    JetCounter++;
		    if(JetCounter==1)invmassJet1=(*jet_it);if(JetCounter==2)invmassJet2=(*jet_it);
		    tempClosestDR = ( (getDR(PhoOne->caloPosition,(*jet_it)->momentum) < getDR(PhoTwo->caloPosition,(*jet_it)->momentum)) ? getDR(PhoOne->caloPosition,(*jet_it)->momentum) : getDR(PhoTwo->caloPosition,(*jet_it)->momentum) );
		    if(tempClosestDR<ClosestDR)ClosestDR=tempClosestDR;
		    tempClosestDPhi = ( (fabs(getDphi(PhoOne->caloPosition.Phi(),(*jet_it)->momentum.Phi())) < fabs(getDphi(PhoTwo->caloPosition.Phi(),(*jet_it)->momentum.Phi()))) ? fabs(getDphi(PhoOne->caloPosition.Phi(),(*jet_it)->momentum.Phi())) : fabs(getDphi(PhoTwo->caloPosition.Phi(),(*jet_it)->momentum.Phi())) );
		    if(tempClosestDPhi<ClosestDPhi){ClosestDPhi=tempClosestDPhi;dphiJet=(*jet_it);has_dphiJet=1;}
		    if(getDphi((*jet_it)->momentum.Phi(),met->mEt.Phi())<minJetMETdphi)passJetMETcut=false;
		  }
		} 
		//if(!passJetMETcut){nFailJetMETcut_gammafake++;continue;}
		//Try to match pho objects to jets
		//here use pfJets.second because we want to use l1FastL2L2/L2L3 for jet matching
		HasDiJetPt=false;
		MatchPhosToJets(PhoOne,PhoTwo,pfJets.second,DiJetPtJet1,DiJetPtJet2,HasDiJetPt,0.3);
		if(HasDiJetPt)diJETpt=GetDiJetPt(DiJetPtJet1,DiJetPtJet2);
		metReweightDiEMPt=0.,metReweightDiJetPt=0.,metReweightDiJetPtError=0.;
		metReweightDiEMPt=GetMetReweight(diEMpt,"gammafake",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first*PUweight;
		//look for pixel seeds - if neither have, -> gf
		//if(PhoOne->nPixelSeeds==0 && PhoTwo->nPixelSeeds==0){
		if(printLevel>0)cout<<"Inside gammafake"<<endl;
		ngammafake++;isgammafake=true;gammafakenumVert[NVertex]++;
		if(HasDiJetPt){
		  h_gfPhoJetMatchFlavor_alg->Fill(fabs(DiJetPtJet1->algDefFlavour));h_gfPhoJetMatchFlavor_alg->Fill(fabs(DiJetPtJet2->algDefFlavour));
		  h_gfPhoJetMatchFlavor_phy->Fill(fabs(DiJetPtJet1->phyDefFlavour));h_gfPhoJetMatchFlavor_phy->Fill(fabs(DiJetPtJet2->phyDefFlavour));
		  h_gfMETvsPhoJetMatchFlavorLead->Fill(fabs(DiJetPtJet1->algDefFlavour),met->met());
		  h_gfMETvsPhoJetMatchFlavorTrail->Fill(fabs(DiJetPtJet2->algDefFlavour),met->met());
		}
		h_gammafakeMHT->Fill(MHT.Pt(),PUweight);
		h_gfMetSig->Fill(met->significance,PUweight);
		h_gfMetSigVsSumEt->Fill(met->sumEt,met->significance,PUweight);
		h_gfReduMet->Fill(ReducedMet,PUweight);
		h_gfReduMetVsDiEmPt->Fill(diEMpt,ReducedMet,PUweight);
		if(JetCounter==0)h_gfReduMetVsDiEmPt_0Jet->Fill(diEMpt,ReducedMet,PUweight);
		if(JetCounter==1)h_gfReduMetVsDiEmPt_1Jet->Fill(diEMpt,ReducedMet,PUweight);
		if(JetCounter>1)h_gfReduMetVsDiEmPt_2Jet->Fill(diEMpt,ReducedMet,PUweight);
		float MVAweight=0;
		if(HasDiJetPt)MVAweight=metReweightDiJetPt;
		else MVAweight=metReweightDiEMPt;	
		if (Use["LD"           ]){
		  gammafakehistLD->Fill( reader->EvaluateMVA( "LD method"            ) );
		  gammafakehistLD_rw->Fill( reader->EvaluateMVA( "LD method" ), MVAweight);
		}
		if (Use["BDT"          ]){   
		  gammafakehistBdt   ->Fill( reader->EvaluateMVA( "BDT method" ) );
		  gammafakehistBdt_rw->Fill( reader->EvaluateMVA( "BDT method" ), MVAweight);
		}
		if (Use["SVM"          ]){  
		  gammafakehistSVM   ->Fill( reader->EvaluateMVA( "SVM method"           ) );
		  gammafakehistSVM_rw->Fill( reader->EvaluateMVA( "SVM method" ), MVAweight);
		}
		h_gammafakePt->Fill(PhoOne->momentum.Pt());h_gammafakePt->Fill(PhoTwo->momentum.Pt());
		( (PhoOne->momentum.Et()>PhoTwo->momentum.Et()) ? h_gammafakePtLead->Fill(PhoOne->momentum.Pt()) : h_gammafakePtLead->Fill(PhoTwo->momentum.Pt()) );
		( (PhoOne->momentum.Et()>PhoTwo->momentum.Et()) ? h_gammafakePtTrail->Fill(PhoTwo->momentum.Pt()) : h_gammafakePtTrail->Fill(PhoOne->momentum.Pt()) );
		h_gammafakeEta->Fill(PhoOne->caloPosition.Eta());h_gammafakeEta->Fill(PhoTwo->caloPosition.Eta());
		h_gammafakePhi->Fill(PhoOne->caloPosition.Phi());h_gammafakePhi->Fill(PhoTwo->caloPosition.Phi());
		h_gammafakeMETdPhi->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		h_gammafakeMETdPhi->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		h_gammafakeMETdPhi_vs_Met->Fill(met->met(),getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		h_gammafakeMETdPhi_vs_Met->Fill(met->met(),getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		if(JetCounter==0){h_gfMETdPhi_0Jet->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		  h_gfMETdPhi_0Jet->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));}
		else if(JetCounter==1){h_gfMETdPhi_1Jet->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		  h_gfMETdPhi_1Jet->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));}
		else if(JetCounter>1){h_gfMETdPhi_2Jet->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		  h_gfMETdPhi_2Jet->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));}
		if(has_dphiJet){h_gammafake_JetMETdPhi->Fill(getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));		    
		  h_gammafake_JetMETdPhi_vs_Met->Fill(met->met(),getDphi(dphiJet->momentum.Phi(),met->mEt.Phi()));}
		( (PhoOne->momentum.Et()>PhoTwo->momentum.Et()) ? h_gammafakeMETdPhiLead->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())) : h_gammafakeMETdPhiLead->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())) ) ;
		( (PhoOne->momentum.Et()>PhoTwo->momentum.Et()) ? h_gammafakeMETdPhiTrail->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())) : h_gammafakeMETdPhiTrail->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())) );
		h_nJets_gammafake->Fill(JetCounter);
		h_ClosestDR_gammafake->Fill(ClosestDR);
		for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.first.begin(); jet_it != pfJets.first.end(); jet_it++){
		  h_DRfromJets_gammafake->Fill(getDR(PhoOne->caloPosition,(*jet_it)->momentum),getDR(PhoTwo->caloPosition,(*jet_it)->momentum));
		}
		h_ClosestDPhi_gammafake->Fill(ClosestDPhi);
		gammafakeRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
		dPhi = std::fabs(TVector2::Phi_mpi_pi(PhoOne->caloPosition.Phi() - PhoTwo->caloPosition.Phi()));
		h_gammafakedPhi->Fill(dPhi);
		h_gammafakedR->Fill(getDR(PhoOne->momentum,PhoTwo->momentum));
		h_gammafakePerInstLumi->Fill(event->avgInsRecLumi);
		if(HasDiJetPt) PhotonLessHt=GetPhotonLessHt(met->sumEt,DiJetPtJet1->momentum,DiJetPtJet2->momentum);
		else PhotonLessHt=GetPhotonLessHt(met->sumEt,PhoOne->momentum,PhoTwo->momentum);
		h_gammafakePhotonLessHt->Fill(PhotonLessHt);
		h_gammafakePhotonLessHtVsMET->Fill(met->met(),PhotonLessHt);  
		h_sumEt_gammafake->Fill(met->sumEt);
		// Di-Jet Pt
		if(HasDiJetPt){
		  h_gammafakeDiJetPt->Fill(diJETpt);
		  h_gammafakeDiJetPtOverDiEMPtVsDiEMPt->Fill(diEMpt,diJETpt/diEMpt);
		  h_PfJet_phoMatched_gammafake_pT->Fill(DiJetPtJet1->momentum.Pt());h_PfJet_phoMatched_gammafake_pT->Fill(DiJetPtJet2->momentum.Pt());
		  h_PfJet_phoMatched_gammafake_eta->Fill(DiJetPtJet1->momentum.Eta());h_PfJet_phoMatched_gammafake_phi->Fill(DiJetPtJet1->momentum.Phi());
		  h_PfJet_phoMatched_gammafake_eta->Fill(DiJetPtJet2->momentum.Eta());h_PfJet_phoMatched_gammafake_phi->Fill(DiJetPtJet2->momentum.Phi());
		  metReweightDiJetPt=GetMetReweight(diJETpt,"gammafake",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first*PUweight;
		  metReweightDiJetPtError=GetMetReweight(diJETpt,"gammafake",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).second*PUweight;
		}
		else{
		  h_gammafakeDiJetPt->Fill(diEMpt);
		  metReweightDiJetPt=GetMetReweight(diEMpt,"gammafake",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first*PUweight;
		  metReweightDiJetPtError=GetMetReweight(diEMpt,"gammafake",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).second*PUweight;
		}
		h_gammafakeMet->Fill(met->met(),PUweight);
		if(PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_CaloId10_Iso50_v")){
		  h_gammafakeMet_CaloIso_CaloIso->Fill(met->met(),PUweight);h_gammafakeMet_CaloIso_CaloIso_reweightJet_binned->Fill(met->met(),metReweightDiJetPt);}
		if(PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_R9Id85_v")){
		  h_gammafakeMet_CaloIso_R9Id->Fill(met->met(),PUweight);h_gammafakeMet_CaloIso_R9Id_reweightJet_binned->Fill(met->met(),metReweightDiJetPt);}
		if(PassTrigger("HLT_Photon36_R9Id85_Photon22_CaloId10_Iso50_v")){
		  h_gammafakeMet_R9Id_CaloIso->Fill(met->met(),PUweight);h_gammafakeMet_R9Id_CaloIso_reweightJet_binned->Fill(met->met(),metReweightDiJetPt);}
		if(PassTrigger("HLT_Photon36_R9Id85_Photon22_R9Id85_v")){
		  h_gammafakeMet_R9Id_R9Id->Fill(met->met(),PUweight);h_gammafakeMet_R9Id_R9Id_reweightJet_binned->Fill(met->met(),metReweightDiJetPt);}
		h_NVertex_gammafake->Fill(NVertex);
		//h_gammafakeMet_reweightNVertex->Fill(met->met(),gfNVweight[NVertex-1]);
		TLorentzVector DiPho = PhoOne->momentum + PhoTwo->momentum;
		if(InvMass>120 && InvMass<130){
		  h_gammafakeMETInvarMass120_130->Fill(met->met(),PUweight);h_gammafakeMetMT_120_InvMass_130->Fill(TransverseMass(DiPho,met->mEt));
		  h_gammafakeMetInvarMass_120_InvMass_130->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		}
		if(InvMass>123 && InvMass<128){
		  h_gammafakeMETInvarMass123_128->Fill(met->met(),PUweight);h_gammafakeMetMT_123_InvMass_128->Fill(TransverseMass(DiPho,met->mEt));
		  h_gammafakeMetInvarMass_123_InvMass_128->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		}
		if(InvMass>95 && InvMass<110){
		  h_gammafakeMETInvarMass95_110->Fill(met->met(),PUweight);h_gammafakeMetMT_95_InvMass_110->Fill(TransverseMass(DiPho,met->mEt));
		  h_gammafakeMetInvarMass_95_InvMass_110->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		}
		if(InvMass>135 && InvMass<160){
		  h_gammafakeMETInvarMass135_160->Fill(met->met(),PUweight);h_gammafakeMetMT_135_InvMass_160->Fill(TransverseMass(DiPho,met->mEt));
		  h_gammafakeMetInvarMass_135_InvMass_160->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		}
		toys->cd();
		for(int i=0;i<1000;i++){
		  gammafakeMet_reweight_binned_toy[i]->Fill(met->met(),rando.Gaus(metReweightDiJetPt,metReweightDiJetPtError));
		  //ffMet_reweight_binned_toy[i]->Fill(met->met(),rando.Poisson(metReweightDiJetPt));
		}
		fout->cd();
		for(int i=0;i<50;i++){
		  if( ((fabs(PhoOne->caloPosition.Eta())<1.0 && (PhoOne->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
		       || (fabs(PhoOne->caloPosition.Eta())>1.0 && (PhoOne->chargedHadronIso-0.010*Rho25)<(float)(i+1)))
		      && ((fabs(PhoTwo->caloPosition.Eta())<1.0 && (PhoTwo->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			  || (fabs(PhoTwo->caloPosition.Eta())>1.0 && (PhoTwo->chargedHadronIso-0.010*Rho25)<(float)(i+1))) ){
		    h_gammafakeMetChi2PF[i]->Fill(met->met());
		  }
		}
		h_gammafakeDiEMPt->Fill(diEMpt);
		h_gammafakeInvarMass->Fill(InvMass,PUweight);
		( (PhoOne->momentum.Et()>PhoTwo->momentum.Et()) ? h_gammafakePtOverInvarMassLead->Fill(PhoOne->momentum.Pt()/InvMass,PUweight) : h_gammafakePtOverInvarMassLead->Fill(PhoTwo->momentum.Pt()/InvMass,PUweight) ) ;
		( (PhoOne->momentum.Et()>PhoTwo->momentum.Et()) ? h_gammafakePtOverInvarMassTrail->Fill(PhoTwo->momentum.Pt()/InvMass,PUweight) : h_gammafakePtOverInvarMassTrail->Fill(PhoOne->momentum.Pt()/InvMass,PUweight) ) ;
		h_gammafakeMetMT->Fill(TransverseMass(DiPho,met->mEt));
		h_gammafakeMetInvarMass->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		if(met->met()>30){
		  h_gammafakeInvarMassMET30->Fill(InvMass,PUweight);
		  h_gammafakeMetMT_MET30->Fill(TransverseMass(DiPho,met->mEt));
		  h_gammafakeMetInvarMass_MET30->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		  h_gammafakeInvarMassMET30MVAcorr->Fill(InvMassMVAcorrVertexCorr,PUweight);
		  if(met->met()>40){
		    h_gammafakeInvarMassMET40->Fill(InvMass,PUweight);
		    h_gammafakeMetMT_MET40->Fill(TransverseMass(DiPho,met->mEt));
		    h_gammafakeMetInvarMass_MET40->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		    if(met->met()>50){
		      h_gammafakeInvarMassMET50->Fill(InvMass,PUweight);
		      h_gammafakeMetMT_MET50->Fill(TransverseMass(DiPho,met->mEt));
		      h_gammafakeMetInvarMass_MET50->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		      if(met->met()>60){
			h_gammafakeInvarMassMET60->Fill(InvMass,PUweight);
			h_gammafakeMetMT_MET60->Fill(TransverseMass(DiPho,met->mEt));
			h_gammafakeMetInvarMass_MET60->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			if(met->met()>70){
			  h_gammafakeInvarMassMET70->Fill(InvMass,PUweight);
			  h_gammafakeMetMT_MET70->Fill(TransverseMass(DiPho,met->mEt));
			  h_gammafakeMetInvarMass_MET70->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			  if(met->met()>80){
			    h_gammafakeInvarMassMET80->Fill(InvMass,PUweight);
			    h_gammafakeMetMT_MET80->Fill(TransverseMass(DiPho,met->mEt));
			    h_gammafakeMetInvarMass_MET80->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			    if(met->met()>100){
			      h_gammafakeInvarMassMET100->Fill(InvMass,PUweight);
			      h_gammafakeMetMT_MET100->Fill(TransverseMass(DiPho,met->mEt));
			      h_gammafakeMetInvarMass_MET100->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			    }
			  }
			}
		      }
		    }
		  }
		}
		h_DiEMPtVsMet_gammafake->Fill(met->met(),diEMpt);
		h_gammafakeMet_reweight_binned->Fill(met->met(),metReweightDiEMPt);
		h_gammafakeDiJetPt_reweight_binned->Fill(diJETpt,metReweightDiJetPt);
		h_gammafakeMet_reweightJet_binned->Fill(met->met(),metReweightDiJetPt);
		h_gammafakeMHT_reweight->Fill(MHT.Pt(),metReweightDiJetPt);
		h_MetVsMetDphi_gammafake->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),met->met());
		h_MetVsMetDphi_gammafake->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),met->met());
		h_MetVsMetDphiLead_gammafake->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()),met->met());
		h_MetVsMetDphiTrail_gammafake->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()),met->met());  
		if(HasDiJetPt){
		  h_gammafakescalarDiJetPt_vs_DiJetPt->Fill(diJETpt,PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());
		  if(JetCounter==0){h_gammafakeDiJetPt_0Jet->Fill(diJETpt);h_gammafakeDiEMPt_0Jet->Fill(diEMpt);h_gammafakeDiJetPt_scalar_0Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		  else if(JetCounter==1){h_gammafakeDiJetPt_1Jet->Fill(diJETpt);h_gammafakeDiEMPt_1Jet->Fill(diEMpt);h_gammafakeDiJetPt_scalar_1Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		  else if(JetCounter>=2){h_gammafakeDiJetPt_2Jet->Fill(diJETpt);h_gammafakeDiEMPt_2Jet->Fill(diEMpt);h_gammafakeDiJetPt_scalar_2Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		  if(JetCounter>2){h_gammafakeDiJetPt_MoreThan2Jets->Fill(diJETpt);}
		  h_DiJetPtVsMet_gammafake->Fill(met->met(),diJETpt);
		}
		else{
		  h_gammafakescalarDiJetPt_vs_DiJetPt->Fill(diEMpt,PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());
		  if(JetCounter==0){h_gammafakeDiJetPt_0Jet->Fill(diEMpt);h_gammafakeDiEMPt_0Jet->Fill(diEMpt);h_gammafakeDiJetPt_scalar_0Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		  else if(JetCounter==1){h_gammafakeDiJetPt_1Jet->Fill(diEMpt);h_gammafakeDiEMPt_1Jet->Fill(diEMpt);h_gammafakeDiJetPt_scalar_1Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		  else if(JetCounter>=2){h_gammafakeDiJetPt_2Jet->Fill(diEMpt);h_gammafakeDiEMPt_2Jet->Fill(diEMpt);h_gammafakeDiJetPt_scalar_2Jet->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());}
		  if(JetCounter>2){h_gammafakeDiJetPt_MoreThan2Jets->Fill(diEMpt);}
		  h_gammafakeMet_NoJetMatch->Fill(met->met());
		  h_DiJetPtVsMet_gammafake->Fill(met->met(),diEMpt);
		}
		h_gammafakeDiJetPt_scalar->Fill(PhoOne->momentum.Pt()+PhoTwo->momentum.Pt());
		if(doJetReq){
		  if(printLevel>0)cout<<"Inside gammafake_JetReq"<<endl;
		  float metReweightDiEMPt_JetReq=0.,metReweightDiJetPt_JetReq=0.,metReweightDiJetPtError_JetReq=0.;
		  metReweightDiEMPt_JetReq=GetMetReweight(diEMpt,"gammafake",EEreweights_JetReq,FFreweights_JetReq,FGreweights_JetReq,GFreweights_JetReq,GammaFakereweights_JetReq,EESideBandLowReweights_JetReq,EESideBandHighReweights_JetReq,JetCounter).first*PUweight;
		  ngammafake_JetReq++;isgammafake_JetReq=true;
		  h_gammafakeMHT_JetReq->Fill(MHT.Pt(),PUweight);
		  gammafakeJetReqRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
		  h_gammafakeMet_JetReq->Fill(met->met(),PUweight);
		  if(InvMass>120 && InvMass<130)h_gammafakeMETInvarMass120_130_JetReq->Fill(met->met(),PUweight);
		  if(InvMass>123 && InvMass<128)h_gammafakeMETInvarMass123_128_JetReq->Fill(met->met(),PUweight);
		  if(InvMass>95 && InvMass<110)h_gammafakeMETInvarMass95_110_JetReq->Fill(met->met(),PUweight);
		  if(InvMass>135 && InvMass<160)h_gammafakeMETInvarMass135_160_JetReq->Fill(met->met(),PUweight);
		  h_gammafakeDiEMPt_JetReq->Fill(diEMpt);	
		  if(HasDiJetPt){
		    h_gammafakeDiJetPt_JetReq->Fill(diJETpt);
		    h_gammafakeDiJetPtOverDiEMPtVsDiEMPt_JetReq->Fill(diEMpt,diJETpt/diEMpt);
		    metReweightDiJetPt_JetReq=GetMetReweight(diJETpt,"gammafake",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first*PUweight;
		    metReweightDiJetPtError_JetReq=GetMetReweight(diJETpt,"gammafake",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).second*PUweight;
		  }
		  else{
		    h_gammafakeDiJetPt_JetReq->Fill(diEMpt);
		    metReweightDiJetPt_JetReq=GetMetReweight(diEMpt,"gammafake",EEreweights_JetReq,FFreweights_JetReq,FGreweights_JetReq,GFreweights_JetReq,GammaFakereweights_JetReq,EESideBandLowReweights_JetReq,EESideBandHighReweights_JetReq,JetCounter).first*PUweight;
		    metReweightDiJetPtError_JetReq=GetMetReweight(diEMpt,"gammafake",EEreweights_JetReq,FFreweights_JetReq,FGreweights_JetReq,GFreweights_JetReq,GammaFakereweights_JetReq,EESideBandLowReweights_JetReq,EESideBandHighReweights_JetReq,JetCounter).second*PUweight;
		  }
		  h_gammafakeInvarMass_JetReq->Fill(InvMass,PUweight);
		  if(met->met()>30){
		    h_gammafakeInvarMassMET30_JetReq->Fill(InvMass,PUweight);
		    if(met->met()>40){
		      h_gammafakeInvarMassMET40_JetReq->Fill(InvMass,PUweight);
		      if(met->met()>50){
			h_gammafakeInvarMassMET50_JetReq->Fill(InvMass,PUweight);
			if(met->met()>60){
			  h_gammafakeInvarMassMET60_JetReq->Fill(InvMass,PUweight);
			  if(met->met()>70){
			    h_gammafakeInvarMassMET70_JetReq->Fill(InvMass,PUweight);
			    if(met->met()>80){
			      h_gammafakeInvarMassMET80_JetReq->Fill(InvMass,PUweight);
			      if(met->met()>100){
				h_gammafakeInvarMassMET100_JetReq->Fill(InvMass,PUweight);
			      }
			    }
			  }
			}
		      }
		    }
		  }
		  h_gammafakeMet_reweight_binned_JetReq->Fill(met->met(),metReweightDiEMPt_JetReq);
		  h_gammafakeMet_reweightJet_binned_JetReq->Fill(met->met(),metReweightDiJetPt_JetReq);
		  h_gammafakeMHT_reweight_JetReq->Fill(MHT.Pt(),metReweightDiJetPt);
		  h_gammafakeDiJetPt_reweight_binned_JetReq->Fill(diJETpt,metReweightDiJetPt_JetReq);
		  if(HasDiJetPt){
		    if(JetCounter==0){h_gammafakeDiJetPt_JetReq_0Jet->Fill(diJETpt);h_gammafakeDiEMPt_JetReq_0Jet->Fill(diEMpt);}
		    else if(JetCounter==1){h_gammafakeDiJetPt_JetReq_1Jet->Fill(diJETpt);h_gammafakeDiEMPt_JetReq_1Jet->Fill(diEMpt);}
		    else if(JetCounter>=2){h_gammafakeDiJetPt_JetReq_2Jet->Fill(diJETpt);h_gammafakeDiEMPt_JetReq_2Jet->Fill(diEMpt);}
		    if(JetCounter>2){h_gammafakeDiJetPt_JetReq_MoreThan2Jets->Fill(diJETpt);}
		  }
		  else{
		    if(JetCounter==0){h_gammafakeDiJetPt_JetReq_0Jet->Fill(diEMpt);h_gammafakeDiEMPt_JetReq_0Jet->Fill(diEMpt);}
		    else if(JetCounter==1){h_gammafakeDiJetPt_JetReq_1Jet->Fill(diEMpt);h_gammafakeDiEMPt_JetReq_1Jet->Fill(diEMpt);}
		    else if(JetCounter>=2){h_gammafakeDiJetPt_JetReq_2Jet->Fill(diEMpt);h_gammafakeDiEMPt_JetReq_2Jet->Fill(diEMpt);}
		    if(JetCounter>2){h_gammafakeDiJetPt_JetReq_MoreThan2Jets->Fill(diEMpt);}
		    h_gammafakeMet_NoJetMatch_JetReq->Fill(met->met());
		  }	
		  if(JetCounter>=2){
		    if(printLevel>0)cout<<"Inside gammafake_2JetReq"<<endl;
		    ngammafake_2JetReq++;isgammafake_2JetReq=true;
		    h_gammafakeMHT_2JetReq->Fill(MHT.Pt(),PUweight);
		    gammafake2JetReqRunEvent.push_back(make_pair(event->runNumber,event->eventNumber));
		    h_gammafakeMet_2JetReq->Fill(met->met(),PUweight);
		    h_gammafakeInvarMassJets_2JetReq->Fill(InvariantMass(invmassJet1->momentum,invmassJet2->momentum),PUweight);
		    if(InvMass>120 && InvMass<130)h_gammafakeMETInvarMass120_130_2JetReq->Fill(met->met(),PUweight);
		    if(InvMass>123 && InvMass<128)h_gammafakeMETInvarMass123_128_2JetReq->Fill(met->met(),PUweight);
		    if(InvMass>95 && InvMass<110)h_gammafakeMETInvarMass95_110_2JetReq->Fill(met->met(),PUweight);
		    if(InvMass>135 && InvMass<160)h_gammafakeMETInvarMass135_160_2JetReq->Fill(met->met(),PUweight);
		    h_gammafakeDiEMPt_2JetReq->Fill(diEMpt);	
		    if(HasDiJetPt){
		      h_gammafakeDiJetPt_2JetReq->Fill(diJETpt);
		      h_gammafakeDiJetPtOverDiEMPtVsDiEMPt_2JetReq->Fill(diEMpt,diJETpt/diEMpt);
		    }
		    else{h_gammafakeDiJetPt_2JetReq->Fill(diEMpt);}
		    h_gammafakeInvarMass_2JetReq->Fill(InvMass,PUweight);
		    if(met->met()>30){
		      h_gammafakeInvarMassMET30_2JetReq->Fill(InvMass,PUweight);
		      if(met->met()>40){
			h_gammafakeInvarMassMET40_2JetReq->Fill(InvMass,PUweight);
			if(met->met()>50){
			  h_gammafakeInvarMassMET50_2JetReq->Fill(InvMass,PUweight);
			  if(met->met()>60){
			    h_gammafakeInvarMassMET60_2JetReq->Fill(InvMass,PUweight);
			    if(met->met()>70){
			      h_gammafakeInvarMassMET70_2JetReq->Fill(InvMass,PUweight);
			      if(met->met()>80){
				h_gammafakeInvarMassMET80_2JetReq->Fill(InvMass,PUweight);
				if(met->met()>100){
				  h_gammafakeInvarMassMET100_2JetReq->Fill(InvMass,PUweight);
				}
			      }
			    }
			  }
			}
		      }
		    }
		    h_gammafakeMet_reweight_binned_2JetReq->Fill(met->met(),GetMetReweight(diEMpt,"gammafake",EEreweights_2JetReq,FFreweights_2JetReq,FGreweights_2JetReq,GFreweights_2JetReq,GammaFakereweights_2JetReq,EESideBandLowReweights_2JetReq,EESideBandHighReweights_2JetReq,JetCounter).first*PUweight);
		    if(HasDiJetPt){
		      h_gammafakeMet_reweightJet_binned_2JetReq->Fill(met->met(),GetMetReweight(diJETpt,"gammafake",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first*PUweight);
		      h_gammafakeMHT_reweight_2JetReq->Fill(MHT.Pt(),GetMetReweight(diJETpt,"gammafake",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first*PUweight);
		      h_gammafakeDiJetPt_reweight_binned_2JetReq->Fill(diJETpt,GetMetReweight(diJETpt,"gammafake",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first*PUweight);
		      if(JetCounter==0){h_gammafakeDiJetPt_2JetReq_0Jet->Fill(diJETpt);h_gammafakeDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
		      else if(JetCounter==1){h_gammafakeDiJetPt_2JetReq_1Jet->Fill(diJETpt);h_gammafakeDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
		      else if(JetCounter>=2){h_gammafakeDiJetPt_2JetReq_2Jet->Fill(diJETpt);h_gammafakeDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
		      if(JetCounter>2){h_gammafakeDiJetPt_2JetReq_MoreThan2Jets->Fill(diJETpt);}
		    }
		    else{
		      h_gammafakeMet_reweightJet_binned_2JetReq->Fill(met->met(),GetMetReweight(diEMpt,"gammafake",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first*PUweight);
		      h_gammafakeMHT_reweight_2JetReq->Fill(MHT.Pt(),GetMetReweight(diEMpt,"gammafake",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first*PUweight);
		      h_gammafakeDiJetPt_reweight_binned_2JetReq->Fill(diEMpt,GetMetReweight(diEMpt,"gammafake",EEreweights_2JetReq,FFreweights_2JetReq,FGreweights_2JetReq,GFreweights_2JetReq,GammaFakereweights_2JetReq,EESideBandLowReweights_2JetReq,EESideBandHighReweights_2JetReq,JetCounter).first*PUweight);
		      if(JetCounter==0){h_gammafakeDiJetPt_2JetReq_0Jet->Fill(diEMpt);h_gammafakeDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
		      else if(JetCounter==1){h_gammafakeDiJetPt_2JetReq_1Jet->Fill(diEMpt);h_gammafakeDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
		      else if(JetCounter>=2){h_gammafakeDiJetPt_2JetReq_2Jet->Fill(diEMpt);h_gammafakeDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
		      if(JetCounter>2){h_gammafakeDiJetPt_2JetReq_MoreThan2Jets->Fill(diEMpt);}
		      h_gammafakeMet_NoJetMatch_2JetReq->Fill(met->met());
		    }
		    for(int i=0;i<50;i++){
		      if(  ((fabs(PhoOne->caloPosition.Eta())<1.0 && (PhoOne->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			    || (fabs(PhoOne->caloPosition.Eta())>1.0 && (PhoOne->chargedHadronIso-0.010*Rho25)<(float)(i+1)))
			   && ((fabs(PhoTwo->caloPosition.Eta())<1.0 && (PhoTwo->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			       || (fabs(PhoTwo->caloPosition.Eta())>1.0 && (PhoTwo->chargedHadronIso-0.010*Rho25)<(float)(i+1))) ){
			h_gammafakeMetChi2PF_JetReq[i]->Fill(met->met());
		      }
		    }	
		  }//end 2 JetReq
		}//end JetReq
		//now do gf case specifically
		if( dogf ){//PhoOne->momentum.Et() >= PhoTwo->momentum.Et()){
		  ngf++;isgf=true;gfnumVert[NVertex]++;
		  h_gfMHT->Fill(MHT.Pt(),PUweight);
		  MatchPhosToJets(PhoOne,PhoTwo,pfJets.second,DiJetPtJet1,DiJetPtJet2,HasDiJetPt,0.3);
		  diEMpt=GetDiEmPt(PhoOne,PhoTwo);
		  RazrMr = GetRazrMr(PhoOne,PhoTwo);
		  RazrR2 = GetRazrR2(PhoOne,PhoTwo,met);
		  if(HasDiJetPt){
		    diJETpt=GetDiJetPt(DiJetPtJet1,DiJetPtJet2);
		    alphaT = GetAlphaT(DiJetPtJet1->momentum, DiJetPtJet2->momentum);
		    PhotonLessHt=GetPhotonLessHt(met->sumEt,DiJetPtJet1->momentum,DiJetPtJet2->momentum);
		  }
		  else{
		    alphaT = GetAlphaT(PhoOne->momentum, PhoTwo->momentum);
		    PhotonLessHt=GetPhotonLessHt(met->sumEt,PhoOne->momentum,PhoTwo->momentum);
		  }
		  
		  varsumEt = met->sumEt;
		  vardPhi = dPhi;
		  varMETdPhiLead = getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi());
		  varMETdPhiTrail =  getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi());
		  varSystemMETdPhi = getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi());
		  //varAlphaT = alphaT;
		  varPhotonLessHT = PhotonLessHt;
		  varInvarMass = InvMass;
		  varMet = met->met();
		  varMR = RazrMr;
		  
		  if (Use["LD" ])   gfhistLD     ->Fill( reader->EvaluateMVA( "LD method"  ) );
		  if (Use["BDT"])   gfhistBdt    ->Fill( reader->EvaluateMVA( "BDT method" ) );
		  if (Use["SVM"])   gfhistSVM    ->Fill( reader->EvaluateMVA( "SVM method" ) );
		  
		  if(reader->EvaluateMVA("BDT method")){
		    h_gfdPhi_BDT->Fill(dPhi/*,MVAweight*/);
		    h_sumEt_gf_BDT->Fill(met->sumEt/*,MVAweight*/);
		    h_gfMETdPhiLead_BDT->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
		    h_gfMETdPhiTrail_BDT->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
		    h_gfSystem_METdPhi_BDT->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi())/*,MVAweight*/);
		    h_gfAlphaT_BDT->Fill(alphaT/*,MVAweight*/);
		    h_gfPhotonLessHt_BDT->Fill(PhotonLessHt/*,MVAweight*/);
		    h_gfInvarMass_BDT->Fill(InvMass/*,MVAweight*/);
		    h_gfMet_BDT->Fill(met->met()/*,MVAweight*/);
		    h_gfMR_BDT->Fill(RazrMr/*,MVAweight*/);
		    if(InvMass<86 || InvMass>96){
		      h_gfdPhi_BDT_NoZ->Fill(dPhi/*,MVAweight*/);
		      h_sumEt_gf_BDT_NoZ->Fill(met->sumEt/*,MVAweight*/);
		      h_gfMETdPhiLead_BDT_NoZ->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
		      h_gfMETdPhiTrail_BDT_NoZ->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())/*,MVAweight*/);
		      h_gfSystem_METdPhi_BDT_NoZ->Fill(getDphi((PhoOne->caloPosition+PhoTwo->caloPosition).Phi(),met->mEt.Phi())/*,MVAweight*/);
		      h_gfAlphaT_BDT_NoZ->Fill(alphaT/*,MVAweight*/);
		      h_gfPhotonLessHt_BDT_NoZ->Fill(PhotonLessHt/*,MVAweight*/);
		      h_gfInvarMass_BDT_NoZ->Fill(InvMass/*,MVAweight*/);
		      h_gfMet_BDT_NoZ->Fill(met->met()/*,MVAweight*/);
		      h_gfMR_BDT_NoZ->Fill(RazrMr/*,MVAweight*/);
		    }
		  }
		  h_gfMETdPhi->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		  h_gfMETdPhi->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		  ( (PhoOne->momentum.Et()>PhoTwo->momentum.Et()) ? h_gfMETdPhiLead->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())) : h_gfMETdPhiLead->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())) ) ;
		  ( (PhoOne->momentum.Et()>PhoTwo->momentum.Et()) ? h_gfMETdPhiTrail->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())) : h_gfMETdPhiTrail->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())) );
		  h_nJets_gf->Fill(JetCounter);
		  h_ClosestDR_gf->Fill(ClosestDR);
		  for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.first.begin(); jet_it != pfJets.first.end(); jet_it++){
		    h_DRfromJets_gf->Fill(getDR(PhoOne->caloPosition, (*jet_it)->momentum),getDR(PhoTwo->caloPosition, (*jet_it)->momentum));
		  }
		  h_ClosestDPhi_gf->Fill(ClosestDPhi);
		  dPhi = std::fabs(TVector2::Phi_mpi_pi(PhoOne->caloPosition.Phi() - PhoTwo->caloPosition.Phi()));
		  h_gfdPhi->Fill(dPhi);
		  h_gfdR->Fill(getDR(PhoOne->momentum,PhoTwo->momentum));
		  h_gfPerInstLumi->Fill(event->avgInsRecLumi);
		  // Di-Jet Pt
		  if(HasDiJetPt){
		    h_gfDiJetPt->Fill(diJETpt);
		    h_gfDiJetPtOverDiEMPtVsDiEMPt->Fill(diEMpt,diJETpt/diEMpt);
		  }
		  else{h_gfDiJetPt->Fill(diEMpt);}
		  h_gfMet->Fill(met->met(),PUweight);
		  h_NVertex_gf->Fill(NVertex);
		  //h_gfMet_reweightNVertex->Fill(met->met(),gfNVweight[NVertex-1]);
		  DiPho = PhoOne->momentum + PhoTwo->momentum;
		  if(InvMass>120 && InvMass<130){
		    h_gfMETInvarMass120_130->Fill(met->met(),PUweight);h_gfMetMT_120_InvMass_130->Fill(TransverseMass(DiPho,met->mEt));
		    h_gfMetInvarMass_120_InvMass_130->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		  }
		  if(InvMass>123 && InvMass<128){
		    h_gfMETInvarMass123_128->Fill(met->met(),PUweight);h_gfMetMT_123_InvMass_128->Fill(TransverseMass(DiPho,met->mEt));
		    h_gfMetInvarMass_123_InvMass_128->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		  }
		  if(InvMass>95 && InvMass<110){
		    h_gfMETInvarMass95_110->Fill(met->met(),PUweight);h_gfMetMT_95_InvMass_110->Fill(TransverseMass(DiPho,met->mEt));
		    h_gfMetInvarMass_95_InvMass_110->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		  }
		  if(InvMass>135 && InvMass<160){
		    h_gfMETInvarMass135_160->Fill(met->met(),PUweight);h_gfMetMT_135_InvMass_160->Fill(TransverseMass(DiPho,met->mEt));
		    h_gfMetInvarMass_135_InvMass_160->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		  }
		  h_gfDiEMPt->Fill(diEMpt);
		  h_gfInvarMass->Fill(InvMass,PUweight);
		  h_gfMetMT->Fill(TransverseMass(DiPho,met->mEt));
		  h_gfMetInvarMass->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		  if(met->met()>30){
		    h_gfInvarMassMET30->Fill(InvMass,PUweight);
		    h_gfMetMT_MET30->Fill(TransverseMass(DiPho,met->mEt));
		    h_gfMetInvarMass_MET30->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		    if(met->met()>40){
		      h_gfInvarMassMET40->Fill(InvMass,PUweight);
		      h_gfMetMT_MET40->Fill(TransverseMass(DiPho,met->mEt));
		      h_gfMetInvarMass_MET40->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		      if(met->met()>50){
			h_gfInvarMassMET50->Fill(InvMass,PUweight);
			h_gfMetMT_MET50->Fill(TransverseMass(DiPho,met->mEt));
			h_gfMetInvarMass_MET50->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			if(met->met()>60){
			  h_gfInvarMassMET60->Fill(InvMass,PUweight);
			  h_gfMetMT_MET60->Fill(TransverseMass(DiPho,met->mEt));
			  h_gfMetInvarMass_MET60->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			  if(met->met()>70){
			    h_gfInvarMassMET70->Fill(InvMass,PUweight);
			    h_gfMetMT_MET70->Fill(TransverseMass(DiPho,met->mEt));
			    h_gfMetInvarMass_MET70->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			    if(met->met()>80){
			      h_gfInvarMassMET80->Fill(InvMass,PUweight);
			      h_gfMetMT_MET80->Fill(TransverseMass(DiPho,met->mEt));
			      h_gfMetInvarMass_MET80->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			      if(met->met()>100){
				h_gfInvarMassMET100->Fill(InvMass,PUweight);
				h_gfMetMT_MET100->Fill(TransverseMass(DiPho,met->mEt));
				h_gfMetInvarMass_MET100->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			      }
			    }
			  }
			}
		      }
		    }
		  }
		  h_DiEMPtVsMet_gf->Fill(met->met(),diEMpt);
		  h_gfMet_reweight_binned->Fill(met->met(),GetMetReweight(diEMpt,"gf",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first*PUweight);
		  if(HasDiJetPt){
		    h_gfMet_reweightJet_binned->Fill(met->met(),GetMetReweight(diJETpt,"gf",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first*PUweight);
		    h_gfMHT_reweight->Fill(MHT.Pt(),GetMetReweight(diJETpt,"gf",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first*PUweight);
		    h_gfDiJetPt_reweight_binned->Fill(diJETpt,GetMetReweight(diJETpt,"gf",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first*PUweight);
		    if(JetCounter==0){h_gfDiJetPt_0Jet->Fill(diJETpt);h_gfDiEMPt_0Jet->Fill(diEMpt);}
		    else if(JetCounter==1){h_gfDiJetPt_1Jet->Fill(diJETpt);h_gfDiEMPt_1Jet->Fill(diEMpt);}
		    else if(JetCounter>=2){h_gfDiJetPt_2Jet->Fill(diJETpt);h_gfDiEMPt_2Jet->Fill(diEMpt);}
		    if(JetCounter>2){h_gfDiJetPt_MoreThan2Jets->Fill(diJETpt);}
		    h_DiJetPtVsMet_gf->Fill(met->met(),diJETpt);
		  }
		  else{
		    h_gfMet_reweightJet_binned->Fill(met->met(),GetMetReweight(diEMpt,"gf",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first*PUweight);
		    h_gfMHT_reweight->Fill(MHT.Pt(),GetMetReweight(diEMpt,"gf",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first*PUweight);
		    h_gfDiJetPt_reweight_binned->Fill(diEMpt,GetMetReweight(diEMpt,"gf",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first*PUweight);
		    if(JetCounter==0){h_gfDiJetPt_0Jet->Fill(diEMpt);h_gfDiEMPt_0Jet->Fill(diEMpt);}
		    else if(JetCounter==1){h_gfDiJetPt_1Jet->Fill(diEMpt);h_gfDiEMPt_1Jet->Fill(diEMpt);}
		    else if(JetCounter>=2){h_gfDiJetPt_2Jet->Fill(diEMpt);h_gfDiEMPt_2Jet->Fill(diEMpt);}
		    if(JetCounter>2){h_gfDiJetPt_MoreThan2Jets->Fill(diEMpt);}
		    h_gfMet_NoJetMatch->Fill(met->met());
		    h_DiJetPtVsMet_gf->Fill(met->met(),diEMpt);
		  }
		  for(int i=0;i<50;i++){
		    if( ((fabs(PhoOne->caloPosition.Eta())<1.0 && (PhoOne->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			 || (fabs(PhoOne->caloPosition.Eta())>1.0 && (PhoOne->chargedHadronIso-0.010*Rho25)<(float)(i+1)))
			&& ((fabs(PhoTwo->caloPosition.Eta())<1.0 && (PhoTwo->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			    || (fabs(PhoTwo->caloPosition.Eta())>1.0 && (PhoTwo->chargedHadronIso-0.010*Rho25)<(float)(i+1))) ){
		      h_gfMetChi2PF[i]->Fill(met->met());
		    }
		  }
		  float CHpuCorrPhoOne=0.,CHpuCorrPhoTwo=0.,NHpuCorrPhoOne=0.,NHpuCorrPhoTwo=0.,PHpuCorrPhoOne=0.,PHpuCorrPhoTwo=0.;
		  if(fabs(PhoOne->caloPosition.Eta())<1.0){CHpuCorrPhoOne=0.012;NHpuCorrPhoOne=0.03;PHpuCorrPhoOne=0.148;}
		  else {CHpuCorrPhoOne=0.010;NHpuCorrPhoOne=0.057;PHpuCorrPhoOne=0.130;}
		  if(fabs(PhoTwo->caloPosition.Eta())<1.0){CHpuCorrPhoTwo=0.012;NHpuCorrPhoTwo=0.03;PHpuCorrPhoTwo=0.148;}
		  else {CHpuCorrPhoTwo=0.010;NHpuCorrPhoTwo=0.057;PHpuCorrPhoTwo=0.130;}
		  h_ChargedHadronIso_gf->Fill(PhoOne->chargedHadronIso-CHpuCorrPhoOne*Rho25);
		  h_ChargedHadronIso_gf->Fill(PhoTwo->chargedHadronIso-CHpuCorrPhoTwo*Rho25);
		  h_NeutralHadronIso_gf->Fill(PhoOne->neutralHadronIso-PhoOne->momentum.Et()*0.04-NHpuCorrPhoOne*Rho25);
		  h_NeutralHadronIso_gf->Fill(PhoTwo->neutralHadronIso-PhoTwo->momentum.Et()*0.04-NHpuCorrPhoTwo*Rho25);
		  h_PhotonIso_gf->Fill(PhoOne->photonIso-PhoOne->momentum.Et()*0.005-PHpuCorrPhoOne*Rho25);
		  h_PhotonIso_gf->Fill(PhoTwo->photonIso-PhoTwo->momentum.Et()*0.005-PHpuCorrPhoTwo*Rho25);
		  h_gf_1v2_ChargedHadronIso->Fill(PhoOne->chargedHadronIso-CHpuCorrPhoOne*Rho25,PhoTwo->chargedHadronIso-CHpuCorrPhoTwo*Rho25);
		  h_gf_1v2_NeutralHadronIso->Fill(PhoOne->neutralHadronIso-PhoOne->momentum.Et()*0.04-NHpuCorrPhoOne*Rho25,PhoTwo->neutralHadronIso-PhoTwo->momentum.Et()*0.04-NHpuCorrPhoTwo*Rho25);
		  h_gf_1v2_PhotonIso->Fill(PhoOne->photonIso-PhoOne->momentum.Et()*0.005-PHpuCorrPhoOne*Rho25,PhoTwo->photonIso-PhoTwo->momentum.Et()*0.005-PHpuCorrPhoTwo*Rho25);
		  h_gf_1v2_SigIetaIeta->Fill(PhoOne->sigmaIetaIeta,PhoTwo->sigmaIetaIeta);
		  if(doJetReq){
		    if(printLevel>0)cout<<"Inside gf_JetReq"<<endl;
		    ngf_JetReq++;isgf_JetReq=true;
		    h_gfMHT_JetReq->Fill(MHT.Pt(),PUweight);
		    h_gfMet_JetReq->Fill(met->met(),PUweight);
		    if(InvMass>120 && InvMass<130)h_gfMETInvarMass120_130_JetReq->Fill(met->met(),PUweight);
		    if(InvMass>123 && InvMass<128)h_gfMETInvarMass123_128_JetReq->Fill(met->met(),PUweight);
		    if(InvMass>95 && InvMass<110)h_gfMETInvarMass95_110_JetReq->Fill(met->met(),PUweight);
		    if(InvMass>135 && InvMass<160)h_gfMETInvarMass135_160_JetReq->Fill(met->met(),PUweight);
		    h_gfDiEMPt_JetReq->Fill(diEMpt);	
		    if(HasDiJetPt){
		      h_gfDiJetPt_JetReq->Fill(diJETpt);
		      h_gfDiJetPtOverDiEMPtVsDiEMPt_JetReq->Fill(diEMpt,diJETpt/diEMpt);
		    }
		    else{h_gfDiJetPt_JetReq->Fill(diEMpt);}
		    h_gfInvarMass_JetReq->Fill(InvMass,PUweight);
		    if(met->met()>30){
		      h_gfInvarMassMET30_JetReq->Fill(InvMass,PUweight);
		      if(met->met()>40){
			h_gfInvarMassMET40_JetReq->Fill(InvMass,PUweight);
			if(met->met()>50){
			  h_gfInvarMassMET50_JetReq->Fill(InvMass,PUweight);
			  if(met->met()>60){
			    h_gfInvarMassMET60_JetReq->Fill(InvMass,PUweight);
			    if(met->met()>70){
			      h_gfInvarMassMET70_JetReq->Fill(InvMass,PUweight);
			      if(met->met()>80){
				h_gfInvarMassMET80_JetReq->Fill(InvMass,PUweight);
				if(met->met()>100){
				  h_gfInvarMassMET100_JetReq->Fill(InvMass,PUweight);
				}
			      }
			    }
			  }
			}
		      }
		    }		 
		    h_gfMet_reweight_binned_JetReq->Fill(met->met(),GetMetReweight(diEMpt,"gf",EEreweights_JetReq,FFreweights_JetReq,FGreweights_JetReq,GFreweights_JetReq,GammaFakereweights_JetReq,EESideBandLowReweights_JetReq,EESideBandHighReweights_JetReq,JetCounter).first*PUweight);
		    if(HasDiJetPt){
		      h_gfMet_reweightJet_binned_JetReq->Fill(met->met(),GetMetReweight(diJETpt,"gf",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first*PUweight);
		      h_gfMHT_reweight_JetReq->Fill(MHT.Pt(),GetMetReweight(diJETpt,"gf",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first*PUweight);
		      h_gfDiJetPt_reweight_binned_JetReq->Fill(diJETpt,GetMetReweight(diJETpt,"gf",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first*PUweight);
		      if(JetCounter==0){h_gfDiJetPt_JetReq_0Jet->Fill(diJETpt);h_gfDiEMPt_JetReq_0Jet->Fill(diEMpt);}
		      else if(JetCounter==1){h_gfDiJetPt_JetReq_1Jet->Fill(diJETpt);h_gfDiEMPt_JetReq_1Jet->Fill(diEMpt);}
		      else if(JetCounter>=2){h_gfDiJetPt_JetReq_2Jet->Fill(diJETpt);h_gfDiEMPt_JetReq_2Jet->Fill(diEMpt);}
		      if(JetCounter>2){h_gfDiJetPt_JetReq_MoreThan2Jets->Fill(diJETpt);}
		    }
		    else{
		      h_gfMet_reweightJet_binned_JetReq->Fill(met->met(),GetMetReweight(diEMpt,"gf",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first*PUweight);
		      h_gfMHT_reweight_JetReq->Fill(MHT.Pt(),GetMetReweight(diEMpt,"gf",EEreweightsJet_JetReq,FFreweightsJet_JetReq,FGreweightsJet_JetReq,GFreweightsJet_JetReq,GammaFakereweightsJet_JetReq,EESideBandLowReweightsJet_JetReq,EESideBandHighReweightsJet_JetReq,JetCounter).first*PUweight);
		      h_gfDiJetPt_reweight_binned_JetReq->Fill(diEMpt,GetMetReweight(diEMpt,"gf",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first*PUweight);
		      if(JetCounter==0){h_gfDiJetPt_JetReq_0Jet->Fill(diEMpt);h_gfDiEMPt_JetReq_0Jet->Fill(diEMpt);}
		      else if(JetCounter==1){h_gfDiJetPt_JetReq_1Jet->Fill(diEMpt);h_gfDiEMPt_JetReq_1Jet->Fill(diEMpt);}
		      else if(JetCounter>=2){h_gfDiJetPt_JetReq_2Jet->Fill(diEMpt);h_gfDiEMPt_JetReq_2Jet->Fill(diEMpt);}
		      if(JetCounter>2){h_gfDiJetPt_JetReq_MoreThan2Jets->Fill(diEMpt);}
		      h_gfMet_NoJetMatch_JetReq->Fill(met->met());
		    }	

		    for(int i=0;i<50;i++){
		      if( ((fabs(PhoOne->caloPosition.Eta())<1.0 && (PhoOne->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			   || (fabs(PhoOne->caloPosition.Eta())>1.0 && (PhoOne->chargedHadronIso-0.010*Rho25)<(float)(i+1)))
			  && ((fabs(PhoTwo->caloPosition.Eta())<1.0 && (PhoTwo->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			      || (fabs(PhoTwo->caloPosition.Eta())>1.0 && (PhoTwo->chargedHadronIso-0.010*Rho25)<(float)(i+1))) ){
			h_gfMetChi2PF_JetReq[i]->Fill(met->met());
		      }
		    }
		    if(JetCounter>=2){
		      if(printLevel>0)cout<<"Inside gf_2JetReq"<<endl;
		      ngf_2JetReq++;isgf_2JetReq=true;
		      h_gfMHT_2JetReq->Fill(MHT.Pt(),PUweight);
		      h_gfMet_2JetReq->Fill(met->met(),PUweight);
		      if(InvMass>120 && InvMass<130)h_gfMETInvarMass120_130_2JetReq->Fill(met->met(),PUweight);
		      if(InvMass>123 && InvMass<128)h_gfMETInvarMass123_128_2JetReq->Fill(met->met(),PUweight);
		      if(InvMass>95 && InvMass<110)h_gfMETInvarMass95_110_2JetReq->Fill(met->met(),PUweight);
		      if(InvMass>135 && InvMass<160)h_gfMETInvarMass135_160_2JetReq->Fill(met->met(),PUweight);
		      h_gfDiEMPt_2JetReq->Fill(diEMpt);	
		      if(HasDiJetPt){
			h_gfDiJetPt_2JetReq->Fill(diJETpt);
			h_gfDiJetPtOverDiEMPtVsDiEMPt_2JetReq->Fill(diEMpt,diJETpt/diEMpt);
		      }
		      else{h_gfDiJetPt_2JetReq->Fill(diEMpt);}
		      h_gfInvarMass_2JetReq->Fill(InvMass,PUweight);
		      if(met->met()>30){
			h_gfInvarMassMET30_2JetReq->Fill(InvMass,PUweight);
			if(met->met()>40){
			  h_gfInvarMassMET40_2JetReq->Fill(InvMass,PUweight);
			  if(met->met()>50){
			    h_gfInvarMassMET50_2JetReq->Fill(InvMass,PUweight);
			    if(met->met()>60){
			      h_gfInvarMassMET60_2JetReq->Fill(InvMass,PUweight);
			      if(met->met()>70){
				h_gfInvarMassMET70_2JetReq->Fill(InvMass,PUweight);
				if(met->met()>80){
				  h_gfInvarMassMET80_2JetReq->Fill(InvMass,PUweight);
				  if(met->met()>100){
				    h_gfInvarMassMET100_2JetReq->Fill(InvMass,PUweight);
				  }
				}
			      }
			    }
			  }
			}
		      }		 
		      h_gfMet_reweight_binned_2JetReq->Fill(met->met(),GetMetReweight(diEMpt,"gf",EEreweights_2JetReq,FFreweights_2JetReq,FGreweights_2JetReq,GFreweights_2JetReq,GammaFakereweights_2JetReq,EESideBandLowReweights_2JetReq,EESideBandHighReweights_2JetReq,JetCounter).first*PUweight);
		      if(HasDiJetPt){
			h_gfMet_reweightJet_binned_2JetReq->Fill(met->met(),GetMetReweight(diJETpt,"gf",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first*PUweight);
			h_gfMHT_reweight_2JetReq->Fill(MHT.Pt(),GetMetReweight(diJETpt,"gf",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first*PUweight);
			h_gfDiJetPt_reweight_binned_2JetReq->Fill(diJETpt,GetMetReweight(diJETpt,"gf",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first*PUweight);
			if(JetCounter==0){h_gfDiJetPt_2JetReq_0Jet->Fill(diJETpt);h_gfDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_gfDiJetPt_2JetReq_1Jet->Fill(diJETpt);h_gfDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_gfDiJetPt_2JetReq_2Jet->Fill(diJETpt);h_gfDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_gfDiJetPt_2JetReq_MoreThan2Jets->Fill(diJETpt);}
		      }
		      else{
			h_gfMet_reweightJet_binned_2JetReq->Fill(met->met(),GetMetReweight(diEMpt,"gf",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first*PUweight);
			h_gfMHT_reweight_2JetReq->Fill(MHT.Pt(),GetMetReweight(diEMpt,"gf",EEreweightsJet_2JetReq,FFreweightsJet_2JetReq,FGreweightsJet_2JetReq,GFreweightsJet_2JetReq,GammaFakereweightsJet_2JetReq,EESideBandLowReweightsJet_2JetReq,EESideBandHighReweightsJet_2JetReq,JetCounter).first*PUweight);
			h_gfDiJetPt_reweight_binned_2JetReq->Fill(diEMpt,GetMetReweight(diEMpt,"gf",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first*PUweight);
			if(JetCounter==0){h_gfDiJetPt_2JetReq_0Jet->Fill(diEMpt);h_gfDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_gfDiJetPt_2JetReq_1Jet->Fill(diEMpt);h_gfDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_gfDiJetPt_2JetReq_2Jet->Fill(diEMpt);h_gfDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_gfDiJetPt_2JetReq_MoreThan2Jets->Fill(diEMpt);}
			h_gfMet_NoJetMatch_2JetReq->Fill(met->met());
		      }	

		      for(int i=0;i<50;i++){
			if( ((fabs(PhoOne->caloPosition.Eta())<1.0 && (PhoOne->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			     || (fabs(PhoOne->caloPosition.Eta())>1.0 && (PhoOne->chargedHadronIso-0.010*Rho25)<(float)(i+1)))
			    && ((fabs(PhoTwo->caloPosition.Eta())<1.0 && (PhoTwo->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
				|| (fabs(PhoTwo->caloPosition.Eta())>1.0 && (PhoTwo->chargedHadronIso-0.010*Rho25)<(float)(i+1))) ){
			  h_gfMetChi2PF_2JetReq[i]->Fill(met->met());
			}
		      }
		    }//end 2JetReq
		  }//end JetReq
		}
		//Now do fg case
		else if(dofg){
		  nfg++;isfg=true;fgnumVert[NVertex]++;
		  h_fgMHT->Fill(MHT.Pt(),PUweight);
		  if (Use["LD" ])   fghistLD     ->Fill( reader->EvaluateMVA( "LD method"  ) );
		  if (Use["BDT"])   fghistBdt    ->Fill( reader->EvaluateMVA( "BDT method" ) );
		  if (Use["SVM"])   fghistSVM    ->Fill( reader->EvaluateMVA( "SVM method" ) );
		  h_fgMETdPhi->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi()));
		  h_fgMETdPhi->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi()));
		  ( (PhoOne->momentum.Et()>PhoTwo->momentum.Et()) ? h_fgMETdPhiLead->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())) : h_fgMETdPhiLead->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())) ) ;
		  ( (PhoOne->momentum.Et()>PhoTwo->momentum.Et()) ? h_fgMETdPhiTrail->Fill(getDphi(PhoTwo->caloPosition.Phi(),met->mEt.Phi())) : h_fgMETdPhiTrail->Fill(getDphi(PhoOne->caloPosition.Phi(),met->mEt.Phi())) );
		  h_nJets_fg->Fill(JetCounter);
		  h_ClosestDR_fg->Fill(ClosestDR);
		  for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.first.begin(); jet_it != pfJets.first.end(); jet_it++){
		    h_DRfromJets_fg->Fill(getDR(PhoOne->caloPosition, (*jet_it)->momentum),getDR(PhoTwo->caloPosition, (*jet_it)->momentum));
		  }
		  h_ClosestDPhi_fg->Fill(ClosestDPhi);
		  dPhi = std::fabs(TVector2::Phi_mpi_pi(PhoOne->caloPosition.Phi() - PhoTwo->caloPosition.Phi()));
		  h_fgdPhi->Fill(dPhi);
		  h_fgdR->Fill(getDR(PhoOne->momentum,PhoTwo->momentum));
		  h_fgPerInstLumi->Fill(event->avgInsRecLumi);
		  // Di-Jet Pt
		  if(HasDiJetPt){
		    h_fgDiJetPt->Fill(diJETpt);
		    h_fgDiJetPtOverDiEMPtVsDiEMPt->Fill(diEMpt,diJETpt/diEMpt);
		  }
		  else{h_fgDiJetPt->Fill(diEMpt);}
		  h_fgMet->Fill(met->met(),PUweight);
		  h_NVertex_fg->Fill(NVertex);
		  //h_fgMet_reweightNVertex->Fill(met->met(),gfNVweight[NVertex-1]);
		  DiPho = PhoOne->momentum + PhoTwo->momentum;
		  if(InvMass>120 && InvMass<130){
		    h_fgMETInvarMass120_130->Fill(met->met(),PUweight);h_fgMetMT_120_InvMass_130->Fill(TransverseMass(DiPho,met->mEt));
		    h_fgMetInvarMass_120_InvMass_130->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		  }
		  if(InvMass>123 && InvMass<128){
		    h_fgMETInvarMass123_128->Fill(met->met(),PUweight);h_fgMetMT_123_InvMass_128->Fill(TransverseMass(DiPho,met->mEt));
		    h_fgMetInvarMass_123_InvMass_128->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		  }
		  if(InvMass>95 && InvMass<110){
		    h_fgMETInvarMass95_110->Fill(met->met(),PUweight);h_fgMetMT_95_InvMass_110->Fill(TransverseMass(DiPho,met->mEt));
		    h_fgMetInvarMass_95_InvMass_110->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		  }
		  if(InvMass>135 && InvMass<160){
		    h_fgMETInvarMass135_160->Fill(met->met(),PUweight);h_fgMetMT_135_InvMass_160->Fill(TransverseMass(DiPho,met->mEt));
		    h_fgMetInvarMass_135_InvMass_160->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		  }
		  h_fgDiEMPt->Fill(diEMpt);
		  h_fgInvarMass->Fill(InvMass,PUweight);
		  h_fgMetMT->Fill(TransverseMass(DiPho,met->mEt));
		  h_fgMetInvarMass->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		  if(met->met()>30){
		    h_fgInvarMassMET30->Fill(InvMass,PUweight);
		    h_fgMetMT_MET30->Fill(TransverseMass(DiPho,met->mEt));
		    h_fgMetInvarMass_MET30->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		    if(met->met()>40){
		      h_fgInvarMassMET40->Fill(InvMass,PUweight);
		      h_fgMetMT_MET40->Fill(TransverseMass(DiPho,met->mEt));
		      h_fgMetInvarMass_MET40->Fill(InvariantMass(InvMass,DiPho,met->mEt));
		      if(met->met()>50){
			h_fgInvarMassMET50->Fill(InvMass,PUweight);
			h_fgMetMT_MET50->Fill(TransverseMass(DiPho,met->mEt));
			h_fgMetInvarMass_MET50->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			if(met->met()>60){
			  h_fgInvarMassMET60->Fill(InvMass,PUweight);
			  h_fgMetMT_MET60->Fill(TransverseMass(DiPho,met->mEt));
			  h_fgMetInvarMass_MET60->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			  if(met->met()>70){
			    h_fgInvarMassMET70->Fill(InvMass,PUweight);
			    h_fgMetMT_MET70->Fill(TransverseMass(DiPho,met->mEt));
			    h_fgMetInvarMass_MET70->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			    if(met->met()>80){
			      h_fgInvarMassMET80->Fill(InvMass,PUweight);
			      h_fgMetMT_MET80->Fill(TransverseMass(DiPho,met->mEt));
			      h_fgMetInvarMass_MET80->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			      if(met->met()>100){
				h_fgInvarMassMET100->Fill(InvMass,PUweight);
				h_fgMetMT_MET100->Fill(TransverseMass(DiPho,met->mEt));
				h_fgMetInvarMass_MET100->Fill(InvariantMass(InvMass,DiPho,met->mEt));
			      }
			    }
			  }
			}
		      }
		    }
		  }
		  h_DiEMPtVsMet_fg->Fill(met->met(),diEMpt);
		  h_fgMet_reweight_binned->Fill(met->met(),GetMetReweight(diEMpt,"fg",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first*PUweight);
		  if(HasDiJetPt){
		    h_fgMet_reweightJet_binned->Fill(met->met(),GetMetReweight(diJETpt,"fg",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first*PUweight);
		    h_fgMHT_reweight->Fill(MHT.Pt(),GetMetReweight(diJETpt,"fg",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first*PUweight);
		    h_fgDiJetPt_reweight_binned->Fill(diJETpt,GetMetReweight(diJETpt,"fg",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first*PUweight);
		    if(JetCounter==0){h_fgDiJetPt_0Jet->Fill(diJETpt);h_fgDiEMPt_0Jet->Fill(diEMpt);}
		    else if(JetCounter==1){h_fgDiJetPt_1Jet->Fill(diJETpt);h_fgDiEMPt_1Jet->Fill(diEMpt);}
		    else if(JetCounter>=2){h_fgDiJetPt_2Jet->Fill(diJETpt);h_fgDiEMPt_2Jet->Fill(diEMpt);}
		    if(JetCounter>2){h_fgDiJetPt_MoreThan2Jets->Fill(diJETpt);}
		    h_DiJetPtVsMet_fg->Fill(met->met(),diJETpt);
		  }
		  else{
		    h_fgMet_reweightJet_binned->Fill(met->met(),GetMetReweight(diEMpt,"fg",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first*PUweight);
		    h_fgMHT_reweight->Fill(MHT.Pt(),GetMetReweight(diEMpt,"fg",EEreweightsJet,FFreweightsJet,FGreweightsJet,GFreweightsJet,GammaFakereweightsJet,EESideBandLowReweightsJet,EESideBandHighReweightsJet,JetCounter).first*PUweight);
		    h_fgDiJetPt_reweight_binned->Fill(diEMpt,GetMetReweight(diEMpt,"fg",EEreweights,FFreweights,FGreweights,GFreweights,GammaFakereweights,EESideBandLowReweights,EESideBandHighReweights,JetCounter).first*PUweight);
		    if(JetCounter==0){h_fgDiJetPt_0Jet->Fill(diEMpt);h_fgDiEMPt_0Jet->Fill(diEMpt);}
		    else if(JetCounter==1){h_fgDiJetPt_1Jet->Fill(diEMpt);h_fgDiEMPt_1Jet->Fill(diEMpt);}
		    else if(JetCounter>=2){h_fgDiJetPt_2Jet->Fill(diEMpt);h_fgDiEMPt_2Jet->Fill(diEMpt);}
		    if(JetCounter>2){h_fgDiJetPt_MoreThan2Jets->Fill(diEMpt);}
		    h_fgMet_NoJetMatch->Fill(met->met());
		    h_DiJetPtVsMet_fg->Fill(met->met(),diEMpt);
		  }
		  for(int i=0;i<50;i++){
		    if( ((fabs(PhoOne->caloPosition.Eta())<1.0 && (PhoOne->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			 || (fabs(PhoOne->caloPosition.Eta())>1.0 && (PhoOne->chargedHadronIso-0.010*Rho25)<(float)(i+1)))
			&& ((fabs(PhoTwo->caloPosition.Eta())<1.0 && (PhoTwo->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			    || (fabs(PhoTwo->caloPosition.Eta())>1.0 && (PhoTwo->chargedHadronIso-0.010*Rho25)<(float)(i+1))) ){
		      h_fgMetChi2PF[i]->Fill(met->met());
		    }
		  }
		  if(doJetReq){
		    if(printLevel>0)cout<<"Line: "<<__LINE__<<"     Inside fg_JetReq"<<endl;
		    nfg_JetReq++;isfg_JetReq=true;
		    h_fgMHT_JetReq->Fill(MHT.Pt(),PUweight);
		    h_fgMHT_reweight_JetReq->Fill(MHT.Pt(),metReweightDiJetPt);
		    h_fgMet_JetReq->Fill(met->met(),PUweight);
		    if(InvMass>120 && InvMass<130)h_fgMETInvarMass120_130_JetReq->Fill(met->met(),PUweight);
		    if(InvMass>123 && InvMass<128)h_fgMETInvarMass123_128_JetReq->Fill(met->met(),PUweight);
		    if(InvMass>95 && InvMass<110)h_fgMETInvarMass95_110_JetReq->Fill(met->met(),PUweight);
		    if(InvMass>135 && InvMass<160)h_fgMETInvarMass135_160_JetReq->Fill(met->met(),PUweight);
		    h_fgDiEMPt_JetReq->Fill(diEMpt);	
		    if(HasDiJetPt){
		      h_fgDiJetPt_JetReq->Fill(diJETpt);
		      h_fgDiJetPtOverDiEMPtVsDiEMPt_JetReq->Fill(diEMpt,diJETpt/diEMpt);
		    }
		    else{h_fgDiJetPt_JetReq->Fill(diEMpt);}
		    h_fgInvarMass_JetReq->Fill(InvMass,PUweight);
		    if(met->met()>30){
		      h_fgInvarMassMET30_JetReq->Fill(InvMass,PUweight);
		      if(met->met()>40){
			h_fgInvarMassMET40_JetReq->Fill(InvMass,PUweight);
			if(met->met()>50){
			  h_fgInvarMassMET50_JetReq->Fill(InvMass,PUweight);
			  if(met->met()>60){
			    h_fgInvarMassMET60_JetReq->Fill(InvMass,PUweight);
			    if(met->met()>70){
			      h_fgInvarMassMET70_JetReq->Fill(InvMass,PUweight);
			      if(met->met()>80){
				h_fgInvarMassMET80_JetReq->Fill(InvMass,PUweight);
				if(met->met()>100){
				  h_fgInvarMassMET100_JetReq->Fill(InvMass,PUweight);
				}
			      }
			    }
			  }
			}
		      }
		    }
		    if(HasDiJetPt){
		      if(JetCounter==0){h_fgDiJetPt_JetReq_0Jet->Fill(diJETpt);h_fgDiEMPt_JetReq_0Jet->Fill(diEMpt);}
		      else if(JetCounter==1){h_fgDiJetPt_JetReq_1Jet->Fill(diJETpt);h_fgDiEMPt_JetReq_1Jet->Fill(diEMpt);}
		      else if(JetCounter>=2){h_fgDiJetPt_JetReq_2Jet->Fill(diJETpt);h_fgDiEMPt_JetReq_2Jet->Fill(diEMpt);}
		      if(JetCounter>2){h_fgDiJetPt_JetReq_MoreThan2Jets->Fill(diJETpt);}
		    }
		    else{
		      if(JetCounter==0){h_fgDiJetPt_JetReq_0Jet->Fill(diEMpt);h_fgDiEMPt_JetReq_0Jet->Fill(diEMpt);}
		      else if(JetCounter==1){h_fgDiJetPt_JetReq_1Jet->Fill(diEMpt);h_fgDiEMPt_JetReq_1Jet->Fill(diEMpt);}
		      else if(JetCounter>=2){h_fgDiJetPt_JetReq_2Jet->Fill(diEMpt);h_fgDiEMPt_JetReq_2Jet->Fill(diEMpt);}
		      if(JetCounter>2){h_fgDiJetPt_JetReq_MoreThan2Jets->Fill(diEMpt);}
		      h_fgMet_NoJetMatch_JetReq->Fill(met->met());
		    }	
		    for(int i=0;i<50;i++){
		      if( ((fabs(PhoOne->caloPosition.Eta())<1.0 && (PhoOne->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			   || (fabs(PhoOne->caloPosition.Eta())>1.0 && (PhoOne->chargedHadronIso-0.010*Rho25)<(float)(i+1)))
			  && ((fabs(PhoTwo->caloPosition.Eta())<1.0 && (PhoTwo->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			      || (fabs(PhoTwo->caloPosition.Eta())>1.0 && (PhoTwo->chargedHadronIso-0.010*Rho25)<(float)(i+1))) ){
			h_fgMetChi2PF_JetReq[i]->Fill(met->met());
		      }
		    }
		    if(JetCounter>=2){
		      if(printLevel>0)cout<<"Line: "<<__LINE__<<"     Inside fg_2JetReq"<<endl;
		      nfg_2JetReq++;isfg_2JetReq=true;
		      h_fgMHT_2JetReq->Fill(MHT.Pt(),PUweight);
		      h_fgMHT_reweight_2JetReq->Fill(MHT.Pt(),metReweightDiJetPt);
		      h_fgMet_2JetReq->Fill(met->met(),PUweight);
		      if(InvMass>120 && InvMass<130)h_fgMETInvarMass120_130_2JetReq->Fill(met->met(),PUweight);
		      if(InvMass>123 && InvMass<128)h_fgMETInvarMass123_128_2JetReq->Fill(met->met(),PUweight);
		      if(InvMass>95 && InvMass<110)h_fgMETInvarMass95_110_2JetReq->Fill(met->met(),PUweight);
		      if(InvMass>135 && InvMass<160)h_fgMETInvarMass135_160_2JetReq->Fill(met->met(),PUweight);
		      h_fgDiEMPt_2JetReq->Fill(diEMpt);	
		      if(HasDiJetPt){
			h_fgDiJetPt_2JetReq->Fill(diJETpt);
			h_fgDiJetPtOverDiEMPtVsDiEMPt_2JetReq->Fill(diEMpt,diJETpt/diEMpt);
		      }
		      else{h_fgDiJetPt_2JetReq->Fill(diEMpt);}
		      h_fgInvarMass_2JetReq->Fill(InvMass,PUweight);
		      if(met->met()>30){
			h_fgInvarMassMET30_2JetReq->Fill(InvMass,PUweight);
			if(met->met()>40){
			  h_fgInvarMassMET40_2JetReq->Fill(InvMass,PUweight);
			  if(met->met()>50){
			    h_fgInvarMassMET50_2JetReq->Fill(InvMass,PUweight);
			    if(met->met()>60){
			      h_fgInvarMassMET60_2JetReq->Fill(InvMass,PUweight);
			      if(met->met()>70){
				h_fgInvarMassMET70_2JetReq->Fill(InvMass,PUweight);
				if(met->met()>80){
				  h_fgInvarMassMET80_2JetReq->Fill(InvMass,PUweight);
				  if(met->met()>100){
				    h_fgInvarMassMET100_2JetReq->Fill(InvMass,PUweight);
				  }
				}
			      }
			    }
			  }
			}
		      }
		      if(HasDiJetPt){
			if(JetCounter==0){h_fgDiJetPt_2JetReq_0Jet->Fill(diJETpt);h_fgDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_fgDiJetPt_2JetReq_1Jet->Fill(diJETpt);h_fgDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_fgDiJetPt_2JetReq_2Jet->Fill(diJETpt);h_fgDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_fgDiJetPt_2JetReq_MoreThan2Jets->Fill(diJETpt);}
		      }
		      else{
			if(JetCounter==0){h_fgDiJetPt_2JetReq_0Jet->Fill(diEMpt);h_fgDiEMPt_2JetReq_0Jet->Fill(diEMpt);}
			else if(JetCounter==1){h_fgDiJetPt_2JetReq_1Jet->Fill(diEMpt);h_fgDiEMPt_2JetReq_1Jet->Fill(diEMpt);}
			else if(JetCounter>=2){h_fgDiJetPt_2JetReq_2Jet->Fill(diEMpt);h_fgDiEMPt_2JetReq_2Jet->Fill(diEMpt);}
			if(JetCounter>2){h_fgDiJetPt_2JetReq_MoreThan2Jets->Fill(diEMpt);}
			h_fgMet_NoJetMatch_2JetReq->Fill(met->met());
		      }	
		      for(int i=0;i<50;i++){
			if( ((fabs(PhoOne->caloPosition.Eta())<1.0 && (PhoOne->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
			     || (fabs(PhoOne->caloPosition.Eta())>1.0 && (PhoOne->chargedHadronIso-0.010*Rho25)<(float)(i+1)))
			    && ((fabs(PhoTwo->caloPosition.Eta())<1.0 && (PhoTwo->chargedHadronIso-0.012*Rho25)<(float)(i+1)) 
				|| (fabs(PhoTwo->caloPosition.Eta())>1.0 && (PhoTwo->chargedHadronIso-0.010*Rho25)<(float)(i+1))) ){
			  h_fgMetChi2PF_2JetReq[i]->Fill(met->met());
			}
		      }
		    }//end 2JetReq
		  }//end JetReq
		}//end fg
		//}//end pixel seed check
	      }//end tooclosedr, tooclosedphi, metoverlap
	    }//end size check
	  }//end !isgg and !isff
	}//new end photon loop
	
	
	//Filter events that pass json and hlt, have >=1 good vertex
	//----and have at least two photons with Et>30 (at least one with Et>43) that pass R9, h/e
	if(enableFilter) {
	  bool filterThis = 1;//(isgg || isee || iseg || isff || isgammafake || isgg_JetReq || isee_JetReq || iseg_JetReq || isff_JetReq || isgammafake_JetReq);
	  //bool filterThis = ( (isgg || isgg_JetReq) && met->met()>100 );
	  if(filterThis) {
	    nFiltered++;
	    filterTree->Fill();
	  }
	}// if(enableFilter)
	
	//Need to delete everything we new'ed:
	/*   cout<<" pho_Cands size after creation before final init: "<<pho_Cands.size()<<endl;
	     cout<<"fake_Cands size after creation before final init: "<<fake_Cands.size()<<endl;*/
	
	PhoOne=NULL;
	//delete PhoOne;
	PhoTwo=NULL;
	//delete PhoTwo;
	
	for(size_t i=0;i<pho_Cands.size();++i){
	  pho_Cands[i]=NULL;
	}
	for(size_t i=0;i<pho_Cands_NoEtCut.size();++i){
	  pho_Cands_NoEtCut[i]=NULL;
	}
	for(size_t i=0;i<fake_Cands.size();++i){
	  fake_Cands[i]=NULL;
	}
	pho_Cands.clear();pho_Cands_NoEtCut.clear();fake_Cands.clear();
  	
      }//if phoMap!=end (after phoMap def)
      
      if(printLevel>0) {
	cout << "------------------------------------------" << endl;
	cout << "              event summary" << endl;
	cout << "------------------------------------------" << endl;
	cout << "pfJets            : " << pfJets.first.size() << endl;
	cout << "------------------------------------------" << endl;
	cout << "------------------------------------------" << endl;
	cout << "met               : " << met->met() << endl;
	if(useTrigger){
	  for(size_t trig_it=0;trig_it<hltNames.size();trig_it++){
	    cout<<hltNames[trig_it]<<endl;
	  }
	}
      }
      
      
      if(printLevel>0) cout << "Apply event level cuts from now on..." << endl;
      // filter conditions
      
      if(met->met() < 20.0) continue;
      nCnt[14]++;
      
    }//end run number selection
  }// for jentry
  
  
  if (Use["BDT"]){ gghistBdt->Write(); eghistBdt->Write(); ffhistBdt->Write(); gfhistBdt->Write(); eehistBdt->Write(); }
  if (Use["LD"]){ gghistLD->Write(); eghistLD->Write(); ffhistLD->Write(); gfhistLD->Write(); eehistLD->Write(); }
  if (Use["SVM"]){ gghistSVM->Write(); eghistSVM->Write(); ffhistSVM->Write(); gfhistSVM->Write(); eehistSVM->Write(); }
  
  h_metOverGenMet->Divide(h_met,h_GenMet);
  h_Type1CorrMetOverGenMet->Divide(h_Type1CorrMet,h_GenMet);
  h_sumEtOverGenSumEt->Divide(h_sumEt,h_GenSumEt);
  h_Type1CorrSumEtOverGenSumEt->Divide(h_Type1CorrSumEt,h_GenSumEt);
  h_ggType1CorrMetOverMet->Divide(h_ggType1CorrMet,h_ggMet);
  h_egType1CorrMetOverMet->Divide(h_egType1CorrMet,h_egMet);
  h_ffType1CorrMetOverMet->Divide(h_ffType1CorrMet,h_ffMet);
  
  for(int i=0;i<100;i++){
    if(numVert[i]==0){
      h_ggPerNvertex->SetBinContent(i,0);   
      h_egPerNvertex->SetBinContent(i,0);    	
      h_eePerNvertex->SetBinContent(i,0);    	
      h_ffPerNvertex->SetBinContent(i,0);    	
      h_gfPerNvertex->SetBinContent(i,0);    	
      h_fgPerNvertex->SetBinContent(i,0);    	
      h_gammafakePerNvertex->SetBinContent(i,0);  
      h_ggPerNvertex->SetBinError(i,0);   
      h_egPerNvertex->SetBinError(i,0);    	
      h_eePerNvertex->SetBinError(i,0);    	
      h_ffPerNvertex->SetBinError(i,0);    	
      h_gfPerNvertex->SetBinError(i,0);    	
      h_fgPerNvertex->SetBinError(i,0);    	
      h_gammafakePerNvertex->SetBinError(i,0);   
    }
    else{
      h_ggPerNvertex->SetBinContent(i,ggnumVert[i]/numVert[i]);   
      h_egPerNvertex->SetBinContent(i,egnumVert[i]/numVert[i]);    	
      h_eePerNvertex->SetBinContent(i,eenumVert[i]/numVert[i]);    	
      h_ffPerNvertex->SetBinContent(i,ffnumVert[i]/numVert[i]);    	
      h_gfPerNvertex->SetBinContent(i,gfnumVert[i]/numVert[i]);  
      h_fgPerNvertex->SetBinContent(i,fgnumVert[i]/numVert[i]);  
      h_gammafakePerNvertex->SetBinContent(i,gammafakenumVert[i]/numVert[i]);  
      h_ggPerNvertex->SetBinError(i,sqrt(1./(ggnumVert[i]+.000001) + 1./(numVert[i]+.000001))*ggnumVert[i]/numVert[i]);   
      h_egPerNvertex->SetBinError(i,sqrt(1./(egnumVert[i]+.000001) + 1./(numVert[i]+.000001))*egnumVert[i]/numVert[i]);    	
      h_eePerNvertex->SetBinError(i,sqrt(1./(eenumVert[i]+.000001) + 1./(numVert[i]+.000001))*eenumVert[i]/numVert[i]);    	
      h_ffPerNvertex->SetBinError(i,sqrt(1./(ffnumVert[i]+.000001) + 1./(numVert[i]+.000001))*ffnumVert[i]/numVert[i]);    	
      h_gfPerNvertex->SetBinError(i,sqrt(1./(gfnumVert[i]+.000001) + 1./(numVert[i]+.000001))*gfnumVert[i]/numVert[i]); 
      h_fgPerNvertex->SetBinError(i,sqrt(1./(fgnumVert[i]+.000001) + 1./(numVert[i]+.000001))*fgnumVert[i]/numVert[i]); 
      h_gammafakePerNvertex->SetBinError(i,sqrt(1./(gammafakenumVert[i]+.000001) + 1./(numVert[i]+.000001))*gammafakenumVert[i]/numVert[i]); 
    }
  }
  
  //make data NVertex weight ratios
  h_NVertex_gg->Sumw2();h_NVertex_ff->Sumw2();h_NVertex_eg->Sumw2();h_NVertex_gf->Sumw2();h_NVertex_fg->Sumw2();h_NVertex_gammafake->Sumw2();
  //cout<<"h_NVertex_gg integral:"<<h_NVertex_gg->Integral()<<endl;
  TH1F* gg_eg_NVertexRatio = new TH1F("gg_eg_NVertexRatio","",40,0,40);
  //cout<<"gg_eg_NVertexRatio integral:"<<gg_eg_NVertexRatio->Integral()<<endl;
  TH1F* gg_ff_NVertexRatio= new TH1F("gg_ff_NVertexRatio","",40,0,40);
  TH1F* gg_gf_NVertexRatio= new TH1F("gg_gf_NVertexRatio","",40,0,40);
  TH1F* gg_fg_NVertexRatio= new TH1F("gg_fg_NVertexRatio","",40,0,40);
  TH1F* gg_gammafake_NVertexRatio= new TH1F("gg_gammafake_NVertexRatio","",40,0,40);

  float NVscale = h_NVertex_gg->Integral()/h_NVertex_eg->Integral();
  //cout<<"NVscale:"<<NVscale<<endl;
  TH1F* egNVertex = (TH1F*)h_NVertex_eg->Clone();egNVertex->Scale(NVscale);
  NVscale = h_NVertex_gg->Integral()/h_NVertex_ff->Integral();
  TH1F* ffNVertex = (TH1F*)h_NVertex_ff->Clone();ffNVertex->Scale(NVscale);
  NVscale = h_NVertex_gg->Integral()/h_NVertex_gf->Integral();
  TH1F* gfNVertex = (TH1F*)h_NVertex_gf->Clone();gfNVertex->Scale(NVscale);
  NVscale = h_NVertex_gg->Integral()/h_NVertex_fg->Integral();
  TH1F* fgNVertex = (TH1F*)h_NVertex_fg->Clone();fgNVertex->Scale(NVscale);
  NVscale = h_NVertex_gg->Integral()/h_NVertex_gammafake->Integral();
  TH1F* gammafakeNVertex = (TH1F*)h_NVertex_gammafake->Clone();gammafakeNVertex->Scale(NVscale);

  gg_eg_NVertexRatio->Divide(h_NVertex_gg,egNVertex,1,1,"");
  gg_ff_NVertexRatio->Divide(h_NVertex_gg,ffNVertex,1,1,"");
  gg_gf_NVertexRatio->Divide(h_NVertex_gg,gfNVertex,1,1,"");
  gg_fg_NVertexRatio->Divide(h_NVertex_gg,gfNVertex,1,1,"");
  gg_gammafake_NVertexRatio->Divide(h_NVertex_gg,gfNVertex,1,1,"");

  //cout<<"gg_eg_NVertexRatio integral:"<<gg_eg_NVertexRatio->Integral()<<endl;


  //make DiEMPt Ratio
  TH1F *h_ggeeDiEMPtRatio = new TH1F("ggeeDiEMPtRatio","ggDiEMPt/eeDiEMPt - No Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiEMPtRatio->GetSumw2N()==0)h_ggeeDiEMPtRatio->Sumw2();
  TH1F *h_ggeeDiEMPtRatio_0Jet = new TH1F("ggeeDiEMPtRatio_0Jet","ggDiEMPt/eeDiEMPt - Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiEMPtRatio_0Jet->GetSumw2N()==0)h_ggeeDiEMPtRatio_0Jet->Sumw2();
  TH1F *h_ggeeDiEMPtRatio_1Jet = new TH1F("ggeeDiEMPtRatio_1Jet","ggDiEMPt/eeDiEMPt - Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiEMPtRatio_1Jet->GetSumw2N()==0)h_ggeeDiEMPtRatio_1Jet->Sumw2();
  TH1F *h_ggeeDiEMPtRatio_2Jet = new TH1F("ggeeDiEMPtRatio_2Jet","ggDiEMPt/eeDiEMPt - Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiEMPtRatio_2Jet->GetSumw2N()==0)h_ggeeDiEMPtRatio_2Jet->Sumw2();
  TH1F *h_ggeeDiJetPtRatio = new TH1F("ggeeDiJetPtRatio","ggDiJetPt/eeDiJetPt - No Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiJetPtRatio->GetSumw2N()==0)h_ggeeDiJetPtRatio->Sumw2();
  TH1F *h_ggeeDiJetPtRatio_0Jet = new TH1F("ggeeDiJetPtRatio_0Jet","ggDiJetPt/eeDiJetPt - Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiJetPtRatio_0Jet->GetSumw2N()==0)h_ggeeDiJetPtRatio_0Jet->Sumw2();
  TH1F *h_ggeeDiJetPtRatio_1Jet = new TH1F("ggeeDiJetPtRatio_1Jet","ggDiJetPt/eeDiJetPt - Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiJetPtRatio_1Jet->GetSumw2N()==0)h_ggeeDiJetPtRatio_1Jet->Sumw2();
  TH1F *h_ggeeDiJetPtRatio_2Jet = new TH1F("ggeeDiJetPtRatio_2Jet","ggDiJetPt/eeDiJetPt - Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiJetPtRatio_2Jet->GetSumw2N()==0)h_ggeeDiJetPtRatio_2Jet->Sumw2();
  TH1F *h_ggeeSideBandDiEMPtRatio = new TH1F("ggeeSideBandDiEMPtRatio","ggDiEMPt/eeSideBandDiEMPt - No Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandDiEMPtRatio->GetSumw2N()==0)h_ggeeSideBandDiEMPtRatio->Sumw2();
  TH1F *h_ggeeSideBandDiJetPtRatio = new TH1F("ggeeSideBandDiJetPtRatio","ggDiJetPt/eeSideBandDiJetPt - No Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandDiJetPtRatio->GetSumw2N()==0)h_ggeeSideBandDiJetPtRatio->Sumw2();
  TH1F *h_ggeeSideBandLowDiJetPtRatio = new TH1F("ggeeSideBandLowDiJetPtRatio","ggDiJetPt/eeSideBandLowDiJetPt - No Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiJetPtRatio->GetSumw2N()==0)h_ggeeSideBandLowDiJetPtRatio->Sumw2();
  TH1F *h_ggeeSideBandLowDiJetPtRatio_0Jet = new TH1F("ggeeSideBandLowDiJetPtRatio_0Jet","ggDiJetPt/eeSideBandLowDiJetPt - Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiJetPtRatio_0Jet->GetSumw2N()==0)h_ggeeSideBandLowDiJetPtRatio_0Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiJetPtRatio_1Jet = new TH1F("ggeeSideBandLowDiJetPtRatio_1Jet","ggDiJetPt/eeSideBandLowDiJetPt - Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiJetPtRatio_1Jet->GetSumw2N()==0)h_ggeeSideBandLowDiJetPtRatio_1Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiJetPtRatio_2Jet = new TH1F("ggeeSideBandLowDiJetPtRatio_2Jet","ggDiJetPt/eeSideBandLowDiJetPt - Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiJetPtRatio_2Jet->GetSumw2N()==0)h_ggeeSideBandLowDiJetPtRatio_2Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiEMPtRatio = new TH1F("ggeeSideBandHighDiEMPtRatio","ggDiEMPt/eeSideBandHighDiEMPt - No Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiEMPtRatio->GetSumw2N()==0)h_ggeeSideBandHighDiEMPtRatio->Sumw2();
  TH1F *h_ggeeSideBandHighDiEMPtRatio_0Jet = new TH1F("ggeeSideBandHighDiEMPtRatio_0Jet","ggDiEMPt/eeSideBandHighDiEMPt - Require exactly 0 Jets;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiEMPtRatio_0Jet->GetSumw2N()==0)h_ggeeSideBandHighDiEMPtRatio_0Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiEMPtRatio_1Jet = new TH1F("ggeeSideBandHighDiEMPtRatio_1Jet","ggDiEMPt/eeSideBandHighDiEMPt - Require exactly 1 Jet;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiEMPtRatio_1Jet->GetSumw2N()==0)h_ggeeSideBandHighDiEMPtRatio_1Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiEMPtRatio_2Jet = new TH1F("ggeeSideBandHighDiEMPtRatio_2Jet","ggDiEMPt/eeSideBandHighDiEMPt - Require at least 2 Jets;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiEMPtRatio_2Jet->GetSumw2N()==0)h_ggeeSideBandHighDiEMPtRatio_2Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiEMPtRatio = new TH1F("ggeeSideBandLowDiEMPtRatio","ggDiEMPt/eeSideBandLowDiEMPt - No Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiEMPtRatio->GetSumw2N()==0)h_ggeeSideBandLowDiEMPtRatio->Sumw2();
  TH1F *h_ggeeSideBandLowDiEMPtRatio_0Jet = new TH1F("ggeeSideBandLowDiEMPtRatio_0Jet","ggDiEMPt/eeSideBandLowDiEMPt - Require exactly 0 Jets;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiEMPtRatio_0Jet->GetSumw2N()==0)h_ggeeSideBandLowDiEMPtRatio_0Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiEMPtRatio_1Jet = new TH1F("ggeeSideBandLowDiEMPtRatio_1Jet","ggDiEMPt/eeSideBandLowDiEMPt - Require exactly 1 Jet;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiEMPtRatio_1Jet->GetSumw2N()==0)h_ggeeSideBandLowDiEMPtRatio_1Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiEMPtRatio_2Jet = new TH1F("ggeeSideBandLowDiEMPtRatio_2Jet","ggDiEMPt/eeSideBandLowDiEMPt - Require at least 2 Jets;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiEMPtRatio_2Jet->GetSumw2N()==0)h_ggeeSideBandLowDiEMPtRatio_2Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiEMPtRatio_JetReq = new TH1F("ggeeSideBandHighDiEMPtRatio_JetReq","ggDiEMPt/eeSideBandHighDiEMPt - No Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiEMPtRatio->GetSumw2N()==0)h_ggeeSideBandHighDiEMPtRatio_JetReq->Sumw2();
  TH1F *h_ggeeSideBandHighDiEMPtRatio_JetReq_0Jet = new TH1F("ggeeSideBandHighDiEMPtRatio_JetReq_0Jet","ggDiEMPt/eeSideBandHighDiEMPt - Require exactly 0 Jets;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiEMPtRatio_JetReq_0Jet->GetSumw2N()==0)h_ggeeSideBandHighDiEMPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiEMPtRatio_JetReq_1Jet = new TH1F("ggeeSideBandHighDiEMPtRatio_JetReq_1Jet","ggDiEMPt/eeSideBandHighDiEMPt - Require exactly 1 Jet;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiEMPtRatio_JetReq_1Jet->GetSumw2N()==0)h_ggeeSideBandHighDiEMPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiEMPtRatio_JetReq_2Jet = new TH1F("ggeeSideBandHighDiEMPtRatio_JetReq_2Jet","ggDiEMPt/eeSideBandHighDiEMPt - Require at least 2 Jets;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiEMPtRatio_JetReq_2Jet->GetSumw2N()==0)h_ggeeSideBandHighDiEMPtRatio_JetReq_2Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiEMPtRatio_JetReq = new TH1F("ggeeSideBandLowDiEMPtRatio_JetReq","ggDiEMPt/eeSideBandLowDiEMPt - No Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiEMPtRatio->GetSumw2N()==0)h_ggeeSideBandLowDiEMPtRatio_JetReq->Sumw2();
  TH1F *h_ggeeSideBandLowDiEMPtRatio_JetReq_0Jet = new TH1F("ggeeSideBandLowDiEMPtRatio_JetReq_0Jet","ggDiEMPt/eeSideBandLowDiEMPt - Require exactly 0 Jets;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiEMPtRatio_JetReq_0Jet->GetSumw2N()==0)h_ggeeSideBandLowDiEMPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiEMPtRatio_JetReq_1Jet = new TH1F("ggeeSideBandLowDiEMPtRatio_JetReq_1Jet","ggDiEMPt/eeSideBandLowDiEMPt - Require exactly 1 Jet;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiEMPtRatio_JetReq_1Jet->GetSumw2N()==0)h_ggeeSideBandLowDiEMPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiEMPtRatio_JetReq_2Jet = new TH1F("ggeeSideBandLowDiEMPtRatio_JetReq_2Jet","ggDiEMPt/eeSideBandLowDiEMPt - Require at least 2 Jets;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiEMPtRatio_JetReq_2Jet->GetSumw2N()==0)h_ggeeSideBandLowDiEMPtRatio_JetReq_2Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiEMPtRatio_2JetReq = new TH1F("ggeeSideBandHighDiEMPtRatio_2JetReq","ggDiEMPt/eeSideBandHighDiEMPt - No Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiEMPtRatio->GetSumw2N()==0)h_ggeeSideBandHighDiEMPtRatio_2JetReq->Sumw2();
  TH1F *h_ggeeSideBandHighDiEMPtRatio_2JetReq_0Jet = new TH1F("ggeeSideBandHighDiEMPtRatio_2JetReq_0Jet","ggDiEMPt/eeSideBandHighDiEMPt - Require exactly 0 Jets;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiEMPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_ggeeSideBandHighDiEMPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiEMPtRatio_2JetReq_1Jet = new TH1F("ggeeSideBandHighDiEMPtRatio_2JetReq_1Jet","ggDiEMPt/eeSideBandHighDiEMPt - Require exactly 1 Jet;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiEMPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_ggeeSideBandHighDiEMPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiEMPtRatio_2JetReq_2Jet = new TH1F("ggeeSideBandHighDiEMPtRatio_2JetReq_2Jet","ggDiEMPt/eeSideBandHighDiEMPt - Require at least 2 Jets;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiEMPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_ggeeSideBandHighDiEMPtRatio_2JetReq_2Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiEMPtRatio_2JetReq = new TH1F("ggeeSideBandLowDiEMPtRatio_2JetReq","ggDiEMPt/eeSideBandLowDiEMPt - No Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiEMPtRatio->GetSumw2N()==0)h_ggeeSideBandLowDiEMPtRatio_2JetReq->Sumw2();
  TH1F *h_ggeeSideBandLowDiEMPtRatio_2JetReq_0Jet = new TH1F("ggeeSideBandLowDiEMPtRatio_2JetReq_0Jet","ggDiEMPt/eeSideBandLowDiEMPt - Require exactly 0 Jets;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiEMPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_ggeeSideBandLowDiEMPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiEMPtRatio_2JetReq_1Jet = new TH1F("ggeeSideBandLowDiEMPtRatio_2JetReq_1Jet","ggDiEMPt/eeSideBandLowDiEMPt - Require exactly 1 Jet;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiEMPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_ggeeSideBandLowDiEMPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiEMPtRatio_2JetReq_2Jet = new TH1F("ggeeSideBandLowDiEMPtRatio_2JetReq_2Jet","ggDiEMPt/eeSideBandLowDiEMPt - Require at least 2 Jets;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiEMPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_ggeeSideBandLowDiEMPtRatio_2JetReq_2Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiJetPtRatio = new TH1F("ggeeSideBandHighDiJetPtRatio","ggDiJetPt/eeSideBandHighDiJetPt - No Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiJetPtRatio->GetSumw2N()==0)h_ggeeSideBandHighDiJetPtRatio->Sumw2();
  TH1F *h_ggeeSideBandHighDiJetPtRatio_0Jet = new TH1F("ggeeSideBandHighDiJetPtRatio_0Jet","ggDiJetPt/eeSideBandHighDiJetPt - Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiJetPtRatio_0Jet->GetSumw2N()==0)h_ggeeSideBandHighDiJetPtRatio_0Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiJetPtRatio_1Jet = new TH1F("ggeeSideBandHighDiJetPtRatio_1Jet","ggDiJetPt/eeSideBandHighDiJetPt - Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiJetPtRatio_1Jet->GetSumw2N()==0)h_ggeeSideBandHighDiJetPtRatio_1Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiJetPtRatio_2Jet = new TH1F("ggeeSideBandHighDiJetPtRatio_2Jet","ggDiJetPt/eeSideBandHighDiJetPt - Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiJetPtRatio_2Jet->GetSumw2N()==0)h_ggeeSideBandHighDiJetPtRatio_2Jet->Sumw2();
  TH1F *h_ggffDiEMPtRatio = new TH1F("ggffDiEMPtRatio","ggDiEMPt/ffDiEMPt - No Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiEMPtRatio->GetSumw2N()==0)h_ggffDiEMPtRatio->Sumw2();
  TH1F *h_ggffDiEMPtRatio_0Jet = new TH1F("ggffDiEMPtRatio_0Jet","ggDiEMPt/ffDiEMPt - Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiEMPtRatio_0Jet->GetSumw2N()==0)h_ggffDiEMPtRatio_0Jet->Sumw2();
  TH1F *h_ggffDiEMPtRatio_1Jet = new TH1F("ggffDiEMPtRatio_1Jet","ggDiEMPt/ffDiEMPt - Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiEMPtRatio_1Jet->GetSumw2N()==0)h_ggffDiEMPtRatio_1Jet->Sumw2();
  TH1F *h_ggffDiEMPtRatio_2Jet = new TH1F("ggffDiEMPtRatio_2Jet","ggDiEMPt/ffDiEMPt - Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiEMPtRatio_2Jet->GetSumw2N()==0)h_ggffDiEMPtRatio_2Jet->Sumw2();
  TH1F *h_ggffDiJetPtRatio = new TH1F("ggffDiJetPtRatio","ggDiJetPt/ffDiJetPt - No Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiJetPtRatio->GetSumw2N()==0)h_ggffDiJetPtRatio->Sumw2();
  TH1F *h_ggffDiJetPtRatio_0Jet = new TH1F("ggffDiJetPtRatio_0Jet","ggDiJetPt/ffDiJetPt - Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiJetPtRatio_0Jet->GetSumw2N()==0)h_ggffDiJetPtRatio_0Jet->Sumw2();
  TH1F *h_ggffDiJetPtRatio_1Jet = new TH1F("ggffDiJetPtRatio_1Jet","ggDiJetPt/ffDiJetPt - Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiJetPtRatio_1Jet->GetSumw2N()==0)h_ggffDiJetPtRatio_1Jet->Sumw2();
  TH1F *h_ggffDiJetPtRatio_2Jet = new TH1F("ggffDiJetPtRatio_2Jet","ggDiJetPt/ffDiJetPt - Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiJetPtRatio_2Jet->GetSumw2N()==0)h_ggffDiJetPtRatio_2Jet->Sumw2();
  TH1F *h_ggffDiEMPtRatio_JetReq = new TH1F("ggffDiEMPtRatio_JetReq","ggDiEMPt/ffDiEMPt - 1+ Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiEMPtRatio_JetReq->GetSumw2N()==0)h_ggffDiEMPtRatio_JetReq->Sumw2(); 
  TH1F *h_ggffDiEMPtRatio_2JetReq = new TH1F("ggffDiEMPtRatio_2JetReq","ggDiEMPt/ffDiEMPt - 2+ Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiEMPtRatio_2JetReq->GetSumw2N()==0)h_ggffDiEMPtRatio_2JetReq->Sumw2(); 
  TH1F *h_gggfDiEMPtRatio = new TH1F("gggfDiEMPtRatio","ggDiEMPt/gfDiEMPt - No Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiEMPtRatio->GetSumw2N()==0)h_gggfDiEMPtRatio->Sumw2();
  TH1F *h_gggfDiEMPtRatio_0Jet = new TH1F("gggfDiEMPtRatio_0Jet","ggDiEMPt/gfDiEMPt - Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiEMPtRatio_0Jet->GetSumw2N()==0)h_gggfDiEMPtRatio_0Jet->Sumw2();
  TH1F *h_gggfDiEMPtRatio_1Jet = new TH1F("gggfDiEMPtRatio_1Jet","ggDiEMPt/gfDiEMPt - Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiEMPtRatio_1Jet->GetSumw2N()==0)h_gggfDiEMPtRatio_1Jet->Sumw2();
  TH1F *h_gggfDiEMPtRatio_2Jet = new TH1F("gggfDiEMPtRatio_2Jet","ggDiEMPt/gfDiEMPt - Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiEMPtRatio_2Jet->GetSumw2N()==0)h_gggfDiEMPtRatio_2Jet->Sumw2();
  TH1F *h_gggfDiJetPtRatio = new TH1F("gggfDiJetPtRatio","ggDiJetPt/gfDiJetPt - No Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiJetPtRatio->GetSumw2N()==0)h_gggfDiJetPtRatio->Sumw2();
  TH1F *h_gggfDiJetPtRatio_0Jet = new TH1F("gggfDiJetPtRatio_0Jet","ggDiJetPt/gfDiJetPt - Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiJetPtRatio_0Jet->GetSumw2N()==0)h_gggfDiJetPtRatio_0Jet->Sumw2();
  TH1F *h_gggfDiJetPtRatio_1Jet = new TH1F("gggfDiJetPtRatio_1Jet","ggDiJetPt/gfDiJetPt - Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiJetPtRatio_1Jet->GetSumw2N()==0)h_gggfDiJetPtRatio_1Jet->Sumw2();
  TH1F *h_gggfDiJetPtRatio_2Jet = new TH1F("gggfDiJetPtRatio_2Jet","ggDiJetPt/gfDiJetPt - Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiJetPtRatio_2Jet->GetSumw2N()==0)h_gggfDiJetPtRatio_2Jet->Sumw2();

  TH1F *h_gggfDiEMPtRatio_JetReq = new TH1F("gggfDiEMPtRatio_JetReq","ggDiEMPt/gfDiEMPt - 1+ Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiEMPtRatio_JetReq->GetSumw2N()==0)h_gggfDiEMPtRatio_JetReq->Sumw2();
  TH1F *h_gggfDiEMPtRatio_2JetReq = new TH1F("gggfDiEMPtRatio_2JetReq","ggDiEMPt/gfDiEMPt - 2+ Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiEMPtRatio_2JetReq->GetSumw2N()==0)h_gggfDiEMPtRatio_2JetReq->Sumw2();
  TH1F *h_ggfgDiEMPtRatio = new TH1F("ggfgDiEMPtRatio","ggDiEMPt/fgDiEMPt - No Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiEMPtRatio->GetSumw2N()==0)h_ggfgDiEMPtRatio->Sumw2();
  TH1F *h_ggfgDiEMPtRatio_0Jet = new TH1F("ggfgDiEMPtRatio_0Jet","ggDiEMPt/fgDiEMPt - Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiEMPtRatio_0Jet->GetSumw2N()==0)h_ggfgDiEMPtRatio_0Jet->Sumw2();
  TH1F *h_ggfgDiEMPtRatio_1Jet = new TH1F("ggfgDiEMPtRatio_1Jet","ggDiEMPt/fgDiEMPt - Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiEMPtRatio_1Jet->GetSumw2N()==0)h_ggfgDiEMPtRatio_1Jet->Sumw2();
  TH1F *h_ggfgDiEMPtRatio_2Jet = new TH1F("ggfgDiEMPtRatio_2Jet","ggDiEMPt/fgDiEMPt - Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiEMPtRatio_2Jet->GetSumw2N()==0)h_ggfgDiEMPtRatio_2Jet->Sumw2();
  TH1F *h_ggfgDiJetPtRatio = new TH1F("ggfgDiJetPtRatio","ggDiJetPt/fgDiJetPt - No Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiJetPtRatio->GetSumw2N()==0)h_ggfgDiJetPtRatio->Sumw2();
  TH1F *h_ggfgDiJetPtRatio_0Jet = new TH1F("ggfgDiJetPtRatio_0Jet","ggDiJetPt/fgDiJetPt - Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiJetPtRatio_0Jet->GetSumw2N()==0)h_ggfgDiJetPtRatio_0Jet->Sumw2();
  TH1F *h_ggfgDiJetPtRatio_1Jet = new TH1F("ggfgDiJetPtRatio_1Jet","ggDiJetPt/fgDiJetPt - Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiJetPtRatio_1Jet->GetSumw2N()==0)h_ggfgDiJetPtRatio_1Jet->Sumw2();
  TH1F *h_ggfgDiJetPtRatio_2Jet = new TH1F("ggfgDiJetPtRatio_2Jet","ggDiJetPt/fgDiJetPt - Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiJetPtRatio_2Jet->GetSumw2N()==0)h_ggfgDiJetPtRatio_2Jet->Sumw2();

  TH1F *h_ggfgDiEMPtRatio_JetReq = new TH1F("ggfgDiEMPtRatio_JetReq","ggDiEMPt/fgDiEMPt - 1+ Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiEMPtRatio_JetReq->GetSumw2N()==0)h_ggfgDiEMPtRatio_JetReq->Sumw2();
  TH1F *h_ggfgDiEMPtRatio_2JetReq = new TH1F("ggfgDiEMPtRatio_2JetReq","ggDiEMPt/fgDiEMPt - 2+ Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiEMPtRatio_2JetReq->GetSumw2N()==0)h_ggfgDiEMPtRatio_2JetReq->Sumw2();


  TH1F *h_gggammafakeDiEMPtRatio = new TH1F("gggammafakeDiEMPtRatio","ggDiEMPt/gammafakeDiEMPt - No Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiEMPtRatio->GetSumw2N()==0)h_gggammafakeDiEMPtRatio->Sumw2();
  TH1F *h_gggammafakeDiEMPtRatio_0Jet = new TH1F("gggammafakeDiEMPtRatio_0Jet","ggDiEMPt/gammafakeDiEMPt - Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiEMPtRatio_0Jet->GetSumw2N()==0)h_gggammafakeDiEMPtRatio_0Jet->Sumw2();
  TH1F *h_gggammafakeDiEMPtRatio_1Jet = new TH1F("gggammafakeDiEMPtRatio_1Jet","ggDiEMPt/gammafakeDiEMPt - Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiEMPtRatio_1Jet->GetSumw2N()==0)h_gggammafakeDiEMPtRatio_1Jet->Sumw2();
  TH1F *h_gggammafakeDiEMPtRatio_2Jet = new TH1F("gggammafakeDiEMPtRatio_2Jet","ggDiEMPt/gammafakeDiEMPt - Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiEMPtRatio_2Jet->GetSumw2N()==0)h_gggammafakeDiEMPtRatio_2Jet->Sumw2();
  TH1F *h_gggammafakeDiJetPtRatio = new TH1F("gggammafakeDiJetPtRatio","ggDiJetPt/gammafakeDiJetPt - No Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiJetPtRatio->GetSumw2N()==0)h_gggammafakeDiJetPtRatio->Sumw2();
  TH1F *h_gggammafakeDiJetPtRatio_0Jet = new TH1F("gggammafakeDiJetPtRatio_0Jet","ggDiJetPt/gammafakeDiJetPt - Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiJetPtRatio_0Jet->GetSumw2N()==0)h_gggammafakeDiJetPtRatio_0Jet->Sumw2();
  TH1F *h_gggammafakeDiJetPtRatio_1Jet = new TH1F("gggammafakeDiJetPtRatio_1Jet","ggDiJetPt/gammafakeDiJetPt - Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiJetPtRatio_1Jet->GetSumw2N()==0)h_gggammafakeDiJetPtRatio_1Jet->Sumw2();
  TH1F *h_gggammafakeDiJetPtRatio_2Jet = new TH1F("gggammafakeDiJetPtRatio_2Jet","ggDiJetPt/gammafakeDiJetPt - Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiJetPtRatio_2Jet->GetSumw2N()==0)h_gggammafakeDiJetPtRatio_2Jet->Sumw2();

  TH1F *h_gggammafakeDiEMPtRatio_JetReq = new TH1F("gggammafakeDiEMPtRatio_JetReq","ggDiEMPt/gammafakeDiEMPt - 1+ Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiEMPtRatio_JetReq->GetSumw2N()==0)h_gggammafakeDiEMPtRatio_JetReq->Sumw2();
  TH1F *h_gggammafakeDiEMPtRatio_2JetReq = new TH1F("gggammafakeDiEMPtRatio_2JetReq","ggDiEMPt/gammafakeDiEMPt - 2+ Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiEMPtRatio_2JetReq->GetSumw2N()==0)h_gggammafakeDiEMPtRatio_2JetReq->Sumw2();


  TH1F *h_ggeeDiEMPtRatio_JetReq = new TH1F("ggeeDiEMPtRatio_JetReq","ggDiEMPt/eeDiEMPt - 1+ Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiEMPtRatio_JetReq->GetSumw2N()==0)h_ggeeDiEMPtRatio_JetReq->Sumw2();
  TH1F *h_ggeeDiEMPtRatio_JetReq_0Jet = new TH1F("ggeeDiEMPtRatio_JetReq_0Jet","ggDiEMPt/eeDiEMPt - 1+ Jet Requirement Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiEMPtRatio_JetReq_0Jet->GetSumw2N()==0)h_ggeeDiEMPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_ggeeDiEMPtRatio_JetReq_1Jet = new TH1F("ggeeDiEMPtRatio_JetReq_1Jet","ggDiEMPt/eeDiEMPt - 1+ Jet Requirement Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiEMPtRatio_JetReq_1Jet->GetSumw2N()==0)h_ggeeDiEMPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_ggeeDiEMPtRatio_JetReq_2Jet = new TH1F("ggeeDiEMPtRatio_JetReq_2Jet","ggDiEMPt/eeDiEMPt - 1+ Jet Requirement Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiEMPtRatio_JetReq_2Jet->GetSumw2N()==0)h_ggeeDiEMPtRatio_JetReq_2Jet->Sumw2();
  TH1F *h_ggeeDiJetPtRatio_JetReq = new TH1F("ggeeDiJetPtRatio_JetReq","ggDiJetPt/eeDiJetPt - 1+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiJetPtRatio_JetReq->GetSumw2N()==0)h_ggeeDiJetPtRatio_JetReq->Sumw2();
  TH1F *h_ggeeDiJetPtRatio_JetReq_0Jet = new TH1F("ggeeDiJetPtRatio_JetReq_0Jet","ggDiJetPt/eeDiJetPt - 1+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiJetPtRatio_JetReq_0Jet->GetSumw2N()==0)h_ggeeDiJetPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_ggeeDiJetPtRatio_JetReq_1Jet = new TH1F("ggeeDiJetPtRatio_JetReq_1Jet","ggDiJetPt/eeDiJetPt - 1+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiJetPtRatio_JetReq_1Jet->GetSumw2N()==0)h_ggeeDiJetPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_ggeeDiJetPtRatio_JetReq_2Jet = new TH1F("ggeeDiJetPtRatio_JetReq_2Jet","ggDiJetPt/eeDiJetPt - 1+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiJetPtRatio_JetReq_2Jet->GetSumw2N()==0)h_ggeeDiJetPtRatio_JetReq_2Jet->Sumw2();
  TH1F *h_ggeeSideBandDiEMPtRatio_JetReq = new TH1F("ggeeSideBandDiEMPtRatio_JetReq","ggDiEMPt/eeSideBandDiEMPt - 1+ Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandDiEMPtRatio_JetReq->GetSumw2N()==0)h_ggeeSideBandDiEMPtRatio_JetReq->Sumw2();
  TH1F *h_ggeeSideBandDiJetPtRatio_JetReq = new TH1F("ggeeSideBandDiJetPtRatio_JetReq","ggDiJetPt/eeSideBandDiJetPt - 1+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandDiJetPtRatio_JetReq->GetSumw2N()==0)h_ggeeSideBandDiJetPtRatio_JetReq->Sumw2();
  TH1F *h_ggeeSideBandLowDiJetPtRatio_JetReq = new TH1F("ggeeSideBandLowDiJetPtRatio_JetReq","ggDiJetPt/eeSideBandLowDiJetPt - 1+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiJetPtRatio_JetReq->GetSumw2N()==0)h_ggeeSideBandLowDiJetPtRatio_JetReq->Sumw2();
  TH1F *h_ggeeSideBandLowDiJetPtRatio_JetReq_0Jet = new TH1F("ggeeSideBandLowDiJetPtRatio_JetReq_0Jet","ggDiJetPt/eeSideBandLowDiJetPt - 1+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiJetPtRatio_JetReq_0Jet->GetSumw2N()==0)h_ggeeSideBandLowDiJetPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiJetPtRatio_JetReq_1Jet = new TH1F("ggeeSideBandLowDiJetPtRatio_JetReq_1Jet","ggDiJetPt/eeSideBandLowDiJetPt - 1+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiJetPtRatio_JetReq_1Jet->GetSumw2N()==0)h_ggeeSideBandLowDiJetPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiJetPtRatio_JetReq_2Jet = new TH1F("ggeeSideBandLowDiJetPtRatio_JetReq_2Jet","ggDiJetPt/eeSideBandLowDiJetPt - 1+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiJetPtRatio_JetReq_2Jet->GetSumw2N()==0)h_ggeeSideBandLowDiJetPtRatio_JetReq_2Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiJetPtRatio_JetReq = new TH1F("ggeeSideBandHighDiJetPtRatio_JetReq","ggDiJetPt/eeSideBandHighDiJetPt - 1+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiJetPtRatio_JetReq->GetSumw2N()==0)h_ggeeSideBandHighDiJetPtRatio_JetReq->Sumw2();
  TH1F *h_ggeeSideBandHighDiJetPtRatio_JetReq_0Jet = new TH1F("ggeeSideBandHighDiJetPtRatio_JetReq_0Jet","ggDiJetPt/eeSideBandHighDiJetPt - 1+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiJetPtRatio_JetReq_0Jet->GetSumw2N()==0)h_ggeeSideBandHighDiJetPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiJetPtRatio_JetReq_1Jet = new TH1F("ggeeSideBandHighDiJetPtRatio_JetReq_1Jet","ggDiJetPt/eeSideBandHighDiJetPt - 1+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiJetPtRatio_JetReq_1Jet->GetSumw2N()==0)h_ggeeSideBandHighDiJetPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiJetPtRatio_JetReq_2Jet = new TH1F("ggeeSideBandHighDiJetPtRatio_JetReq_2Jet","ggDiJetPt/eeSideBandHighDiJetPt - 1+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiJetPtRatio_JetReq_2Jet->GetSumw2N()==0)h_ggeeSideBandHighDiJetPtRatio_JetReq_2Jet->Sumw2();
  TH1F *h_ggffDiEMPtRatio_JetReq_0Jet = new TH1F("ggffDiEMPtRatio_JetReq_0Jet","ggDiEMPt/ffDiEMPt - 1+ Jet Requirement Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiEMPtRatio_JetReq_0Jet->GetSumw2N()==0)h_ggffDiEMPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_ggffDiEMPtRatio_JetReq_1Jet = new TH1F("ggffDiEMPtRatio_JetReq_1Jet","ggDiEMPt/ffDiEMPt - 1+ Jet Requirement Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiEMPtRatio_JetReq_1Jet->GetSumw2N()==0)h_ggffDiEMPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_ggffDiEMPtRatio_JetReq_2Jet = new TH1F("ggffDiEMPtRatio_JetReq_2Jet","ggDiEMPt/ffDiEMPt - 1+ Jet Requirement Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiEMPtRatio_JetReq_2Jet->GetSumw2N()==0)h_ggffDiEMPtRatio_JetReq_2Jet->Sumw2();
  TH1F *h_ggffDiJetPtRatio_JetReq = new TH1F("ggffDiJetPtRatio_JetReq","ggDiJetPt/ffDiJetPt - 1+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiJetPtRatio_JetReq->GetSumw2N()==0)h_ggffDiJetPtRatio_JetReq->Sumw2();
  TH1F *h_ggffDiJetPtRatio_JetReq_0Jet = new TH1F("ggffDiJetPtRatio_JetReq_0Jet","ggDiJetPt/ffDiJetPt - 1+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiJetPtRatio_JetReq_0Jet->GetSumw2N()==0)h_ggffDiJetPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_ggffDiJetPtRatio_JetReq_1Jet = new TH1F("ggffDiJetPtRatio_JetReq_1Jet","ggDiJetPt/ffDiJetPt - 1+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiJetPtRatio_JetReq_1Jet->GetSumw2N()==0)h_ggffDiJetPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_ggffDiJetPtRatio_JetReq_2Jet = new TH1F("ggffDiJetPtRatio_JetReq_2Jet","ggDiJetPt/ffDiJetPt - 1+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiJetPtRatio_JetReq_2Jet->GetSumw2N()==0)h_ggffDiJetPtRatio_JetReq_2Jet->Sumw2();


  TH1F *h_gggfDiEMPtRatio_JetReq_0Jet = new TH1F("gggfDiEMPtRatio_JetReq_0Jet","ggDiEMPt/gfDiEMPt - 1+ Jet Requirement Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiEMPtRatio_JetReq_0Jet->GetSumw2N()==0)h_gggfDiEMPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_gggfDiEMPtRatio_JetReq_1Jet = new TH1F("gggfDiEMPtRatio_JetReq_1Jet","ggDiEMPt/gfDiEMPt - 1+ Jet Requirement Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiEMPtRatio_JetReq_1Jet->GetSumw2N()==0)h_gggfDiEMPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_gggfDiEMPtRatio_JetReq_2Jet = new TH1F("gggfDiEMPtRatio_JetReq_2Jet","ggDiEMPt/gfDiEMPt - 1+ Jet Requirement Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiEMPtRatio_JetReq_2Jet->GetSumw2N()==0)h_gggfDiEMPtRatio_JetReq_2Jet->Sumw2();
  TH1F *h_gggfDiJetPtRatio_JetReq = new TH1F("gggfDiJetPtRatio_JetReq","ggDiJetPt/gfDiJetPt - 1+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiJetPtRatio_JetReq->GetSumw2N()==0)h_gggfDiJetPtRatio_JetReq->Sumw2();
  TH1F *h_gggfDiJetPtRatio_JetReq_0Jet = new TH1F("gggfDiJetPtRatio_JetReq_0Jet","ggDiJetPt/gfDiJetPt - 1+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiJetPtRatio_JetReq_0Jet->GetSumw2N()==0)h_gggfDiJetPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_gggfDiJetPtRatio_JetReq_1Jet = new TH1F("gggfDiJetPtRatio_JetReq_1Jet","ggDiJetPt/gfDiJetPt - 1+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiJetPtRatio_JetReq_1Jet->GetSumw2N()==0)h_gggfDiJetPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_gggfDiJetPtRatio_JetReq_2Jet = new TH1F("gggfDiJetPtRatio_JetReq_2Jet","ggDiJetPt/gfDiJetPt - 1+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiJetPtRatio_JetReq_2Jet->GetSumw2N()==0)h_gggfDiJetPtRatio_JetReq_2Jet->Sumw2();
  TH1F *h_ggfgDiEMPtRatio_JetReq_0Jet = new TH1F("ggfgDiEMPtRatio_JetReq_0Jet","ggDiEMPt/fgDiEMPt - 1+ Jet Requirement Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiEMPtRatio_JetReq_0Jet->GetSumw2N()==0)h_ggfgDiEMPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_ggfgDiEMPtRatio_JetReq_1Jet = new TH1F("ggfgDiEMPtRatio_JetReq_1Jet","ggDiEMPt/fgDiEMPt - 1+ Jet Requirement Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiEMPtRatio_JetReq_1Jet->GetSumw2N()==0)h_ggfgDiEMPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_ggfgDiEMPtRatio_JetReq_2Jet = new TH1F("ggfgDiEMPtRatio_JetReq_2Jet","ggDiEMPt/fgDiEMPt - 1+ Jet Requirement Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiEMPtRatio_JetReq_2Jet->GetSumw2N()==0)h_ggfgDiEMPtRatio_JetReq_2Jet->Sumw2();
  TH1F *h_ggfgDiJetPtRatio_JetReq = new TH1F("ggfgDiJetPtRatio_JetReq","ggDiJetPt/fgDiJetPt - 1+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiJetPtRatio_JetReq->GetSumw2N()==0)h_ggfgDiJetPtRatio_JetReq->Sumw2();
  TH1F *h_ggfgDiJetPtRatio_JetReq_0Jet = new TH1F("ggfgDiJetPtRatio_JetReq_0Jet","ggDiJetPt/fgDiJetPt - 1+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiJetPtRatio_JetReq_0Jet->GetSumw2N()==0)h_ggfgDiJetPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_ggfgDiJetPtRatio_JetReq_1Jet = new TH1F("ggfgDiJetPtRatio_JetReq_1Jet","ggDiJetPt/fgDiJetPt - 1+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiJetPtRatio_JetReq_1Jet->GetSumw2N()==0)h_ggfgDiJetPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_ggfgDiJetPtRatio_JetReq_2Jet = new TH1F("ggfgDiJetPtRatio_JetReq_2Jet","ggDiJetPt/fgDiJetPt - 1+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiJetPtRatio_JetReq_2Jet->GetSumw2N()==0)h_ggfgDiJetPtRatio_JetReq_2Jet->Sumw2();
  TH1F *h_gggammafakeDiEMPtRatio_JetReq_0Jet = new TH1F("gggammafakeDiEMPtRatio_JetReq_0Jet","ggDiEMPt/gammafakeDiEMPt - 1+ Jet Requirement Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiEMPtRatio_JetReq_0Jet->GetSumw2N()==0)h_gggammafakeDiEMPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_gggammafakeDiEMPtRatio_JetReq_1Jet = new TH1F("gggammafakeDiEMPtRatio_JetReq_1Jet","ggDiEMPt/gammafakeDiEMPt - 1+ Jet Requirement Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiEMPtRatio_JetReq_1Jet->GetSumw2N()==0)h_gggammafakeDiEMPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_gggammafakeDiEMPtRatio_JetReq_2Jet = new TH1F("gggammafakeDiEMPtRatio_JetReq_2Jet","ggDiEMPt/gammafakeDiEMPt - 1+ Jet Requirement Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiEMPtRatio_JetReq_2Jet->GetSumw2N()==0)h_gggammafakeDiEMPtRatio_JetReq_2Jet->Sumw2();
  TH1F *h_gggammafakeDiJetPtRatio_JetReq = new TH1F("gggammafakeDiJetPtRatio_JetReq","ggDiJetPt/gammafakeDiJetPt - 1+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiJetPtRatio_JetReq->GetSumw2N()==0)h_gggammafakeDiJetPtRatio_JetReq->Sumw2();
  TH1F *h_gggammafakeDiJetPtRatio_JetReq_0Jet = new TH1F("gggammafakeDiJetPtRatio_JetReq_0Jet","ggDiJetPt/gammafakeDiJetPt - 1+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiJetPtRatio_JetReq_0Jet->GetSumw2N()==0)h_gggammafakeDiJetPtRatio_JetReq_0Jet->Sumw2();
  TH1F *h_gggammafakeDiJetPtRatio_JetReq_1Jet = new TH1F("gggammafakeDiJetPtRatio_JetReq_1Jet","ggDiJetPt/gammafakeDiJetPt - 1+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiJetPtRatio_JetReq_1Jet->GetSumw2N()==0)h_gggammafakeDiJetPtRatio_JetReq_1Jet->Sumw2();
  TH1F *h_gggammafakeDiJetPtRatio_JetReq_2Jet = new TH1F("gggammafakeDiJetPtRatio_JetReq_2Jet","ggDiJetPt/gammafakeDiJetPt - 1+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiJetPtRatio_JetReq_2Jet->GetSumw2N()==0)h_gggammafakeDiJetPtRatio_JetReq_2Jet->Sumw2();

  TH1F *h_ggeeDiEMPtRatio_2JetReq = new TH1F("ggeeDiEMPtRatio_2JetReq","ggDiEMPt/eeDiEMPt - 2+ Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiEMPtRatio_2JetReq->GetSumw2N()==0)h_ggeeDiEMPtRatio_2JetReq->Sumw2();
  TH1F *h_ggeeDiEMPtRatio_2JetReq_0Jet = new TH1F("ggeeDiEMPtRatio_2JetReq_0Jet","ggDiEMPt/eeDiEMPt - 2+ Jet Requirement Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiEMPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_ggeeDiEMPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_ggeeDiEMPtRatio_2JetReq_1Jet = new TH1F("ggeeDiEMPtRatio_2JetReq_1Jet","ggDiEMPt/eeDiEMPt - 2+ Jet Requirement Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiEMPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_ggeeDiEMPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_ggeeDiEMPtRatio_2JetReq_2Jet = new TH1F("ggeeDiEMPtRatio_2JetReq_2Jet","ggDiEMPt/eeDiEMPt - 2+ Jet Requirement Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiEMPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_ggeeDiEMPtRatio_2JetReq_2Jet->Sumw2();
  TH1F *h_ggeeDiJetPtRatio_2JetReq = new TH1F("ggeeDiJetPtRatio_2JetReq","ggDiJetPt/eeDiJetPt - 2+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiJetPtRatio_2JetReq->GetSumw2N()==0)h_ggeeDiJetPtRatio_2JetReq->Sumw2();
  TH1F *h_ggeeDiJetPtRatio_2JetReq_0Jet = new TH1F("ggeeDiJetPtRatio_2JetReq_0Jet","ggDiJetPt/eeDiJetPt - 2+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiJetPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_ggeeDiJetPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_ggeeDiJetPtRatio_2JetReq_1Jet = new TH1F("ggeeDiJetPtRatio_2JetReq_1Jet","ggDiJetPt/eeDiJetPt - 2+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiJetPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_ggeeDiJetPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_ggeeDiJetPtRatio_2JetReq_2Jet = new TH1F("ggeeDiJetPtRatio_2JetReq_2Jet","ggDiJetPt/eeDiJetPt - 2+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeDiJetPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_ggeeDiJetPtRatio_2JetReq_2Jet->Sumw2();
  TH1F *h_ggeeSideBandDiEMPtRatio_2JetReq = new TH1F("ggeeSideBandDiEMPtRatio_2JetReq","ggDiEMPt/eeSideBandDiEMPt - 2+ Jet Requirement;DiEMP_{T};DiEMP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandDiEMPtRatio_2JetReq->GetSumw2N()==0)h_ggeeSideBandDiEMPtRatio_2JetReq->Sumw2();
  TH1F *h_ggeeSideBandDiJetPtRatio_2JetReq = new TH1F("ggeeSideBandDiJetPtRatio_2JetReq","ggDiJetPt/eeSideBandDiJetPt - 2+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandDiJetPtRatio_2JetReq->GetSumw2N()==0)h_ggeeSideBandDiJetPtRatio_2JetReq->Sumw2();
  TH1F *h_ggeeSideBandLowDiJetPtRatio_2JetReq = new TH1F("ggeeSideBandLowDiJetPtRatio_2JetReq","ggDiJetPt/eeSideBandLowDiJetPt - 2+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiJetPtRatio_2JetReq->GetSumw2N()==0)h_ggeeSideBandLowDiJetPtRatio_2JetReq->Sumw2();
  TH1F *h_ggeeSideBandLowDiJetPtRatio_2JetReq_0Jet = new TH1F("ggeeSideBandLowDiJetPtRatio_2JetReq_0Jet","ggDiJetPt/eeSideBandLowDiJetPt - 2+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiJetPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_ggeeSideBandLowDiJetPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiJetPtRatio_2JetReq_1Jet = new TH1F("ggeeSideBandLowDiJetPtRatio_2JetReq_1Jet","ggDiJetPt/eeSideBandLowDiJetPt - 2+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiJetPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_ggeeSideBandLowDiJetPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_ggeeSideBandLowDiJetPtRatio_2JetReq_2Jet = new TH1F("ggeeSideBandLowDiJetPtRatio_2JetReq_2Jet","ggDiJetPt/eeSideBandLowDiJetPt - 2+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandLowDiJetPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_ggeeSideBandLowDiJetPtRatio_2JetReq_2Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiJetPtRatio_2JetReq = new TH1F("ggeeSideBandHighDiJetPtRatio_2JetReq","ggDiJetPt/eeSideBandHighDiJetPt - 2+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiJetPtRatio_2JetReq->GetSumw2N()==0)h_ggeeSideBandHighDiJetPtRatio_2JetReq->Sumw2();
  TH1F *h_ggeeSideBandHighDiJetPtRatio_2JetReq_0Jet = new TH1F("ggeeSideBandHighDiJetPtRatio_2JetReq_0Jet","ggDiJetPt/eeSideBandHighDiJetPt - 2+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiJetPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_ggeeSideBandHighDiJetPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiJetPtRatio_2JetReq_1Jet = new TH1F("ggeeSideBandHighDiJetPtRatio_2JetReq_1Jet","ggDiJetPt/eeSideBandHighDiJetPt - 2+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiJetPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_ggeeSideBandHighDiJetPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_ggeeSideBandHighDiJetPtRatio_2JetReq_2Jet = new TH1F("ggeeSideBandHighDiJetPtRatio_2JetReq_2Jet","ggDiJetPt/eeSideBandHighDiJetPt - 2+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggeeSideBandHighDiJetPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_ggeeSideBandHighDiJetPtRatio_2JetReq_2Jet->Sumw2();
  TH1F *h_ggffDiEMPtRatio_2JetReq_0Jet = new TH1F("ggffDiEMPtRatio_2JetReq_0Jet","ggDiEMPt/ffDiEMPt - 2+ Jet Requirement Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiEMPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_ggffDiEMPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_ggffDiEMPtRatio_2JetReq_1Jet = new TH1F("ggffDiEMPtRatio_2JetReq_1Jet","ggDiEMPt/ffDiEMPt - 2+ Jet Requirement Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiEMPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_ggffDiEMPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_ggffDiEMPtRatio_2JetReq_2Jet = new TH1F("ggffDiEMPtRatio_2JetReq_2Jet","ggDiEMPt/ffDiEMPt - 2+ Jet Requirement Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiEMPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_ggffDiEMPtRatio_2JetReq_2Jet->Sumw2();
  TH1F *h_ggffDiJetPtRatio_2JetReq = new TH1F("ggffDiJetPtRatio_2JetReq","ggDiJetPt/ffDiJetPt - 2+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiJetPtRatio_2JetReq->GetSumw2N()==0)h_ggffDiJetPtRatio_2JetReq->Sumw2();
  TH1F *h_ggffDiJetPtRatio_2JetReq_0Jet = new TH1F("ggffDiJetPtRatio_2JetReq_0Jet","ggDiJetPt/ffDiJetPt - 2+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiJetPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_ggffDiJetPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_ggffDiJetPtRatio_2JetReq_1Jet = new TH1F("ggffDiJetPtRatio_2JetReq_1Jet","ggDiJetPt/ffDiJetPt - 2+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiJetPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_ggffDiJetPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_ggffDiJetPtRatio_2JetReq_2Jet = new TH1F("ggffDiJetPtRatio_2JetReq_2Jet","ggDiJetPt/ffDiJetPt - 2+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggffDiJetPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_ggffDiJetPtRatio_2JetReq_2Jet->Sumw2();


  TH1F *h_gggfDiEMPtRatio_2JetReq_0Jet = new TH1F("gggfDiEMPtRatio_2JetReq_0Jet","ggDiEMPt/gfDiEMPt - 2+ Jet Requirement Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiEMPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_gggfDiEMPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_gggfDiEMPtRatio_2JetReq_1Jet = new TH1F("gggfDiEMPtRatio_2JetReq_1Jet","ggDiEMPt/gfDiEMPt - 2+ Jet Requirement Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiEMPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_gggfDiEMPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_gggfDiEMPtRatio_2JetReq_2Jet = new TH1F("gggfDiEMPtRatio_2JetReq_2Jet","ggDiEMPt/gfDiEMPt - 2+ Jet Requirement Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiEMPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_gggfDiEMPtRatio_2JetReq_2Jet->Sumw2();
  TH1F *h_gggfDiJetPtRatio_2JetReq = new TH1F("gggfDiJetPtRatio_2JetReq","ggDiJetPt/gfDiJetPt - 2+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiJetPtRatio_2JetReq->GetSumw2N()==0)h_gggfDiJetPtRatio_2JetReq->Sumw2();
  TH1F *h_gggfDiJetPtRatio_2JetReq_0Jet = new TH1F("gggfDiJetPtRatio_2JetReq_0Jet","ggDiJetPt/gfDiJetPt - 2+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiJetPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_gggfDiJetPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_gggfDiJetPtRatio_2JetReq_1Jet = new TH1F("gggfDiJetPtRatio_2JetReq_1Jet","ggDiJetPt/gfDiJetPt - 2+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiJetPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_gggfDiJetPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_gggfDiJetPtRatio_2JetReq_2Jet = new TH1F("gggfDiJetPtRatio_2JetReq_2Jet","ggDiJetPt/gfDiJetPt - 2+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggfDiJetPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_gggfDiJetPtRatio_2JetReq_2Jet->Sumw2();
  TH1F *h_ggfgDiEMPtRatio_2JetReq_0Jet = new TH1F("ggfgDiEMPtRatio_2JetReq_0Jet","ggDiEMPt/fgDiEMPt - 2+ Jet Requirement Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiEMPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_ggfgDiEMPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_ggfgDiEMPtRatio_2JetReq_1Jet = new TH1F("ggfgDiEMPtRatio_2JetReq_1Jet","ggDiEMPt/fgDiEMPt - 2+ Jet Requirement Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiEMPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_ggfgDiEMPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_ggfgDiEMPtRatio_2JetReq_2Jet = new TH1F("ggfgDiEMPtRatio_2JetReq_2Jet","ggDiEMPt/fgDiEMPt - 2+ Jet Requirement Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiEMPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_ggfgDiEMPtRatio_2JetReq_2Jet->Sumw2();
  TH1F *h_ggfgDiJetPtRatio_2JetReq = new TH1F("ggfgDiJetPtRatio_2JetReq","ggDiJetPt/fgDiJetPt - 2+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiJetPtRatio_2JetReq->GetSumw2N()==0)h_ggfgDiJetPtRatio_2JetReq->Sumw2();
  TH1F *h_ggfgDiJetPtRatio_2JetReq_0Jet = new TH1F("ggfgDiJetPtRatio_2JetReq_0Jet","ggDiJetPt/fgDiJetPt - 2+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiJetPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_ggfgDiJetPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_ggfgDiJetPtRatio_2JetReq_1Jet = new TH1F("ggfgDiJetPtRatio_2JetReq_1Jet","ggDiJetPt/fgDiJetPt - 2+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiJetPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_ggfgDiJetPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_ggfgDiJetPtRatio_2JetReq_2Jet = new TH1F("ggfgDiJetPtRatio_2JetReq_2Jet","ggDiJetPt/fgDiJetPt - 2+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_ggfgDiJetPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_ggfgDiJetPtRatio_2JetReq_2Jet->Sumw2();
  TH1F *h_gggammafakeDiEMPtRatio_2JetReq_0Jet = new TH1F("gggammafakeDiEMPtRatio_2JetReq_0Jet","ggDiEMPt/gammafakeDiEMPt - 2+ Jet Requirement Require exactly 0 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiEMPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_gggammafakeDiEMPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_gggammafakeDiEMPtRatio_2JetReq_1Jet = new TH1F("gggammafakeDiEMPtRatio_2JetReq_1Jet","ggDiEMPt/gammafakeDiEMPt - 2+ Jet Requirement Require exactly 1 Jet;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiEMPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_gggammafakeDiEMPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_gggammafakeDiEMPtRatio_2JetReq_2Jet = new TH1F("gggammafakeDiEMPtRatio_2JetReq_2Jet","ggDiEMPt/gammafakeDiEMPt - 2+ Jet Requirement Require at least 2 Jets;DiEMPtP_{T};DiEMPtP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiEMPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_gggammafakeDiEMPtRatio_2JetReq_2Jet->Sumw2();
  TH1F *h_gggammafakeDiJetPtRatio_2JetReq = new TH1F("gggammafakeDiJetPtRatio_2JetReq","ggDiJetPt/gammafakeDiJetPt - 2+ Jet Requirement;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiJetPtRatio_2JetReq->GetSumw2N()==0)h_gggammafakeDiJetPtRatio_2JetReq->Sumw2();
  TH1F *h_gggammafakeDiJetPtRatio_2JetReq_0Jet = new TH1F("gggammafakeDiJetPtRatio_2JetReq_0Jet","ggDiJetPt/gammafakeDiJetPt - 2+ Jet Requirement Require exactly 0 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiJetPtRatio_2JetReq_0Jet->GetSumw2N()==0)h_gggammafakeDiJetPtRatio_2JetReq_0Jet->Sumw2();
  TH1F *h_gggammafakeDiJetPtRatio_2JetReq_1Jet = new TH1F("gggammafakeDiJetPtRatio_2JetReq_1Jet","ggDiJetPt/gammafakeDiJetPt - 2+ Jet Requirement Require exactly 1 Jet;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiJetPtRatio_2JetReq_1Jet->GetSumw2N()==0)h_gggammafakeDiJetPtRatio_2JetReq_1Jet->Sumw2();
  TH1F *h_gggammafakeDiJetPtRatio_2JetReq_2Jet = new TH1F("gggammafakeDiJetPtRatio_2JetReq_2Jet","ggDiJetPt/gammafakeDiJetPt - 2+ Jet Requirement Require at least 2 Jets;DiJetP_{T};DiJetP_{T} Ratio",numBins,DiEMPtBins);if(h_gggammafakeDiJetPtRatio_2JetReq_2Jet->GetSumw2N()==0)h_gggammafakeDiJetPtRatio_2JetReq_2Jet->Sumw2();

  //rebin diempt for ratio plots
  TH1F* h_ggDiEMPt_new=(TH1F*)h_ggDiEMPt->Rebin(numBins,"h_ggDiEMPt_new",DiEMPtBins);
  TH1F* h_ggDiJetPt_new=(TH1F*)h_ggDiJetPt->Rebin(numBins,"h_ggDiJetPt_new",DiEMPtBins);
  TH1F* h_ggDiEMPt_0Jet_new=(TH1F*)h_ggDiEMPt_0Jet->Rebin(numBins,"h_ggDiEMPt_0Jet_new",DiEMPtBins);
  TH1F* h_ggDiEMPt_1Jet_new=(TH1F*)h_ggDiEMPt_1Jet->Rebin(numBins,"h_ggDiEMPt_1Jet_new",DiEMPtBins);
  TH1F* h_ggDiEMPt_2Jet_new=(TH1F*)h_ggDiEMPt_2Jet->Rebin(numBins,"h_ggDiEMPt_2Jet_new",DiEMPtBins);
  TH1F* h_ggDiJetPt_0Jet_new=(TH1F*)h_ggDiJetPt_0Jet->Rebin(numBins,"h_ggDiJetPt_0Jet_new",DiEMPtBins);
  TH1F* h_ggDiJetPt_1Jet_new=(TH1F*)h_ggDiJetPt_1Jet->Rebin(numBins,"h_ggDiJetPt_1Jet_new",DiEMPtBins);
  TH1F* h_ggDiJetPt_2Jet_new=(TH1F*)h_ggDiJetPt_2Jet->Rebin(numBins,"h_ggDiJetPt_2Jet_new",DiEMPtBins);
  TH1F* h_eeDiEMPt_new=(TH1F*)h_eeDiEMPt->Rebin(numBins,"h_eeDiEMPt_new",DiEMPtBins);
  TH1F* h_eeDiJetPt_new=(TH1F*)h_eeDiJetPt->Rebin(numBins,"h_eeDiJetPt_new",DiEMPtBins);
  TH1F* h_eeDiEMPt_0Jet_new=(TH1F*)h_eeDiEMPt_0Jet->Rebin(numBins,"h_eeDiEMPt_0Jet_new",DiEMPtBins);
  TH1F* h_eeDiEMPt_1Jet_new=(TH1F*)h_eeDiEMPt_1Jet->Rebin(numBins,"h_eeDiEMPt_1Jet_new",DiEMPtBins);
  TH1F* h_eeDiEMPt_2Jet_new=(TH1F*)h_eeDiEMPt_2Jet->Rebin(numBins,"h_eeDiEMPt_2Jet_new",DiEMPtBins);
  TH1F* h_eeDiJetPt_0Jet_new=(TH1F*)h_eeDiJetPt_0Jet->Rebin(numBins,"h_eeDiJetPt_0Jet_new",DiEMPtBins);
  TH1F* h_eeDiJetPt_1Jet_new=(TH1F*)h_eeDiJetPt_1Jet->Rebin(numBins,"h_eeDiJetPt_1Jet_new",DiEMPtBins);
  TH1F* h_eeDiJetPt_2Jet_new=(TH1F*)h_eeDiJetPt_2Jet->Rebin(numBins,"h_eeDiJetPt_2Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandDiEMPt_new=(TH1F*)h_eeSideBandDiEMPt->Rebin(numBins,"h_eeSideBandDiEMPt_new",DiEMPtBins);
  TH1F* h_eeSideBandDiJetPt_new=(TH1F*)h_eeSideBandDiJetPt->Rebin(numBins,"h_eeSideBandDiJetPt_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiJetPt_new=(TH1F*)h_eeSideBandLowDiJetPt->Rebin(numBins,"h_eeSideBandLowDiJetPt_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiJetPt_new=(TH1F*)h_eeSideBandHighDiJetPt->Rebin(numBins,"h_eeSideBandHighDiJetPt_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiEMPt_new=(TH1F*)h_eeSideBandLowDiEMPt->Rebin(numBins,"h_eeSideBandLowDiEMPt_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiEMPt_new=(TH1F*)h_eeSideBandHighDiEMPt->Rebin(numBins,"h_eeSideBandHighDiEMPt_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiEMPt_0Jet_new=(TH1F*)h_eeSideBandLowDiEMPt_0Jet->Rebin(numBins,"h_eeSideBandLowDiEMPt_0Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiEMPt_1Jet_new=(TH1F*)h_eeSideBandLowDiEMPt_1Jet->Rebin(numBins,"h_eeSideBandLowDiEMPt_1Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiEMPt_2Jet_new=(TH1F*)h_eeSideBandLowDiEMPt_2Jet->Rebin(numBins,"h_eeSideBandLowDiEMPt_2Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiEMPt_0Jet_new=(TH1F*)h_eeSideBandHighDiEMPt_0Jet->Rebin(numBins,"h_eeSideBandHighDiEMPt_0Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiEMPt_1Jet_new=(TH1F*)h_eeSideBandHighDiEMPt_1Jet->Rebin(numBins,"h_eeSideBandHighDiEMPt_1Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiEMPt_2Jet_new=(TH1F*)h_eeSideBandHighDiEMPt_2Jet->Rebin(numBins,"h_eeSideBandHighDiEMPt_2Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiJetPt_0Jet_new=(TH1F*)h_eeSideBandLowDiJetPt_0Jet->Rebin(numBins,"h_eeSideBandLowDiJetPt_0Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiJetPt_1Jet_new=(TH1F*)h_eeSideBandLowDiJetPt_1Jet->Rebin(numBins,"h_eeSideBandLowDiJetPt_1Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiJetPt_2Jet_new=(TH1F*)h_eeSideBandLowDiJetPt_2Jet->Rebin(numBins,"h_eeSideBandLowDiJetPt_2Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiJetPt_0Jet_new=(TH1F*)h_eeSideBandHighDiJetPt_0Jet->Rebin(numBins,"h_eeSideBandHighDiJetPt_0Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiJetPt_1Jet_new=(TH1F*)h_eeSideBandHighDiJetPt_1Jet->Rebin(numBins,"h_eeSideBandHighDiJetPt_1Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiJetPt_2Jet_new=(TH1F*)h_eeSideBandHighDiJetPt_2Jet->Rebin(numBins,"h_eeSideBandHighDiJetPt_2Jet_new",DiEMPtBins);
  TH1F* h_ffDiEMPt_new=(TH1F*)h_ffDiEMPt->Rebin(numBins,"h_ffDiEMPt_new",DiEMPtBins);
  TH1F* h_ffDiJetPt_new=(TH1F*)h_ffDiJetPt->Rebin(numBins,"h_ffDiJetPt_new",DiEMPtBins);
  TH1F* h_ffDiEMPt_0Jet_new=(TH1F*)h_ffDiEMPt_0Jet->Rebin(numBins,"h_ffDiEMPt_0Jet_new",DiEMPtBins);
  TH1F* h_ffDiEMPt_1Jet_new=(TH1F*)h_ffDiEMPt_1Jet->Rebin(numBins,"h_ffDiEMPt_1Jet_new",DiEMPtBins);
  TH1F* h_ffDiEMPt_2Jet_new=(TH1F*)h_ffDiEMPt_2Jet->Rebin(numBins,"h_ffDiEMPt_2Jet_new",DiEMPtBins);
  TH1F* h_ffDiJetPt_0Jet_new=(TH1F*)h_ffDiJetPt_0Jet->Rebin(numBins,"h_ffDiJetPt_0Jet_new",DiEMPtBins);
  TH1F* h_ffDiJetPt_1Jet_new=(TH1F*)h_ffDiJetPt_1Jet->Rebin(numBins,"h_ffDiJetPt_1Jet_new",DiEMPtBins);
  TH1F* h_ffDiJetPt_2Jet_new=(TH1F*)h_ffDiJetPt_2Jet->Rebin(numBins,"h_ffDiJetPt_2Jet_new",DiEMPtBins);

  TH1F* h_gfDiEMPt_new=(TH1F*)h_gfDiEMPt->Rebin(numBins,"h_gfDiEMPt_new",DiEMPtBins);
  TH1F* h_gfDiJetPt_new=(TH1F*)h_gfDiJetPt->Rebin(numBins,"h_gfDiJetPt_new",DiEMPtBins);
  TH1F* h_gfDiEMPt_0Jet_new=(TH1F*)h_gfDiEMPt_0Jet->Rebin(numBins,"h_gfDiEMPt_0Jet_new",DiEMPtBins);
  TH1F* h_gfDiEMPt_1Jet_new=(TH1F*)h_gfDiEMPt_1Jet->Rebin(numBins,"h_gfDiEMPt_1Jet_new",DiEMPtBins);
  TH1F* h_gfDiEMPt_2Jet_new=(TH1F*)h_gfDiEMPt_2Jet->Rebin(numBins,"h_gfDiEMPt_2Jet_new",DiEMPtBins);
  TH1F* h_gfDiJetPt_0Jet_new=(TH1F*)h_gfDiJetPt_0Jet->Rebin(numBins,"h_gfDiJetPt_0Jet_new",DiEMPtBins);
  TH1F* h_gfDiJetPt_1Jet_new=(TH1F*)h_gfDiJetPt_1Jet->Rebin(numBins,"h_gfDiJetPt_1Jet_new",DiEMPtBins);
  TH1F* h_gfDiJetPt_2Jet_new=(TH1F*)h_gfDiJetPt_2Jet->Rebin(numBins,"h_gfDiJetPt_2Jet_new",DiEMPtBins);
  TH1F* h_fgDiEMPt_new=(TH1F*)h_fgDiEMPt->Rebin(numBins,"h_fgDiEMPt_new",DiEMPtBins);
  TH1F* h_fgDiJetPt_new=(TH1F*)h_fgDiJetPt->Rebin(numBins,"h_fgDiJetPt_new",DiEMPtBins);
  TH1F* h_fgDiEMPt_0Jet_new=(TH1F*)h_fgDiEMPt_0Jet->Rebin(numBins,"h_fgDiEMPt_0Jet_new",DiEMPtBins);
  TH1F* h_fgDiEMPt_1Jet_new=(TH1F*)h_fgDiEMPt_1Jet->Rebin(numBins,"h_fgDiEMPt_1Jet_new",DiEMPtBins);
  TH1F* h_fgDiEMPt_2Jet_new=(TH1F*)h_fgDiEMPt_2Jet->Rebin(numBins,"h_fgDiEMPt_2Jet_new",DiEMPtBins);
  TH1F* h_fgDiJetPt_0Jet_new=(TH1F*)h_fgDiJetPt_0Jet->Rebin(numBins,"h_fgDiJetPt_0Jet_new",DiEMPtBins);
  TH1F* h_fgDiJetPt_1Jet_new=(TH1F*)h_fgDiJetPt_1Jet->Rebin(numBins,"h_fgDiJetPt_1Jet_new",DiEMPtBins);
  TH1F* h_fgDiJetPt_2Jet_new=(TH1F*)h_fgDiJetPt_2Jet->Rebin(numBins,"h_fgDiJetPt_2Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiEMPt_new=(TH1F*)h_gammafakeDiEMPt->Rebin(numBins,"h_gammafakeDiEMPt_new",DiEMPtBins);
  TH1F* h_gammafakeDiJetPt_new=(TH1F*)h_gammafakeDiJetPt->Rebin(numBins,"h_gammafakeDiJetPt_new",DiEMPtBins);
  TH1F* h_gammafakeDiEMPt_0Jet_new=(TH1F*)h_gammafakeDiEMPt_0Jet->Rebin(numBins,"h_gammafakeDiEMPt_0Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiEMPt_1Jet_new=(TH1F*)h_gammafakeDiEMPt_1Jet->Rebin(numBins,"h_gammafakeDiEMPt_1Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiEMPt_2Jet_new=(TH1F*)h_gammafakeDiEMPt_2Jet->Rebin(numBins,"h_gammafakeDiEMPt_2Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiJetPt_0Jet_new=(TH1F*)h_gammafakeDiJetPt_0Jet->Rebin(numBins,"h_gammafakeDiJetPt_0Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiJetPt_1Jet_new=(TH1F*)h_gammafakeDiJetPt_1Jet->Rebin(numBins,"h_gammafakeDiJetPt_1Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiJetPt_2Jet_new=(TH1F*)h_gammafakeDiJetPt_2Jet->Rebin(numBins,"h_gammafakeDiJetPt_2Jet_new",DiEMPtBins);

  TH1F* h_ggDiEMPt_JetReq_new=(TH1F*)h_ggDiEMPt_JetReq->Rebin(numBins,"h_ggDiEMPt_JetReq_new",DiEMPtBins);
  TH1F* h_ggDiJetPt_JetReq_new=(TH1F*)h_ggDiJetPt_JetReq->Rebin(numBins,"h_ggDiJetPt_JetReq_new",DiEMPtBins);
  TH1F* h_ggDiEMPt_JetReq_0Jet_new=(TH1F*)h_ggDiEMPt_JetReq_0Jet->Rebin(numBins,"h_ggDiEMPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_ggDiEMPt_JetReq_1Jet_new=(TH1F*)h_ggDiEMPt_JetReq_1Jet->Rebin(numBins,"h_ggDiEMPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_ggDiEMPt_JetReq_2Jet_new=(TH1F*)h_ggDiEMPt_JetReq_2Jet->Rebin(numBins,"h_ggDiEMPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_ggDiJetPt_JetReq_0Jet_new=(TH1F*)h_ggDiJetPt_JetReq_0Jet->Rebin(numBins,"h_ggDiJetPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_ggDiJetPt_JetReq_1Jet_new=(TH1F*)h_ggDiJetPt_JetReq_1Jet->Rebin(numBins,"h_ggDiJetPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_ggDiJetPt_JetReq_2Jet_new=(TH1F*)h_ggDiJetPt_JetReq_2Jet->Rebin(numBins,"h_ggDiJetPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_eeDiEMPt_JetReq_new=(TH1F*)h_eeDiEMPt_JetReq->Rebin(numBins,"h_eeDiEMPt_JetReq_new",DiEMPtBins);
  TH1F* h_eeDiJetPt_JetReq_new=(TH1F*)h_eeDiJetPt_JetReq->Rebin(numBins,"h_eeDiJetPt_JetReq_new",DiEMPtBins);
  TH1F* h_eeDiEMPt_JetReq_0Jet_new=(TH1F*)h_eeDiEMPt_JetReq_0Jet->Rebin(numBins,"h_eeDiEMPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_eeDiEMPt_JetReq_1Jet_new=(TH1F*)h_eeDiEMPt_JetReq_1Jet->Rebin(numBins,"h_eeDiEMPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_eeDiEMPt_JetReq_2Jet_new=(TH1F*)h_eeDiEMPt_JetReq_2Jet->Rebin(numBins,"h_eeDiEMPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_eeDiJetPt_JetReq_0Jet_new=(TH1F*)h_eeDiJetPt_JetReq_0Jet->Rebin(numBins,"h_eeDiJetPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_eeDiJetPt_JetReq_1Jet_new=(TH1F*)h_eeDiJetPt_JetReq_1Jet->Rebin(numBins,"h_eeDiJetPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_eeDiJetPt_JetReq_2Jet_new=(TH1F*)h_eeDiJetPt_JetReq_2Jet->Rebin(numBins,"h_eeDiJetPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandDiEMPt_JetReq_new=(TH1F*)h_eeSideBandDiEMPt_JetReq->Rebin(numBins,"h_eeSideBandDiEMPt_JetReq_new",DiEMPtBins);
  TH1F* h_eeSideBandDiJetPt_JetReq_new=(TH1F*)h_eeSideBandDiJetPt_JetReq->Rebin(numBins,"h_eeSideBandDiJetPt_JetReq_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiEMPt_JetReq_new=(TH1F*)h_eeSideBandLowDiEMPt_JetReq->Rebin(numBins,"h_eeSideBandLowDiEMPt_JetReq_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiEMPt_JetReq_new=(TH1F*)h_eeSideBandHighDiEMPt_JetReq->Rebin(numBins,"h_eeSideBandHighDiEMPt_JetReq_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiEMPt_JetReq_0Jet_new=(TH1F*)h_eeSideBandLowDiEMPt_JetReq_0Jet->Rebin(numBins,"h_eeSideBandLowDiEMPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiEMPt_JetReq_1Jet_new=(TH1F*)h_eeSideBandLowDiEMPt_JetReq_1Jet->Rebin(numBins,"h_eeSideBandLowDiEMPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiEMPt_JetReq_2Jet_new=(TH1F*)h_eeSideBandLowDiEMPt_JetReq_2Jet->Rebin(numBins,"h_eeSideBandLowDiEMPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiEMPt_JetReq_0Jet_new=(TH1F*)h_eeSideBandHighDiEMPt_JetReq_0Jet->Rebin(numBins,"h_eeSideBandHighDiEMPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiEMPt_JetReq_1Jet_new=(TH1F*)h_eeSideBandHighDiEMPt_JetReq_1Jet->Rebin(numBins,"h_eeSideBandHighDiEMPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiEMPt_JetReq_2Jet_new=(TH1F*)h_eeSideBandHighDiEMPt_JetReq_2Jet->Rebin(numBins,"h_eeSideBandHighDiEMPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiJetPt_JetReq_new=(TH1F*)h_eeSideBandLowDiJetPt_JetReq->Rebin(numBins,"h_eeSideBandLowDiJetPt_JetReq_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiJetPt_JetReq_new=(TH1F*)h_eeSideBandHighDiJetPt_JetReq->Rebin(numBins,"h_eeSideBandHighDiJetPt_JetReq_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiJetPt_JetReq_0Jet_new=(TH1F*)h_eeSideBandLowDiJetPt_JetReq_0Jet->Rebin(numBins,"h_eeSideBandLowDiJetPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiJetPt_JetReq_1Jet_new=(TH1F*)h_eeSideBandLowDiJetPt_JetReq_1Jet->Rebin(numBins,"h_eeSideBandLowDiJetPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiJetPt_JetReq_2Jet_new=(TH1F*)h_eeSideBandLowDiJetPt_JetReq_2Jet->Rebin(numBins,"h_eeSideBandLowDiJetPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiJetPt_JetReq_0Jet_new=(TH1F*)h_eeSideBandHighDiJetPt_JetReq_0Jet->Rebin(numBins,"h_eeSideBandHighDiJetPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiJetPt_JetReq_1Jet_new=(TH1F*)h_eeSideBandHighDiJetPt_JetReq_1Jet->Rebin(numBins,"h_eeSideBandHighDiJetPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiJetPt_JetReq_2Jet_new=(TH1F*)h_eeSideBandHighDiJetPt_JetReq_2Jet->Rebin(numBins,"h_eeSideBandHighDiJetPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_ffDiEMPt_JetReq_new=(TH1F*)h_ffDiEMPt_JetReq->Rebin(numBins,"h_ffDiEMPt_JetReq_new",DiEMPtBins);
  TH1F* h_ffDiJetPt_JetReq_new=(TH1F*)h_ffDiJetPt_JetReq->Rebin(numBins,"h_ffDiJetPt_JetReq_new",DiEMPtBins);
  TH1F* h_ffDiEMPt_JetReq_0Jet_new=(TH1F*)h_ffDiEMPt_JetReq_0Jet->Rebin(numBins,"h_ffDiEMPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_ffDiEMPt_JetReq_1Jet_new=(TH1F*)h_ffDiEMPt_JetReq_1Jet->Rebin(numBins,"h_ffDiEMPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_ffDiEMPt_JetReq_2Jet_new=(TH1F*)h_ffDiEMPt_JetReq_2Jet->Rebin(numBins,"h_ffDiEMPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_ffDiJetPt_JetReq_0Jet_new=(TH1F*)h_ffDiJetPt_JetReq_0Jet->Rebin(numBins,"h_ffDiJetPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_ffDiJetPt_JetReq_1Jet_new=(TH1F*)h_ffDiJetPt_JetReq_1Jet->Rebin(numBins,"h_ffDiJetPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_ffDiJetPt_JetReq_2Jet_new=(TH1F*)h_ffDiJetPt_JetReq_2Jet->Rebin(numBins,"h_ffDiJetPt_JetReq_2Jet_new",DiEMPtBins);

  TH1F* h_gfDiEMPt_JetReq_new=(TH1F*)h_gfDiEMPt_JetReq->Rebin(numBins,"h_gfDiEMPt_JetReq_new",DiEMPtBins);
  TH1F* h_gfDiJetPt_JetReq_new=(TH1F*)h_gfDiJetPt_JetReq->Rebin(numBins,"h_gfDiJetPt_JetReq_new",DiEMPtBins);
  TH1F* h_gfDiEMPt_JetReq_0Jet_new=(TH1F*)h_gfDiEMPt_JetReq_0Jet->Rebin(numBins,"h_gfDiEMPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_gfDiEMPt_JetReq_1Jet_new=(TH1F*)h_gfDiEMPt_JetReq_1Jet->Rebin(numBins,"h_gfDiEMPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_gfDiEMPt_JetReq_2Jet_new=(TH1F*)h_gfDiEMPt_JetReq_2Jet->Rebin(numBins,"h_gfDiEMPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_gfDiJetPt_JetReq_0Jet_new=(TH1F*)h_gfDiJetPt_JetReq_0Jet->Rebin(numBins,"h_gfDiJetPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_gfDiJetPt_JetReq_1Jet_new=(TH1F*)h_gfDiJetPt_JetReq_1Jet->Rebin(numBins,"h_gfDiJetPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_gfDiJetPt_JetReq_2Jet_new=(TH1F*)h_gfDiJetPt_JetReq_2Jet->Rebin(numBins,"h_gfDiJetPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_fgDiEMPt_JetReq_new=(TH1F*)h_fgDiEMPt_JetReq->Rebin(numBins,"h_fgDiEMPt_JetReq_new",DiEMPtBins);
  TH1F* h_fgDiJetPt_JetReq_new=(TH1F*)h_fgDiJetPt_JetReq->Rebin(numBins,"h_fgDiJetPt_JetReq_new",DiEMPtBins);
  TH1F* h_fgDiEMPt_JetReq_0Jet_new=(TH1F*)h_fgDiEMPt_JetReq_0Jet->Rebin(numBins,"h_fgDiEMPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_fgDiEMPt_JetReq_1Jet_new=(TH1F*)h_fgDiEMPt_JetReq_1Jet->Rebin(numBins,"h_fgDiEMPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_fgDiEMPt_JetReq_2Jet_new=(TH1F*)h_fgDiEMPt_JetReq_2Jet->Rebin(numBins,"h_fgDiEMPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_fgDiJetPt_JetReq_0Jet_new=(TH1F*)h_fgDiJetPt_JetReq_0Jet->Rebin(numBins,"h_fgDiJetPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_fgDiJetPt_JetReq_1Jet_new=(TH1F*)h_fgDiJetPt_JetReq_1Jet->Rebin(numBins,"h_fgDiJetPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_fgDiJetPt_JetReq_2Jet_new=(TH1F*)h_fgDiJetPt_JetReq_2Jet->Rebin(numBins,"h_fgDiJetPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiEMPt_JetReq_new=(TH1F*)h_gammafakeDiEMPt_JetReq->Rebin(numBins,"h_gammafakeDiEMPt_JetReq_new",DiEMPtBins);
  TH1F* h_gammafakeDiJetPt_JetReq_new=(TH1F*)h_gammafakeDiJetPt_JetReq->Rebin(numBins,"h_gammafakeDiJetPt_JetReq_new",DiEMPtBins);
  TH1F* h_gammafakeDiEMPt_JetReq_0Jet_new=(TH1F*)h_gammafakeDiEMPt_JetReq_0Jet->Rebin(numBins,"h_gammafakeDiEMPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiEMPt_JetReq_1Jet_new=(TH1F*)h_gammafakeDiEMPt_JetReq_1Jet->Rebin(numBins,"h_gammafakeDiEMPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiEMPt_JetReq_2Jet_new=(TH1F*)h_gammafakeDiEMPt_JetReq_2Jet->Rebin(numBins,"h_gammafakeDiEMPt_JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiJetPt_JetReq_0Jet_new=(TH1F*)h_gammafakeDiJetPt_JetReq_0Jet->Rebin(numBins,"h_gammafakeDiJetPt_JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiJetPt_JetReq_1Jet_new=(TH1F*)h_gammafakeDiJetPt_JetReq_1Jet->Rebin(numBins,"h_gammafakeDiJetPt_JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiJetPt_JetReq_2Jet_new=(TH1F*)h_gammafakeDiJetPt_JetReq_2Jet->Rebin(numBins,"h_gammafakeDiJetPt_JetReq_2Jet_new",DiEMPtBins);


  TH1F* h_ggDiEMPt_2JetReq_new=(TH1F*)h_ggDiEMPt_2JetReq->Rebin(numBins,"h_ggDiEMPt_2JetReq_new",DiEMPtBins);
  TH1F* h_ggDiJetPt_2JetReq_new=(TH1F*)h_ggDiJetPt_2JetReq->Rebin(numBins,"h_ggDiJetPt_2JetReq_new",DiEMPtBins);
  TH1F* h_ggDiEMPt_2JetReq_0Jet_new=(TH1F*)h_ggDiEMPt_2JetReq_0Jet->Rebin(numBins,"h_ggDiEMPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_ggDiEMPt_2JetReq_1Jet_new=(TH1F*)h_ggDiEMPt_2JetReq_1Jet->Rebin(numBins,"h_ggDiEMPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_ggDiEMPt_2JetReq_2Jet_new=(TH1F*)h_ggDiEMPt_2JetReq_2Jet->Rebin(numBins,"h_ggDiEMPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_ggDiJetPt_2JetReq_0Jet_new=(TH1F*)h_ggDiJetPt_2JetReq_0Jet->Rebin(numBins,"h_ggDiJetPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_ggDiJetPt_2JetReq_1Jet_new=(TH1F*)h_ggDiJetPt_2JetReq_1Jet->Rebin(numBins,"h_ggDiJetPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_ggDiJetPt_2JetReq_2Jet_new=(TH1F*)h_ggDiJetPt_2JetReq_2Jet->Rebin(numBins,"h_ggDiJetPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_eeDiEMPt_2JetReq_new=(TH1F*)h_eeDiEMPt_2JetReq->Rebin(numBins,"h_eeDiEMPt_2JetReq_new",DiEMPtBins);
  TH1F* h_eeDiJetPt_2JetReq_new=(TH1F*)h_eeDiJetPt_2JetReq->Rebin(numBins,"h_eeDiJetPt_2JetReq_new",DiEMPtBins);
  TH1F* h_eeDiEMPt_2JetReq_0Jet_new=(TH1F*)h_eeDiEMPt_2JetReq_0Jet->Rebin(numBins,"h_eeDiEMPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_eeDiEMPt_2JetReq_1Jet_new=(TH1F*)h_eeDiEMPt_2JetReq_1Jet->Rebin(numBins,"h_eeDiEMPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_eeDiEMPt_2JetReq_2Jet_new=(TH1F*)h_eeDiEMPt_2JetReq_2Jet->Rebin(numBins,"h_eeDiEMPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_eeDiJetPt_2JetReq_0Jet_new=(TH1F*)h_eeDiJetPt_2JetReq_0Jet->Rebin(numBins,"h_eeDiJetPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_eeDiJetPt_2JetReq_1Jet_new=(TH1F*)h_eeDiJetPt_2JetReq_1Jet->Rebin(numBins,"h_eeDiJetPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_eeDiJetPt_2JetReq_2Jet_new=(TH1F*)h_eeDiJetPt_2JetReq_2Jet->Rebin(numBins,"h_eeDiJetPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandDiEMPt_2JetReq_new=(TH1F*)h_eeSideBandDiEMPt_2JetReq->Rebin(numBins,"h_eeSideBandDiEMPt_2JetReq_new",DiEMPtBins);
  TH1F* h_eeSideBandDiJetPt_2JetReq_new=(TH1F*)h_eeSideBandDiJetPt_2JetReq->Rebin(numBins,"h_eeSideBandDiJetPt_2JetReq_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiEMPt_2JetReq_new=(TH1F*)h_eeSideBandLowDiEMPt_2JetReq->Rebin(numBins,"h_eeSideBandLowDiEMPt_2JetReq_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiEMPt_2JetReq_new=(TH1F*)h_eeSideBandHighDiEMPt_2JetReq->Rebin(numBins,"h_eeSideBandHighDiEMPt_2JetReq_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiEMPt_2JetReq_0Jet_new=(TH1F*)h_eeSideBandLowDiEMPt_2JetReq_0Jet->Rebin(numBins,"h_eeSideBandLowDiEMPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiEMPt_2JetReq_1Jet_new=(TH1F*)h_eeSideBandLowDiEMPt_2JetReq_1Jet->Rebin(numBins,"h_eeSideBandLowDiEMPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiEMPt_2JetReq_2Jet_new=(TH1F*)h_eeSideBandLowDiEMPt_2JetReq_2Jet->Rebin(numBins,"h_eeSideBandLowDiEMPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiEMPt_2JetReq_0Jet_new=(TH1F*)h_eeSideBandHighDiEMPt_2JetReq_0Jet->Rebin(numBins,"h_eeSideBandHighDiEMPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiEMPt_2JetReq_1Jet_new=(TH1F*)h_eeSideBandHighDiEMPt_2JetReq_1Jet->Rebin(numBins,"h_eeSideBandHighDiEMPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiEMPt_2JetReq_2Jet_new=(TH1F*)h_eeSideBandHighDiEMPt_2JetReq_2Jet->Rebin(numBins,"h_eeSideBandHighDiEMPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiJetPt_2JetReq_new=(TH1F*)h_eeSideBandLowDiJetPt_2JetReq->Rebin(numBins,"h_eeSideBandLowDiJetPt_2JetReq_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiJetPt_2JetReq_new=(TH1F*)h_eeSideBandHighDiJetPt_2JetReq->Rebin(numBins,"h_eeSideBandHighDiJetPt_2JetReq_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiJetPt_2JetReq_0Jet_new=(TH1F*)h_eeSideBandLowDiJetPt_2JetReq_0Jet->Rebin(numBins,"h_eeSideBandLowDiJetPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiJetPt_2JetReq_1Jet_new=(TH1F*)h_eeSideBandLowDiJetPt_2JetReq_1Jet->Rebin(numBins,"h_eeSideBandLowDiJetPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandLowDiJetPt_2JetReq_2Jet_new=(TH1F*)h_eeSideBandLowDiJetPt_2JetReq_2Jet->Rebin(numBins,"h_eeSideBandLowDiJetPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiJetPt_2JetReq_0Jet_new=(TH1F*)h_eeSideBandHighDiJetPt_2JetReq_0Jet->Rebin(numBins,"h_eeSideBandHighDiJetPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiJetPt_2JetReq_1Jet_new=(TH1F*)h_eeSideBandHighDiJetPt_2JetReq_1Jet->Rebin(numBins,"h_eeSideBandHighDiJetPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_eeSideBandHighDiJetPt_2JetReq_2Jet_new=(TH1F*)h_eeSideBandHighDiJetPt_2JetReq_2Jet->Rebin(numBins,"h_eeSideBandHighDiJetPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_ffDiEMPt_2JetReq_new=(TH1F*)h_ffDiEMPt_2JetReq->Rebin(numBins,"h_ffDiEMPt_2JetReq_new",DiEMPtBins);
  TH1F* h_ffDiJetPt_2JetReq_new=(TH1F*)h_ffDiJetPt_2JetReq->Rebin(numBins,"h_ffDiJetPt_2JetReq_new",DiEMPtBins);
  TH1F* h_ffDiEMPt_2JetReq_0Jet_new=(TH1F*)h_ffDiEMPt_2JetReq_0Jet->Rebin(numBins,"h_ffDiEMPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_ffDiEMPt_2JetReq_1Jet_new=(TH1F*)h_ffDiEMPt_2JetReq_1Jet->Rebin(numBins,"h_ffDiEMPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_ffDiEMPt_2JetReq_2Jet_new=(TH1F*)h_ffDiEMPt_2JetReq_2Jet->Rebin(numBins,"h_ffDiEMPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_ffDiJetPt_2JetReq_0Jet_new=(TH1F*)h_ffDiJetPt_2JetReq_0Jet->Rebin(numBins,"h_ffDiJetPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_ffDiJetPt_2JetReq_1Jet_new=(TH1F*)h_ffDiJetPt_2JetReq_1Jet->Rebin(numBins,"h_ffDiJetPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_ffDiJetPt_2JetReq_2Jet_new=(TH1F*)h_ffDiJetPt_2JetReq_2Jet->Rebin(numBins,"h_ffDiJetPt_2JetReq_2Jet_new",DiEMPtBins);

  TH1F* h_gfDiEMPt_2JetReq_new=(TH1F*)h_gfDiEMPt_2JetReq->Rebin(numBins,"h_gfDiEMPt_2JetReq_new",DiEMPtBins);
  TH1F* h_gfDiJetPt_2JetReq_new=(TH1F*)h_gfDiJetPt_2JetReq->Rebin(numBins,"h_gfDiJetPt_2JetReq_new",DiEMPtBins);
  TH1F* h_gfDiEMPt_2JetReq_0Jet_new=(TH1F*)h_gfDiEMPt_2JetReq_0Jet->Rebin(numBins,"h_gfDiEMPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_gfDiEMPt_2JetReq_1Jet_new=(TH1F*)h_gfDiEMPt_2JetReq_1Jet->Rebin(numBins,"h_gfDiEMPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_gfDiEMPt_2JetReq_2Jet_new=(TH1F*)h_gfDiEMPt_2JetReq_2Jet->Rebin(numBins,"h_gfDiEMPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_gfDiJetPt_2JetReq_0Jet_new=(TH1F*)h_gfDiJetPt_2JetReq_0Jet->Rebin(numBins,"h_gfDiJetPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_gfDiJetPt_2JetReq_1Jet_new=(TH1F*)h_gfDiJetPt_2JetReq_1Jet->Rebin(numBins,"h_gfDiJetPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_gfDiJetPt_2JetReq_2Jet_new=(TH1F*)h_gfDiJetPt_2JetReq_2Jet->Rebin(numBins,"h_gfDiJetPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_fgDiEMPt_2JetReq_new=(TH1F*)h_fgDiEMPt_2JetReq->Rebin(numBins,"h_fgDiEMPt_2JetReq_new",DiEMPtBins);
  TH1F* h_fgDiJetPt_2JetReq_new=(TH1F*)h_fgDiJetPt_2JetReq->Rebin(numBins,"h_fgDiJetPt_2JetReq_new",DiEMPtBins);
  TH1F* h_fgDiEMPt_2JetReq_0Jet_new=(TH1F*)h_fgDiEMPt_2JetReq_0Jet->Rebin(numBins,"h_fgDiEMPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_fgDiEMPt_2JetReq_1Jet_new=(TH1F*)h_fgDiEMPt_2JetReq_1Jet->Rebin(numBins,"h_fgDiEMPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_fgDiEMPt_2JetReq_2Jet_new=(TH1F*)h_fgDiEMPt_2JetReq_2Jet->Rebin(numBins,"h_fgDiEMPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_fgDiJetPt_2JetReq_0Jet_new=(TH1F*)h_fgDiJetPt_2JetReq_0Jet->Rebin(numBins,"h_fgDiJetPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_fgDiJetPt_2JetReq_1Jet_new=(TH1F*)h_fgDiJetPt_2JetReq_1Jet->Rebin(numBins,"h_fgDiJetPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_fgDiJetPt_2JetReq_2Jet_new=(TH1F*)h_fgDiJetPt_2JetReq_2Jet->Rebin(numBins,"h_fgDiJetPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiEMPt_2JetReq_new=(TH1F*)h_gammafakeDiEMPt_2JetReq->Rebin(numBins,"h_gammafakeDiEMPt_2JetReq_new",DiEMPtBins);
  TH1F* h_gammafakeDiJetPt_2JetReq_new=(TH1F*)h_gammafakeDiJetPt_2JetReq->Rebin(numBins,"h_gammafakeDiJetPt_2JetReq_new",DiEMPtBins);
  TH1F* h_gammafakeDiEMPt_2JetReq_0Jet_new=(TH1F*)h_gammafakeDiEMPt_2JetReq_0Jet->Rebin(numBins,"h_gammafakeDiEMPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiEMPt_2JetReq_1Jet_new=(TH1F*)h_gammafakeDiEMPt_2JetReq_1Jet->Rebin(numBins,"h_gammafakeDiEMPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiEMPt_2JetReq_2Jet_new=(TH1F*)h_gammafakeDiEMPt_2JetReq_2Jet->Rebin(numBins,"h_gammafakeDiEMPt_2JetReq_2Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiJetPt_2JetReq_0Jet_new=(TH1F*)h_gammafakeDiJetPt_2JetReq_0Jet->Rebin(numBins,"h_gammafakeDiJetPt_2JetReq_0Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiJetPt_2JetReq_1Jet_new=(TH1F*)h_gammafakeDiJetPt_2JetReq_1Jet->Rebin(numBins,"h_gammafakeDiJetPt_2JetReq_1Jet_new",DiEMPtBins);
  TH1F* h_gammafakeDiJetPt_2JetReq_2Jet_new=(TH1F*)h_gammafakeDiJetPt_2JetReq_2Jet->Rebin(numBins,"h_gammafakeDiJetPt_2JetReq_2Jet_new",DiEMPtBins);

  float ggInt=h_ggDiEMPt_new->Integral(),eeInt=h_eeDiEMPt_new->Integral(),eeSideBandInt=h_eeSideBandDiEMPt_new->Integral(),ffInt=h_ffDiEMPt_new->Integral();
  float gfInt=h_gfDiEMPt_new->Integral(),fgInt=h_fgDiEMPt_new->Integral(),gammafakeInt=h_gammafakeDiEMPt_new->Integral();
  float eeSideBandLowInt=h_eeSideBandLowDiEMPt_new->Integral(),eeSideBandHighInt=h_eeSideBandHighDiEMPt_new->Integral();
  //float eeSideBandLowInt_0Jet=h_eeSideBandLowDiEMPt_0Jet_new->Integral(),eeSideBandLowInt_1Jet=h_eeSideBandLowDiEMPt_1Jet_new->Integral(),eeSideBandLowInt_2Jet=h_eeSideBandLowDiEMPt_2Jet_new->Integral();
  //float eeSideBandHighInt_0Jet=h_eeSideBandHighDiEMPt_0Jet_new->Integral(),eeSideBandHighInt_1Jet=h_eeSideBandHighDiEMPt_1Jet_new->Integral(),eeSideBandHighInt_2Jet=h_eeSideBandHighDiEMPt_2Jet_new->Integral();
  float eeSideBandLowJetInt=h_eeSideBandLowDiJetPt_new->Integral(),eeSideBandHighJetInt=h_eeSideBandHighDiJetPt_new->Integral();
  //float eeSideBandLowJetInt_0Jet=h_eeSideBandLowDiJetPt_0Jet_new->Integral(),eeSideBandLowJetInt_1Jet=h_eeSideBandLowDiJetPt_1Jet_new->Integral(),eeSideBandLowJetInt_2Jet=h_eeSideBandLowDiJetPt_2Jet_new->Integral();
  //float eeSideBandHighJetInt_0Jet=h_eeSideBandHighDiJetPt_0Jet_new->Integral(),eeSideBandHighJetInt_1Jet=h_eeSideBandHighDiJetPt_1Jet_new->Integral(),eeSideBandHighJetInt_2Jet=h_eeSideBandHighDiJetPt_2Jet_new->Integral();
  float ggJetInt=h_ggDiJetPt_new->Integral(),eeJetInt=h_eeDiJetPt_new->Integral(),ffJetInt=h_ffDiJetPt_new->Integral();
  float gfJetInt=h_gfDiJetPt_new->Integral();//gfInt_0Jet=h_gfDiEMPt_0Jet_new->Integral(),gfInt_1Jet=h_gfDiEMPt_1Jet_new->Integral(),gfInt_2Jet=h_gfDiEMPt_2Jet_new->Integral();
  float fgJetInt=h_fgDiJetPt_new->Integral();//fgInt_0Jet=h_fgDiEMPt_0Jet_new->Integral(),fgInt_1Jet=h_fgDiEMPt_1Jet_new->Integral(),fgInt_2Jet=h_fgDiEMPt_2Jet_new->Integral();
  float gammafakeJetInt=h_gammafakeDiJetPt_new->Integral();//gammafakeInt_0Jet=h_gammafakeDiEMPt_0Jet_new->Integral(),gammafakeInt_1Jet=h_gammafakeDiEMPt_1Jet_new->Integral(),gammafakeInt_2Jet=h_gammafakeDiEMPt_2Jet_new->Integral();
  //float ggInt_0Jet=h_ggDiEMPt_0Jet_new->Integral(),eeInt_0Jet=h_eeDiEMPt_0Jet_new->Integral(),ffInt_0Jet=h_ffDiEMPt_0Jet_new->Integral();
  //float ggInt_1Jet=h_ggDiEMPt_1Jet_new->Integral(),eeInt_1Jet=h_eeDiEMPt_1Jet_new->Integral(),ffInt_1Jet=h_ffDiEMPt_1Jet_new->Integral();
  //float ggInt_2Jet=h_ggDiEMPt_2Jet_new->Integral(),eeInt_2Jet=h_eeDiEMPt_2Jet_new->Integral(),ffInt_2Jet=h_ffDiEMPt_2Jet_new->Integral();
  //float ggJetInt_0Jet=h_ggDiJetPt_0Jet_new->Integral(),eeJetInt_0Jet=h_eeDiJetPt_0Jet_new->Integral(),ffJetInt_0Jet=h_ffDiJetPt_0Jet_new->Integral();
  //float ggJetInt_1Jet=h_ggDiJetPt_1Jet_new->Integral(),eeJetInt_1Jet=h_eeDiJetPt_1Jet_new->Integral(),ffJetInt_1Jet=h_ffDiJetPt_1Jet_new->Integral();
  //float ggJetInt_2Jet=h_ggDiJetPt_2Jet_new->Integral(),eeJetInt_2Jet=h_eeDiJetPt_2Jet_new->Integral(),ffJetInt_2Jet=h_ffDiJetPt_2Jet_new->Integral();
  //float gfJetInt_0Jet=h_gfDiJetPt_0Jet_new->Integral(),gfJetInt_1Jet=h_gfDiJetPt_1Jet_new->Integral(),gfJetInt_2Jet=h_gfDiJetPt_2Jet_new->Integral();
  //float fgJetInt_0Jet=h_fgDiJetPt_0Jet_new->Integral(),fgJetInt_1Jet=h_fgDiJetPt_1Jet_new->Integral(),fgJetInt_2Jet=h_fgDiJetPt_2Jet_new->Integral();
  float gammafakeJetInt_0Jet=h_gammafakeDiJetPt_0Jet_new->Integral(),gammafakeJetInt_1Jet=h_gammafakeDiJetPt_1Jet_new->Integral(),gammafakeJetInt_2Jet=h_gammafakeDiJetPt_2Jet_new->Integral();
  float scaleggee=ggInt/eeInt;
  float scaleggeeSideBand=ggInt/eeSideBandInt,scaleggeeSideBandLow=ggInt/eeSideBandLowInt,scaleggeeSideBandHigh=ggInt/eeSideBandHighInt;
  float scaleggeeSideBandLowJet=ggJetInt/eeSideBandLowJetInt,scaleggeeSideBandHighJet=ggJetInt/eeSideBandHighJetInt;
  float scaleggff=ggInt/ffInt;
  float scalegggf=ggInt/gfInt;
  float scaleggfg=ggInt/fgInt;
  float scalegggammafake=ggInt/gammafakeInt;
  float scaleggeeJet=ggJetInt/eeJetInt,scaleggffJet=ggJetInt/ffJetInt,scalegggfJet=ggJetInt/gfJetInt,scaleggfgJet=ggJetInt/fgJetInt,scalegggammafakeJet=ggJetInt/gammafakeJetInt;

  float ggInt_JetReq=h_ggDiEMPt_JetReq_new->Integral(),eeInt_JetReq=h_eeDiEMPt_JetReq_new->Integral(),eeSideBandInt_JetReq=h_eeSideBandDiEMPt_JetReq_new->Integral(),ffInt_JetReq=h_ffDiEMPt_JetReq_new->Integral(),gfInt_JetReq=h_gfDiEMPt_JetReq_new->Integral(),fgInt_JetReq=h_fgDiEMPt_JetReq_new->Integral(),gammafakeInt_JetReq=h_gammafakeDiEMPt_JetReq_new->Integral();
  float eeSideBandLowInt_JetReq=h_eeSideBandLowDiEMPt_JetReq_new->Integral(),eeSideBandHighInt_JetReq=h_eeSideBandHighDiEMPt_JetReq_new->Integral();
  float eeSideBandLowInt_JetReq_0Jet=h_eeSideBandLowDiEMPt_JetReq_0Jet_new->Integral(),eeSideBandLowInt_JetReq_1Jet=h_eeSideBandLowDiEMPt_JetReq_1Jet_new->Integral(),eeSideBandLowInt_JetReq_2Jet=h_eeSideBandLowDiEMPt_JetReq_2Jet_new->Integral();
  float eeSideBandHighInt_JetReq_0Jet=h_eeSideBandHighDiEMPt_JetReq_0Jet_new->Integral(),eeSideBandHighInt_JetReq_1Jet=h_eeSideBandHighDiEMPt_JetReq_1Jet_new->Integral(),eeSideBandHighInt_JetReq_2Jet=h_eeSideBandHighDiEMPt_JetReq_2Jet_new->Integral();
  float eeSideBandLowJetInt_JetReq=h_eeSideBandLowDiJetPt_JetReq_new->Integral(),eeSideBandHighJetInt_JetReq=h_eeSideBandHighDiJetPt_JetReq_new->Integral();
  float eeSideBandLowJetInt_JetReq_0Jet=h_eeSideBandLowDiJetPt_JetReq_0Jet_new->Integral(),eeSideBandLowJetInt_JetReq_1Jet=h_eeSideBandLowDiJetPt_JetReq_1Jet_new->Integral(),eeSideBandLowJetInt_JetReq_2Jet=h_eeSideBandLowDiJetPt_JetReq_2Jet_new->Integral();
  float eeSideBandHighJetInt_JetReq_0Jet=h_eeSideBandHighDiJetPt_JetReq_0Jet_new->Integral(),eeSideBandHighJetInt_JetReq_1Jet=h_eeSideBandHighDiJetPt_JetReq_1Jet_new->Integral(),eeSideBandHighJetInt_JetReq_2Jet=h_eeSideBandHighDiJetPt_JetReq_2Jet_new->Integral();
  float ggJetInt_JetReq=h_ggDiJetPt_JetReq_new->Integral(),eeJetInt_JetReq=h_eeDiJetPt_JetReq_new->Integral(),ffJetInt_JetReq=h_ffDiJetPt_JetReq_new->Integral();
  float gfJetInt_JetReq=h_gfDiJetPt_JetReq_new->Integral(),gfInt_JetReq_0Jet=h_gfDiEMPt_JetReq_0Jet_new->Integral(),gfInt_JetReq_1Jet=h_gfDiEMPt_JetReq_1Jet_new->Integral(),gfInt_JetReq_2Jet=h_gfDiEMPt_JetReq_2Jet_new->Integral(),gfJetInt_JetReq_0Jet=h_gfDiJetPt_JetReq_0Jet_new->Integral(),gfJetInt_JetReq_1Jet=h_gfDiJetPt_JetReq_1Jet_new->Integral(),gfJetInt_JetReq_2Jet=h_gfDiJetPt_JetReq_2Jet_new->Integral();
  float fgJetInt_JetReq=h_fgDiJetPt_JetReq_new->Integral(),fgInt_JetReq_0Jet=h_fgDiEMPt_JetReq_0Jet_new->Integral(),fgInt_JetReq_1Jet=h_fgDiEMPt_JetReq_1Jet_new->Integral(),fgInt_JetReq_2Jet=h_fgDiEMPt_JetReq_2Jet_new->Integral(),fgJetInt_JetReq_0Jet=h_fgDiJetPt_JetReq_0Jet_new->Integral(),fgJetInt_JetReq_1Jet=h_fgDiJetPt_JetReq_1Jet_new->Integral(),fgJetInt_JetReq_2Jet=h_fgDiJetPt_JetReq_2Jet_new->Integral();
  float gammafakeJetInt_JetReq=h_gammafakeDiJetPt_JetReq_new->Integral(),gammafakeInt_JetReq_0Jet=h_gammafakeDiEMPt_JetReq_0Jet_new->Integral(),gammafakeInt_JetReq_1Jet=h_gammafakeDiEMPt_JetReq_1Jet_new->Integral(),gammafakeInt_JetReq_2Jet=h_gammafakeDiEMPt_JetReq_2Jet_new->Integral(),gammafakeJetInt_JetReq_0Jet=h_gammafakeDiJetPt_JetReq_0Jet_new->Integral(),gammafakeJetInt_JetReq_1Jet=h_gammafakeDiJetPt_JetReq_1Jet_new->Integral(),gammafakeJetInt_JetReq_2Jet=h_gammafakeDiJetPt_JetReq_2Jet_new->Integral();
  float ggInt_JetReq_0Jet=h_ggDiEMPt_JetReq_0Jet_new->Integral(),eeInt_JetReq_0Jet=h_eeDiEMPt_JetReq_0Jet_new->Integral(),ffInt_JetReq_0Jet=h_ffDiEMPt_JetReq_0Jet_new->Integral();
  float ggInt_JetReq_1Jet=h_ggDiEMPt_JetReq_1Jet_new->Integral(),eeInt_JetReq_1Jet=h_eeDiEMPt_JetReq_1Jet_new->Integral(),ffInt_JetReq_1Jet=h_ffDiEMPt_JetReq_1Jet_new->Integral();
  float ggInt_JetReq_2Jet=h_ggDiEMPt_JetReq_2Jet_new->Integral(),eeInt_JetReq_2Jet=h_eeDiEMPt_JetReq_2Jet_new->Integral(),ffInt_JetReq_2Jet=h_ffDiEMPt_JetReq_2Jet_new->Integral();
  float ggJetInt_JetReq_0Jet=h_ggDiJetPt_JetReq_0Jet_new->Integral(),eeJetInt_JetReq_0Jet=h_eeDiJetPt_JetReq_0Jet_new->Integral(),ffJetInt_JetReq_0Jet=h_ffDiJetPt_JetReq_0Jet_new->Integral();
  float ggJetInt_JetReq_1Jet=h_ggDiJetPt_JetReq_1Jet_new->Integral(),eeJetInt_JetReq_1Jet=h_eeDiJetPt_JetReq_1Jet_new->Integral(),ffJetInt_JetReq_1Jet=h_ffDiJetPt_JetReq_1Jet_new->Integral();
  float ggJetInt_JetReq_2Jet=h_ggDiJetPt_JetReq_2Jet_new->Integral(),eeJetInt_JetReq_2Jet=h_eeDiJetPt_JetReq_2Jet_new->Integral(),ffJetInt_JetReq_2Jet=h_ffDiJetPt_JetReq_2Jet_new->Integral();
  float scaleggee_JetReq=ggInt_JetReq/eeInt;
  float scaleggeeSideBand_JetReq=ggInt_JetReq/eeSideBandInt_JetReq,scaleggeeSideBandLow_JetReq=ggInt_JetReq/eeSideBandLowInt_JetReq,scaleggeeSideBandHigh_JetReq=ggInt_JetReq/eeSideBandHighInt_JetReq;
  float scaleggeeSideBandLowJet_JetReq=ggJetInt_JetReq/eeSideBandLowJetInt_JetReq,scaleggeeSideBandHighJet_JetReq=ggJetInt_JetReq/eeSideBandHighJetInt_JetReq;
  float scaleggff_JetReq=ggInt_JetReq/ffInt_JetReq;
  float scaleggeeJet_JetReq=ggJetInt_JetReq/eeJetInt_JetReq,scaleggffJet_JetReq=ggJetInt_JetReq/ffJetInt_JetReq;
  float scalegggf_JetReq=ggInt_JetReq/gfInt_JetReq,scalegggfJet_JetReq=ggJetInt_JetReq/gfJetInt_JetReq;
  float scaleggfg_JetReq=ggInt_JetReq/fgInt_JetReq,scaleggfgJet_JetReq=ggJetInt_JetReq/fgJetInt_JetReq;
  float scalegggammafake_JetReq=ggInt_JetReq/gammafakeInt_JetReq,scalegggammafakeJet_JetReq=ggJetInt_JetReq/gammafakeJetInt_JetReq;

  float ggInt_2JetReq=h_ggDiEMPt_2JetReq_new->Integral(),eeInt_2JetReq=h_eeDiEMPt_2JetReq_new->Integral(),eeSideBandInt_2JetReq=h_eeSideBandDiEMPt_2JetReq_new->Integral(),ffInt_2JetReq=h_ffDiEMPt_2JetReq_new->Integral(),gfInt_2JetReq=h_gfDiEMPt_2JetReq_new->Integral(),fgInt_2JetReq=h_fgDiEMPt_2JetReq_new->Integral(),gammafakeInt_2JetReq=h_gammafakeDiEMPt_2JetReq_new->Integral();
  float eeSideBandLowInt_2JetReq=h_eeSideBandLowDiEMPt_2JetReq_new->Integral(),eeSideBandHighInt_2JetReq=h_eeSideBandHighDiEMPt_2JetReq_new->Integral();
  float eeSideBandLowInt_2JetReq_0Jet=h_eeSideBandLowDiEMPt_2JetReq_0Jet_new->Integral(),eeSideBandLowInt_2JetReq_1Jet=h_eeSideBandLowDiEMPt_2JetReq_1Jet_new->Integral(),eeSideBandLowInt_2JetReq_2Jet=h_eeSideBandLowDiEMPt_2JetReq_2Jet_new->Integral();
  float eeSideBandHighInt_2JetReq_0Jet=h_eeSideBandHighDiEMPt_2JetReq_0Jet_new->Integral(),eeSideBandHighInt_2JetReq_1Jet=h_eeSideBandHighDiEMPt_2JetReq_1Jet_new->Integral(),eeSideBandHighInt_2JetReq_2Jet=h_eeSideBandHighDiEMPt_2JetReq_2Jet_new->Integral();
  float eeSideBandLowJetInt_2JetReq=h_eeSideBandLowDiJetPt_2JetReq_new->Integral(),eeSideBandHighJetInt_2JetReq=h_eeSideBandHighDiJetPt_2JetReq_new->Integral();
  float eeSideBandLowJetInt_2JetReq_0Jet=h_eeSideBandLowDiJetPt_2JetReq_0Jet_new->Integral(),eeSideBandLowJetInt_2JetReq_1Jet=h_eeSideBandLowDiJetPt_2JetReq_1Jet_new->Integral(),eeSideBandLowJetInt_2JetReq_2Jet=h_eeSideBandLowDiJetPt_2JetReq_2Jet_new->Integral();
  float eeSideBandHighJetInt_2JetReq_0Jet=h_eeSideBandHighDiJetPt_2JetReq_0Jet_new->Integral(),eeSideBandHighJetInt_2JetReq_1Jet=h_eeSideBandHighDiJetPt_2JetReq_1Jet_new->Integral(),eeSideBandHighJetInt_2JetReq_2Jet=h_eeSideBandHighDiJetPt_2JetReq_2Jet_new->Integral();
  float ggJetInt_2JetReq=h_ggDiJetPt_2JetReq_new->Integral(),eeJetInt_2JetReq=h_eeDiJetPt_2JetReq_new->Integral(),ffJetInt_2JetReq=h_ffDiJetPt_2JetReq_new->Integral();
  float gfJetInt_2JetReq=h_gfDiJetPt_2JetReq_new->Integral(),gfInt_2JetReq_0Jet=h_gfDiEMPt_2JetReq_0Jet_new->Integral(),gfInt_2JetReq_1Jet=h_gfDiEMPt_2JetReq_1Jet_new->Integral(),gfInt_2JetReq_2Jet=h_gfDiEMPt_2JetReq_2Jet_new->Integral(),gfJetInt_2JetReq_0Jet=h_gfDiJetPt_2JetReq_0Jet_new->Integral(),gfJetInt_2JetReq_1Jet=h_gfDiJetPt_2JetReq_1Jet_new->Integral(),gfJetInt_2JetReq_2Jet=h_gfDiJetPt_2JetReq_2Jet_new->Integral();
  float fgJetInt_2JetReq=h_fgDiJetPt_2JetReq_new->Integral(),fgInt_2JetReq_0Jet=h_fgDiEMPt_2JetReq_0Jet_new->Integral(),fgInt_2JetReq_1Jet=h_fgDiEMPt_2JetReq_1Jet_new->Integral(),fgInt_2JetReq_2Jet=h_fgDiEMPt_2JetReq_2Jet_new->Integral(),fgJetInt_2JetReq_0Jet=h_fgDiJetPt_2JetReq_0Jet_new->Integral(),fgJetInt_2JetReq_1Jet=h_fgDiJetPt_2JetReq_1Jet_new->Integral(),fgJetInt_2JetReq_2Jet=h_fgDiJetPt_2JetReq_2Jet_new->Integral();
  float gammafakeJetInt_2JetReq=h_gammafakeDiJetPt_2JetReq_new->Integral(),gammafakeInt_2JetReq_0Jet=h_gammafakeDiEMPt_2JetReq_0Jet_new->Integral(),gammafakeInt_2JetReq_1Jet=h_gammafakeDiEMPt_2JetReq_1Jet_new->Integral(),gammafakeInt_2JetReq_2Jet=h_gammafakeDiEMPt_2JetReq_2Jet_new->Integral(),gammafakeJetInt_2JetReq_0Jet=h_gammafakeDiJetPt_2JetReq_0Jet_new->Integral(),gammafakeJetInt_2JetReq_1Jet=h_gammafakeDiJetPt_2JetReq_1Jet_new->Integral(),gammafakeJetInt_2JetReq_2Jet=h_gammafakeDiJetPt_2JetReq_2Jet_new->Integral();
  float ggInt_2JetReq_0Jet=h_ggDiEMPt_2JetReq_0Jet_new->Integral(),eeInt_2JetReq_0Jet=h_eeDiEMPt_2JetReq_0Jet_new->Integral(),ffInt_2JetReq_0Jet=h_ffDiEMPt_2JetReq_0Jet_new->Integral();
  float ggInt_2JetReq_1Jet=h_ggDiEMPt_2JetReq_1Jet_new->Integral(),eeInt_2JetReq_1Jet=h_eeDiEMPt_2JetReq_1Jet_new->Integral(),ffInt_2JetReq_1Jet=h_ffDiEMPt_2JetReq_1Jet_new->Integral();
  float ggInt_2JetReq_2Jet=h_ggDiEMPt_2JetReq_2Jet_new->Integral(),eeInt_2JetReq_2Jet=h_eeDiEMPt_2JetReq_2Jet_new->Integral(),ffInt_2JetReq_2Jet=h_ffDiEMPt_2JetReq_2Jet_new->Integral();
  float ggJetInt_2JetReq_0Jet=h_ggDiJetPt_2JetReq_0Jet_new->Integral(),eeJetInt_2JetReq_0Jet=h_eeDiJetPt_2JetReq_0Jet_new->Integral(),ffJetInt_2JetReq_0Jet=h_ffDiJetPt_2JetReq_0Jet_new->Integral();
  float ggJetInt_2JetReq_1Jet=h_ggDiJetPt_2JetReq_1Jet_new->Integral(),eeJetInt_2JetReq_1Jet=h_eeDiJetPt_2JetReq_1Jet_new->Integral(),ffJetInt_2JetReq_1Jet=h_ffDiJetPt_2JetReq_1Jet_new->Integral();
  float ggJetInt_2JetReq_2Jet=h_ggDiJetPt_2JetReq_2Jet_new->Integral(),eeJetInt_2JetReq_2Jet=h_eeDiJetPt_2JetReq_2Jet_new->Integral(),ffJetInt_2JetReq_2Jet=h_ffDiJetPt_2JetReq_2Jet_new->Integral();
  float scaleggee_2JetReq=ggInt_2JetReq/eeInt;
  float scaleggeeSideBand_2JetReq=ggInt_2JetReq/eeSideBandInt_2JetReq,scaleggeeSideBandLow_2JetReq=ggInt_2JetReq/eeSideBandLowInt_2JetReq,scaleggeeSideBandHigh_2JetReq=ggInt_2JetReq/eeSideBandHighInt_2JetReq;
  float scaleggeeSideBandLowJet_2JetReq=ggJetInt_2JetReq/eeSideBandLowJetInt_2JetReq,scaleggeeSideBandHighJet_2JetReq=ggJetInt_2JetReq/eeSideBandHighJetInt_2JetReq;
  float scaleggff_2JetReq=ggInt_2JetReq/ffInt_2JetReq;
  float scaleggeeJet_2JetReq=ggJetInt_2JetReq/eeJetInt_2JetReq,scaleggffJet_2JetReq=ggJetInt_2JetReq/ffJetInt_2JetReq;
  float scalegggf_2JetReq=ggInt_2JetReq/gfInt_2JetReq,scalegggfJet_2JetReq=ggJetInt_2JetReq/gfJetInt_2JetReq;
  float scaleggfg_2JetReq=ggInt_2JetReq/fgInt_2JetReq,scaleggfgJet_2JetReq=ggJetInt_2JetReq/fgJetInt_2JetReq;
  float scalegggammafake_2JetReq=ggInt_2JetReq/gammafakeInt_2JetReq,scalegggammafakeJet_2JetReq=ggJetInt_2JetReq/gammafakeJetInt_2JetReq;

  h_eeDiEMPt_new->Scale(scaleggee);
  h_eeSideBandDiEMPt_new->Scale(scaleggeeSideBand);
  h_eeSideBandDiJetPt_new->Scale(scaleggeeSideBand);
  h_eeSideBandLowDiEMPt_0Jet_new->Scale(scaleggeeSideBandLow);h_eeSideBandLowDiEMPt_1Jet_new->Scale(scaleggeeSideBandLow);h_eeSideBandLowDiEMPt_2Jet_new->Scale(scaleggeeSideBandLow);
  h_eeSideBandHighDiEMPt_0Jet_new->Scale(scaleggeeSideBandHigh);h_eeSideBandHighDiEMPt_1Jet_new->Scale(scaleggeeSideBandHigh);h_eeSideBandHighDiEMPt_2Jet_new->Scale(scaleggeeSideBandHigh);
  h_eeSideBandLowDiJetPt_0Jet_new->Scale(scaleggeeSideBandLowJet);h_eeSideBandLowDiJetPt_1Jet_new->Scale(scaleggeeSideBandLowJet);h_eeSideBandLowDiJetPt_2Jet_new->Scale(scaleggeeSideBandLowJet);
  h_eeSideBandHighDiJetPt_0Jet_new->Scale(scaleggeeSideBandHighJet);h_eeSideBandHighDiJetPt_1Jet_new->Scale(scaleggeeSideBandHighJet);h_eeSideBandHighDiJetPt_2Jet_new->Scale(scaleggeeSideBandHighJet);
  h_ffDiEMPt_new->Scale(scaleggff);h_gfDiEMPt_new->Scale(scalegggf);h_fgDiEMPt_new->Scale(scaleggfg);h_gammafakeDiEMPt_new->Scale(scalegggammafake);
  h_eeDiJetPt_new->Scale(scaleggeeJet);
  h_eeDiEMPt_0Jet_new->Scale(scaleggee);h_eeDiEMPt_1Jet_new->Scale(scaleggee);h_eeDiEMPt_2Jet_new->Scale(scaleggee);//need to multiply by full ratios
  h_eeDiJetPt_0Jet_new->Scale(scaleggeeJet);h_eeDiJetPt_1Jet_new->Scale(scaleggeeJet);h_eeDiJetPt_2Jet_new->Scale(scaleggeeJet);//need to multiply by full ratios
  h_ffDiJetPt_new->Scale(scaleggffJet);h_gfDiJetPt_new->Scale(scalegggfJet);h_fgDiJetPt_new->Scale(scaleggfgJet);h_gammafakeDiJetPt_new->Scale(scalegggammafakeJet);
  h_ffDiEMPt_0Jet_new->Scale(scaleggff);h_ffDiEMPt_1Jet_new->Scale(scaleggff);h_ffDiEMPt_2Jet_new->Scale(scaleggff);
  h_ffDiJetPt_0Jet_new->Scale(scaleggffJet);h_ffDiJetPt_1Jet_new->Scale(scaleggffJet);h_ffDiJetPt_2Jet_new->Scale(scaleggffJet);
  h_gfDiEMPt_0Jet_new->Scale(scalegggf);h_gfDiEMPt_1Jet_new->Scale(scalegggf);h_gfDiEMPt_2Jet_new->Scale(scalegggf);
  h_gfDiJetPt_0Jet_new->Scale(scalegggfJet);h_gfDiJetPt_1Jet_new->Scale(scalegggfJet);h_gfDiJetPt_2Jet_new->Scale(scalegggfJet);
  h_fgDiEMPt_0Jet_new->Scale(scaleggfg);h_fgDiEMPt_1Jet_new->Scale(scaleggfg);h_fgDiEMPt_2Jet_new->Scale(scaleggfg);
  h_fgDiJetPt_0Jet_new->Scale(scaleggfgJet);h_fgDiJetPt_1Jet_new->Scale(scaleggfgJet);h_fgDiJetPt_2Jet_new->Scale(scaleggfgJet);
  h_gammafakeDiEMPt_0Jet_new->Scale(scalegggammafake);h_gammafakeDiEMPt_1Jet_new->Scale(scalegggammafake);h_gammafakeDiEMPt_2Jet_new->Scale(scalegggammafake);
  h_gammafakeDiJetPt_0Jet_new->Scale(scalegggammafakeJet);h_gammafakeDiJetPt_1Jet_new->Scale(scalegggammafakeJet);h_gammafakeDiJetPt_2Jet_new->Scale(scalegggammafakeJet);
  //JetReq
  h_eeDiEMPt_JetReq_new->Scale(scaleggee_JetReq);
  h_eeSideBandDiEMPt_JetReq_new->Scale(scaleggeeSideBand_JetReq);
  h_eeSideBandDiJetPt_JetReq_new->Scale(scaleggeeSideBand_JetReq);
  h_eeSideBandLowDiEMPt_JetReq_0Jet_new->Scale(scaleggeeSideBandLow_JetReq);h_eeSideBandLowDiEMPt_JetReq_1Jet_new->Scale(scaleggeeSideBandLow_JetReq);h_eeSideBandLowDiEMPt_JetReq_2Jet_new->Scale(scaleggeeSideBandLow_JetReq);
  h_eeSideBandHighDiEMPt_JetReq_0Jet_new->Scale(scaleggeeSideBandHigh_JetReq);h_eeSideBandHighDiEMPt_JetReq_1Jet_new->Scale(scaleggeeSideBandHigh_JetReq);h_eeSideBandHighDiEMPt_JetReq_2Jet_new->Scale(scaleggeeSideBandHigh_JetReq);
  h_eeSideBandLowDiJetPt_JetReq_0Jet_new->Scale(scaleggeeSideBandLowJet_JetReq);h_eeSideBandLowDiJetPt_JetReq_1Jet_new->Scale(scaleggeeSideBandLowJet_JetReq);h_eeSideBandLowDiJetPt_JetReq_2Jet_new->Scale(scaleggeeSideBandLowJet_JetReq);
  h_eeSideBandHighDiJetPt_JetReq_0Jet_new->Scale(scaleggeeSideBandHighJet_JetReq);h_eeSideBandHighDiJetPt_JetReq_1Jet_new->Scale(scaleggeeSideBandHighJet_JetReq);h_eeSideBandHighDiJetPt_JetReq_2Jet_new->Scale(scaleggeeSideBandHighJet_JetReq);
  h_ffDiEMPt_JetReq_new->Scale(scaleggff_JetReq);
  h_gfDiEMPt_JetReq_new->Scale(scalegggf_JetReq);h_fgDiEMPt_JetReq_new->Scale(scaleggfg_JetReq);h_gammafakeDiEMPt_JetReq_new->Scale(scalegggammafake_JetReq);
  h_eeDiJetPt_JetReq_new->Scale(scaleggeeJet_JetReq);
  h_eeDiEMPt_JetReq_0Jet_new->Scale(scaleggee_JetReq);h_eeDiEMPt_JetReq_1Jet_new->Scale(scaleggee_JetReq);h_eeDiEMPt_JetReq_2Jet_new->Scale(scaleggee_JetReq);//need to multiply by full ratios
  h_eeDiJetPt_JetReq_0Jet_new->Scale(scaleggeeJet_JetReq);h_eeDiJetPt_JetReq_1Jet_new->Scale(scaleggeeJet_JetReq);h_eeDiJetPt_JetReq_2Jet_new->Scale(scaleggeeJet_JetReq);//need to multiply by full ratios
  h_ffDiJetPt_JetReq_new->Scale(scaleggffJet_JetReq);
  h_ffDiEMPt_JetReq_0Jet_new->Scale(scaleggff_JetReq);h_ffDiEMPt_JetReq_1Jet_new->Scale(scaleggff_JetReq);h_ffDiEMPt_JetReq_2Jet_new->Scale(scaleggff_JetReq);
  h_ffDiJetPt_JetReq_0Jet_new->Scale(scaleggffJet_JetReq);h_ffDiJetPt_JetReq_1Jet_new->Scale(scaleggffJet_JetReq);h_ffDiJetPt_JetReq_2Jet_new->Scale(scaleggffJet_JetReq);
  h_gfDiJetPt_JetReq_new->Scale(scalegggfJet_JetReq);
  h_gfDiEMPt_JetReq_0Jet_new->Scale(scalegggf_JetReq);h_gfDiEMPt_JetReq_1Jet_new->Scale(scalegggf_JetReq);h_gfDiEMPt_JetReq_2Jet_new->Scale(scalegggf_JetReq);
  h_gfDiJetPt_JetReq_0Jet_new->Scale(scalegggfJet_JetReq);h_gfDiJetPt_JetReq_1Jet_new->Scale(scalegggfJet_JetReq);h_gfDiJetPt_JetReq_2Jet_new->Scale(scalegggfJet_JetReq);
  h_fgDiJetPt_JetReq_new->Scale(scaleggfgJet_JetReq);
  h_fgDiEMPt_JetReq_0Jet_new->Scale(scaleggfg_JetReq);h_fgDiEMPt_JetReq_1Jet_new->Scale(scaleggfg_JetReq);h_fgDiEMPt_JetReq_2Jet_new->Scale(scaleggfg_JetReq);
  h_fgDiJetPt_JetReq_0Jet_new->Scale(scaleggfgJet_JetReq);h_fgDiJetPt_JetReq_1Jet_new->Scale(scaleggfgJet_JetReq);h_fgDiJetPt_JetReq_2Jet_new->Scale(scaleggfgJet_JetReq);
  h_gammafakeDiJetPt_JetReq_new->Scale(scalegggammafakeJet_JetReq);
  h_gammafakeDiEMPt_JetReq_0Jet_new->Scale(scalegggammafake_JetReq);h_gammafakeDiEMPt_JetReq_1Jet_new->Scale(scalegggammafake_JetReq);h_gammafakeDiEMPt_JetReq_2Jet_new->Scale(scalegggammafake_JetReq);
  h_gammafakeDiJetPt_JetReq_0Jet_new->Scale(scalegggammafakeJet_JetReq);h_gammafakeDiJetPt_JetReq_1Jet_new->Scale(scalegggammafakeJet_JetReq);h_gammafakeDiJetPt_JetReq_2Jet_new->Scale(scalegggammafakeJet_JetReq);
  //2JetReq
  h_eeDiEMPt_2JetReq_new->Scale(scaleggee_2JetReq);
  h_eeSideBandDiEMPt_2JetReq_new->Scale(scaleggeeSideBand_2JetReq);
  h_eeSideBandDiJetPt_2JetReq_new->Scale(scaleggeeSideBand_2JetReq);
  h_eeSideBandLowDiEMPt_2JetReq_0Jet_new->Scale(scaleggeeSideBandLow_2JetReq);h_eeSideBandLowDiEMPt_2JetReq_1Jet_new->Scale(scaleggeeSideBandLow_2JetReq);h_eeSideBandLowDiEMPt_2JetReq_2Jet_new->Scale(scaleggeeSideBandLow_2JetReq);
  h_eeSideBandHighDiEMPt_2JetReq_0Jet_new->Scale(scaleggeeSideBandHigh_2JetReq);h_eeSideBandHighDiEMPt_2JetReq_1Jet_new->Scale(scaleggeeSideBandHigh_2JetReq);h_eeSideBandHighDiEMPt_2JetReq_2Jet_new->Scale(scaleggeeSideBandHigh_2JetReq);
  h_eeSideBandLowDiJetPt_2JetReq_0Jet_new->Scale(scaleggeeSideBandLowJet_2JetReq);h_eeSideBandLowDiJetPt_2JetReq_1Jet_new->Scale(scaleggeeSideBandLowJet_2JetReq);h_eeSideBandLowDiJetPt_2JetReq_2Jet_new->Scale(scaleggeeSideBandLowJet_2JetReq);
  h_eeSideBandHighDiJetPt_2JetReq_0Jet_new->Scale(scaleggeeSideBandHighJet_2JetReq);h_eeSideBandHighDiJetPt_2JetReq_1Jet_new->Scale(scaleggeeSideBandHighJet_2JetReq);h_eeSideBandHighDiJetPt_2JetReq_2Jet_new->Scale(scaleggeeSideBandHighJet_2JetReq);
  h_ffDiEMPt_2JetReq_new->Scale(scaleggff_2JetReq);
  h_gfDiEMPt_2JetReq_new->Scale(scalegggf_2JetReq);h_fgDiEMPt_2JetReq_new->Scale(scaleggfg_2JetReq);h_gammafakeDiEMPt_2JetReq_new->Scale(scalegggammafake_2JetReq);
  h_eeDiJetPt_2JetReq_new->Scale(scaleggeeJet_2JetReq);
  h_eeDiEMPt_2JetReq_0Jet_new->Scale(scaleggee_2JetReq);h_eeDiEMPt_2JetReq_1Jet_new->Scale(scaleggee_2JetReq);h_eeDiEMPt_2JetReq_2Jet_new->Scale(scaleggee_2JetReq);//need to multiply by full ratios
  h_eeDiJetPt_2JetReq_0Jet_new->Scale(scaleggeeJet_2JetReq);h_eeDiJetPt_2JetReq_1Jet_new->Scale(scaleggeeJet_2JetReq);h_eeDiJetPt_2JetReq_2Jet_new->Scale(scaleggeeJet_2JetReq);//need to multiply by full ratios
  h_ffDiJetPt_2JetReq_new->Scale(scaleggffJet_2JetReq);
  h_ffDiEMPt_2JetReq_0Jet_new->Scale(scaleggff_2JetReq);h_ffDiEMPt_2JetReq_1Jet_new->Scale(scaleggff_2JetReq);h_ffDiEMPt_2JetReq_2Jet_new->Scale(scaleggff_2JetReq);
  h_ffDiJetPt_2JetReq_0Jet_new->Scale(scaleggffJet_2JetReq);h_ffDiJetPt_2JetReq_1Jet_new->Scale(scaleggffJet_2JetReq);h_ffDiJetPt_2JetReq_2Jet_new->Scale(scaleggffJet_2JetReq);
  h_gfDiJetPt_2JetReq_new->Scale(scalegggfJet_2JetReq);
  h_gfDiEMPt_2JetReq_0Jet_new->Scale(scalegggf_2JetReq);h_gfDiEMPt_2JetReq_1Jet_new->Scale(scalegggf_2JetReq);h_gfDiEMPt_2JetReq_2Jet_new->Scale(scalegggf_2JetReq);
  h_gfDiJetPt_2JetReq_0Jet_new->Scale(scalegggfJet_2JetReq);h_gfDiJetPt_2JetReq_1Jet_new->Scale(scalegggfJet_2JetReq);h_gfDiJetPt_2JetReq_2Jet_new->Scale(scalegggfJet_2JetReq);
  h_fgDiJetPt_2JetReq_new->Scale(scaleggfgJet_2JetReq);
  h_fgDiEMPt_2JetReq_0Jet_new->Scale(scaleggfg_2JetReq);h_fgDiEMPt_2JetReq_1Jet_new->Scale(scaleggfg_2JetReq);h_fgDiEMPt_2JetReq_2Jet_new->Scale(scaleggfg_2JetReq);
  h_fgDiJetPt_2JetReq_0Jet_new->Scale(scaleggfgJet_2JetReq);h_fgDiJetPt_2JetReq_1Jet_new->Scale(scaleggfgJet_2JetReq);h_fgDiJetPt_2JetReq_2Jet_new->Scale(scaleggfgJet_2JetReq);
  h_gammafakeDiJetPt_2JetReq_new->Scale(scalegggammafakeJet_2JetReq);
  h_gammafakeDiEMPt_2JetReq_0Jet_new->Scale(scalegggammafake_2JetReq);h_gammafakeDiEMPt_2JetReq_1Jet_new->Scale(scalegggammafake_2JetReq);h_gammafakeDiEMPt_2JetReq_2Jet_new->Scale(scalegggammafake_2JetReq);
  h_gammafakeDiJetPt_2JetReq_0Jet_new->Scale(scalegggammafakeJet_2JetReq);h_gammafakeDiJetPt_2JetReq_1Jet_new->Scale(scalegggammafakeJet_2JetReq);h_gammafakeDiJetPt_2JetReq_2Jet_new->Scale(scalegggammafakeJet_2JetReq);
  


  h_ggeeDiEMPtRatio->Divide(h_ggDiEMPt_new,h_eeDiEMPt_new,1,1,"");
  h_ggeeSideBandDiEMPtRatio->Divide(h_ggDiEMPt_new,h_eeSideBandDiEMPt_new,1,1,"");
  h_ggeeSideBandDiJetPtRatio->Divide(h_ggDiJetPt_new,h_eeSideBandDiJetPt_new,1,1,"");
  h_ggeeSideBandLowDiEMPtRatio->Divide(h_ggDiEMPt_new,h_eeSideBandLowDiEMPt_new,1,1,"");
  h_ggeeSideBandHighDiEMPtRatio->Divide(h_ggDiEMPt_new,h_eeSideBandHighDiEMPt_new,1,1,"");
  h_ggeeSideBandLowDiEMPtRatio_0Jet->Divide(h_ggDiEMPt_0Jet_new,h_eeSideBandLowDiEMPt_0Jet_new,1,1,"");
  h_ggeeSideBandLowDiEMPtRatio_1Jet->Divide(h_ggDiEMPt_1Jet_new,h_eeSideBandLowDiEMPt_1Jet_new,1,1,"");
  h_ggeeSideBandLowDiEMPtRatio_2Jet->Divide(h_ggDiEMPt_2Jet_new,h_eeSideBandLowDiEMPt_2Jet_new,1,1,"");
  h_ggeeSideBandHighDiEMPtRatio_0Jet->Divide(h_ggDiEMPt_0Jet_new,h_eeSideBandHighDiEMPt_0Jet_new,1,1,"");
  h_ggeeSideBandHighDiEMPtRatio_1Jet->Divide(h_ggDiEMPt_1Jet_new,h_eeSideBandHighDiEMPt_1Jet_new,1,1,"");
  h_ggeeSideBandHighDiEMPtRatio_2Jet->Divide(h_ggDiEMPt_2Jet_new,h_eeSideBandHighDiEMPt_2Jet_new,1,1,"");
  h_ggeeSideBandLowDiJetPtRatio->Divide(h_ggDiJetPt_new,h_eeSideBandLowDiJetPt_new,1,1,"");
  h_ggeeSideBandHighDiJetPtRatio->Divide(h_ggDiJetPt_new,h_eeSideBandHighDiJetPt_new,1,1,"");
  h_ggeeSideBandLowDiJetPtRatio_0Jet->Divide(h_ggDiJetPt_0Jet_new,h_eeSideBandLowDiJetPt_0Jet_new,1,1,"");
  h_ggeeSideBandLowDiJetPtRatio_1Jet->Divide(h_ggDiJetPt_1Jet_new,h_eeSideBandLowDiJetPt_1Jet_new,1,1,"");
  h_ggeeSideBandLowDiJetPtRatio_2Jet->Divide(h_ggDiJetPt_2Jet_new,h_eeSideBandLowDiJetPt_2Jet_new,1,1,"");
  h_ggeeSideBandHighDiJetPtRatio_0Jet->Divide(h_ggDiJetPt_0Jet_new,h_eeSideBandHighDiJetPt_0Jet_new,1,1,"");
  h_ggeeSideBandHighDiJetPtRatio_1Jet->Divide(h_ggDiJetPt_1Jet_new,h_eeSideBandHighDiJetPt_1Jet_new,1,1,"");
  h_ggeeSideBandHighDiJetPtRatio_2Jet->Divide(h_ggDiJetPt_2Jet_new,h_eeSideBandHighDiJetPt_2Jet_new,1,1,"");
  h_ggffDiEMPtRatio->Divide(h_ggDiEMPt_new,h_ffDiEMPt_new,1,1,"");
  h_gggfDiEMPtRatio->Divide(h_ggDiEMPt_new,h_gfDiEMPt_new,1,1,"");
  h_ggfgDiEMPtRatio->Divide(h_ggDiEMPt_new,h_fgDiEMPt_new,1,1,"");
  h_gggammafakeDiEMPtRatio->Divide(h_ggDiEMPt_new,h_gammafakeDiEMPt_new,1,1,"");
  h_ggeeDiJetPtRatio->Divide(h_ggDiJetPt_new,h_eeDiJetPt_new,1,1,"");
  h_ggeeDiEMPtRatio_0Jet->Divide(h_ggDiEMPt_0Jet_new,h_eeDiEMPt_0Jet_new,1,1,"");
  h_ggeeDiEMPtRatio_1Jet->Divide(h_ggDiEMPt_1Jet_new,h_eeDiEMPt_1Jet_new,1,1,"");
  h_ggeeDiEMPtRatio_2Jet->Divide(h_ggDiEMPt_2Jet_new,h_eeDiEMPt_2Jet_new,1,1,"");
  h_ggeeDiJetPtRatio_0Jet->Divide(h_ggDiJetPt_0Jet_new,h_eeDiJetPt_0Jet_new,1,1,"");
  h_ggeeDiJetPtRatio_1Jet->Divide(h_ggDiJetPt_1Jet_new,h_eeDiJetPt_1Jet_new,1,1,"");
  h_ggeeDiJetPtRatio_2Jet->Divide(h_ggDiJetPt_2Jet_new,h_eeDiJetPt_2Jet_new,1,1,"");
  h_ggffDiJetPtRatio->Divide(h_ggDiJetPt_new,h_ffDiJetPt_new,1,1,"");
  h_ggffDiEMPtRatio_0Jet->Divide(h_ggDiEMPt_0Jet_new,h_ffDiEMPt_0Jet_new,1,1,"");
  h_ggffDiEMPtRatio_1Jet->Divide(h_ggDiEMPt_1Jet_new,h_ffDiEMPt_1Jet_new,1,1,"");
  h_ggffDiEMPtRatio_2Jet->Divide(h_ggDiEMPt_2Jet_new,h_ffDiEMPt_2Jet_new,1,1,"");
  h_ggffDiJetPtRatio_0Jet->Divide(h_ggDiJetPt_0Jet_new,h_ffDiJetPt_0Jet_new,1,1,"");
  h_ggffDiJetPtRatio_1Jet->Divide(h_ggDiJetPt_1Jet_new,h_ffDiJetPt_1Jet_new,1,1,"");
  h_ggffDiJetPtRatio_2Jet->Divide(h_ggDiJetPt_2Jet_new,h_ffDiJetPt_2Jet_new,1,1,"");

  h_gggfDiJetPtRatio->Divide(h_ggDiJetPt_new,h_gfDiJetPt_new,1,1,"");
  h_gggfDiEMPtRatio_0Jet->Divide(h_ggDiEMPt_0Jet_new,h_gfDiEMPt_0Jet_new,1,1,"");
  h_gggfDiEMPtRatio_1Jet->Divide(h_ggDiEMPt_1Jet_new,h_gfDiEMPt_1Jet_new,1,1,"");
  h_gggfDiEMPtRatio_2Jet->Divide(h_ggDiEMPt_2Jet_new,h_gfDiEMPt_2Jet_new,1,1,"");
  h_gggfDiJetPtRatio_0Jet->Divide(h_ggDiJetPt_0Jet_new,h_gfDiJetPt_0Jet_new,1,1,"");
  h_gggfDiJetPtRatio_1Jet->Divide(h_ggDiJetPt_1Jet_new,h_gfDiJetPt_1Jet_new,1,1,"");
  h_gggfDiJetPtRatio_2Jet->Divide(h_ggDiJetPt_2Jet_new,h_gfDiJetPt_2Jet_new,1,1,"");

  h_ggfgDiJetPtRatio->Divide(h_ggDiJetPt_new,h_fgDiJetPt_new,1,1,"");
  h_ggfgDiEMPtRatio_0Jet->Divide(h_ggDiEMPt_0Jet_new,h_fgDiEMPt_0Jet_new,1,1,"");
  h_ggfgDiEMPtRatio_1Jet->Divide(h_ggDiEMPt_1Jet_new,h_fgDiEMPt_1Jet_new,1,1,"");
  h_ggfgDiEMPtRatio_2Jet->Divide(h_ggDiEMPt_2Jet_new,h_fgDiEMPt_2Jet_new,1,1,"");
  h_ggfgDiJetPtRatio_0Jet->Divide(h_ggDiJetPt_0Jet_new,h_fgDiJetPt_0Jet_new,1,1,"");
  h_ggfgDiJetPtRatio_1Jet->Divide(h_ggDiJetPt_1Jet_new,h_fgDiJetPt_1Jet_new,1,1,"");
  h_ggfgDiJetPtRatio_2Jet->Divide(h_ggDiJetPt_2Jet_new,h_fgDiJetPt_2Jet_new,1,1,"");

  h_gggammafakeDiJetPtRatio->Divide(h_ggDiJetPt_new,h_gammafakeDiJetPt_new,1,1,"");
  h_gggammafakeDiEMPtRatio_0Jet->Divide(h_ggDiEMPt_0Jet_new,h_gammafakeDiEMPt_0Jet_new,1,1,"");
  h_gggammafakeDiEMPtRatio_1Jet->Divide(h_ggDiEMPt_1Jet_new,h_gammafakeDiEMPt_1Jet_new,1,1,"");
  h_gggammafakeDiEMPtRatio_2Jet->Divide(h_ggDiEMPt_2Jet_new,h_gammafakeDiEMPt_2Jet_new,1,1,"");
  h_gggammafakeDiJetPtRatio_0Jet->Divide(h_ggDiJetPt_0Jet_new,h_gammafakeDiJetPt_0Jet_new,1,1,"");
  h_gggammafakeDiJetPtRatio_1Jet->Divide(h_ggDiJetPt_1Jet_new,h_gammafakeDiJetPt_1Jet_new,1,1,"");
  h_gggammafakeDiJetPtRatio_2Jet->Divide(h_ggDiJetPt_2Jet_new,h_gammafakeDiJetPt_2Jet_new,1,1,"");

  h_ggeeDiEMPtRatio_JetReq->Divide(h_ggDiEMPt_JetReq_new,h_eeDiEMPt_JetReq_new,1,1,"");
  h_ggeeSideBandDiEMPtRatio_JetReq->Divide(h_ggDiEMPt_JetReq_new,h_eeSideBandDiEMPt_JetReq_new,1,1,"");
  h_ggeeSideBandDiJetPtRatio_JetReq->Divide(h_ggDiJetPt_JetReq_new,h_eeSideBandDiJetPt_JetReq_new,1,1,"");
  h_ggeeSideBandLowDiEMPtRatio_JetReq->Divide(h_ggDiEMPt_JetReq_new,h_eeSideBandLowDiEMPt_JetReq_new,1,1,"");
  h_ggeeSideBandHighDiEMPtRatio_JetReq->Divide(h_ggDiEMPt_JetReq_new,h_eeSideBandHighDiEMPt_JetReq_new,1,1,"");
  h_ggeeSideBandLowDiEMPtRatio_JetReq_0Jet->Divide(h_ggDiEMPt_JetReq_0Jet_new,h_eeSideBandLowDiEMPt_JetReq_0Jet_new,1,1,"");
  h_ggeeSideBandLowDiEMPtRatio_JetReq_1Jet->Divide(h_ggDiEMPt_JetReq_1Jet_new,h_eeSideBandLowDiEMPt_JetReq_1Jet_new,1,1,"");
  h_ggeeSideBandLowDiEMPtRatio_JetReq_2Jet->Divide(h_ggDiEMPt_JetReq_2Jet_new,h_eeSideBandLowDiEMPt_JetReq_2Jet_new,1,1,"");
  h_ggeeSideBandHighDiEMPtRatio_JetReq_0Jet->Divide(h_ggDiEMPt_JetReq_0Jet_new,h_eeSideBandHighDiEMPt_JetReq_0Jet_new,1,1,"");
  h_ggeeSideBandHighDiEMPtRatio_JetReq_1Jet->Divide(h_ggDiEMPt_JetReq_1Jet_new,h_eeSideBandHighDiEMPt_JetReq_1Jet_new,1,1,"");
  h_ggeeSideBandHighDiEMPtRatio_JetReq_2Jet->Divide(h_ggDiEMPt_JetReq_2Jet_new,h_eeSideBandHighDiEMPt_JetReq_2Jet_new,1,1,"");
  h_ggeeSideBandLowDiJetPtRatio_JetReq->Divide(h_ggDiJetPt_JetReq_new,h_eeSideBandLowDiJetPt_JetReq_new,1,1,"");
  h_ggeeSideBandHighDiJetPtRatio_JetReq->Divide(h_ggDiJetPt_JetReq_new,h_eeSideBandHighDiJetPt_JetReq_new,1,1,"");
  h_ggeeSideBandLowDiJetPtRatio_JetReq_0Jet->Divide(h_ggDiJetPt_JetReq_0Jet_new,h_eeSideBandLowDiJetPt_JetReq_0Jet_new,1,1,"");
  h_ggeeSideBandLowDiJetPtRatio_JetReq_1Jet->Divide(h_ggDiJetPt_JetReq_1Jet_new,h_eeSideBandLowDiJetPt_JetReq_1Jet_new,1,1,"");
  h_ggeeSideBandLowDiJetPtRatio_JetReq_2Jet->Divide(h_ggDiJetPt_JetReq_2Jet_new,h_eeSideBandLowDiJetPt_JetReq_2Jet_new,1,1,"");
  h_ggeeSideBandHighDiJetPtRatio_JetReq_0Jet->Divide(h_ggDiJetPt_JetReq_0Jet_new,h_eeSideBandHighDiJetPt_JetReq_0Jet_new,1,1,"");
  h_ggeeSideBandHighDiJetPtRatio_JetReq_1Jet->Divide(h_ggDiJetPt_JetReq_1Jet_new,h_eeSideBandHighDiJetPt_JetReq_1Jet_new,1,1,"");
  h_ggeeSideBandHighDiJetPtRatio_JetReq_2Jet->Divide(h_ggDiJetPt_JetReq_2Jet_new,h_eeSideBandHighDiJetPt_JetReq_2Jet_new,1,1,"");
  h_ggffDiEMPtRatio_JetReq->Divide(h_ggDiEMPt_JetReq_new,h_ffDiEMPt_JetReq_new,1,1,"");
  h_gggfDiEMPtRatio_JetReq->Divide(h_ggDiEMPt_JetReq_new,h_gfDiEMPt_JetReq_new,1,1,"");
  h_ggfgDiEMPtRatio_JetReq->Divide(h_ggDiEMPt_JetReq_new,h_fgDiEMPt_JetReq_new,1,1,"");
  h_gggammafakeDiEMPtRatio_JetReq->Divide(h_ggDiEMPt_JetReq_new,h_gammafakeDiEMPt_JetReq_new,1,1,"");
  h_ggeeDiJetPtRatio_JetReq->Divide(h_ggDiJetPt_JetReq_new,h_eeDiJetPt_JetReq_new,1,1,"");
  h_ggeeDiEMPtRatio_JetReq_0Jet->Divide(h_ggDiEMPt_JetReq_0Jet_new,h_eeDiEMPt_JetReq_0Jet_new,1,1,"");
  h_ggeeDiEMPtRatio_JetReq_1Jet->Divide(h_ggDiEMPt_JetReq_1Jet_new,h_eeDiEMPt_JetReq_1Jet_new,1,1,"");
  h_ggeeDiEMPtRatio_JetReq_2Jet->Divide(h_ggDiEMPt_JetReq_2Jet_new,h_eeDiEMPt_JetReq_2Jet_new,1,1,"");
  h_ggeeDiJetPtRatio_JetReq_0Jet->Divide(h_ggDiJetPt_JetReq_0Jet_new,h_eeDiJetPt_JetReq_0Jet_new,1,1,"");
  h_ggeeDiJetPtRatio_JetReq_1Jet->Divide(h_ggDiJetPt_JetReq_1Jet_new,h_eeDiJetPt_JetReq_1Jet_new,1,1,"");
  h_ggeeDiJetPtRatio_JetReq_2Jet->Divide(h_ggDiJetPt_JetReq_2Jet_new,h_eeDiJetPt_JetReq_2Jet_new,1,1,"");
  h_ggffDiJetPtRatio_JetReq->Divide(h_ggDiJetPt_JetReq_new,h_ffDiJetPt_JetReq_new,1,1,"");
  h_ggffDiEMPtRatio_JetReq_0Jet->Divide(h_ggDiEMPt_JetReq_0Jet_new,h_ffDiEMPt_JetReq_0Jet_new,1,1,"");
  h_ggffDiEMPtRatio_JetReq_1Jet->Divide(h_ggDiEMPt_JetReq_1Jet_new,h_ffDiEMPt_JetReq_1Jet_new,1,1,"");
  h_ggffDiEMPtRatio_JetReq_2Jet->Divide(h_ggDiEMPt_JetReq_2Jet_new,h_ffDiEMPt_JetReq_2Jet_new,1,1,"");
  h_ggffDiJetPtRatio_JetReq_0Jet->Divide(h_ggDiJetPt_JetReq_0Jet_new,h_ffDiJetPt_JetReq_0Jet_new,1,1,"");
  h_ggffDiJetPtRatio_JetReq_1Jet->Divide(h_ggDiJetPt_JetReq_1Jet_new,h_ffDiJetPt_JetReq_1Jet_new,1,1,"");
  h_ggffDiJetPtRatio_JetReq_2Jet->Divide(h_ggDiJetPt_JetReq_2Jet_new,h_ffDiJetPt_JetReq_2Jet_new,1,1,"");
  h_gggfDiJetPtRatio_JetReq->Divide(h_ggDiJetPt_JetReq_new,h_gfDiJetPt_JetReq_new,1,1,"");
  h_gggfDiEMPtRatio_JetReq_0Jet->Divide(h_ggDiEMPt_JetReq_0Jet_new,h_gfDiEMPt_JetReq_0Jet_new,1,1,"");
  h_gggfDiEMPtRatio_JetReq_1Jet->Divide(h_ggDiEMPt_JetReq_1Jet_new,h_gfDiEMPt_JetReq_1Jet_new,1,1,"");
  h_gggfDiEMPtRatio_JetReq_2Jet->Divide(h_ggDiEMPt_JetReq_2Jet_new,h_gfDiEMPt_JetReq_2Jet_new,1,1,"");
  h_gggfDiJetPtRatio_JetReq_0Jet->Divide(h_ggDiJetPt_JetReq_0Jet_new,h_gfDiJetPt_JetReq_0Jet_new,1,1,"");
  h_gggfDiJetPtRatio_JetReq_1Jet->Divide(h_ggDiJetPt_JetReq_1Jet_new,h_gfDiJetPt_JetReq_1Jet_new,1,1,"");
  h_gggfDiJetPtRatio_JetReq_2Jet->Divide(h_ggDiJetPt_JetReq_2Jet_new,h_gfDiJetPt_JetReq_2Jet_new,1,1,"");
  h_ggfgDiJetPtRatio_JetReq->Divide(h_ggDiJetPt_JetReq_new,h_fgDiJetPt_JetReq_new,1,1,"");
  h_ggfgDiEMPtRatio_JetReq_0Jet->Divide(h_ggDiEMPt_JetReq_0Jet_new,h_fgDiEMPt_JetReq_0Jet_new,1,1,"");
  h_ggfgDiEMPtRatio_JetReq_1Jet->Divide(h_ggDiEMPt_JetReq_1Jet_new,h_fgDiEMPt_JetReq_1Jet_new,1,1,"");
  h_ggfgDiEMPtRatio_JetReq_2Jet->Divide(h_ggDiEMPt_JetReq_2Jet_new,h_fgDiEMPt_JetReq_2Jet_new,1,1,"");
  h_ggfgDiJetPtRatio_JetReq_0Jet->Divide(h_ggDiJetPt_JetReq_0Jet_new,h_fgDiJetPt_JetReq_0Jet_new,1,1,"");
  h_ggfgDiJetPtRatio_JetReq_1Jet->Divide(h_ggDiJetPt_JetReq_1Jet_new,h_fgDiJetPt_JetReq_1Jet_new,1,1,"");
  h_ggfgDiJetPtRatio_JetReq_2Jet->Divide(h_ggDiJetPt_JetReq_2Jet_new,h_fgDiJetPt_JetReq_2Jet_new,1,1,"");
  h_gggammafakeDiJetPtRatio_JetReq->Divide(h_ggDiJetPt_JetReq_new,h_gammafakeDiJetPt_JetReq_new,1,1,"");
  h_gggammafakeDiEMPtRatio_JetReq_0Jet->Divide(h_ggDiEMPt_JetReq_0Jet_new,h_gammafakeDiEMPt_JetReq_0Jet_new,1,1,"");
  h_gggammafakeDiEMPtRatio_JetReq_1Jet->Divide(h_ggDiEMPt_JetReq_1Jet_new,h_gammafakeDiEMPt_JetReq_1Jet_new,1,1,"");
  h_gggammafakeDiEMPtRatio_JetReq_2Jet->Divide(h_ggDiEMPt_JetReq_2Jet_new,h_gammafakeDiEMPt_JetReq_2Jet_new,1,1,"");
  h_gggammafakeDiJetPtRatio_JetReq_0Jet->Divide(h_ggDiJetPt_JetReq_0Jet_new,h_gammafakeDiJetPt_JetReq_0Jet_new,1,1,"");
  h_gggammafakeDiJetPtRatio_JetReq_1Jet->Divide(h_ggDiJetPt_JetReq_1Jet_new,h_gammafakeDiJetPt_JetReq_1Jet_new,1,1,"");
  h_gggammafakeDiJetPtRatio_JetReq_2Jet->Divide(h_ggDiJetPt_JetReq_2Jet_new,h_gammafakeDiJetPt_JetReq_2Jet_new,1,1,"");

  h_ggeeDiEMPtRatio_2JetReq->Divide(h_ggDiEMPt_2JetReq_new,h_eeDiEMPt_2JetReq_new,1,1,"");
  h_ggeeSideBandDiEMPtRatio_2JetReq->Divide(h_ggDiEMPt_2JetReq_new,h_eeSideBandDiEMPt_2JetReq_new,1,1,"");
  h_ggeeSideBandDiJetPtRatio_2JetReq->Divide(h_ggDiJetPt_2JetReq_new,h_eeSideBandDiJetPt_2JetReq_new,1,1,"");
  h_ggeeSideBandLowDiEMPtRatio_2JetReq->Divide(h_ggDiEMPt_2JetReq_new,h_eeSideBandLowDiEMPt_2JetReq_new,1,1,"");
  h_ggeeSideBandHighDiEMPtRatio_2JetReq->Divide(h_ggDiEMPt_2JetReq_new,h_eeSideBandHighDiEMPt_2JetReq_new,1,1,"");
  h_ggeeSideBandLowDiEMPtRatio_2JetReq_0Jet->Divide(h_ggDiEMPt_2JetReq_0Jet_new,h_eeSideBandLowDiEMPt_2JetReq_0Jet_new,1,1,"");
  h_ggeeSideBandLowDiEMPtRatio_2JetReq_1Jet->Divide(h_ggDiEMPt_2JetReq_1Jet_new,h_eeSideBandLowDiEMPt_2JetReq_1Jet_new,1,1,"");
  h_ggeeSideBandLowDiEMPtRatio_2JetReq_2Jet->Divide(h_ggDiEMPt_2JetReq_2Jet_new,h_eeSideBandLowDiEMPt_2JetReq_2Jet_new,1,1,"");
  h_ggeeSideBandHighDiEMPtRatio_2JetReq_0Jet->Divide(h_ggDiEMPt_2JetReq_0Jet_new,h_eeSideBandHighDiEMPt_2JetReq_0Jet_new,1,1,"");
  h_ggeeSideBandHighDiEMPtRatio_2JetReq_1Jet->Divide(h_ggDiEMPt_2JetReq_1Jet_new,h_eeSideBandHighDiEMPt_2JetReq_1Jet_new,1,1,"");
  h_ggeeSideBandHighDiEMPtRatio_2JetReq_2Jet->Divide(h_ggDiEMPt_2JetReq_2Jet_new,h_eeSideBandHighDiEMPt_2JetReq_2Jet_new,1,1,"");
  h_ggeeSideBandLowDiJetPtRatio_2JetReq->Divide(h_ggDiJetPt_2JetReq_new,h_eeSideBandLowDiJetPt_2JetReq_new,1,1,"");
  h_ggeeSideBandHighDiJetPtRatio_2JetReq->Divide(h_ggDiJetPt_2JetReq_new,h_eeSideBandHighDiJetPt_2JetReq_new,1,1,"");
  h_ggeeSideBandLowDiJetPtRatio_2JetReq_0Jet->Divide(h_ggDiJetPt_2JetReq_0Jet_new,h_eeSideBandLowDiJetPt_2JetReq_0Jet_new,1,1,"");
  h_ggeeSideBandLowDiJetPtRatio_2JetReq_1Jet->Divide(h_ggDiJetPt_2JetReq_1Jet_new,h_eeSideBandLowDiJetPt_2JetReq_1Jet_new,1,1,"");
  h_ggeeSideBandLowDiJetPtRatio_2JetReq_2Jet->Divide(h_ggDiJetPt_2JetReq_2Jet_new,h_eeSideBandLowDiJetPt_2JetReq_2Jet_new,1,1,"");
  h_ggeeSideBandHighDiJetPtRatio_2JetReq_0Jet->Divide(h_ggDiJetPt_2JetReq_0Jet_new,h_eeSideBandHighDiJetPt_2JetReq_0Jet_new,1,1,"");
  h_ggeeSideBandHighDiJetPtRatio_2JetReq_1Jet->Divide(h_ggDiJetPt_2JetReq_1Jet_new,h_eeSideBandHighDiJetPt_2JetReq_1Jet_new,1,1,"");
  h_ggeeSideBandHighDiJetPtRatio_2JetReq_2Jet->Divide(h_ggDiJetPt_2JetReq_2Jet_new,h_eeSideBandHighDiJetPt_2JetReq_2Jet_new,1,1,"");
  h_ggffDiEMPtRatio_2JetReq->Divide(h_ggDiEMPt_2JetReq_new,h_ffDiEMPt_2JetReq_new,1,1,"");
  h_gggfDiEMPtRatio_2JetReq->Divide(h_ggDiEMPt_2JetReq_new,h_gfDiEMPt_2JetReq_new,1,1,"");
  h_ggfgDiEMPtRatio_2JetReq->Divide(h_ggDiEMPt_2JetReq_new,h_fgDiEMPt_2JetReq_new,1,1,"");
  h_gggammafakeDiEMPtRatio_2JetReq->Divide(h_ggDiEMPt_2JetReq_new,h_gammafakeDiEMPt_2JetReq_new,1,1,"");
  h_ggeeDiJetPtRatio_2JetReq->Divide(h_ggDiJetPt_2JetReq_new,h_eeDiJetPt_2JetReq_new,1,1,"");
  h_ggeeDiEMPtRatio_2JetReq_0Jet->Divide(h_ggDiEMPt_2JetReq_0Jet_new,h_eeDiEMPt_2JetReq_0Jet_new,1,1,"");
  h_ggeeDiEMPtRatio_2JetReq_1Jet->Divide(h_ggDiEMPt_2JetReq_1Jet_new,h_eeDiEMPt_2JetReq_1Jet_new,1,1,"");
  h_ggeeDiEMPtRatio_2JetReq_2Jet->Divide(h_ggDiEMPt_2JetReq_2Jet_new,h_eeDiEMPt_2JetReq_2Jet_new,1,1,"");
  h_ggeeDiJetPtRatio_2JetReq_0Jet->Divide(h_ggDiJetPt_2JetReq_0Jet_new,h_eeDiJetPt_2JetReq_0Jet_new,1,1,"");
  h_ggeeDiJetPtRatio_2JetReq_1Jet->Divide(h_ggDiJetPt_2JetReq_1Jet_new,h_eeDiJetPt_2JetReq_1Jet_new,1,1,"");
  h_ggeeDiJetPtRatio_2JetReq_2Jet->Divide(h_ggDiJetPt_2JetReq_2Jet_new,h_eeDiJetPt_2JetReq_2Jet_new,1,1,"");
  h_ggffDiJetPtRatio_2JetReq->Divide(h_ggDiJetPt_2JetReq_new,h_ffDiJetPt_2JetReq_new,1,1,"");
  h_ggffDiEMPtRatio_2JetReq_0Jet->Divide(h_ggDiEMPt_2JetReq_0Jet_new,h_ffDiEMPt_2JetReq_0Jet_new,1,1,"");
  h_ggffDiEMPtRatio_2JetReq_1Jet->Divide(h_ggDiEMPt_2JetReq_1Jet_new,h_ffDiEMPt_2JetReq_1Jet_new,1,1,"");
  h_ggffDiEMPtRatio_2JetReq_2Jet->Divide(h_ggDiEMPt_2JetReq_2Jet_new,h_ffDiEMPt_2JetReq_2Jet_new,1,1,"");
  h_ggffDiJetPtRatio_2JetReq_0Jet->Divide(h_ggDiJetPt_2JetReq_0Jet_new,h_ffDiJetPt_2JetReq_0Jet_new,1,1,"");
  h_ggffDiJetPtRatio_2JetReq_1Jet->Divide(h_ggDiJetPt_2JetReq_1Jet_new,h_ffDiJetPt_2JetReq_1Jet_new,1,1,"");
  h_ggffDiJetPtRatio_2JetReq_2Jet->Divide(h_ggDiJetPt_2JetReq_2Jet_new,h_ffDiJetPt_2JetReq_2Jet_new,1,1,"");
  h_gggfDiJetPtRatio_2JetReq->Divide(h_ggDiJetPt_2JetReq_new,h_gfDiJetPt_2JetReq_new,1,1,"");
  h_gggfDiEMPtRatio_2JetReq_0Jet->Divide(h_ggDiEMPt_2JetReq_0Jet_new,h_gfDiEMPt_2JetReq_0Jet_new,1,1,"");
  h_gggfDiEMPtRatio_2JetReq_1Jet->Divide(h_ggDiEMPt_2JetReq_1Jet_new,h_gfDiEMPt_2JetReq_1Jet_new,1,1,"");
  h_gggfDiEMPtRatio_2JetReq_2Jet->Divide(h_ggDiEMPt_2JetReq_2Jet_new,h_gfDiEMPt_2JetReq_2Jet_new,1,1,"");
  h_gggfDiJetPtRatio_2JetReq_0Jet->Divide(h_ggDiJetPt_2JetReq_0Jet_new,h_gfDiJetPt_2JetReq_0Jet_new,1,1,"");
  h_gggfDiJetPtRatio_2JetReq_1Jet->Divide(h_ggDiJetPt_2JetReq_1Jet_new,h_gfDiJetPt_2JetReq_1Jet_new,1,1,"");
  h_gggfDiJetPtRatio_2JetReq_2Jet->Divide(h_ggDiJetPt_2JetReq_2Jet_new,h_gfDiJetPt_2JetReq_2Jet_new,1,1,"");
  h_ggfgDiJetPtRatio_2JetReq->Divide(h_ggDiJetPt_2JetReq_new,h_fgDiJetPt_2JetReq_new,1,1,"");
  h_ggfgDiEMPtRatio_2JetReq_0Jet->Divide(h_ggDiEMPt_2JetReq_0Jet_new,h_fgDiEMPt_2JetReq_0Jet_new,1,1,"");
  h_ggfgDiEMPtRatio_2JetReq_1Jet->Divide(h_ggDiEMPt_2JetReq_1Jet_new,h_fgDiEMPt_2JetReq_1Jet_new,1,1,"");
  h_ggfgDiEMPtRatio_2JetReq_2Jet->Divide(h_ggDiEMPt_2JetReq_2Jet_new,h_fgDiEMPt_2JetReq_2Jet_new,1,1,"");
  h_ggfgDiJetPtRatio_2JetReq_0Jet->Divide(h_ggDiJetPt_2JetReq_0Jet_new,h_fgDiJetPt_2JetReq_0Jet_new,1,1,"");
  h_ggfgDiJetPtRatio_2JetReq_1Jet->Divide(h_ggDiJetPt_2JetReq_1Jet_new,h_fgDiJetPt_2JetReq_1Jet_new,1,1,"");
  h_ggfgDiJetPtRatio_2JetReq_2Jet->Divide(h_ggDiJetPt_2JetReq_2Jet_new,h_fgDiJetPt_2JetReq_2Jet_new,1,1,"");
  h_gggammafakeDiJetPtRatio_2JetReq->Divide(h_ggDiJetPt_2JetReq_new,h_gammafakeDiJetPt_2JetReq_new,1,1,"");
  h_gggammafakeDiEMPtRatio_2JetReq_0Jet->Divide(h_ggDiEMPt_2JetReq_0Jet_new,h_gammafakeDiEMPt_2JetReq_0Jet_new,1,1,"");
  h_gggammafakeDiEMPtRatio_2JetReq_1Jet->Divide(h_ggDiEMPt_2JetReq_1Jet_new,h_gammafakeDiEMPt_2JetReq_1Jet_new,1,1,"");
  h_gggammafakeDiEMPtRatio_2JetReq_2Jet->Divide(h_ggDiEMPt_2JetReq_2Jet_new,h_gammafakeDiEMPt_2JetReq_2Jet_new,1,1,"");
  h_gggammafakeDiJetPtRatio_2JetReq_0Jet->Divide(h_ggDiJetPt_2JetReq_0Jet_new,h_gammafakeDiJetPt_2JetReq_0Jet_new,1,1,"");
  h_gggammafakeDiJetPtRatio_2JetReq_1Jet->Divide(h_ggDiJetPt_2JetReq_1Jet_new,h_gammafakeDiJetPt_2JetReq_1Jet_new,1,1,"");
  h_gggammafakeDiJetPtRatio_2JetReq_2Jet->Divide(h_ggDiJetPt_2JetReq_2Jet_new,h_gammafakeDiJetPt_2JetReq_2Jet_new,1,1,"");




  //-----make background efficiency plots------------
  if(!event->isRealData){
    TGraphAsymmErrors *BgroundEffVsNVertex = new TGraphAsymmErrors(h_NumerVsNVertex,h_DenomVsNVertex,"");
    BgroundEffVsNVertex->SetMarkerSize(0.6);
    BgroundEffVsNVertex->GetXaxis()->SetTitle("NVertex");
    BgroundEffVsNVertex->GetYaxis()->SetTitle("Efficiency");
    BgroundEffVsNVertex->Write("BgroundEffVsNVertex");
    TGraphAsymmErrors *RhoCorrectedBgroundEffVsNVertex = new TGraphAsymmErrors(h_RhoCorrectedNumerVsNVertex,h_DenomVsNVertex,"");
    RhoCorrectedBgroundEffVsNVertex->SetMarkerSize(0.6);
    RhoCorrectedBgroundEffVsNVertex->GetXaxis()->SetTitle("NVertex");
    RhoCorrectedBgroundEffVsNVertex->GetYaxis()->SetTitle("Efficiency");
    RhoCorrectedBgroundEffVsNVertex->SetLineColor(kRed);
    RhoCorrectedBgroundEffVsNVertex->Write("RhoCorrectedBgroundEffVsNVertex");
    TGraphAsymmErrors *NVertexCorrectedBgroundEffVsNVertex = new TGraphAsymmErrors(h_NVertexCorrectedNumerVsNVertex,h_DenomVsNVertex,"");
    NVertexCorrectedBgroundEffVsNVertex->SetMarkerSize(0.6);
    NVertexCorrectedBgroundEffVsNVertex->GetXaxis()->SetTitle("NVertex");
    NVertexCorrectedBgroundEffVsNVertex->GetYaxis()->SetTitle("Efficiency");
    NVertexCorrectedBgroundEffVsNVertex->SetLineColor(kBlue);
    NVertexCorrectedBgroundEffVsNVertex->Write("NVertexCorrectedBgroundEffVsNVertex");
    TGraphAsymmErrors *BgroundEffVsEt = new TGraphAsymmErrors(h_NumerVsEt,h_DenomVsEt,"");
    BgroundEffVsEt->SetMarkerSize(0.6);
    BgroundEffVsEt->GetXaxis()->SetTitle("Et");
    BgroundEffVsEt->GetYaxis()->SetTitle("Efficiency");
    BgroundEffVsEt->Write("BgroundEffVsEt");
    TGraphAsymmErrors *RhoCorrectedBgroundEffVsEt = new TGraphAsymmErrors(h_RhoCorrectedNumerVsEt,h_DenomVsEt,"");
    RhoCorrectedBgroundEffVsEt->SetMarkerSize(0.6);
    RhoCorrectedBgroundEffVsEt->GetXaxis()->SetTitle("Et");
    //RhoCorrectedBgroundEffVsEt->GetYaxis()->SetTitleOffset(.8);
    RhoCorrectedBgroundEffVsEt->GetYaxis()->SetTitle("Efficiency");
    RhoCorrectedBgroundEffVsEt->SetLineColor(kRed);
    RhoCorrectedBgroundEffVsEt->Write("RhoCorrectedBgroundEffVsEt");
    TGraphAsymmErrors *NVertexCorrectedBgroundEffVsEt = new TGraphAsymmErrors(h_NVertexCorrectedNumerVsEt,h_DenomVsEt,"");
    NVertexCorrectedBgroundEffVsEt->SetMarkerSize(0.6);
    NVertexCorrectedBgroundEffVsEt->GetXaxis()->SetTitle("Et");
    NVertexCorrectedBgroundEffVsEt->GetYaxis()->SetTitle("Efficiency");
    NVertexCorrectedBgroundEffVsEt->SetLineColor(kBlue);
    NVertexCorrectedBgroundEffVsEt->Write("NVertexCorrectedBgroundEffVsEt");
    TGraphAsymmErrors *BgroundEffVsEta = new TGraphAsymmErrors(h_NumerVsEta,h_DenomVsEta,"");
    BgroundEffVsEta->SetMarkerSize(0.6);
    BgroundEffVsEta->GetXaxis()->SetTitle("Eta");
    BgroundEffVsEta->GetYaxis()->SetTitle("Efficiency");
    BgroundEffVsEta->Write("BgroundEffVsEta");
    TGraphAsymmErrors *RhoCorrectedBgroundEffVsEta = new TGraphAsymmErrors(h_RhoCorrectedNumerVsEta,h_DenomVsEta,"");
    RhoCorrectedBgroundEffVsEta->SetMarkerSize(0.6);
    RhoCorrectedBgroundEffVsEta->GetXaxis()->SetTitle("Eta");
    RhoCorrectedBgroundEffVsEta->GetYaxis()->SetTitle("Efficiency");
    RhoCorrectedBgroundEffVsEta->SetLineColor(kRed);
    RhoCorrectedBgroundEffVsEta->Write("RhoCorrectedBgroundEffVsEta");
    TGraphAsymmErrors *NVertexCorrectedBgroundEffVsEta = new TGraphAsymmErrors(h_NVertexCorrectedNumerVsEta,h_DenomVsEta,"");
    NVertexCorrectedBgroundEffVsEta->SetMarkerSize(0.6);
    NVertexCorrectedBgroundEffVsEta->GetXaxis()->SetTitle("Eta");
    NVertexCorrectedBgroundEffVsEta->GetYaxis()->SetTitle("Efficiency");
    NVertexCorrectedBgroundEffVsEta->SetLineColor(kBlue);
    NVertexCorrectedBgroundEffVsEta->Write("NVertexCorrectedBgroundEffVsEta");
    TGraphAsymmErrors *BgroundEffVsMET = new TGraphAsymmErrors(h_NumerVsMET,h_DenomVsMET,"");
    BgroundEffVsMET->SetMarkerSize(0.6);
    BgroundEffVsMET->GetXaxis()->SetTitle("MET");
    BgroundEffVsMET->GetYaxis()->SetTitle("Efficiency");
    BgroundEffVsMET->Write("BgroundEffVsMET");
    TGraphAsymmErrors *RhoCorrectedBgroundEffVsMET = new TGraphAsymmErrors(h_RhoCorrectedNumerVsMET,h_DenomVsMET,"");
    RhoCorrectedBgroundEffVsMET->SetMarkerSize(0.6);
    RhoCorrectedBgroundEffVsMET->GetXaxis()->SetTitle("MET");
    RhoCorrectedBgroundEffVsMET->GetYaxis()->SetTitle("Efficiency");
    RhoCorrectedBgroundEffVsMET->SetLineColor(kRed);
    RhoCorrectedBgroundEffVsMET->Write("RhoCorrectedBgroundEffVsMET");
    TGraphAsymmErrors *NVertexCorrectedBgroundEffVsMET = new TGraphAsymmErrors(h_NVertexCorrectedNumerVsMET,h_DenomVsMET,"");
    NVertexCorrectedBgroundEffVsMET->SetMarkerSize(0.6);
    NVertexCorrectedBgroundEffVsMET->GetXaxis()->SetTitle("MET");
    NVertexCorrectedBgroundEffVsMET->GetYaxis()->SetTitle("Efficiency");
    NVertexCorrectedBgroundEffVsMET->SetLineColor(kBlue);
    NVertexCorrectedBgroundEffVsMET->Write("NVertexCorrectedBgroundEffVsMET");
  }
  //output event number to txt file
  ofstream EventWriteOut;
  if(outputEventNumbers){
    EventWriteOut.open("TextOutput/Events_"+ds+".txt",ios::app);
    EventWriteOut << ggRunEvent.size() << " gg Events\n";
    EventWriteOut << ffRunEvent.size() << " ff Events\n";
    EventWriteOut << gammafakeRunEvent.size() << " gammafake Events\n";
    EventWriteOut << egRunEvent.size() << " eg Events\n";
    EventWriteOut << eeRunEvent.size() << " ee Events\n\n";

    EventWriteOut << ggJetReqRunEvent.size() << " gg Events with >=1 Jet Requirement\n";
    EventWriteOut << ffJetReqRunEvent.size() << " ff Events with >=1 Jet Requirement\n";
    EventWriteOut << gammafakeJetReqRunEvent.size() << " gammafake Events with >=1 Jet Requirement\n";
    EventWriteOut << egJetReqRunEvent.size() << " eg Events with >=1 Jet Requirement\n";
    EventWriteOut << eeJetReqRunEvent.size() << " ee Events with >=1 Jet Requirement\n\n\n";

    EventWriteOut << gg2JetReqRunEvent.size() << " gg Events with >=2 Jet Requirement\n";
    EventWriteOut << ff2JetReqRunEvent.size() << " ff Events with >=2 Jet Requirement\n";
    EventWriteOut << gammafake2JetReqRunEvent.size() << " gammafake Events with >=2 Jet Requirement\n";
    EventWriteOut << eg2JetReqRunEvent.size() << " eg Events with >=2 Jet Requirement\n";
    EventWriteOut << ee2JetReqRunEvent.size() << " ee Events with >=2 Jet Requirement\n\n\n";

    for(unsigned int i=0;i<ggRunEvent.size();i++){
      if(i==0)EventWriteOut << ggRunEvent.size() << " gg Events (Run   Event): \n\n";
      EventWriteOut << ggRunEvent[i].first << "  " << ggRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<ffRunEvent.size();i++){
      if(i==0)EventWriteOut << ffRunEvent.size() << " ff Events (Run   Event): \n\n";
      EventWriteOut << ffRunEvent[i].first << "  " << ffRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<gammafakeRunEvent.size();i++){
      if(i==0)EventWriteOut << gammafakeRunEvent.size() << " gammafake Events (Run   Event): \n\n";
      EventWriteOut << gammafakeRunEvent[i].first << "  " << gammafakeRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<egRunEvent.size();i++){
      if(i==0)EventWriteOut << egRunEvent.size() << " eg Events (Run   Event): \n\n";
      EventWriteOut << egRunEvent[i].first << "  " << egRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<eeRunEvent.size();i++){
      if(i==0)EventWriteOut << eeRunEvent.size() << " ee Events (Run   Event): \n\n";
      EventWriteOut << eeRunEvent[i].first << "  " << eeRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<ggJetReqRunEvent.size();i++){
      if(i==0)EventWriteOut << ggJetReqRunEvent.size() << " gg Events with >=1 Jet Requirement (Run   Event): \n\n";
      EventWriteOut << ggJetReqRunEvent[i].first << "  " << ggJetReqRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<ffJetReqRunEvent.size();i++){
      if(i==0)EventWriteOut << ffJetReqRunEvent.size() << " ff Events with >=1 Jet Requirement (Run   Event): \n\n";
      EventWriteOut << ffJetReqRunEvent[i].first << "  " << ffJetReqRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<gammafakeJetReqRunEvent.size();i++){
      if(i==0)EventWriteOut << gammafakeJetReqRunEvent.size() << " gammafake Events with >=1 Jet Requirement (Run   Event): \n\n";
      EventWriteOut << gammafakeJetReqRunEvent[i].first << "  " << gammafakeJetReqRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<egJetReqRunEvent.size();i++){
      if(i==0)EventWriteOut << egJetReqRunEvent.size() << " eg Events with >=1 Jet Requirement (Run   Event): \n\n";
      EventWriteOut << egJetReqRunEvent[i].first << "  " << egJetReqRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<eeJetReqRunEvent.size();i++){
      if(i==0)EventWriteOut << eeJetReqRunEvent.size() << " ee Events with >=1 Jet Requirement (Run   Event): \n\n";
      EventWriteOut << eeJetReqRunEvent[i].first << "  " << eeJetReqRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<gg2JetReqRunEvent.size();i++){
      if(i==0)EventWriteOut << gg2JetReqRunEvent.size() << " gg Events with >=2 Jet Requirement (Run   Event): \n\n";
      EventWriteOut << gg2JetReqRunEvent[i].first << "  " << gg2JetReqRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<ff2JetReqRunEvent.size();i++){
      if(i==0)EventWriteOut << ff2JetReqRunEvent.size() << " ff Events with >=2 Jet Requirement (Run   Event): \n\n";
      EventWriteOut << ff2JetReqRunEvent[i].first << "  " << ff2JetReqRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<gammafake2JetReqRunEvent.size();i++){
      if(i==0)EventWriteOut << gammafake2JetReqRunEvent.size() << " gammafake Events with >=2 Jet Requirement (Run   Event): \n\n";
      EventWriteOut << gammafake2JetReqRunEvent[i].first << "  " << gammafake2JetReqRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<eg2JetReqRunEvent.size();i++){
      if(i==0)EventWriteOut << eg2JetReqRunEvent.size() << " eg Events with >=2 Jet Requirement (Run   Event): \n\n";
      EventWriteOut << eg2JetReqRunEvent[i].first << "  " << eg2JetReqRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<ee2JetReqRunEvent.size();i++){
      if(i==0)EventWriteOut << ee2JetReqRunEvent.size() << " ee Events with >=2 Jet Requirement (Run   Event): \n\n";
      EventWriteOut << ee2JetReqRunEvent[i].first << "  " << ee2JetReqRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    for(unsigned int i=0;i<failMetFilterRunEvent.size();i++){
      if(i==0)EventWriteOut << failMetFilterRunEvent.size() << " Fail HcalNoiseFilter (Run   Event): \n\n";
      EventWriteOut << failMetFilterRunEvent[i].first << "  " << failMetFilterRunEvent[i].second<<"\n";
    }
    EventWriteOut << "\n\n";
    EventWriteOut.close();
  }

  // end of event loop and print summary

  cout << " ----------------- Job Summary ----------------- " << endl;
  cout << " Total events            : " << nCnt[0] << " (" << 100*(float)nCnt[0]/float(nCnt[0]) << "%)" << endl;
  cout << " JSON passed             : " << nCnt[1] << " (" << 100*(float)nCnt[1]/float(nCnt[0]) << "%)" << endl;
  cout << " Duplicate check passed  : " << nCnt[2] << " (" << 100*(float)nCnt[2]/float(nCnt[0]) << "%)" << endl;
  cout << " HLT passed              : " << nCnt[3] << " (" << 100*(float)nCnt[3]/float(nCnt[0]) << "%)" << endl;
  cout << " nVertex passed          : " << nCnt[4] << " (" << 100*(float)nCnt[4]/float(nCnt[0]) << "%)" << endl;
  cout << " All MET Filters passed                  : " << nCnt[5] << " (" << 100*(float)nCnt[5]/float(nCnt[0]) << "%)" << endl;
  cout << " One 25 GeV barrel photon               : " << numOne25GeVPhoEvents       << " (" << 100*(float)numOne25GeVPhoEvents/float(nCnt[0]) << "%)" << endl;
  cout << " One 25 GeV barrel photon pass h/e      : " << numOne25GeVPhoEventsPassHE       << " (" << 100*(float)numOne25GeVPhoEventsPassHE/float(nCnt[0]) << "%)" << endl;
  cout << " Two 25 GeV barrel photons              : " << numTwo25GeVPhoEvents       << " (" << 100*(float)numTwo25GeVPhoEvents/float(nCnt[0]) << "%)" << endl;
  cout << " Two 25 GeV barrel photons pass h/e     : " << numTwo25GeVPhoEventsPassHE       << " (" << 100*(float)numTwo25GeVPhoEventsPassHE/float(nCnt[0]) << "%)" << endl;
  cout << " Two 40/25 GeV barrel photons           : " << numTwo40_25GeVPhoEvents       << " (" << 100*(float)numTwo40_25GeVPhoEvents/float(nCnt[0]) << "%)" << endl;
  cout << " Two 40/25 GeV barrel photons pass h/e  : " << numTwo40_25GeVPhoEventsPassHE << " (" << 100*(float)numTwo40_25GeVPhoEventsPassHE/float(nCnt[0]) << "%)" << endl;
  cout << " Number Jets that fail ele cleaning in gg,eg,ee events  : " << nCnt[6] << " (" << 100*(float)nCnt[6]/float(nCnt[0]) << "%)" << endl;
  cout << " Number Jets that fail muon cleaning in gg,eg,ee events : " << nCnt[7] << " (" << 100*(float)nCnt[7]/float(nCnt[0]) << "%)" << endl;
  cout << " Number Jets that fail ele cleaning in ff events        : " << nCnt[11] << " (" << 100*(float)nCnt[11]/float(nCnt[0]) << "%)" << endl;
  cout << " Number Jets that fail muon cleaning in ff events       : " << nCnt[12] << " (" << 100*(float)nCnt[12]/float(nCnt[0]) << "%)" << endl;
  cout << " met > 20 GeV            : " << nCnt[14] << " (" << 100*(float)nCnt[14]/float(nCnt[0]) << "%)" << endl;
  cout << " Number diPho Candidate Events     : " << ndiPhoCands  << " (" <<  100*ndiPhoCands/float(nCnt[0]) << "%)" << endl;
  cout << " Number diPho Events     : " << ndiPho  << " (" <<  100*ndiPho/float(nCnt[0]) << "%)" << endl;
  cout << " Number Events that get no category: " << nNoCat << " (" <<  100*(float)nNoCat/(float)nCnt[0] << "%)" << endl;
  cout << " Number gg               : " << ngg     << " (" <<     100*(float)ngg/float(nCnt[0]) << "%)" << endl;
  cout << " Number eg               : " << neg     << " (" <<     100*(float)neg/float(nCnt[0]) << "%)" << endl;
  cout << " Number ee               : " << nee     << " (" <<     100*(float)nee/float(nCnt[0]) << "%)" << endl;
  cout << " Number ff               : " << nff     << " (" <<     100*(float)nff/float(nCnt[0]) << "%)" << endl;
  cout << " Number gammafake        : " <<ngammafake<< " (" <<     100*(float)ngammafake/float(nCnt[0]) << "%)" << endl;
  cout << " Number gf               : " << ngf     << " (" <<     100*(float)ngf/float(nCnt[0]) << "%)" << endl;
  cout << " Number fg               : " << nfg     << " (" <<     100*(float)nfg/float(nCnt[0]) << "%)" << endl;
  cout << " Number gg failing dPhi(jet,met) cut        : " << nFailJetMETcut_gg <<" ("<<100*(float)nFailJetMETcut_gg/((float)ngg+(float)nFailJetMETcut_gg)<<" % of gg)"<<endl;
  cout << " Number eg failing dPhi(jet,met) cut        : " << nFailJetMETcut_eg <<" ("<<100*(float)nFailJetMETcut_eg/((float)neg+(float)nFailJetMETcut_eg)<<" % of eg)"<<endl;
  cout << " Number ee failing dPhi(jet,met) cut        : " << nFailJetMETcut_ee <<" ("<<100*(float)nFailJetMETcut_ee/((float)nee+(float)nFailJetMETcut_ee)<<" % of ee)"<<endl;
  cout << " Number ff failing dPhi(jet,met) cut        : " << nFailJetMETcut_ff <<" ("<<100*(float)nFailJetMETcut_ff/((float)nff+(float)nFailJetMETcut_ff)<<" % of ff)"<<endl;
  cout << " Number gammafake failing dPhi(jet,met) cut : " << nFailJetMETcut_gammafake <<" ("<<100*(float)nFailJetMETcut_gammafake/((float)ngammafake+(float)nFailJetMETcut_gammafake)<<" % of gammafake)"<<endl;
  cout << " Number PhoCands failing dPhi(pho,met) cut   : " << nPhoCandsFailDphiCut  <<" ("<<100*(float)nPhoCandsFailDphiCut/(float)nPhoCandsTotal<<" %)"<<endl;
  cout << " Number FakeCands failing dPhi(pho,met) cut  : " << nFakeCandsFailDphiCut <<" ("<<100*(float)nFakeCandsFailDphiCut/(float)nFakeCandsTotal<<" %)"<<endl;
  cout << " Number gg that have a L1FastL2L3 corrected pfJet with Pt>50 and eta<2.5 and fails loose jet id  :" << nCnt[8] << " (" << 100*(float)nCnt[8]/float(ngg) << "% of gg)" << endl;
  cout << " Number eg that have a L1FastL2L3 corrected pfJet with Pt>50 and eta<2.5 and fails loose jet id  :" << nCnt[10] << " (" << 100*(float)nCnt[10]/float(neg) << "% of eg)" << endl;
  cout << " Number ee that have a L1FastL2L3 corrected pfJet with Pt>50 and eta<2.5 and fails loose jet id  :" << nCnt[9] << " (" << 100*(float)nCnt[9]/float(nee) << "% of ee)" << endl;
  cout << " Number ff that have a L1FastL2L3 corrected pfJet with Pt>50 and eta<2.5 and fails loose jet id  :" << nCnt[13] << " (" << 100*(float)nCnt[13]/float(nff) << "% of ff)" << endl;
  cout << " Number pho_Cands that fail dR  : " << nPhosFailDR    << " (" << 100*(float)nPhosFailDR/float(nCnt[0]) << "%)" << endl;
  cout << " Number fake_Cands that fail dR  : " << nFakesFailDR    << " (" << 100*(float)nFakesFailDR/float(nCnt[0]) << "%)" << endl;
  cout << " Number pho_Cands that fail dPhi : " << nPhosFailDphi << " (" << 100*(float)nPhosFailDphi/float(nCnt[0]) << "%)" << endl;
  cout << " Number fake_Cands that fail dPhi : " << nFakesFailDphi << " (" << 100*(float)nFakesFailDphi/float(nCnt[0]) << "%)" << endl;
  cout << " Number Events with >=2 phos and >=2 fakes: "<<nTwoPhosAndTwoFakes<< " (" << 100*(float)nTwoPhosAndTwoFakes/float(nCnt[0])<<"%)"<< endl;   
  cout << " Number diPho Candidate Events With One Jet Requirement : " << ndiPhoCands_JetReq  << " (" <<  100*(float)ndiPhoCands_JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number diPho Events With One Jet Requirement : " << ndiPho_JetReq  << " (" <<  100*(float)ndiPho_JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number gg With One Jet Requirement : " << ngg_JetReq     << " (" <<     100*(float)ngg_JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number eg With One Jet Requirement : " << neg_JetReq     << " (" <<     100*(float)neg_JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number ee With One Jet Requirement : " << nee_JetReq     << " (" <<     100*(float)nee_JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number ff With One Jet Requirement : " << nff_JetReq     << " (" <<     100*(float)nff_JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number gammafake With One Jet Requirement : "<< ngammafake_JetReq     << " (" <<     100*ngammafake_JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number gf With One Jet Requirement : " << ngf_JetReq     << " (" <<     100*(float)ngf_JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number fg With One Jet Requirement : " << nfg_JetReq     << " (" <<     100*(float)nfg_JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number ee in Sideband : "	              << neeSideBand << " (" <<     100*(float)neeSideBand/float(nCnt[0]) << "%)" << endl;
  cout << " Number ee in Sideband With One Jet Requirement : " << neeSideBand_JetReq<< " (" <<     100*(float)neeSideBand_JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number gg With Two Jet Requirement : " << ngg_2JetReq     << " (" <<     100*(float)ngg_2JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number eg With Two Jet Requirement : " << neg_2JetReq     << " (" <<     100*(float)neg_2JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number ee With Two Jet Requirement : " << nee_2JetReq     << " (" <<     100*(float)nee_2JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number ff With Two Jet Requirement : " << nff_2JetReq     << " (" <<     100*(float)nff_2JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number gammafake With Two Jet Requirement : "<< ngammafake_2JetReq     << " (" <<     100*(float)ngammafake_2JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number gf With Two Jet Requirement : " << ngf_2JetReq     << " (" <<     100*(float)ngf_2JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number fg With Two Jet Requirement : " << nfg_2JetReq     << " (" <<     100*(float)nfg_2JetReq/float(nCnt[0]) << "%)" << endl;
  cout << " Number gge               : " << ngge     << " (" <<     100*(float)ngge/float(nCnt[0]) << "%)" << endl;
  cout << " Number ggee              : " << nggee     << " (" <<     100*(float)nggee/float(nCnt[0]) << "%)" << endl;
  cout << " Number eef               : " << neef     << " (" <<     100*(float)neef/float(nCnt[0]) << "%)" << endl;
  cout << " Number eeg               : " << neeg     << " (" <<     100*(float)neeg/float(nCnt[0]) << "%)" << endl;
  cout << " Number eegg              : " << neegg    << " (" <<     100*(float)neegg/float(nCnt[0]) << "%)" << endl;
  cout << " Number 3Pho Events  : " << nThreePhoEvents << " (" <<     100*(float)nThreePhoEvents/float(nCnt[0]) << "%)" << endl;
  cout << " Number 4Pho Events  : " << nFourPhoEvents << " (" <<     100*(float)nFourPhoEvents/float(nCnt[0]) << "%)" << endl;
  cout << " Number 3Fake Events : " << nThreeFakeEvents << " (" <<     100*(float)nThreeFakeEvents/float(nCnt[0]) << "%)" << endl;
  cout << " Number 4Fake Events : " << nFourFakeEvents << " (" <<     100*(float)nFourFakeEvents/float(nCnt[0]) << "%)" << endl;
  cout << " Number pf electrons, no quality cuts : " << pfEleCount << endl;
  cout << " Number Mva electrons, no quality cuts : " << MvaEleCount << endl;
  cout << " Number pf electrons over gsf electrons : " << pfEleCount << " / " << eleCount << " = " << 100*(float)pfEleCount/float(eleCount) << "%" << endl;
  cout << " Number phos pass old PhoCut    : " << oldP << endl;
  cout << " Number phos pass new PhoCut    : " << newP << endl;
  cout << " Number events from direct EWK     : " << nDirectEWK       << " (" <<     100*(float)nDirectEWK/float(nCnt[0]) << "%)" << endl;
  cout << " Number gg from direct EWK         : " << nggDirectEWK     << " (" <<     100*(float)nggDirectEWK/float(ngg) << "% of gg)" << endl;
  cout << " Number ggJetReq from direct EWK   : " << nggDirectEWK_JetReq     << " (" <<     100*(float)nggDirectEWK_JetReq/float(ngg_JetReq) << "% of ggJetReq)" << endl;
  cout << " Number gg/eg/ee events with HasDiJetPt    : " << nHasDiJetPt << endl;
  cout << " Number gg/eg/ee events with NotHasDiJetPt : " << nNotHasDiJetPt << endl;
  cout << " Number ff events that pass CaloIso_CaloIso trigger      : " << numFFsignalTrigger     << " (" << 100*(float)numFFsignalTrigger/(float)nff     << "% of ff)" << endl;
  cout << " Number ff events that pass ONLY CaloIso_CaloIso trigger : " << numFFsignalTriggerOnly << " (" << 100*(float)numFFsignalTriggerOnly/(float)nff << "% of ff)" << endl;
  cout << " Number ee_lead passing sihih           : " << nee_matrix_lead           << " (" <<  100*(float)nee_matrix_lead/float(nee)                << "% of ee)"         << endl;
  cout << " Number ee_lead_JetReq passing sihih    : " << nee_matrix_lead_JetReq    << " (" <<  100*(float)nee_matrix_lead_JetReq/float(nee_JetReq)  << "% of ee_JetReq)"  << endl;
  cout << " Number ee_lead_2JetReq passing sihih   : " << nee_matrix_lead_2JetReq   << " (" <<  100*(float)nee_matrix_lead_2JetReq/float(nee_2JetReq) << "% of ee_2JetReq)" << endl;
  cout << " Number ff_lead passing sihih           : " << nff_matrix_lead           << " (" <<  100*(float)nff_matrix_lead/float(nff)                << "% of ff)"         << endl;
  cout << " Number ff_lead_JetReq passing sihih    : " << nff_matrix_lead_JetReq    << " (" <<  100*(float)nff_matrix_lead_JetReq/float(nff_JetReq)  << "% of ff_JetReq)"  << endl;
  cout << " Number ff_lead_2JetReq passing sihih   : " << nff_matrix_lead_2JetReq   << " (" <<  100*(float)nff_matrix_lead_2JetReq/float(nff_2JetReq) << "% of ff_2JetReq)" << endl;
  cout << " Number ee_trail passing sihih           : " << nee_matrix_trail           << " (" <<  100*(float)nee_matrix_trail/float(nee)                << "% of ee)"         << endl;
  cout << " Number ee_trail_JetReq passing sihih    : " << nee_matrix_trail_JetReq    << " (" <<  100*(float)nee_matrix_trail_JetReq/float(nee_JetReq)  << "% of ee_JetReq)"  << endl;
  cout << " Number ee_trail_2JetReq passing sihih   : " << nee_matrix_trail_2JetReq   << " (" <<  100*(float)nee_matrix_trail_2JetReq/float(nee_2JetReq) << "% of ee_2JetReq)" << endl;
  cout << " Number ff_trail passing sihih           : " << nff_matrix_trail           << " (" <<  100*(float)nff_matrix_trail/float(nff)                << "% of ff)"         << endl;
  cout << " Number ff_trail_JetReq passing sihih    : " << nff_matrix_trail_JetReq    << " (" <<  100*(float)nff_matrix_trail_JetReq/float(nff_JetReq)  << "% of ff_JetReq)"  << endl;
  cout << " Number ff_trail_2JetReq passing sihih   : " << nff_matrix_trail_2JetReq   << " (" <<  100*(float)nff_matrix_trail_2JetReq/float(nff_2JetReq) << "% of ff_2JetReq)" << endl;
  //  cout << " Number isPF() photons pass : " << pfPho << endl;
  //  cout << " Number isPF() photons fail : " << notPfPho << endl;


  if(enableFilter) {
    cout << " --------------- Filtered events --------------- " << endl;
    cout << " filtered events         : " << nFiltered << " (" << 100*nFiltered/float(nCnt[0]) << "%)" << endl;  
    //cout << " Writing filtered root output to: /data/ndpc2/b/dmorse/RA3/RA3Ntuples/FilteredNtuples/cms533v1/"<<ds<<"-SelectedEvents.root"<<endl;
    cout << " Writing filtered root output to: /tmp/dmorse/"<<ds<<"-SelectedEvents.root"<<endl;

  }
  cout << " ----------------------------------------------- " << endl;

  //cout<<"Writing root output to: /tmp/dmorse/hist_"<<ds<<".root"<<endl;
  //cout<<"Writing analysis root output to: /data/ndpc2/b/dmorse/RA3/AnalysisOutput/hist_"<<ds<<".root"<<endl;
  cout<<"Writing analysis root output to: hist_"<<ds<<".root"<<endl;
  // cout<<"Writing root output to: /Users/dmorse/RA3/AnalysisOutput/hist_"<<ds<<".root"<<endl;

  // close the output file

  fout->cd();
  fout->Write();
  fout->Close();
  delete fout;

  if(enableFilter) {
    filterTree->GetCurrentFile()->cd();
    filterTree->GetCurrentFile()->Write();
    filterTree->GetCurrentFile()->Close();
    //delete filterTree;
  }
  
  
}//end Loop() function


//---------------------------------------------
//       Filter!!!!!!
//---------------------------------------------


void SusyEventAnalyzer::Filter() {
  if (fChain == 0) return;

  Long64_t nentries = fChain->GetEntries();

  std::cout << "total events in files  : " << nentries << std::endl;

  if(processNEvents <= 0 || processNEvents > nentries) processNEvents = nentries;

  std::cout << "events to be processed : " << processNEvents << std::endl; 


  int nFiltered = 0;
  TTree* filterTree = 0;

  if(enableFilter) {    
    TFile* filterFile = new TFile("/data/ndpc1/b/dmorse/RA3/RA3Ntuples/FilteredNtuples/cms533v1/"+ds+".root","RECREATE");
    //TFile* filterFile = new TFile("/eos/uscms/store/user/dmorse/cms533v1_v1/FilteredNtuples/Data/"+ds+".root","RECREATE");
    //TFile* filterFile = new TFile("/tmp/dmorse/"+ds+".root","RECREATE");
    //TFile* filterFile = new TFile("/Users/dmorse/RA3/SusyNtuples/FilteredNtuples/"+ds+".root","RECREATE");
    filterTree = (TTree*) fChain->GetTree()->CloneTree(0);
    filterTree->SetAutoSave();
  }

  int nCnt[20]={0};

  // open hist file and define histograms

  // to check duplicated events
  std::map<int, std::set<int> > allEvents;

  // start event looping

  Long64_t nbytes = 0, nb = 0;
  for (Long64_t jentry=0; jentry < processNEvents; jentry++) {

    nCnt[0]++;//num total events
    if(printLevel>0) std::cout << "Get the tree contents." << std::endl;

    Long64_t ientry = LoadTree(jentry);
    if (ientry < 0) break;
    nb = fChain->GetEntry(jentry);   nbytes += nb;


    if(printLevel>0 || (printInterval > 0 && (jentry >= printInterval && jentry%printInterval == 0)) ) {
      std::cout << int(jentry) << " events processed with run="
		<< event->runNumber << ", event=" << event->eventNumber << std::endl;
    }

    //if( !(event->runNumber==195112 || event->runNumber==195378) )continue;

    if(printLevel>0) std::cout << "Initialize any global variables to be reset per event." << std::endl;

    InitializePerEvent();
    
    if(printLevel>0) std::cout << "Check duplicated events for data only." << std::endl;
    bool duplicateEvent = ! (allEvents[event->runNumber].insert(event->eventNumber)).second;
    if(event->isRealData && duplicateEvent){
      cout<<"Duplicate Event! Run "<<event->runNumber<<" Event "<<event->eventNumber<<endl;
      //continue;
    }
    nCnt[1]++;//num events pass not duplicate

    if(printLevel>0) std::cout << "Apply good run list." << std::endl;
    // uncomment this to use the Json file to flag good data (or bad depending on your outlook)  
    if(useJSON){
      if(!isInJson(event->runNumber,event->luminosityBlockNumber)){/* continue;*/}
    }
    nCnt[2]++;//num events pass json

    if(printLevel>0) std::cout << "Apply trigger selection in the event." << std::endl;
    bool passHLT = (useTrigger ? PassTriggers() : true);
    if(!passHLT){/* continue;*/}    
    nCnt[3]++;//num events pass hlt


    float ptHat=0.;
    if(!event->isRealData){
      ptHat=event->gridParams["ptHat"];
      //if(!event->isRealData && ptHat>=100)continue;
    }


    //  Get NVertex for event
    int NVertex=0;
    for(std::vector<susy::Vertex>::iterator Vtx_it = event->vertices.begin(); Vtx_it<event->vertices.end(); Vtx_it++){
      if(    !Vtx_it->isFake() 
	     && Vtx_it->ndof>4 
	     && fabs(Vtx_it->position.z()<24.0) 
	     && sqrt(Vtx_it->position.x()*Vtx_it->position.x()+Vtx_it->position.y()*Vtx_it->position.y())<2.0 ) NVertex++;
    }
    if(NVertex<1){/*continue;*/}
    nCnt[4]++;//num events pass nvertex

    int filterCheck=0;
    int GreaterThan40=0;
    bool StudyCut=false,AnalysisCut=false;
    int AnalysisPhos=0;
    int nEta=0,n25=0;
    int firstEta=0,first25=0;
    std::map<TString, std::vector<susy::Photon> >::iterator phoMap = event->photons.find("photons");
    if(phoMap != event->photons.end()) {
      for(std::vector<susy::Photon>::iterator it_Pho = phoMap->second.begin(); it_Pho != phoMap->second.end(); it_Pho++) {
	if(printLevel>0) cout<<"looping over photon collection"<<endl;

	float ecalIsoDR03=it_Pho->ecalRecHitSumEtConeDR03;
	float hcalIsoDR03=it_Pho->hcalTowerSumEtConeDR03();
	float trackIsoDR03=it_Pho->trkSumPtHollowConeDR03;
	float PhoEt=it_Pho->momentum.Et();
	bool Et25Cut=PhoEt>25.0;	
	bool Et40Cut=PhoEt>40.0;
	bool r9Cut=it_Pho->r9<1.0;
	bool HoverECut=it_Pho->hadTowOverEm<0.05;
	bool EtaCut=std::fabs(it_Pho->caloPosition.Eta())<1.4442;
	bool CaloIdLCut=(it_Pho->hadronicOverEm<0.15 && it_Pho->sigmaIetaIeta<0.014);
	bool NVertexCut=NVertex>0;
	bool r9idCut=it_Pho->r9>0.8;
	bool IsoVLCut=( ecalIsoDR03  < 6.0 + 0.012*PhoEt ) 
	  && ( hcalIsoDR03 < 4.0 + 0.005*PhoEt ) 
	  && ( trackIsoDR03  < 4.0 + 0.002*PhoEt );
	bool R9Id85=it_Pho->r9>0.85;
	bool CaloId10=( it_Pho->hadronicOverEm<0.1 && it_Pho->sigmaIetaIeta < 0.014 );
	bool Iso50=(ecalIsoDR03<5.0 + 0.012*PhoEt
		    && hcalIsoDR03<5.0 + 0.005*PhoEt
		    && trackIsoDR03<5.0+ 0.002*PhoEt
		    );
	bool R9Id85orCaloId10andIso50Cut = R9Id85 || ( CaloId10 && Iso50 );
	
	//bool AnalysisCut = (Et25Cut && r9Cut && EtaCut && HoverECut && NVertexCut && CaloIdLCut && (r9idCut || IsoVLCut));

	//if(StudyCut)filterCheck++;
	//if(AnalysisCut)filterCheck++;
	//if(Et25Cut && r9Cut && EtaCut && CaloIdL)filterCheck++;
	//if(Et25Cut && r9Cut && HoverECut && EtaCut && CaloIdL)filterCheck++;
	if(printLevel>0)cout<<"#phos: "<<phoMap->second.size()<<" r9: "<<it_Pho->r9<<" Et: "<<PhoEt<<" h/e: "<<it_Pho->hadronicOverEm<<" filterCheck: "<<filterCheck<<std::endl;

	//StudyCut = ((Et25Cut && r9Cut && EtaCut && NVertexCut && CaloIdLCut && (r9idCut || IsoVLCut) ) || (Et25Cut && r9Cut && EtaCut && NVertexCut && R9Id85orCaloId10andIso50Cut));
	if(EtaCut)nEta++;
	if(Et25Cut)n25++;
	if(nEta==2 && firstEta==0){nCnt[5]++;firstEta=1;}
	if(nEta>=2 && n25==2 && first25==0){nCnt[6]++;first25=1;}

	StudyCut = Et25Cut && EtaCut && NVertexCut;
	bool AnalysisPho = (Et25Cut && EtaCut/* && HoverECut*/ && NVertexCut);
	if(AnalysisPho)AnalysisPhos++;
	if(Et40Cut)GreaterThan40++;
	AnalysisCut = (AnalysisPhos>1 && GreaterThan40>0);

	//if(StudyCut)break; //study
	if(AnalysisCut)break;  //analysis
      }
    }
  


    // filter conditions

    if(enableFilter) {
      //bool filterThis = StudyCut;  //study
      bool filterThis = 1;//AnalysisCut;  //analysis
      if(filterThis) {
	nFiltered++;
	filterTree->Fill();
      }
    }// if(enableFilter)

  } // for jentry


    // end of event loop and print summary

  std::cout << " ----------------- ALL DONE! ----------------- " << std::endl;

  //if(enableFilter) {
  //std::cout << " all events      : " << processNEvents << std::endl;
  cout << " Total events            : " << nCnt[0] << " (" << 100*(float)nCnt[0]/float(nCnt[0]) << "%)" << endl;
  cout << " Duplicate check passed  : " << nCnt[1] << " (" << 100*(float)nCnt[1]/float(nCnt[0]) << "%)" << endl;
  cout << " JSON passed             : " << nCnt[2] << " (" << 100*(float)nCnt[2]/float(nCnt[0]) << "%)" << endl;
  cout << " HLT passed              : " << nCnt[3] << " (" << 100*(float)nCnt[3]/float(nCnt[0]) << "%)" << endl;
  cout << " NVertex passed          : " << nCnt[4] << " (" << 100*(float)nCnt[4]/float(nCnt[0]) << "%)" << endl;
  cout << " 2 Barrel Photons        : " << nCnt[5] << " (" << 100*(float)nCnt[5]/float(nCnt[0]) << "%)" << endl;
  cout << " 2 Barrel Photons Et>25  : " << nCnt[6] << " (" << 100*(float)nCnt[6]/float(nCnt[0]) << "%)" << endl;
  std::cout << " --------------- Filtered events --------------- " << std::endl;
  std::cout << " filtered events : " << nFiltered << "   ("<<100*nFiltered/float(nCnt[0])<<"%)"<<std::endl;
  //}
  std::cout << " ----------------------------------------------- " << std::endl;
  //std::cout << " Filtered file written to: /eos/uscms/store/user/dmorse/cms533v1_v1/FilteredNtuples/Data/"<<ds<<".root"<<std::endl;
  std::cout << " Filtered file written to: /data/ndpc1/b/dmorse/RA3/RA3Ntuples/FilteredNtuples/cms533v1/"<<ds<<".root"<<std::endl;

  if(enableFilter) {
    filterTree->GetCurrentFile()->cd();
    filterTree->GetCurrentFile()->Write();
    filterTree->GetCurrentFile()->Close();
  }

}

//---------------------------------------------
//       DR03 Study!!!!!!
//---------------------------------------------


void SusyEventAnalyzer::DR03() {

  if (fChain == 0) return;

  Long64_t nentries = fChain->GetEntries();

  cout << "total events in files  : " << nentries << endl;

  if(processNEvents <= 0 || processNEvents > nentries) processNEvents = nentries;

  cout << "events to be processed : " << processNEvents << endl; 
  


  if(printLevel>0) cout << "Initialize event counters." << endl;
  const int NCNT = 20;
  int nCnt[NCNT];
  for(int i=0; i<NCNT; i++) nCnt[i] = 0;

  // open hist file and define histograms

  TFile* fout = new TFile("/data/ndpc3/b/dmorse/RA3/AnalysisOutput/hist_"+ds+".root","RECREATE");
  //TFile* fout = new TFile("/Users/dmorse/RA3/AnalysisOutput/hist_"+ds+".root","RECREATE");

  fout->cd();

  TH1F *h_SignalCombIsoDR03Nminus3 = new TH1F("SignalCombIsoDR03Nminus3","Combined Iso after Et>30,R9,h/e,sIetaIeta,Pixel=0,MET<30;combined Isolation (DR03 cone);Events",210,-5.,100.);
  TH1F *h_SignalCombRelPFIsoDR03Nminus3 = new TH1F("SignalCombRelPFIsoDR03Nminus3","Combined relative PfIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,MET<30;PF combined Isolation (DR03 cone) / E_{T};Events",210,-5.,100.);
  TH1F *h_BgroundCombRelPFIsoDR03Nminus3 = new TH1F("BgroundCombRelPFIsoDR03Nminus3","Combined relative PfIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,MET<30;PF combined Isolation (DR03 cone) / E_{T};Events",210,-5.,100.);

  TH1F *h_SignalCombIsoDR04Nminus3 = new TH1F("SignalCombIsoDR04Nminus3","Combined Iso after Et>30,R9,h/e,sIetaIeta,Pixel=0,MET<30;combined Isolation (DR04 cone);Events",210,-5.,100.);

  TH1F *h_BgroundCombIsoDR03Nminus3 = new TH1F("BgroundCombIsoDR03Nminus3","Combined Iso after Et>30,R9,h/e,sIetaIeta,Pixel=0,MET<30;combined Isolation (DR03 cone);Events",210,-5.,100.);
  TH1F *h_BgroundCombIsoDR04Nminus3 = new TH1F("BgroundCombIsoDR04Nminus3","Combined Iso after Et>30,R9,h/e,sIetaIeta,Pixel=0,MET<30;combined Isolation (DR04 cone);Events",210,-5.,100.);
  TH1F *h_BgroundEcalIsoDR03Nminus1 = new TH1F("BgroundEcalIsoDR03Nminus1","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIso,trackIso,MET<30;ecalRecHitSumEtConeDR03;Events",150,-5,25);
  TH1F *h_BgroundHcalIsoDR03Nminus1 = new TH1F("BgroundHcalIsoDR03Nminus1","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,trackIso,MET<30;hcalTowerSumEtConeDR03();Events",150,-5,25);
  TH1F *h_BgroundTrackIsoDR03Nminus1 = new TH1F("BgroundTrackIsoDR03Nminus1","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,hcalIso,MET<30;trkSumPtHollowConeDR03;Events",150,-5,25);
  
  TH1F* h_EcalIsoDR03 = new TH1F("EcalIsoDR03","Ecal Isolation in DR03 cone for all photons after JSON, HLT, R9, Et>30, h/e",150,-5,25);
  TH1F* h_HcalIsoDR03 = new TH1F("HcalIsoDR03","Hcal Isolation in DR03 cone for all photons after JSON, HLT, R9, Et>30, h/e",150,-5,25);
  TH1F* h_TrackIsoDR03 = new TH1F("TrackIsoDR03","Track Isolation in DR03 cone for all photons after JSON, HLT, R9, Et>30, h/e",150,-5,25);
  TH1F* h_EcalIsoDR04 = new TH1F("EcalIsoDR04","Ecal Isolation in DR04 cone for all photons after JSON, HLT, R9, Et>30, h/e",150,-5,25);
  TH1F* h_HcalIsoDR04 = new TH1F("HcalIsoDR04","Hcal Isolation in DR04 cone for all photons after JSON, HLT, R9, Et>30, h/e",150,-5,25);
  TH1F* h_TrackIsoDR04 = new TH1F("TrackIsoDR04","Track Isolation in DR04 cone for all photons after JSON, HLT, R9, Et>30, h/e",150,-5,25);
  TH1F *h_EcalIsoDR03Nminus3 = new TH1F("EcalIsoDR03Nminus3","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0;ecalRecHitSumEtConeDR03;Events",150,-5,25);
  TH1F *h_EcalIsoDR03Nminus1 = new TH1F("EcalIsoDR03Nminus1","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIso,trackIso;ecalRecHitSumEtConeDR03;Events",150,-5,25);
  TH1F *h_EcalIsoDR04Nminus1 = new TH1F("EcalIsoDR04Nminus1","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIso,trackIso;ecalRecHitSumEtConeDR04;Events",150,-5,25);
  TH1F *h_HcalIsoDR03Nminus3 = new TH1F("HcalIsoDR03Nminus3","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0;hcalTowerSumEtConeDR03();Events",150,-5,25);
  TH1F *h_HcalIsoDR03Nminus1 = new TH1F("HcalIsoDR03Nminus1","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,trackIso;hcalTowerSumEtConeDR03();Events",150,-5,25);
  TH1F *h_HcalIsoDR04Nminus1 = new TH1F("HcalIsoDR04Nminus1","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,trackIso;hcalTowerSumEtConeDR04();Events",150,-5,25);
  TH1F *h_TrackIsoDR03Nminus3 = new TH1F("TrackIsoDR03Nminus3","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0;trkSumPtHollowConeDR03;Events",150,-5,25);
  TH1F *h_TrackIsoDR03Nminus1 = new TH1F("TrackIsoDR03Nminus1","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,hcalIso;trkSumPtHollowConeDR03;Events",150,-5,25);
  TH1F *h_TrackIsoDR04Nminus1 = new TH1F("TrackIsoDR04Nminus1","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,hcalIso;trkSumPtHollowConeDR04;Events",150,-5,25);
  TH1F *h_EcalIsoDR03Nminus3Signal = new TH1F("EcalIsoDR03Nminus3Signal","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0;ecalRecHitSumEtConeDR03;Events",150,-5,25);
  TH1F *h_EcalIsoDR03Nminus1Signal = new TH1F("EcalIsoDR03Nminus1Signal","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIso,trackIso;ecalRecHitSumEtConeDR03;Events",150,-5,25);
  TH1F *h_EcalIsoDR04Nminus1Signal = new TH1F("EcalIsoDR04Nminus1Signal","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIso,trackIso;ecalRecHitSumEtConeDR04;Events",150,-5,25);
  TH1F *h_EcalIsoDR03Nminus1SignalRhoCorr = new TH1F("EcalIsoDR03Nminus1SignalRhoCorr","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIsoRhoCorr,trackIsoRhoCorr;ecalRecHitSumEtConeDR03;Events",150,-5,25);
  TH1F *h_EcalIsoDR04Nminus1SignalRhoCorr = new TH1F("EcalIsoDR04Nminus1SignalRhoCorr","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIsoRhoCorr,trackIsoRhoCorr;ecalRecHitSumEtConeDR04;Events",150,-5,25);
  TH1F *h_HcalIsoDR03Nminus3Signal = new TH1F("HcalIsoDR03Nminus3Signal","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0;hcalTowerSumEtConeDR03();Events",150,-5,25);
  TH1F *h_HcalIsoDR03Nminus1Signal = new TH1F("HcalIsoDR03Nminus1Signal","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,trackIso;hcalTowerSumEtConeDR03();Events",150,-5,25);
  TH1F *h_HcalIsoDR04Nminus1Signal = new TH1F("HcalIsoDR04Nminus1Signal","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,trackIso;hcalTowerSumEtConeDR04();Events",150,-5,25);
  TH1F *h_HcalIsoDR03Nminus1SignalRhoCorr = new TH1F("HcalIsoDR03Nminus1SignalRhoCorr","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIsoRhoCorr,trackIsoRhoCorr;hcalTowerSumEtConeDR03();Events",150,-5,25);
  TH1F *h_HcalIsoDR04Nminus1SignalRhoCorr = new TH1F("HcalIsoDR04Nminus1SignalRhoCorr","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIsoRhoCorr,trackIsoRhoCorr;hcalTowerSumEtConeDR04();Events",150,-5,25);
  TH1F *h_TrackIsoDR03Nminus3Signal = new TH1F("TrackIsoDR03Nminus3Signal","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0;trkSumPtHollowConeDR03;Events",150,-5,25);
  TH1F *h_TrackIsoDR03Nminus1Signal = new TH1F("TrackIsoDR03Nminus1Signal","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,hcalIso;trkSumPtHollowConeDR03;Events",150,-5,25);
  TH1F *h_TrackIsoDR04Nminus1Signal = new TH1F("TrackIsoDR04Nminus1Signal","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,hcalIso;trkSumPtHollowConeDR04;Events",150,-5,25);
  TH1F *h_EcalIsoDR03Nminus1Bground = new TH1F("EcalIsoDR03Nminus1Bground","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIso,trackIso;ecalRecHitSumEtConeDR03;Events",150,-5,25);
  TH1F *h_HcalIsoDR03Nminus1Bground = new TH1F("HcalIsoDR03Nminus1Bground","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,trackIso;hcalTowerSumEtConeDR03();Events",150,-5,25);
  TH1F *h_TrackIsoDR03Nminus1Bground = new TH1F("TrackIsoDR03Nminus1Bground","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,hcalIso;trkSumPtHollowConeDR03;Events",150,-5,25);

  TH1F *h_chargedHadronIsoNminus3Bground = new TH1F("chargedHadronIsoNminus3Bground","chargedHadronIso after Et>25,R9,h/e,sIetaIeta,Pixel=0;chargedHadronIso;Events",150,-5,30);
  TH1F *h_neutralHadronIsoNminus3Bground = new TH1F("neutralHadronIsoNminus3Bground","neutralHadronIso after Et>25,R9,h/e,sIetaIeta,Pixel=0;neutralHadronIso;Events",150,-5,30);
  TH1F *h_photonIsoNminus3Bground = new TH1F("photonIsoNminus3Bground","photonIso after Et>25,R9,h/e,sIetaIeta,Pixel=0;photonIso;Events",150,-5,30);
  TH1F *h_chargedHadronIsoDepositNminus3Bground = new TH1F("chargedHadronIsoDepositNminus3Bground","chargedHadronIsoDeposit after Et>25,R9,h/e,sIetaIeta,Pixel=0;chargedHadronIsoDeposit;Events",150,-5,30);
  TH1F *h_neutralHadronIsoDepositNminus3Bground = new TH1F("neutralHadronIsoDepositNminus3Bground","neutralHadronIsoDeposit after Et>25,R9,h/e,sIetaIeta,Pixel=0;neutralHadronIsoDeposit;Events",150,-5,30);
  TH1F *h_photonIsoDepositNminus3Bground = new TH1F("photonIsoDepositNminus3Bground","PfTrackIsoDeposit after Et>25,R9,h/e,sIetaIeta,Pixel=0;photonIsoDeposit;Events",150,-5,30);
  TH1F* h_PfCombinedIsoNminus3 = new TH1F("PfCombinedIsoNminus3","Combined Pf Isolation after Et>25,R9,h/e,sIetaIeta,Pixel=0;chargedHadronIso+neutralHadronIso+photonIso;Events",210,-5.,100.);
  TH1F* h_PfCombinedIsoNminus3Bground = new TH1F("PfCombinedIsoNminus3Bground","Combined Pf Isolation after Et>25,R9,h/e,sIetaIeta,Pixel=0 in events with MET<30GeV;chargedHadronIso+neutralHadronIso+photonIso;Events",210,-5.,100.);
  TH1F* h_PfCombinedIsoDepositNminus3 = new TH1F("PfCombinedIsoDepositNminus3","Combined Pf IsolationDeposit after Et>25,R9,h/e,sIetaIeta,Pixel=0;chargedHadronIsoDeposit+neutralHadronIsoDeposit+photonIsoDeposit;Events",210,-5.,100.);
  TH1F* h_PfCombinedIsoDepositNminus3Bground = new TH1F("PfCombinedIsoDepositNminus3Bground","Combined Pf IsolationDeposit after Et>25,R9,h/e,sIetaIeta,Pixel=0 in events with MET<30GeV;chargedHadronIsoDeposit+neutralHadronIsoDeposit+photonIsoDeposit;Events",210,-5.,100.);

  TH1F *h_chargedHadronIsoNminus3Signal = new TH1F("chargedHadronIsoNminus3Signal","chargedHadronIso after Et>25,R9,h/e,sIetaIeta,Pixel=0;chargedHadronIso;Events",150,-5,30);
  TH1F *h_neutralHadronIsoNminus3Signal = new TH1F("neutralHadronIsoNminus3Signal","neutralHadronIso after Et>25,R9,h/e,sIetaIeta,Pixel=0;neutralHadronIso;Events",150,-5,30);
  TH1F *h_photonIsoNminus3Signal = new TH1F("photonIsoNminus3Signal","photonIso after Et>25,R9,h/e,sIetaIeta,Pixel=0;photonIso;Events",150,-5,30);
  TH1F *h_chargedHadronIsoDepositNminus3Signal = new TH1F("chargedHadronIsoDepositNminus3Signal","chargedHadronIsoDeposit after Et>25,R9,h/e,sIetaIeta,Pixel=0;chargedHadronIsoDeposit;Events",150,-5,30);
  TH1F *h_neutralHadronIsoDepositNminus3Signal = new TH1F("neutralHadronIsoDepositNminus3Signal","neutralHadronIsoDeposit after Et>25,R9,h/e,sIetaIeta,Pixel=0;neutralHadronIsoDeposit;Events",150,-5,30);
  TH1F *h_photonIsoDepositNminus3Signal = new TH1F("photonIsoDepositNminus3Signal","PfTrackIsoDeposit after Et>25,R9,h/e,sIetaIeta,Pixel=0;photonIsoDeposit;Events",150,-5,30);
  TH1F* h_PfCombinedIsoNminus3Signal = new TH1F("PfCombinedIsoNminus3Signal","Combined Pf Isolation after Et>25,R9,h/e,sIetaIeta,Pixel=0;chargedHadronIso+neutralHadronIso+photonIso;Events",210,-5.,100.);
  TH1F* h_PfCombinedIsoDepositNminus3Signal = new TH1F("PfCombinedIsoDepositNminus3Signal","Combined Pf IsolationDeposit after Et>25,R9,h/e,sIetaIeta,Pixel=0;chargedHadronIsoDeposit+neutralHadronIsoDeposit+photonIsoDeposit;Events",210,-5.,100.);

  TH1F *h_EcalIsoDR04Nminus1Bground = new TH1F("EcalIsoDR04Nminus1Bground","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIso,trackIso;ecalRecHitSumEtConeDR04;Events",150,-5,25);
  TH1F *h_HcalIsoDR04Nminus1Bground = new TH1F("HcalIsoDR04Nminus1Bground","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,trackIso;hcalTowerSumEtConeDR04();Events",150,-5,25);
  TH1F *h_TrackIsoDR04Nminus1Bground = new TH1F("TrackIsoDR04Nminus1Bground","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIso,hcalIso;trkSumPtHollowConeDR04;Events",150,-5,25);
  TH1F *h_TrackIsoDR03Nminus1SignalRhoCorr = new TH1F("TrackIsoDR03Nminus1SignalRhoCorr","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIsoRhoCorr,hcalIsoRhoCorr;trkSumPtHollowConeDR03;Events",150,-5,25);
  TH1F *h_TrackIsoDR04Nminus1SignalRhoCorr = new TH1F("TrackIsoDR04Nminus1SignalRhoCorr","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIsoRhoCorr,hcalIsoRhoCorr;trkSumPtHollowConeDR04;Events",150,-5,25);
  TH1F *h_EcalIsoDR03Nminus1BgroundRhoCorr = new TH1F("EcalIsoDR03Nminus1BgroundRhoCorr","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIsoRhoCorr,trackIsoRhoCorr;ecalRecHitSumEtConeDR03;Events",150,-5,25);
  TH1F *h_HcalIsoDR03Nminus1BgroundRhoCorr = new TH1F("HcalIsoDR03Nminus1BgroundRhoCorr","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIsoRhoCorr,trackIsoRhoCorr;hcalTowerSumEtConeDR03();Events",150,-5,25);
  TH1F *h_TrackIsoDR03Nminus1BgroundRhoCorr = new TH1F("TrackIsoDR03Nminus1BgroundRhoCorr","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIsoRhoCorr,hcalIsoRhoCorr;trkSumPtHollowConeDR03;Events",150,-5,25);
  TH1F *h_EcalIsoDR04Nminus1BgroundRhoCorr = new TH1F("EcalIsoDR04Nminus1BgroundRhoCorr","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,hcalIsoRhoCorr,trackIsoRhoCorr;ecalRecHitSumEtConeDR04;Events",150,-5,25);
  TH1F *h_HcalIsoDR04Nminus1BgroundRhoCorr = new TH1F("HcalIsoDR04Nminus1BgroundRhoCorr","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIsoRhoCorr,trackIsoRhoCorr;hcalTowerSumEtConeDR04();Events",150,-5,25);
  TH1F *h_TrackIsoDR04Nminus1BgroundRhoCorr = new TH1F("TrackIsoDR04Nminus1BgroundRhoCorr","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0,ecalIsoRhoCorr,hcalIsoRhoCorr;trkSumPtHollowConeDR04;Events",150,-5,25);
  TH1F *h_EcalIsoDR03Nminus3Bground = new TH1F("EcalIsoDR03Nminus3Bground","EcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0;ecalRecHitSumEtConeDR03;Events",150,-5,25);
  TH1F *h_HcalIsoDR03Nminus3Bground = new TH1F("HcalIsoDR03Nminus3Bground","HcalIso after Et>30,R9,h/e,sIetaIeta,Pixel=0;hcalTowerSumEtConeDR03();Events",150,-5,25);
  TH1F *h_TrackIsoDR03Nminus3Bground = new TH1F("TrackIsoDR03Nminus3Bground","TrackIso after Et>30,R9,h/e,sIetaIeta,Pixel=0;trkSumPtHollowConeDR03;Events",150,-5,25);
  TH1F *h_DenomAllButIsosVsNVertex = new TH1F("DenomAllButIsosVsNVertex","",40,0,40);
  TH1F *h_NumerEcalNormalHcalNormalVsNVertex = new TH1F("NumerEcalNormalHcalNormalVsNVertex","",40,0,40);
  TH1F *h_NumerEcalNormalHcalRhoVsNVertex = new TH1F("NumerEcalNormalHcalRhoVsNVertex","",40,0,40);
  TH1F *h_NumerEcalRhoHcalNormalVsNVertex = new TH1F("NumerEcalRhoHcalNormalVsNVertex","",40,0,40);
  TH1F *h_NumerEcalRhoHcalRhoVsNVertex = new TH1F("NumerEcalRhoHcalRhoVsNVertex","",40,0,40);
  TH1F *h_DrDenomSignal = new TH1F("DrDenomSignal","",64,0,4);h_DrDenomSignal->Sumw2();
  TH1F *h_DrDenomBground = new TH1F("DrDenomBground","",64,0,4);h_DrDenomBground->Sumw2();
  TH1F *h_DrGenDenomSignal = new TH1F("DrGenDenomSignal","",64,0,4);h_DrGenDenomSignal->Sumw2();
  TH1F *h_DrGenDenomBground = new TH1F("DrGenDenomBground","",64,0,4);h_DrGenDenomBground->Sumw2();
  TH1F *h_DrNumerSignalDR03 = new TH1F("DrNumerSignalDR03","",64,0,4);h_DrNumerSignalDR03->Sumw2();
  TH1F *h_DrNumerSignalDR04 = new TH1F("DrNumerSignalDR04","",64,0,4);h_DrNumerSignalDR04->Sumw2();
  TH1F *h_DrNumerBgroundDR03 = new TH1F("DrNumerBgroundDR03","",64,0,4);h_DrNumerBgroundDR03->Sumw2();
  TH1F *h_DrNumerBgroundDR04 = new TH1F("DrNumerBgroundDR04","",64,0,4);h_DrNumerBgroundDR04->Sumw2();
  TH1F *h_DrNumerSignalDR03RhoCorr = new TH1F("DrNumerSignalDR03RhoCorr","",64,0,4);h_DrNumerSignalDR03RhoCorr->Sumw2();
  TH1F *h_DrNumerSignalDR04RhoCorr = new TH1F("DrNumerSignalDR04RhoCorr","",64,0,4);h_DrNumerSignalDR04RhoCorr->Sumw2();
  TH1F *h_DrNumerBgroundDR03RhoCorr = new TH1F("DrNumerBgroundDR03RhoCorr","",64,0,4);h_DrNumerBgroundDR03RhoCorr->Sumw2();
  TH1F *h_DrNumerBgroundDR04RhoCorr = new TH1F("DrNumerBgroundDR04RhoCorr","",64,0,4);h_DrNumerBgroundDR04RhoCorr->Sumw2();
  TH1F *h_DrGenNumerSignalDR03 = new TH1F("DrGenNumerSignalDR03","",64,0,4);h_DrGenNumerSignalDR03->Sumw2();
  TH1F *h_DrGenNumerSignalDR04 = new TH1F("DrGenNumerSignalDR04","",64,0,4);h_DrGenNumerSignalDR04->Sumw2();
  TH1F *h_DrGenNumerBgroundDR03 = new TH1F("DrGenNumerBgroundDR03","",64,0,4);h_DrGenNumerBgroundDR03->Sumw2();
  TH1F *h_DrGenNumerBgroundDR04 = new TH1F("DrGenNumerBgroundDR04","",64,0,4);h_DrGenNumerBgroundDR04->Sumw2();
  TH1F *h_DrGenNumerSignalDR03RhoCorr = new TH1F("DrGenNumerSignalDR03RhoCorr","",64,0,4);h_DrGenNumerSignalDR03RhoCorr->Sumw2();
  TH1F *h_DrGenNumerSignalDR04RhoCorr = new TH1F("DrGenNumerSignalDR04RhoCorr","",64,0,4);h_DrGenNumerSignalDR04RhoCorr->Sumw2();
  TH1F *h_DrGenNumerBgroundDR03RhoCorr = new TH1F("DrGenNumerBgroundDR03RhoCorr","",64,0,4);h_DrGenNumerBgroundDR03RhoCorr->Sumw2();
  TH1F *h_DrGenNumerBgroundDR04RhoCorr = new TH1F("DrGenNumerBgroundDR04RhoCorr","",64,0,4);h_DrGenNumerBgroundDR04RhoCorr->Sumw2();
  TH1F *h_EtDenomSignal = new TH1F("EtDenomSignal","",100,0,500);h_EtDenomSignal->Sumw2();
  TH1F *h_EtDenomBground = new TH1F("EtDenomBground","",100,0,500);h_EtDenomBground->Sumw2();
  TH1F *h_EtGenDenomSignal = new TH1F("EtGenDenomSignal","",100,0,500);h_EtGenDenomSignal->Sumw2();
  TH1F *h_EtGenDenomBground = new TH1F("EtGenDenomBground","",100,0,500);h_EtGenDenomBground->Sumw2();
  TH1F *h_EtNumerSignalDR03 = new TH1F("EtNumerSignalDR03","",100,0,500);h_EtNumerSignalDR03->Sumw2();
  TH1F *h_EtNumerSignalDR04 = new TH1F("EtNumerSignalDR04","",100,0,500);h_EtNumerSignalDR04->Sumw2();
  TH1F *h_EtNumerBgroundDR03 = new TH1F("EtNumerBgroundDR03","",100,0,500);h_EtNumerBgroundDR03->Sumw2();
  TH1F *h_EtNumerBgroundDR04 = new TH1F("EtNumerBgroundDR04","",100,0,500);h_EtNumerBgroundDR04->Sumw2();
  TH1F *h_EtNumerSignalDR03RhoCorr = new TH1F("EtNumerSignalDR03RhoCorr","",100,0,500);h_EtNumerSignalDR03RhoCorr->Sumw2();
  TH1F *h_EtNumerSignalDR04RhoCorr = new TH1F("EtNumerSignalDR04RhoCorr","",100,0,500);h_EtNumerSignalDR04RhoCorr->Sumw2();
  TH1F *h_EtNumerBgroundDR03RhoCorr = new TH1F("EtNumerBgroundDR03RhoCorr","",100,0,500);h_EtNumerBgroundDR03RhoCorr->Sumw2();
  TH1F *h_EtNumerBgroundDR04RhoCorr = new TH1F("EtNumerBgroundDR04RhoCorr","",100,0,500);h_EtNumerBgroundDR04RhoCorr->Sumw2();
  TH1F *h_EtGenNumerSignalDR03 = new TH1F("EtGenNumerSignalDR03","",100,0,500);h_EtGenNumerSignalDR03->Sumw2();
  TH1F *h_EtGenNumerSignalDR04 = new TH1F("EtGenNumerSignalDR04","",100,0,500);h_EtGenNumerSignalDR04->Sumw2();
  TH1F *h_EtGenNumerBgroundDR03 = new TH1F("EtGenNumerBgroundDR03","",100,0,500);h_EtGenNumerBgroundDR03->Sumw2();
  TH1F *h_EtGenNumerBgroundDR04 = new TH1F("EtGenNumerBgroundDR04","",100,0,500);h_EtGenNumerBgroundDR04->Sumw2();
  TH1F *h_EtGenNumerSignalDR03RhoCorr = new TH1F("EtGenNumerSignalDR03RhoCorr","",100,0,500);h_EtGenNumerSignalDR03RhoCorr->Sumw2();
  TH1F *h_EtGenNumerSignalDR04RhoCorr = new TH1F("EtGenNumerSignalDR04RhoCorr","",100,0,500);h_EtGenNumerSignalDR04RhoCorr->Sumw2();
  TH1F *h_EtGenNumerBgroundDR03RhoCorr = new TH1F("EtGenNumerBgroundDR03RhoCorr","",100,0,500);h_EtGenNumerBgroundDR03RhoCorr->Sumw2();
  TH1F *h_EtGenNumerBgroundDR04RhoCorr = new TH1F("EtGenNumerBgroundDR04RhoCorr","",100,0,500);h_EtGenNumerBgroundDR04RhoCorr->Sumw2();
  TH2I *h_genPdgId = new TH2I("genPdgId","",300,0,300,4,0,4);
  TProfile *h_SigCombIsoDR03VsGenDR = new TProfile("SigCombIsoDR03VsGenDR","",32,0,4,"");h_SigCombIsoDR03VsGenDR->Sumw2();
  TProfile *h_SigCombIsoDR04VsGenDR = new TProfile("SigCombIsoDR04VsGenDR","",32,0,4,"");h_SigCombIsoDR04VsGenDR->Sumw2();

  TH1F *h_Pt = new TH1F("Pt","",400,0,2000);

  susy::Particle* genPart = new susy::Particle; genPart->Init();
  susy::Particle* genJet = new susy::Particle; genJet->Init();

 
  if(doRhoCorrection)cout<<"Applying Rho Pileup corrections!"<<endl;
  else cout<<"Applying NO Pileup corrections!"<<endl;
  
  // to check duplicated events
  //std::map<int, std::set<int> > allEvents;

  // start event looping
  Long64_t nbytes = 0, nb = 0;
  for (Long64_t jentry=0; jentry < processNEvents; jentry++) {

    if(printLevel>0) cout << "Get the tree contents." << endl;

    Long64_t ientry = LoadTree(jentry);
    if (ientry < 0) break;
    nb = fChain->GetEntry(jentry);   nbytes += nb;


    if(printLevel>0 || (printInterval > 0 && (jentry >= printInterval && jentry%printInterval == 0)) ) {
      cout << endl << int(jentry) << " events processed with Run:"
	   << event->runNumber << ", Event:" << event->eventNumber << endl;
    }


    if(printLevel>0) cout << "Initialize any global variables to be reset per event." << endl;

    InitializePerEvent();

    if(!event->isRealData &&jentry==0){
      cout<<"Neutralino Mass: " <<event->gridParams["mChi0"]<<endl;
      cout<<"Gluino Mass: " <<event->gridParams["mGluino"]<<endl;
      cout<<"Squark Mass: " <<event->gridParams["mSquark"]<<endl;
      cout<<"Cross Section: " <<event->gridParams["xsec"]<<endl;
      //cout<<"ptHat: " <<event->gridParams["ptHat"]<<endl;
    }
    //LumiWeight = (x-sec)(IntegratedLumi)/(# events)
    float LumiWeight = 1;
    
    //LumiWeight=(4.18E+07*5000./6094670.)*2.60E-04;        //30-40 double EM Enriched QCD
    //LumiWeight=(1.87E+07*5000./40287002.)*0.00233; //40 double EM Enriched QCD
    //LumiWeight=8.16E+08*5000./11000000; //15to30 
    //LumiWeight=5.31E+07*5000./6583068; //30to50 
    //LumiWeight=6360000.0*5000./6600000; //50to80 
    //LumiWeight=784000.0*5000./6589956; //80to120 
    //LumiWeight=115000.0*5000./6127528; //120to170 
    //LumiWeight=24300.0*5000./6220160; //170to300 
    //LumiWeight=1170.0*5000./6432669; //300to470 
    //LumiWeight=70.2*5000./3990085; //470to600 
    //LumiWeight=15.6*5000./4245695; //600to800 
    //LumiWeight=1.84*5000./4053888; //800to1000 
    //LumiWeight=0.332*5000./2093222; //1000to1400 
    //LumiWeight=0.0109*5000./2196200; //1400to1800
    //LumiWeight=3.58E-04*5000./293139; //1800 
    if(printLevel>0 && jentry%10000==0)cout<<"\nLumiWeight: "<<LumiWeight<<endl;
    //cout<<"\nisRealData: "<<event->isRealData<<endl;
  
    bool isRealData=event->isRealData;

    if(printLevel>0) cout << "Apply good run list." << endl;
    // uncomment this to use the Json file to flag good data (or bad depending on your outlook)  
    if(printLevel>0)cout<<"runNumber="<<event->runNumber<<"  lumiNumber="<<event->luminosityBlockNumber<<endl;
    if(useJSON){
      if(!isInJson(event->runNumber,event->luminosityBlockNumber)) continue;
    }
    // uncomment this to print all ntuple variables
    //Print(*event);
    /*
      if(printLevel>0) cout << "Check duplicated events for data only." << endl;
      if(isRealData){
      bool duplicateEvent = ! (allEvents[event->runNumber].insert(event->eventNumber)).second;
      if(duplicateEvent){
      cout<<"Duplicate Event! Run "<<event->runNumber<<" Event "<<event->eventNumber<<endl;
      continue;
      }
      }
    */
    nCnt[0]++; // total number of events    

    if(printLevel>0) cout << "Apply trigger selection in the event." << endl;
    bool passHLT = (useTrigger ? PassTriggers() : true);
    if(!passHLT )continue;//only accept events which pass our trigger(s)
    nCnt[1]++;// number of events that pass trigger

    if(printLevel>0) cout << "Find primary vertex in the event." << endl;
    TVector3* primVtx = 0;
    if(event->vertices.size() > 0) primVtx = &(event->vertices[0].position);

    //  Get NVertex and Rho for event
    int NVertex=0;
    for(std::vector<susy::Vertex>::iterator Vtx_it = event->vertices.begin(); Vtx_it<event->vertices.end(); Vtx_it++){
      if(    !Vtx_it->isFake() 
	     && Vtx_it->ndof>4 
	     && fabs(Vtx_it->position.z()<24.0) 
	     && sqrt(Vtx_it->position.x()*Vtx_it->position.x()+Vtx_it->position.y()*Vtx_it->position.y())<2.0 ) NVertex++;
    }
    float Rho = event->rho;

    //Require at least 1 good vertex
    if(NVertex<1){
      cout<<"No Good Vertex!!!!  Run: "<<event->runNumber<<"  Event: "<<event->eventNumber<<endl;
      continue;
    }

    if(printLevel>0) cout << "Select which met will be used in the event." << endl;
    
    std::map<TString, susy::MET>::iterator met_it = event->metMap.find("pfMet");
    if(met_it == event->metMap.end()) {
      cout << "MET map is not available!!!" << endl;
      continue;
    }
    susy::MET* met = &(met_it->second);
    if(printLevel>0) cout << "Find loose and tight photons in the event." << endl;
    //----------
    //find photons, sort by energy so that later we can just grab top two
    //----------
    std::map<TString, std::vector<susy::Photon> >::iterator phoMap = event->photons.find("photons");
    if(phoMap != event->photons.end()) {
      
      //   Need to sort Photons and select two with largest Pt.  
    
      //loop over photon collection 
      for(std::vector<susy::Photon>::iterator it_Pho = phoMap->second.begin(); it_Pho != phoMap->second.end(); it_Pho++) {
	if(printLevel>0) cout<<"looping over photon collection"<<endl;
	
	
	if(printLevel>0)cout<<"chargedHadronIso: "<<it_Pho->chargedHadronIso<<"  neutralHadronIso:"<<it_Pho->neutralHadronIso<<"  photonIso: "<<it_Pho->photonIso<<endl<<endl;
	//----------------set up cuts-------------------
	float ecalIsoDR03=it_Pho->ecalRecHitSumEtConeDR03;
	float hcalIsoDR03=it_Pho->hcalTowerSumEtConeDR03();
	float trackIsoDR03=it_Pho->trkSumPtHollowConeDR03;
	float ecalIsoDR04=it_Pho->ecalRecHitSumEtConeDR04;
	float hcalIsoDR04=it_Pho->hcalTowerSumEtConeDR04();
	float trackIsoDR04=it_Pho->trkSumPtHollowConeDR04;
	float PhoEt=it_Pho->momentum.Et();
	float chargedHadronIso=it_Pho->chargedHadronIso;
	float neutralHadronIso=it_Pho->neutralHadronIso;
	float photonIso=it_Pho->photonIso;
	float chargedHadronIsoDeposit=it_Pho->chargedHadronIsoDeposit;
	float neutralHadronIsoDeposit=it_Pho->neutralHadronIsoDeposit;
	float photonIsoDeposit=it_Pho->photonIsoDeposit;
	// fiducial cuts. Look for only barrel now
	bool etaCut = (std::abs(it_Pho->caloPosition.Eta()) < susy::etaGapBegin);
	
	// Spike cleaning
	bool isSpike = (it_Pho->r9 > 1.0);
	//if(isSpike) continue;
	
	// Et cuts, 30 GeV for trailing photons. Will apply tighter for the leading one.
	bool EtCut = (PhoEt > 30.0);
	// cuts containing EE cases for later use, but EE is not used for the time being.
	
	// H/E (in trigger, 0.15 for EB, 0.10 for EE)
	bool heCut = (it_Pho->hadronicOverEm < 0.05);
	bool heCutLoose = (it_Pho->hadronicOverEm < 0.1);
	// sigma_ietaieta (in trigger 0.014 for EB, 0.034 for EE)
	bool sIetaCut = (it_Pho->sigmaIetaIeta < 0.011);
	
	// Ecal Isolation
	bool ecalIsoCut = (ecalIsoDR04 < 4.2 + 0.006*PhoEt);
	bool ecalIsoCutdR03 = (ecalIsoDR03 < 4.2 + 0.006*PhoEt);
	bool ecalIsoCutRhoCorr = (ecalIsoDR04 - PUCorr_ECAL*Rho < 4.2 + 0.006*PhoEt);
	bool ecalIsoCutdR03RhoCorr = (ecalIsoDR03 - PUCorr_ECAL*Rho < 4.2 + 0.006*PhoEt);
	
	// Hcal Isolation
	bool hcalIsoCut = (hcalIsoDR04 < 2.2 + 0.0025*PhoEt);
	bool hcalIsoCutdR03 = (hcalIsoDR03 < 2.2 + 0.0025*PhoEt);
	bool hcalIsoCutRhoCorr  = (hcalIsoDR04 - PUCorr_HCAL*Rho < 2.2 + 0.0025*PhoEt);
	bool hcalIsoCutdR03RhoCorr  = (hcalIsoDR03 - PUCorr_HCAL*Rho < 2.2 + 0.0025*PhoEt);

	// Track Isolation
	bool trackIsoCut = (trackIsoDR04 < 2.0 + 0.001*PhoEt);
	bool trackIsoCutdR03 = (trackIsoDR03 < 2.0 + 0.001*PhoEt);
	bool trackIsoCutRhoCorr = (trackIsoDR04 - PUCorr_TRACK*Rho < 2.0 + 0.001*PhoEt);
	bool trackIsoCutdR03RhoCorr = (trackIsoDR03 - PUCorr_TRACK*Rho < 2.0 + 0.001*PhoEt);

	//Combined Isolation
	bool combIsoCutDR03 = ecalIsoDR03 + hcalIsoDR03 + trackIsoDR03 < 6.0;
	bool combIsoCutDR03RhoCorr = ecalIsoDR03 - PUCorr_ECAL*Rho + hcalIsoDR03 - PUCorr_HCAL*Rho + trackIsoDR03 < 6.0;

	//PF Isolation
	bool PfIsoCut = (chargedHadronIso+neutralHadronIso+photonIso)/PhoEt < 0.2;

	//hlt cuts	
	bool ecalIsoVLcut = ( ecalIsoDR03  < 6.0 + 0.012*PhoEt );
	bool hcalIsoVLcut = ( hcalIsoDR03 < 4.0 + 0.005*PhoEt );
	bool trackIsoVLcut = ( trackIsoDR03  < 4.0 + 0.002*PhoEt );
	bool IsoVLCut = ( ecalIsoVLcut && hcalIsoVLcut && trackIsoVLcut );
	bool CaloIdLCut = ( (it_Pho->hadronicOverEm < 0.15) && (it_Pho->sigmaIetaIeta < 0.014) );
	bool R9TriggerCut = (it_Pho->r9 > 0.8);

	//Pixel cut
	bool pixelCut = (it_Pho->nPixelSeeds==0);
	h_Pt->Fill(it_Pho->momentum.Pt(),LumiWeight);
	//dR03 cone study
	if(!/*event->*/isRealData){
	  if( etaCut && EtCut && !isSpike && heCut && sIetaCut && pixelCut && CaloIdLCut && (IsoVLCut || R9TriggerCut) ){
	    //h_Pt->Fill(it_Pho->momentum.Pt(),LumiWeight);
	    //loop over all genParticles and grab the nearest one to the photon
	    float nearestDR=999.;
	    float SmallestDR=999.;
	    float genJetDR=999.;
	    for(std::vector<susy::Particle>::iterator Part_it = event->genParticles.begin(); 
		Part_it != event->genParticles.end(); Part_it++){
	      if(Part_it->pdgId==1000022){
		h_genPdgId->Fill(299,Part_it->status);
	      }
	      else{
		h_genPdgId->Fill(fabs(Part_it->pdgId),Part_it->status);
	      }
	      if(getDR(it_Pho->caloPosition,Part_it->momentum)<nearestDR){
		nearestDR=getDR(it_Pho->caloPosition,Part_it->momentum);
		genPart=&*Part_it;
	      }
	    }	  
	    for(std::vector<susy::Particle>::iterator genJet_it = event->genParticles.begin(); 
		genJet_it != event->genParticles.end(); genJet_it++){
	      if(fabs(genJet_it->pdgId)<7 || fabs(genJet_it->pdgId)==21){
		if(getDR(it_Pho->caloPosition,genJet_it->momentum)<genJetDR){
		  genJetDR=getDR(it_Pho->caloPosition,genJet_it->momentum);
		  genJet=&*genJet_it;
		}
	      }
	    }
	    if(nearestDR<900){
	      if(genPart->pdgId==22/* && genPart->motherId==1000022 */){
		if(isSameObject(it_Pho->caloPosition,genPart->momentum,0.1)){
		  if(SmallestDR<90){
		    h_DrDenomSignal->Fill(SmallestDR);
		    h_EtDenomSignal->Fill(PhoEt);
		  }
		  h_HcalIsoDR03Nminus3Signal->Fill(hcalIsoDR03,/*1*/LumiWeight);
		  h_EcalIsoDR03Nminus3Signal->Fill(ecalIsoDR03,/*1*/LumiWeight);
		  h_TrackIsoDR03Nminus3Signal->Fill(trackIsoDR03,/*1*/LumiWeight);
		  h_SignalCombIsoDR03Nminus3->Fill(ecalIsoDR03+hcalIsoDR03+trackIsoDR03,/*1*/LumiWeight);
		  h_SignalCombIsoDR04Nminus3->Fill(ecalIsoDR04+hcalIsoDR04+trackIsoDR04,/*1*/LumiWeight);
		  h_SignalCombRelPFIsoDR03Nminus3->Fill((it_Pho->chargedHadronIso+it_Pho->neutralHadronIso+it_Pho->photonIso),LumiWeight);
		  h_chargedHadronIsoNminus3Signal->Fill(chargedHadronIso);
		  h_neutralHadronIsoNminus3Signal->Fill(neutralHadronIso);
		  h_photonIsoNminus3Signal->Fill(photonIso);
		  h_chargedHadronIsoDepositNminus3Signal->Fill(chargedHadronIsoDeposit);
		  h_neutralHadronIsoDepositNminus3Signal->Fill(neutralHadronIsoDeposit);
		  h_photonIsoDepositNminus3Signal->Fill(photonIsoDeposit);
		  h_PfCombinedIsoNminus3Signal->Fill(chargedHadronIso+neutralHadronIso+photonIso);
		  h_PfCombinedIsoDepositNminus3Signal->Fill(chargedHadronIsoDeposit+neutralHadronIsoDeposit+photonIsoDeposit);
		  if(genJetDR<900){
		    h_DrGenDenomSignal->Fill(genJetDR);
		    h_EtGenDenomSignal->Fill(PhoEt);  
		  }
		  if(ecalIsoCut && trackIsoCut){
		    h_HcalIsoDR03Nminus1Signal->Fill(hcalIsoDR03);
		    h_HcalIsoDR04Nminus1Signal->Fill(hcalIsoDR04);
		  }
		  if(hcalIsoCut && trackIsoCut){
		    h_EcalIsoDR03Nminus1Signal->Fill(ecalIsoDR03);
		    h_EcalIsoDR04Nminus1Signal->Fill(ecalIsoDR04);
		  }
		  if(ecalIsoCut && hcalIsoCut){
		    h_TrackIsoDR03Nminus1Signal->Fill(trackIsoDR03);
		    h_TrackIsoDR04Nminus1Signal->Fill(trackIsoDR04);
		  } 
		  if(SmallestDR<900 && ecalIsoCut && hcalIsoCut && trackIsoCut){
		    h_DrNumerSignalDR04->Fill(SmallestDR);
		    h_EtNumerSignalDR04->Fill(PhoEt);
		  }
		  if(SmallestDR<900 && ecalIsoCutdR03 && hcalIsoCutdR03 && trackIsoCutdR03){
		    h_DrNumerSignalDR03->Fill(SmallestDR);
		    h_EtNumerSignalDR03->Fill(PhoEt);
		  }
		  if(genJetDR<900 && ecalIsoCut && hcalIsoCut && trackIsoCut){
		    h_DrGenNumerSignalDR04->Fill(genJetDR);
		    h_EtGenNumerSignalDR04->Fill(PhoEt);
		    h_SigCombIsoDR03VsGenDR->Fill(genJetDR,trackIsoDR03+ecalIsoDR03+hcalIsoDR03);
		    h_SigCombIsoDR04VsGenDR->Fill(genJetDR,trackIsoDR04+ecalIsoDR04+hcalIsoDR04);
		  }
		  if(genJetDR<900 && ecalIsoCutdR03 && hcalIsoCutdR03 && trackIsoCutdR03){
		    h_DrGenNumerSignalDR03->Fill(genJetDR);
		    h_EtGenNumerSignalDR03->Fill(PhoEt);
		  }
		  //now Rho corrected
		  if(ecalIsoCutRhoCorr && trackIsoCutRhoCorr){
		    h_HcalIsoDR03Nminus1SignalRhoCorr->Fill(hcalIsoDR03);
		    h_HcalIsoDR04Nminus1SignalRhoCorr->Fill(hcalIsoDR04);
		  }
		  if(hcalIsoCutRhoCorr && trackIsoCutRhoCorr){
		    h_EcalIsoDR03Nminus1SignalRhoCorr->Fill(ecalIsoDR03);
		    h_EcalIsoDR04Nminus1SignalRhoCorr->Fill(ecalIsoDR04);
		  }
		  if(ecalIsoCutRhoCorr && hcalIsoCutRhoCorr){
		    h_TrackIsoDR03Nminus1SignalRhoCorr->Fill(trackIsoDR03);
		    h_TrackIsoDR04Nminus1SignalRhoCorr->Fill(trackIsoDR04);
		  } 
		  if(SmallestDR<900 && ecalIsoCutRhoCorr && hcalIsoCutRhoCorr && trackIsoCutRhoCorr){
		    h_DrNumerSignalDR04RhoCorr->Fill(SmallestDR);
		    h_EtNumerSignalDR04RhoCorr->Fill(PhoEt);
		  }
		  if(SmallestDR<900 && ecalIsoCutdR03RhoCorr && hcalIsoCutdR03RhoCorr && trackIsoCutdR03RhoCorr){
		    h_DrNumerSignalDR03RhoCorr->Fill(SmallestDR);
		    h_EtNumerSignalDR03RhoCorr->Fill(PhoEt);
		  }
		  if(genJetDR<900 && ecalIsoCutRhoCorr && hcalIsoCutRhoCorr && trackIsoCutRhoCorr){
		    h_DrGenNumerSignalDR04RhoCorr->Fill(genJetDR);
		    h_EtGenNumerSignalDR04RhoCorr->Fill(PhoEt);
		  }
		  if(genJetDR<900 && ecalIsoCutdR03RhoCorr && hcalIsoCutdR03RhoCorr && trackIsoCutdR03RhoCorr){
		    h_DrGenNumerSignalDR03RhoCorr->Fill(genJetDR);
		    h_EtGenNumerSignalDR03RhoCorr->Fill(PhoEt);
		  }
		}
	      }
	      
	      //now background
	      //cout<<"pdgId: "<<genPart->pdgId<<"\nstatus: "<<genPart->status<<"\nmotherId: "<<genPart->motherId<<endl<<endl;
	      if(genPart->pdgId!=22 && fabs(genPart->pdgId)!=11// && genPart->motherId>22/*genPart->motherId!=22 && fabs(genPart->motherId)!=21 && fabs(genPart->motherId)>=7*/ && genPart->motherId!=1000022/* || (genPart->pdgId==22 && (genPart->motherId<=6 || genPart->motherId==21))*/
		 ){
		if(isSameObject(it_Pho->caloPosition,genPart->momentum,0.1)){
		  float ptHatWeight=1./pow((event->gridParams["ptHat"]/15.),4.5);
		  if(SmallestDR<900){
		    h_DrDenomBground->Fill(SmallestDR,/*1*/LumiWeight);
		    h_EtDenomBground->Fill(PhoEt,/*1*/LumiWeight);
		  }
		  h_BgroundCombIsoDR03Nminus3->Fill(ecalIsoDR03+hcalIsoDR03+trackIsoDR03,/*1*/LumiWeight);
		  h_BgroundCombIsoDR04Nminus3->Fill(ecalIsoDR04+hcalIsoDR04+trackIsoDR04,/*1*/LumiWeight);
		  h_BgroundCombRelPFIsoDR03Nminus3->Fill((chargedHadronIso+neutralHadronIso+photonIso)/PhoEt,LumiWeight);
		  h_HcalIsoDR03Nminus3Bground->Fill(hcalIsoDR03,/*1*/LumiWeight);
		  h_EcalIsoDR03Nminus3Bground->Fill(ecalIsoDR03,/*1*/LumiWeight);
		  h_TrackIsoDR03Nminus3Bground->Fill(trackIsoDR03,/*1*/LumiWeight);
		  if(genJetDR<900){
		    h_DrGenDenomBground->Fill(genJetDR,/*1*/LumiWeight);
		    h_EtGenDenomBground->Fill(PhoEt,/*1*/LumiWeight);
		  }
		  if(ecalIsoCut && trackIsoCut){
		    h_HcalIsoDR03Nminus1Bground->Fill(hcalIsoDR03,/*1*/LumiWeight);
		    h_HcalIsoDR04Nminus1Bground->Fill(hcalIsoDR04,/*1*/LumiWeight);
		  }
		  if(hcalIsoCut && trackIsoCut){
		    h_EcalIsoDR03Nminus1Bground->Fill(ecalIsoDR03,/*1*/LumiWeight);
		    h_EcalIsoDR04Nminus1Bground->Fill(ecalIsoDR04,/*1*/LumiWeight);
		  }
		  if(ecalIsoCut && hcalIsoCut){
		    h_TrackIsoDR03Nminus1Bground->Fill(trackIsoDR03,/*1*/LumiWeight);
		    h_TrackIsoDR04Nminus1Bground->Fill(trackIsoDR04,/*1*/LumiWeight);
		  } 
		  
		  if(SmallestDR<900 && ecalIsoCut && hcalIsoCut && trackIsoCut){
		    h_DrNumerBgroundDR04->Fill(SmallestDR,/*1*/LumiWeight);
		    h_EtNumerBgroundDR04->Fill(PhoEt,/*1*/LumiWeight);
		  }
		  if(SmallestDR<900 && ecalIsoCutdR03 && hcalIsoCutdR03 && trackIsoCutdR03){
		    h_DrNumerBgroundDR03->Fill(SmallestDR,/*1*/LumiWeight);
		    h_EtNumerBgroundDR03->Fill(PhoEt,/*1*/LumiWeight);
		  }
		  if(genJetDR<900 && ecalIsoCut && hcalIsoCut && trackIsoCut){
		    h_DrGenNumerBgroundDR04->Fill(genJetDR,/*1*/LumiWeight);
		    h_EtGenNumerBgroundDR04->Fill(PhoEt,/*1*/LumiWeight);
		  }
		  if(genJetDR<900 && ecalIsoCutdR03 && hcalIsoCutdR03 && trackIsoCutdR03){
		    h_DrGenNumerBgroundDR03->Fill(genJetDR,/*1*/LumiWeight);
		    h_EtGenNumerBgroundDR03->Fill(PhoEt,/*1*/LumiWeight);
		  }
		  //now Rho corrected 
		  if(ecalIsoCutRhoCorr && trackIsoCutRhoCorr){
		    h_HcalIsoDR03Nminus1BgroundRhoCorr->Fill(hcalIsoDR03,/*1*/LumiWeight);
		    h_HcalIsoDR04Nminus1BgroundRhoCorr->Fill(hcalIsoDR04,/*1*/LumiWeight);
		  }
		  if(hcalIsoCutRhoCorr && trackIsoCutRhoCorr){
		    h_EcalIsoDR03Nminus1BgroundRhoCorr->Fill(ecalIsoDR03,/*1*/LumiWeight);
		    h_EcalIsoDR04Nminus1BgroundRhoCorr->Fill(ecalIsoDR04,/*1*/LumiWeight);
		  }
		  if(ecalIsoCutRhoCorr && hcalIsoCutRhoCorr){
		    h_TrackIsoDR03Nminus1BgroundRhoCorr->Fill(trackIsoDR03,/*1*/LumiWeight);
		    h_TrackIsoDR04Nminus1BgroundRhoCorr->Fill(trackIsoDR04,/*1*/LumiWeight);
		  } 
		  
		  if(SmallestDR<900 && ecalIsoCutRhoCorr && hcalIsoCutRhoCorr && trackIsoCutRhoCorr){
		    h_DrNumerBgroundDR04RhoCorr->Fill(SmallestDR,/*1*/LumiWeight);
		    h_EtNumerBgroundDR04RhoCorr->Fill(PhoEt,/*1*/LumiWeight);
		  }
		  if(SmallestDR<900 && ecalIsoCutdR03RhoCorr && hcalIsoCutdR03RhoCorr && trackIsoCutdR03RhoCorr){
		    h_DrNumerBgroundDR03RhoCorr->Fill(SmallestDR,/*1*/LumiWeight);
		    h_EtNumerBgroundDR03RhoCorr->Fill(PhoEt,/*1*/LumiWeight);
		  }
		  if(genJetDR<900 && ecalIsoCutRhoCorr && hcalIsoCutRhoCorr && trackIsoCutRhoCorr){
		    h_DrGenNumerBgroundDR04RhoCorr->Fill(genJetDR,/*1*/LumiWeight);
		    h_EtGenNumerBgroundDR04RhoCorr->Fill(PhoEt,/*1*/LumiWeight);
		  }
		  if(genJetDR<900 && ecalIsoCutdR03RhoCorr && hcalIsoCutdR03RhoCorr && trackIsoCutdR03RhoCorr){
		    h_DrGenNumerBgroundDR03RhoCorr->Fill(genJetDR,/*1*/LumiWeight);
		    h_EtGenNumerBgroundDR03RhoCorr->Fill(PhoEt,/*1*/LumiWeight);
		  }
		}
	      }//end bground
	    }//end if nearestDR<90
	  }
	}//end !isRealData
	
	if(/*event->*/isRealData){
	  if( etaCut && EtCut && !isSpike && heCut && sIetaCut && pixelCut/* && CaloIdLCut && (IsoVLCut || R9TriggerCut)*/ ){
	    if(met->met()<30){
	      h_BgroundCombIsoDR03Nminus3->Fill(ecalIsoDR03+hcalIsoDR03+trackIsoDR03);
	      h_BgroundCombIsoDR04Nminus3->Fill(ecalIsoDR04+hcalIsoDR04+trackIsoDR04);
	      h_chargedHadronIsoNminus3Bground->Fill(chargedHadronIso);
	      h_neutralHadronIsoNminus3Bground->Fill(neutralHadronIso);
	      h_photonIsoNminus3Bground->Fill(photonIso);
	      h_chargedHadronIsoDepositNminus3Bground->Fill(chargedHadronIsoDeposit);
	      h_neutralHadronIsoDepositNminus3Bground->Fill(neutralHadronIsoDeposit);
	      h_photonIsoDepositNminus3Bground->Fill(photonIsoDeposit);
	      h_PfCombinedIsoNminus3Bground->Fill(chargedHadronIso+neutralHadronIso+photonIso);
	      h_PfCombinedIsoDepositNminus3Bground->Fill(chargedHadronIsoDeposit+neutralHadronIsoDeposit+photonIsoDeposit);
	    }
	    h_EcalIsoDR03Nminus3->Fill(ecalIsoDR03);
	    h_HcalIsoDR03Nminus3->Fill(hcalIsoDR03);
	    h_TrackIsoDR03Nminus3->Fill(trackIsoDR03);
	    h_PfCombinedIsoNminus3->Fill(chargedHadronIso+neutralHadronIso+photonIso);
	    h_PfCombinedIsoDepositNminus3->Fill(chargedHadronIsoDeposit+neutralHadronIsoDeposit+photonIsoDeposit);
	    //	  h_dRphoJetNminus3->Fill(getDR());
	    if(ecalIsoCut && trackIsoCut){
	      h_HcalIsoDR03Nminus1->Fill(hcalIsoDR03);
	      h_HcalIsoDR04Nminus1->Fill(hcalIsoDR04);
	      if(met->met()<30){
		h_BgroundHcalIsoDR03Nminus1->Fill(hcalIsoDR03);
	      }
	    }
	    if(hcalIsoCut && trackIsoCut){
	      h_EcalIsoDR03Nminus1->Fill(ecalIsoDR03);
	      h_EcalIsoDR04Nminus1->Fill(ecalIsoDR04);
	      if(met->met()<30){
		h_BgroundEcalIsoDR03Nminus1->Fill(ecalIsoDR03);
	      }
	    }
	    if(ecalIsoCut && hcalIsoCut){
	      h_TrackIsoDR03Nminus1->Fill(trackIsoDR03);
	      h_TrackIsoDR04Nminus1->Fill(trackIsoDR04);
	      if(met->met()<30){
		h_BgroundTrackIsoDR03Nminus1->Fill(trackIsoDR03);
	      }
	    }
	  }
	}
	
	if(printLevel>0) cout<<"End of Photon Loop"<<endl;
	
      }//for(it_Pho)
      
    }//if phoMap!=end (after phoMap def)

    //}//end diff check
  }// for jentry
 
  TH1F *h_DrSigEffDr04 = new TH1F("DrSigEffDr04","",64,0,4);
  h_DrSigEffDr04->Divide(h_DrNumerSignalDR04,h_DrDenomSignal,1,1,"B");
  TH1F *h_DrSigEffDr03 = new TH1F("DrSigEffDr03","",64,0,4);
  h_DrSigEffDr03->Divide(h_DrNumerSignalDR03,h_DrDenomSignal,1,1,"B");
  TH1F *h_DrGenSigEffDr04 = new TH1F("DrGenSigEffDr04","",64,0,4);
  h_DrGenSigEffDr04->Divide(h_DrGenNumerSignalDR04,h_DrGenDenomSignal,1,1,"B");
  TH1F *h_DrGenSigEffDr03 = new TH1F("DrGenSigEffDr03","",64,0,4);
  h_DrGenSigEffDr03->Divide(h_DrGenNumerSignalDR03,h_DrGenDenomSignal,1,1,"B");
  TH1F *h_DrBackEffDr04 = new TH1F("DrBackEffDr04","",64,0,4);
  h_DrBackEffDr04->Divide(h_DrNumerBgroundDR04,h_DrDenomBground,1,1,"B");
  TH1F *h_DrBackEffDr03 = new TH1F("DrBackEffDr03","",64,0,4);
  h_DrBackEffDr03->Divide(h_DrNumerBgroundDR03,h_DrGenDenomBground,1,1,"B");
  TH1F *h_DrGenBackEffDr04 = new TH1F("DrGenBackEffDr04","",64,0,4);
  h_DrGenBackEffDr04->Divide(h_DrGenNumerBgroundDR04,h_DrGenDenomBground,1,1,"B");
  TH1F *h_DrGenBackEffDr03 = new TH1F("DrGenBackEffDr03","",64,0,4);
  h_DrGenBackEffDr03->Divide(h_DrGenNumerBgroundDR03,h_DrGenDenomBground,1,1,"B");
  TH1F *h_EtSigEffDr04 = new TH1F("EtSigEffDr04","",100,0,500);
  h_EtSigEffDr04->Divide(h_EtNumerSignalDR04,h_EtDenomSignal,1,1,"B");
  TH1F *h_EtSigEffDr03 = new TH1F("EtSigEffDr03","",100,0,500);
  h_EtSigEffDr03->Divide(h_EtNumerSignalDR03,h_EtDenomSignal,1,1,"B");
  TH1F *h_EtGenSigEffDr04 = new TH1F("EtGenSigEffDr04","",100,0,500);
  h_EtGenSigEffDr04->Divide(h_EtGenNumerSignalDR04,h_EtGenDenomSignal,1,1,"B");
  TH1F *h_EtGenSigEffDr03 = new TH1F("EtGenSigEffDr03","",100,0,500);
  h_EtGenSigEffDr03->Divide(h_EtGenNumerSignalDR03,h_EtGenDenomSignal,1,1,"B");
  TH1F *h_EtBackEffDr04 = new TH1F("EtBackEffDr04","",100,0,500);
  h_EtBackEffDr04->Divide(h_EtNumerBgroundDR04,h_EtDenomBground,1,1,"B");
  TH1F *h_EtBackEffDr03 = new TH1F("EtBackEffDr03","",100,0,500);
  h_EtBackEffDr03->Divide(h_EtNumerBgroundDR03,h_EtDenomBground,1,1,"B");
  TH1F *h_EtGenBackEffDr04 = new TH1F("EtGenBackEffDr04","",100,0,500);
  h_EtGenBackEffDr04->Divide(h_EtGenNumerBgroundDR04,h_EtGenDenomBground,1,1,"B");
  TH1F *h_EtGenBackEffDr03 = new TH1F("EtGenBackEffDr03","",100,0,500);
  h_EtGenBackEffDr03->Divide(h_EtGenNumerBgroundDR03,h_EtGenDenomBground,1,1,"B");
  //now Rho corrected
  TH1F *h_DrSigEffDr04RhoCorr = new TH1F("DrSigEffDr04RhoCorr","",64,0,4);
  h_DrSigEffDr04RhoCorr->Divide(h_DrNumerSignalDR04RhoCorr,h_DrDenomSignal,1,1,"B");
  TH1F *h_DrSigEffDr03RhoCorr = new TH1F("DrSigEffDr03RhoCorr","",64,0,4);
  h_DrSigEffDr03RhoCorr->Divide(h_DrNumerSignalDR03RhoCorr,h_DrDenomSignal,1,1,"B");
  TH1F *h_DrGenSigEffDr04RhoCorr = new TH1F("DrGenSigEffDr04RhoCorr","",64,0,4);
  h_DrGenSigEffDr04RhoCorr->Divide(h_DrGenNumerSignalDR04RhoCorr,h_DrGenDenomSignal,1,1,"B");
  TH1F *h_DrGenSigEffDr03RhoCorr = new TH1F("DrGenSigEffDr03RhoCorr","",64,0,4);
  h_DrGenSigEffDr03RhoCorr->Divide(h_DrGenNumerSignalDR03RhoCorr,h_DrGenDenomSignal,1,1,"B");
  TH1F *h_DrBackEffDr04RhoCorr = new TH1F("DrBackEffDr04RhoCorr","",64,0,4);
  h_DrBackEffDr04RhoCorr->Divide(h_DrNumerBgroundDR04RhoCorr,h_DrDenomBground,1,1,"B");
  TH1F *h_DrBackEffDr03RhoCorr = new TH1F("DrBackEffDr03RhoCorr","",64,0,4);
  h_DrBackEffDr03RhoCorr->Divide(h_DrNumerBgroundDR03RhoCorr,h_DrGenDenomBground,1,1,"B");
  TH1F *h_DrGenBackEffDr04RhoCorr = new TH1F("DrGenBackEffDr04RhoCorr","",64,0,4);
  h_DrGenBackEffDr04RhoCorr->Divide(h_DrGenNumerBgroundDR04RhoCorr,h_DrGenDenomBground,1,1,"B");
  TH1F *h_DrGenBackEffDr03RhoCorr = new TH1F("DrGenBackEffDr03RhoCorr","",64,0,4);
  h_DrGenBackEffDr03RhoCorr->Divide(h_DrGenNumerBgroundDR03RhoCorr,h_DrGenDenomBground,1,1,"B");
  TH1F *h_EtSigEffDr04RhoCorr = new TH1F("EtSigEffDr04RhoCorr","",100,0,500);
  h_EtSigEffDr04RhoCorr->Divide(h_EtNumerSignalDR04RhoCorr,h_EtDenomSignal,1,1,"B");
  TH1F *h_EtSigEffDr03RhoCorr = new TH1F("EtSigEffDr03RhoCorr","",100,0,500);
  h_EtSigEffDr03RhoCorr->Divide(h_EtNumerSignalDR03RhoCorr,h_EtDenomSignal,1,1,"B");
  TH1F *h_EtGenSigEffDr04RhoCorr = new TH1F("EtGenSigEffDr04RhoCorr","",100,0,500);
  h_EtGenSigEffDr04RhoCorr->Divide(h_EtGenNumerSignalDR04RhoCorr,h_EtGenDenomSignal,1,1,"B");
  TH1F *h_EtGenSigEffDr03RhoCorr = new TH1F("EtGenSigEffDr03RhoCorr","",100,0,500);
  h_EtGenSigEffDr03RhoCorr->Divide(h_EtGenNumerSignalDR03RhoCorr,h_EtGenDenomSignal,1,1,"B");
  TH1F *h_EtBackEffDr04RhoCorr = new TH1F("EtBackEffDr04RhoCorr","",100,0,500);
  h_EtBackEffDr04RhoCorr->Divide(h_EtNumerBgroundDR04RhoCorr,h_EtDenomBground,1,1,"B");
  TH1F *h_EtBackEffDr03RhoCorr = new TH1F("EtBackEffDr03RhoCorr","",100,0,500);
  h_EtBackEffDr03RhoCorr->Divide(h_EtNumerBgroundDR03RhoCorr,h_EtDenomBground,1,1,"B");
  TH1F *h_EtGenBackEffDr04RhoCorr = new TH1F("EtGenBackEffDr04RhoCorr","",100,0,500);
  h_EtGenBackEffDr04RhoCorr->Divide(h_EtGenNumerBgroundDR04RhoCorr,h_EtGenDenomBground,1,1,"B");
  TH1F *h_EtGenBackEffDr03RhoCorr = new TH1F("EtGenBackEffDr03RhoCorr","",100,0,500);
  h_EtGenBackEffDr03RhoCorr->Divide(h_EtGenNumerBgroundDR03RhoCorr,h_EtGenDenomBground,1,1,"B");

  cout << " ----------------- Job Summary ----------------- " << endl;
  cout << " Total events            : " << nCnt[0] << " (" << 100*(float)nCnt[0]/float(nCnt[0]) << "%)" << endl;
  cout << " HLT passed              : " << nCnt[1] << " (" << 100*(float)nCnt[1]/float(nCnt[0]) << "%)" << endl;
 
  cout<<"Writing root output to: /data/ndpc3/b/dmorse/RA3/AnalysisOutput/hist_"<<ds<<".root"<<endl;
  //cout<<"Writing root output to: /Users/dmorse/RA3/AnalysisOutput/hist_"<<ds<<".root"<<endl;

  // close the output file

  fout->cd();
  fout->Write();
  fout->Close();
  delete fout;

}

//---------------------------------------------
//       PILEUP!!!!!!
//---------------------------------------------

void SusyEventAnalyzer::Pileup() {
  
  if (fChain == 0) return;

  Long64_t nentries = fChain->GetEntries();

  cout << "total events in files  : " << nentries << endl;

  if(processNEvents <= 0 || processNEvents > nentries) processNEvents = nentries;

  cout << "events to be processed : " << processNEvents << endl; 
  


  if(printLevel>0) cout << "Initialize event counters." << endl;
  const int NCNT = 20;
  int nCnt[NCNT];
  for(int i=0; i<NCNT; i++) nCnt[i] = 0;
  int ne=0,n2e=0,n3e=0;

  // open hist file and define histograms

  TFile* fout = new TFile("/data/ndpc3/b/dmorse/RA3/AnalysisOutput/Pileup/cms525v3_jec2012/hist_"+ds+".root","RECREATE");
  //TFile* fout = new TFile("hist_"+ds+".root","RECREATE");
  //TFile* fout = new TFile("/Users/dmorse/RA3/AnalysisOutput/hist_"+ds+".root","RECREATE");

  fout->cd();

  ofstream EventWriteOut;
 
  //--------------------Pileup studies--------
  TH1F* h_rho = new TH1F("rho","Fastjet correction rho for all events that pass JSON, HLT",150,0,150);h_rho->Sumw2(); 
  TH1F* h_rho25 = new TH1F("rho25","Fastjet correction rho25 for all events that pass JSON, HLT",150,0,150);h_rho25->Sumw2();
  TH1F* h_rhoB = new TH1F("rhoB","Fastjet correction rho with Rho_EtaMax=1.4442 for all events that pass JSON, HLT",150,0,150);h_rhoB->Sumw2();
  TH2F* h_NvertexVsRho25 = new TH2F("NvertexVsRho25","Number of good Vertices vs. FastJet rho for all events that pass JSON, HLT;rho;nVertex",50,0,50,50,0,50);h_NvertexVsRho25->Sumw2();
  TH2F* h_NvertexVsRhoB = new TH2F("NvertexVsRhoB","Number of good Vertices vs. FastJet rho with Rho_EtaMax=1.4442 for all events that pass JSON, HLT;nVertex;rho",50,0,50,50,0,50);h_NvertexVsRhoB->Sumw2();
  //------------
  TH2F* h_HOverEVsRho25 = new TH2F("HOverEVsRho25","H/E of barrel photons VS Rho after Et, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;Rho (Et/ unit area);h/E",50,0,50,41,-.05,.2);h_HOverEVsRho25->Sumw2(); 
  TH2F* h_HOverEVsRhoB = new TH2F("HOverEVsRhoB","H/E of barrel photons VS RhoB after Et, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;RhoB (Et/ unit area);h/E",50,0,50,41,-.05,.2);h_HOverEVsRhoB->Sumw2(); 
  TH2F* h_HOverEVsNVertex = new TH2F("HOverEVsNVertex","H/E of barrel photons VS NVertex after Et, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;NVertex ;h/E",50,0,50,41,-.05,.2);h_HOverEVsNVertex->Sumw2();

  TH2F* h_EcalIsoVsRho25DR03 = new TH2F("EcalIsoVsRho25DR03","Ecal Isolation of barrel photons VS Rho after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR03",50,0,50,2700,-40,500);h_EcalIsoVsRho25DR03->Sumw2();
  TH2F* h_HcalIsoVsRho25DR03 = new TH2F("HcalIsoVsRho25DR03"," Hcal Isolation of barrel photons VS Rho after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;Rho (Et/ unit area);hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsRho25DR03->Sumw2();
  TH2F* h_TrackIsoVsRho25DR03 = new TH2F("TrackIsoVsRho25DR03"," Tracker Isolation of barrel photons VS Rho after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;Rho (Et/ unit area);trkSumPtHollowConeDR03",50,0,50,2025,-5,400); h_TrackIsoVsRho25DR03->Sumw2();
  TH2F* h_CombIsoVsRho25DR03 = new TH2F("CombIsoVsRho25DR03"," Combined Isolation of barrel photons VS Rho after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR03+hcalTowerSumEtConeDR03+trkSumPtHollowConeDR03",50,0,50,5200,-40,1000);h_CombIsoVsRho25DR03->Sumw2();


  TH2F* h_chargedHadronIsoVsRho25_ee = new TH2F("chargedHadronIsoVsRho25_ee","chargedHadron Isolation of barrel photons VS Rho25 after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;Rho (E_{T}/ unit area);chargedHadronIso",50,0,50,2700,-40,500);h_chargedHadronIsoVsRho25_ee->Sumw2();
  TH2F* h_neutralHadronIsoVsRho25_ee = new TH2F("neutralHadronIsoVsRho25_ee","neutralHadron Isolation of barrel photons VS Rho25 after E_{T}, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;Rho (E_{T}/ unit area);neutralHadronIso",50,0,50,2700,-40,500);h_neutralHadronIsoVsRho25_ee->Sumw2();
  TH2F* h_photonIsoVsRho25_ee = new TH2F("photonIsoVsRho25_ee","photon Isolation of barrel photons VS Rho25 after E_{T}, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;Rho25 (E_{T}/ unit area);photonIso",50,0,50,2700,-40,500);h_photonIsoVsRho25_ee->Sumw2();
  TH2F* h_PfCombIsoVsRho25_ee = new TH2F("PfCombIsoVsRho25_ee","PfComb Isolation of barrel photons VS Rho25 after E_{T}, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;Rho25 (E_{T}/ unit area);PfCombIso",50,0,50,2700,-40,500);h_PfCombIsoVsRho25_ee->Sumw2();

  //single pho
  TH2F* h_EcalIsoVsRho25DR03_SinglePho = new TH2F("EcalIsoVsRho25DR03_SinglePho","Ecal Isolation of barrel photons VS Rho after Et, h/e, eta, r9<1.0, sIetaIeta<0.011, pixel=0 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR03",50,0,50,2700,-40,500);h_EcalIsoVsRho25DR03_SinglePho->Sumw2();
  TH2F* h_HcalIsoVsRho25DR03_SinglePho = new TH2F("HcalIsoVsRho25DR03_SinglePho"," Hcal Isolation of barrel photons VS Rho after Et, h/e, eta, r9<1.0, sIetaIeta<0.011, pixel=0 cuts;Rho (Et/ unit area);hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsRho25DR03_SinglePho->Sumw2();
  TH2F* h_TrackIsoVsRho25DR03_SinglePho = new TH2F("TrackIsoVsRho25DR03_SinglePho"," Tracker Isolation of barrel photons VS Rho after Et, h/e, eta, r9<1.0, sIetaIeta<0.011, pixel=0 cuts;Rho (Et/ unit area);trkSumPtHollowConeDR03_SinglePho",50,0,50,2025,-5,400); h_TrackIsoVsRho25DR03_SinglePho->Sumw2();
  TH2F* h_CombIsoVsRho25DR03_SinglePho = new TH2F("CombIsoVsRho25DR03_SinglePho"," Combined Isolation of barrel photons VS Rho after Et, h/e, eta, r9<1.0, sIetaIeta<0.011, pixel=0 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR03+hcalTowerSumEtConeDR03+trkSumPtHollowConeDR03",50,0,50,5200,-40,1000);h_CombIsoVsRho25DR03_SinglePho->Sumw2();
  TH2F* h_EcalIsoVsRhoBDR03_SinglePho = new TH2F("EcalIsoVsRhoBDR03_SinglePho","Ecal Isolation of barrel photons VS RhoB after Et, h/e, eta, r9<1.0, sIetaIeta<0.011, pixel=0 cuts;RhoB (Et/ unit area);ecalRecHitSumEtConeDR03",50,0,50,2700,-40,500);h_EcalIsoVsRhoBDR03_SinglePho->Sumw2();
  TH2F* h_HcalIsoVsRhoBDR03_SinglePho = new TH2F("HcalIsoVsRhoBDR03_SinglePho"," Hcal Isolation of barrel photons VS RhoB after Et, h/e, eta, r9<1.0, sIetaIeta<0.011, pixel=0 cuts;RhoB (Et/ unit area);hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsRhoBDR03_SinglePho->Sumw2();
  TH2F* h_TrackIsoVsRhoBDR03_SinglePho = new TH2F("TrackIsoVsRhoBDR03_SinglePho"," Tracker Isolation of barrel photons VS RhoB after Et, h/e, eta, r9<1.0, sIetaIeta<0.011, pixel=0 cuts;RhoB (Et/ unit area);trkSumPtHollowConeDR03_SinglePho",50,0,50,2025,-5,400); h_TrackIsoVsRhoBDR03_SinglePho->Sumw2();
  TH2F* h_CombIsoVsRhoBDR03_SinglePho = new TH2F("CombIsoVsRhoBDR03_SinglePho"," Combined Isolation of barrel photons VS RhoB after Et, h/e, eta, r9<1.0, sIetaIeta<0.011, pixel=0 cuts;RhoB (Et/ unit area);ecalRecHitSumEtConeDR03+hcalTowerSumEtConeDR03+trkSumPtHollowConeDR03",50,0,50,5200,-40,1000);h_CombIsoVsRhoBDR03_SinglePho->Sumw2();

  TH2F* h_EcalIsoVsRho25DR04 = new TH2F("EcalIsoVsRho25DR04","Ecal Isolation of barrel photons VS Rho after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR04",50,0,50,2700,-40,500);h_EcalIsoVsRho25DR04->Sumw2();
  TH2F* h_HcalIsoVsRho25DR04 = new TH2F("HcalIsoVsRho25DR04"," Hcal Isolation of barrel photons VS Rho after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;Rho (Et/ unit area);hcalTowerSumEtConeDR04",50,0,50,1525,-5,300);h_HcalIsoVsRho25DR04->Sumw2();
  TH2F* h_TrackIsoVsRho25DR04 = new TH2F("TrackIsoVsRho25DR04"," Tracker Isolation of barrel photons VS Rho after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;Rho (Et/ unit area);trkSumPtHollowConeDR04",50,0,50,2025,-5,400); h_TrackIsoVsRho25DR04->Sumw2();
  TH2F* h_CombIsoVsRho25DR04 = new TH2F("CombIsoVsRho25DR04"," Combined Isolation of barrel photons VS Rho after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR04+hcalTowerSumEtConeDR04+trkSumPtHollowConeDR04",50,0,50,5200,-40,1000);h_CombIsoVsRho25DR04->Sumw2();

  TH2F* h_EcalIsoVsRhoBDR03 = new TH2F("EcalIsoVsRhoBDR03","Ecal Isolation of barrel photons VS RhoB after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;RhoB (Et/ unit area);ecalRecHitSumEtConeDR03",50,0,50,2700,-40,500);h_EcalIsoVsRhoBDR03->Sumw2();
  TH2F* h_HcalIsoVsRhoBDR03 = new TH2F("HcalIsoVsRhoBDR03"," Hcal Isolation of barrel photons VS RhoB after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;RhoB (Et/ unit area);hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsRhoBDR03->Sumw2();
  TH2F* h_TrackIsoVsRhoBDR03 = new TH2F("TrackIsoVsRhoBDR03"," Tracker Isolation of barrel photons VS RhoB after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;RhoB (Et/ unit area);trkSumPtHollowConeDR03",50,0,50,2025,-5,400); h_TrackIsoVsRhoBDR03->Sumw2();
  TH2F* h_CombIsoVsRhoBDR03 = new TH2F("CombIsoVsRhoBDR03"," Combined Isolation of barrel photons VS RhoB after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;RhoB (Et/ unit area);ecalRecHitSumEtConeDR03+hcalTowerSumEtConeDR03+trkSumPtHollowConeDR03",50,0,50,5200,-40,1000);h_CombIsoVsRhoBDR03->Sumw2();

  TH2F* h_EcalIsoVsRhoBDR04 = new TH2F("EcalIsoVsRhoBDR04","Ecal Isolation of barrel photons VS RhoB after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;RhoB (Et/ unit area);ecalRecHitSumEtConeDR04",50,0,50,2700,-40,500);h_EcalIsoVsRhoBDR04->Sumw2();
  TH2F* h_HcalIsoVsRhoBDR04 = new TH2F("HcalIsoVsRhoBDR04"," Hcal Isolation of barrel photons VS RhoB after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;RhoB (Et/ unit area);hcalTowerSumEtConeDR04",50,0,50,1525,-5,300);h_HcalIsoVsRhoBDR04->Sumw2();
  TH2F* h_TrackIsoVsRhoBDR04 = new TH2F("TrackIsoVsRhoBDR04"," Tracker Isolation of barrel photons VS RhoB after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;RhoB (Et/ unit area);trkSumPtHollowConeDR04",50,0,50,2025,-5,400); h_TrackIsoVsRhoBDR04->Sumw2();
  TH2F* h_CombIsoVsRhoBDR04 = new TH2F("CombIsoVsRhoBDR04"," Combined Isolation of barrel photons VS RhoB after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;RhoB (Et/ unit area);ecalRecHitSumEtConeDR04+hcalTowerSumEtConeDR04+trkSumPtHollowConeDR04",50,0,50,5200,-40,1000);h_CombIsoVsRhoBDR04->Sumw2();

  TH2F* h_EcalIsoVsNVertexDR03 = new TH2F("EcalIsoVsNVertexDR03","Ecal Isolation of barrel photons VS NVertex after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;NVertex ;ecalRecHitSumEtConeDR03",50,0,50,2700,-40,500);h_EcalIsoVsNVertexDR03->Sumw2();
  TH2F* h_HcalIsoVsNVertexDR03 = new TH2F("HcalIsoVsNVertexDR03"," Hcal Isolation of barrel photons VS NVertex after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;NVertex ;hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsNVertexDR03->Sumw2();
  TH2F* h_TrackIsoVsNVertexDR03 = new TH2F("TrackIsoVsNVertexDR03"," Tracker Isolation of barrel photons VS NVertex after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;NVertex ;trkSumPtHollowConeDR03",50,0,50,2025,-5,400); h_TrackIsoVsNVertexDR03->Sumw2();
  TH2F* h_CombIsoVsNVertexDR03 = new TH2F("CombIsoVsNVertexDR03"," Combined Isolation of barrel photons VS NVertex after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;NVertex ;ecalRecHitSumEtConeDR03+hcalTowerSumEtConeDR03+trkSumPtHollowConeDR03",50,0,50,5200,-40,1000);h_CombIsoVsNVertexDR03->Sumw2();

  TH2F* h_EcalIsoVsNVertexDR04 = new TH2F("EcalIsoVsNVertexDR04","Ecal Isolation of barrel photons VS NVertex after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;NVertex ;ecalRecHitSumEtConeDR04",50,0,50,2700,-40,500);h_EcalIsoVsNVertexDR04->Sumw2();
  TH2F* h_HcalIsoVsNVertexDR04 = new TH2F("HcalIsoVsNVertexDR04"," Hcal Isolation of barrel photons VS NVertex after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;NVertex ;hcalTowerSumEtConeDR04",50,0,50,1525,-5,300);h_HcalIsoVsNVertexDR04->Sumw2();
  TH2F* h_TrackIsoVsNVertexDR04 = new TH2F("TrackIsoVsNVertexDR04"," Tracker Isolation of barrel photons VS NVertex after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;NVertex ;trkSumPtHollowConeDR04",50,0,50,2025,-5,400); h_TrackIsoVsNVertexDR04->Sumw2();
  TH2F* h_CombIsoVsNVertexDR04 = new TH2F("CombIsoVsNVertexDR04"," Combined Isolation of barrel photons VS NVertex after Et, h/e, eta, r9<.98, CaloIdL, CaloIsoVL||R9>.8 cuts;NVertex ;ecalRecHitSumEtConeDR04+hcalTowerSumEtConeDR04+trkSumPtHollowConeDR04",50,0,50,5200,-40,1000);h_CombIsoVsNVertexDR04->Sumw2();

  TH2F* h_HcalIsoVsEcalIsoDR03 = new TH2F("HcalIsoVsHcalIsoDR03"," Hcal Isolation VS Ecal Isolation of barrel photons after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;ecalRecHitSumEtConeDR03;hcalTowerSumEtConeDR03",3250,-50,600,1525,-5,300);h_HcalIsoVsEcalIsoDR03->Sumw2();
  TH2F* h_TrackIsoVsEcalIsoDR03 = new TH2F("TrackIsoVsEcalIsoDR03"," Track Isolation VS Ecal Isolation of barrel photons after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;ecalRecHitSumEtConeDR03;trkSumPtHollowConeDR03",3250,-50,600,1525,-5,300);h_TrackIsoVsEcalIsoDR03->Sumw2();
  TH2F* h_TrackIsoVsHcalIsoDR03 = new TH2F("TrackIsoVsHcalIsoDR03"," Track Isolation VS Hcal Isolation of barrel photons after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;hcalTowerSumEtConeDR03;trkSumPtHollowConeDR03",3250,-50,600,1525,-5,300);h_TrackIsoVsHcalIsoDR03->Sumw2();
  
  TH2F* h_EcalIsoVsRho25DR03_lt6NV = new TH2F("EcalIsoVsRho25DR03_lt6NV","Ecal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts in events with 1<NVertex<=5;Rho (Et/ unit area);ecalRecHitSumEtConeDR03",50,0,50,3250,-50,600);h_EcalIsoVsRho25DR03_lt6NV->Sumw2();
  TH2F* h_HcalIsoVsRho25DR03_lt6NV = new TH2F("HcalIsoVsRho25DR03_lt6NV"," Hcal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts in events with 1<NVertex<=5;Rho (Et/ unit area);hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsRho25DR03_lt6NV->Sumw2();
  TH2F* h_EcalIsoVsRho25DR03_6to10NV = new TH2F("EcalIsoVsRho25DR03_6to10NV","Ecal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts in events with 6<NVertex<=10;Rho (Et/ unit area);ecalRecHitSumEtConeDR03",50,0,50,3250,-50,600);h_EcalIsoVsRho25DR03_6to10NV->Sumw2();
  TH2F* h_HcalIsoVsRho25DR03_6to10NV = new TH2F("HcalIsoVsRho25DR03_6to10NV"," Hcal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts in events with 6<NVertex<=10;Rho (Et/ unit area);hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsRho25DR03_6to10NV->Sumw2();
  TH2F* h_EcalIsoVsRho25DR03_11to15NV = new TH2F("EcalIsoVsRho25DR03_11to15NV","Ecal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts in events with 11<NVertex<=15;Rho (Et/ unit area);ecalRecHitSumEtConeDR03",50,0,50,3250,-50,600);h_EcalIsoVsRho25DR03_11to15NV->Sumw2();
  TH2F* h_HcalIsoVsRho25DR03_11to15NV = new TH2F("HcalIsoVsRho25DR03_11to15NV"," Hcal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts in events with 11<NVertex<=15;Rho (Et/ unit area);hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsRho25DR03_11to15NV->Sumw2();
  TH2F* h_EcalIsoVsRho25DR03_gt15NV = new TH2F("EcalIsoVsRho25DR03_gt15NV","Ecal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts in events with NVertex>15;Rho (Et/ unit area);ecalRecHitSumEtConeDR03",50,0,50,3250,-50,600);h_EcalIsoVsRho25DR03_gt15NV->Sumw2();
  TH2F* h_HcalIsoVsRho25DR03_gt15NV = new TH2F("HcalIsoVsRho25DR03_gt15NV"," Hcal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts in events with NVertex>15;Rho (Et/ unit area);hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsRho25DR03_gt15NV->Sumw2();
  


  TH2F* h_EcalIsoVsRho25DR03_ee = new TH2F("EcalIsoVsRho25DR03_ee","Ecal Isolation of barrel probe electron VS Rho25 after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR03",50,0,50,3250,-50,600);h_EcalIsoVsRho25DR03_ee->Sumw2();
  TH2F* h_HcalIsoVsRho25DR03_ee = new TH2F("HcalIsoVsRho25DR03_ee"," Hcal Isolation of barrel probe electron VS Rho25 after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsRho25DR03_ee->Sumw2();
  TH2F* h_TrackIsoVsRho25DR03_ee = new TH2F("TrackIsoVsRho25DR03_ee"," Tracker Isolation of barrel probe electron VS Rho25 after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);trkSumPtHollowConeDR03",50,0,50,3025,-5,600); h_TrackIsoVsRho25DR03_ee->Sumw2();
  TH2F* h_CombIsoVsRho25DR03_ee = new TH2F("CombIsoVsRho25DR03_ee"," Combined Isolation of barrel probe electron VS Rho25 after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR03+hcalTowerSumEtConeDR03+trkSumPtHollowConeDR03",50,0,50,6250,-50,1200);h_CombIsoVsRho25DR03_ee->Sumw2();
  TH2F* h_EcalIsoVsRho25DR04_ee = new TH2F("EcalIsoVsRho25DR04_ee","Ecal Isolation of barrel probe electron VS Rho25 after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR04",50,0,50,3250,-50,600);h_EcalIsoVsRho25DR04_ee->Sumw2();
  TH2F* h_HcalIsoVsRho25DR04_ee = new TH2F("HcalIsoVsRho25DR04_ee"," Hcal Isolation of barrel probe electron VS Rho25 after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);hcalTowerSumEtConeDR04",50,0,50,1525,-5,300);h_HcalIsoVsRho25DR04_ee->Sumw2();
  TH2F* h_TrackIsoVsRho25DR04_ee = new TH2F("TrackIsoVsRho25DR04_ee"," Tracker Isolation of barrel probe electron VS Rho25 after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);trkSumPtHollowConeDR04",50,0,50,3025,-5,600); h_TrackIsoVsRho25DR04_ee->Sumw2();
  TH2F* h_CombIsoVsRho25DR04_ee = new TH2F("CombIsoVsRho25DR04_ee"," Combined Isolation of barrel probe electron VS Rho25 after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR04+hcalTowerSumEtConeDR04+trkSumPtHollowConeDR04",50,0,50,6250,-50,1200);h_CombIsoVsRho25DR04_ee->Sumw2();
  TH2F* h_HOverEVsRho25_ee = new TH2F("HOverEVsRho25_ee","H/E of barrel probe electron VS Rho25 after Et, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);H/E",50,0,50,41,-.05,.2);h_HOverEVsRho25_ee->Sumw2(); 
  TH2F* h_HOverEAfterIsoVsRho25_ee = new TH2F("HOverEAfterIsoVsRho25_ee","H/E of barrel probe electron VS Rho25 after Et, r9<1.0, CaloIdL, IsoVL||R9>.8 CombIso<6 cuts;Rho (Et/ unit area);H/E",50,0,50,41,-.05,.2);h_HOverEAfterIsoVsRho25_ee->Sumw2(); 

  TH2F* h_EcalIsoVsRhoBDR03_ee = new TH2F("EcalIsoVsRhoBDR03_ee","Ecal Isolation of barrel probe electron VS RhoB after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;RhoB (Et/ unit area);ecalRecHitSumEtConeDR03",50,0,50,3250,-50,600);h_EcalIsoVsRhoBDR03_ee->Sumw2();
  TH2F* h_HcalIsoVsRhoBDR03_ee = new TH2F("HcalIsoVsRhoBDR03_ee"," Hcal Isolation of barrel probe electron VS RhoB after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;RhoB (Et/ unit area);hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsRhoBDR03_ee->Sumw2();
  TH2F* h_TrackIsoVsRhoBDR03_ee = new TH2F("TrackIsoVsRhoBDR03_ee"," Tracker Isolation of barrel probe electron VS RhoB after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;RhoB (Et/ unit area);trkSumPtHollowConeDR03",50,0,50,3025,-5,600); h_TrackIsoVsRhoBDR03_ee->Sumw2();
  TH2F* h_CombIsoVsRhoBDR03_ee = new TH2F("CombIsoVsRhoBDR03_ee"," Combined Isolation of barrel probe electron VS RhoB after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;RhoB (Et/ unit area);ecalRecHitSumEtConeDR03+hcalTowerSumEtConeDR03+trkSumPtHollowConeDR03",50,0,50,6250,-50,1200);h_CombIsoVsRhoBDR03_ee->Sumw2();
  

  TH2F* h_EcalIsoVsRho25DR03_Pt0to40 = new TH2F("EcalIsoVsRho25DR03_Pt0to40","Ecal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR03",50,0,50,3250,-50,600);h_EcalIsoVsRho25DR03_Pt0to40->Sumw2();
  TH2F* h_HcalIsoVsRho25DR03_Pt0to40 = new TH2F("HcalIsoVsRho25DR03_Pt0to40"," Hcal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsRho25DR03_Pt0to40->Sumw2();
  TH2F* h_TrackIsoVsRho25DR03_Pt0to40 = new TH2F("TrackIsoVsRho25DR03_Pt0to40"," Tracker Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);trkSumPtHollowConeDR03",50,0,50,3025,-5,600); h_TrackIsoVsRho25DR03_Pt0to40->Sumw2();
  TH2F* h_CombIsoVsRho25DR03_Pt0to40 = new TH2F("CombIsoVsRho25DR03_Pt0to40"," Combined Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR03+hcalTowerSumEtConeDR03+trkSumPtHollowConeDR03",50,0,50,6250,-50,1200);h_CombIsoVsRho25DR03_Pt0to40->Sumw2();
  TH2F* h_EcalIsoVsRho25DR03_Pt40to50= new TH2F("EcalIsoVsRho25DR03_Pt40to50","Ecal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR03",50,0,50,3250,-50,600);h_EcalIsoVsRho25DR03_Pt40to50->Sumw2();
  TH2F* h_HcalIsoVsRho25DR03_Pt40to50= new TH2F("HcalIsoVsRho25DR03_Pt40to50"," Hcal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsRho25DR03_Pt40to50->Sumw2();
  TH2F* h_TrackIsoVsRho25DR03_Pt40to50= new TH2F("TrackIsoVsRho25DR03_Pt40to50"," Tracker Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);trkSumPtHollowConeDR03",50,0,50,3025,-5,600); h_TrackIsoVsRho25DR03_Pt40to50->Sumw2();
  TH2F* h_CombIsoVsRho25DR03_Pt40to50= new TH2F("CombIsoVsRho25DR03_Pt40to50"," Combined Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR03+hcalTowerSumEtConeDR03+trkSumPtHollowConeDR03",50,0,50,6250,-50,1200);h_CombIsoVsRho25DR03_Pt40to50->Sumw2();
  TH2F* h_EcalIsoVsRho25DR03_Pt50toINF= new TH2F("EcalIsoVsRho25DR03_Pt50toINF","Ecal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR03",50,0,50,3250,-50,600);h_EcalIsoVsRho25DR03_Pt50toINF->Sumw2();
  TH2F* h_HcalIsoVsRho25DR03_Pt50toINF= new TH2F("HcalIsoVsRho25DR03_Pt50toINF"," Hcal Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);hcalTowerSumEtConeDR03",50,0,50,1525,-5,300);h_HcalIsoVsRho25DR03_Pt50toINF->Sumw2();
  TH2F* h_TrackIsoVsRho25DR03_Pt50toINF= new TH2F("TrackIsoVsRho25DR03_Pt50toINF"," Tracker Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);trkSumPtHollowConeDR03",50,0,50,3025,-5,600); h_TrackIsoVsRho25DR03_Pt50toINF->Sumw2();
  TH2F* h_CombIsoVsRho25DR03_Pt50toINF= new TH2F("CombIsoVsRho25DR03_Pt50toINF"," Combined Isolation of barrel photons VS Rho after Et, h/e, r9<1.0, CaloIdL, IsoVL||R9>.8 cuts;Rho (Et/ unit area);ecalRecHitSumEtConeDR03+hcalTowerSumEtConeDR03+trkSumPtHollowConeDR03",50,0,50,6250,-50,1200);h_CombIsoVsRho25DR03_Pt50toINF->Sumw2();
  

  bool doSinglePhoton=false;


 
  if(doRhoCorrection)cout<<"Applying Rho Pileup corrections!"<<endl;
  else cout<<"Applying No Pileup corrections!"<<endl;

  // to check duplicated events
  std::map<int, std::set<int> > allEvents;

  // start event looping
  Long64_t nbytes = 0, nb = 0;
  for (Long64_t jentry=0; jentry < processNEvents; jentry++) {

    if(printLevel>0) cout << "Get the tree contents." << endl;

    // if( (int)(((float)jentry/processNEvents)*100)%10==0 )cout << (int)(((float)jentry/processNEvents)*100) << " percent done..." << endl;

    Long64_t ientry = LoadTree(jentry);
    if (ientry < 0) break;
    nb = fChain->GetEntry(jentry);   nbytes += nb;


    if(printLevel>0 || (printInterval > 0 && (jentry >= printInterval && jentry%printInterval == 0)) ) {
      cout <</* endl <<*/ int(jentry) << " events processed with Run:"
	   << event->runNumber << ", Event:" << event->eventNumber << endl;
    }


    if(printLevel>0) cout << "Initialize any global variables to be reset per event." << endl;

    InitializePerEvent();

    nCnt[0]++; // total number of events    

    if(printLevel>0) cout << "Apply good run list." << endl;
    // uncomment this to use the Json file to flag good data (or bad depending on your outlook)  
    if(printLevel>0)cout<<"runNumber="<<event->runNumber<<"  lumiNumber="<<event->luminosityBlockNumber<<endl;
    if(useJSON){
      if(!isInJson(event->runNumber,event->luminosityBlockNumber)) continue;
    }
    // uncomment this to print all ntuple variables
    //Print(*event);
    
    if(printLevel>0) cout << "Check duplicated events for data only." << endl;
    if(event->isRealData){
      bool duplicateEvent = ! (allEvents[event->runNumber].insert(event->eventNumber)).second;
      if(duplicateEvent){
	cout<<"Duplicate Event! Run "<<event->runNumber<<" Event "<<event->eventNumber<<endl;
	continue;
      }
    }
    
    nCnt[1]++; // total number of events passing Json 

    if(printLevel>0) cout << "Apply trigger selection in the event." << endl;
    bool passHLT = (useTrigger ? PassTriggers() : true);
    if(!passHLT )continue;//only accept events which pass our trigger(s)
    nCnt[2]++;// number of events that pass trigger
   
    //  Get NVertex and Rho for event
    int NVertex=0;
    for(std::vector<susy::Vertex>::iterator Vtx_it = event->vertices.begin(); Vtx_it<event->vertices.end(); Vtx_it++){
      if(    !Vtx_it->isFake() 
	     && Vtx_it->ndof>4 
	     && fabs(Vtx_it->position.z()<24.0) 
	     && sqrt(Vtx_it->position.x()*Vtx_it->position.x()+Vtx_it->position.y()*Vtx_it->position.y())<2.0 ) NVertex++;
    }
    float Rho = event->rho;float RhoB = event->rhoBarrel;float Rho25 = event->rho25;
    //cout<<"RhoB="<<RhoB<<endl;
   
    //Require at least 1 good vertex
    if(NVertex<1){
      cout<<"No Good Vertex!!!!  Run: "<<event->runNumber<<"  Event: "<<event->eventNumber<<endl;
      continue;
    }
    nCnt[3]++;// number of events that pass NVertex

    h_rho->Fill(Rho);h_rhoB->Fill(RhoB); h_rho25->Fill(Rho25);
    h_NvertexVsRho25->Fill(Rho25,NVertex);
    h_NvertexVsRhoB->Fill(RhoB,NVertex);

    if(printLevel>0) cout << "Find loose and tight photons in the event." << endl;

    std::map<TString, std::vector<susy::Photon> >::iterator phoMap = event->photons.find("photons");
    if(phoMap != event->photons.end()) {
    
      //loop over photon collection 
      for(std::vector<susy::Photon>::iterator it_Pho = phoMap->second.begin(); it_Pho != phoMap->second.end(); it_Pho++) {
	if(printLevel>0) cout<<"looping over photon collection"<<endl;

	//grab photon quantities
	float ecalIsoDR03 = it_Pho->ecalRecHitSumEtConeDR03;
	float hcalIsoDR03 = it_Pho->hcalTowerSumEtConeDR03();
	float trackIsoDR03 = it_Pho->trkSumPtHollowConeDR03;
	float combIsoDR03 = ecalIsoDR03 + hcalIsoDR03 + trackIsoDR03;

	float ecalIsoDR04 = it_Pho->ecalRecHitSumEtConeDR04;
	float hcalIsoDR04 = it_Pho->hcalTowerSumEtConeDR04();
	float trackIsoDR04 = it_Pho->trkSumPtHollowConeDR04;
	float combIsoDR04 = ecalIsoDR04 + hcalIsoDR04 + trackIsoDR04;

	float chargedHadronIso=it_Pho->chargedHadronIso;
	float neutralHadronIso=it_Pho->neutralHadronIso;
	float photonIso=it_Pho->photonIso;
	float PfCombIso = chargedHadronIso + neutralHadronIso + photonIso;

	float eta = std::abs(it_Pho->caloPosition.Eta());
	float hadOverEM = it_Pho->hadTowOverEm;
	float Et = it_Pho->momentum.Et();
	float R9 = it_Pho->r9;
	float sIetaIeta = it_Pho->sigmaIetaIeta;
	float sIphiIphi = it_Pho->sigmaIphiIphi;
	float Pt = it_Pho->momentum.Pt();
	float nPixel = it_Pho->nPixelSeeds;



	//----------------set up cuts-------------------
	// fiducial cuts. Look for only barrel now
	if(eta > susy::etaGapBegin && !doSinglePhoton) continue;
	nCnt[4]++;// number of photons that pass barrel eta cut

	// Spike cleaning
	//h_r9->Fill(it_Pho->r9);
	bool isSpike = (R9 > 1.0 || sIetaIeta<0.001 || sIphiIphi<0.001);
	if(isSpike && !doSinglePhoton) continue;
	nCnt[5]++;// number of photons that pass spike cut
	//h_SeedTime_afterR9->Fill(it_Pho->seedTime);
	//h_SeedTimeVSE_afterR9->Fill(it_Pho->seedTime,it_Pho->momentum.E());

	// Et cuts, 25 GeV for trailing photons. Will apply tighter for the leading one.
	if(Et < 25.0 && !doSinglePhoton) continue;
	nCnt[6]++;// number of photons that pass momentum cut
	// cuts containing EE cases for later use, but EE is not used for the time being.

	// H/E (in trigger, 0.15 for EB, 0.10 for EE)
	bool heCut = hadOverEM < 0.05 ;
	//if(!heCut)continue;
	//nCnt[7]++;// number of photons that pass  heCut

	//hlt cuts
	bool ecalIsoVLcut = ( ecalIsoDR03 < 6.0 + 0.012*Et );
	bool hcalIsoVLcut = ( hcalIsoDR03 < 4.0 + 0.005*Et );
	bool trackIsoVLcut = ( trackIsoDR03  < 4.0 + 0.002*Et   );
	bool IsoVLCut = ( ecalIsoVLcut && hcalIsoVLcut && trackIsoVLcut);
	bool CaloIdLCut = ( (hadOverEM < 0.15) && (sIetaIeta < 0.014) );
	bool R9TriggerCut = R9 > 0.8;

	bool combIsoCut = (ecalIsoDR03 + hcalIsoDR03 + trackIsoDR03)<6.0;
	bool EleTagCut = (sIetaIeta<0.011) && (nPixel>0) && heCut && combIsoCut;

	bool SinglePhoCut = ( Et>80 &&
			      eta <1.4 &&
			      nPixel==0 &&
			      R9<1.0 &&
			      //combIsoDR03<6.0 &&
			      sIetaIeta<0.011 &&
			      hadOverEM<0.05 &&
			      ( PassTrigger("HLT_Photon70_CaloIdL_HT300_v") ||
				PassTrigger("HLT_Photon70_CaloIdL_HT400_v") ||
				PassTrigger("HLT_Photon70_CaloIdXL_HT400_v")
				)
			      );
	  
	//if(!CaloIdLCut && !doSinglePhoton)continue;
	nCnt[7]++;// number of photons that pass CaloIdL cut

	//if(!IsoVLCut && !R9TriggerCut && !doSinglePhoton)continue;
	nCnt[8]++;// number of photons that pass IsoVL or R9 cut

	//fill vertex and rho h/e plots
	//h_AvgHOverEVsNVertex->Fill(NVertex,hadOverEM);
	//h_AvgHOverEVsRho25->Fill(Rho,hadOverEM);
	h_HOverEVsRho25->Fill(Rho25,hadOverEM);
	h_HOverEVsRhoB->Fill(RhoB,hadOverEM);
	h_HOverEVsNVertex->Fill(NVertex,hadOverEM);
	/*
	  if(AtLeastOnePFJet){
	  h_AvgHOverEVsNVertex_JetReq->Fill(NVertex,hadOverEM);
	  h_AvgHOverEVsRho25_JetReq->Fill(Rho,hadOverEM);
	  }
	*/
	// Fill the rest of the plots
	if(!heCut && !doSinglePhoton)continue;
	nCnt[9]++;// number of photons that pass  heCut
	/*  h_Rho_VS_NVertex_afterHE->Fill(NVertex,Rho);
	    h_Rho_VS_NVertex_Prof_afterHE->Fill(NVertex,Rho);*/
	//DR03 cone study
	/*	  h_EcalIsoDR03->Fill(ecalIsoDR03);
	  h_HcalIsoDR03->Fill(hcalIsoDR03);
	  h_TrackIsoDR03->Fill(trackIsoDR03);*/
	//pileup dependence
	/*
	  h_AvgEcalIsoVsNVertexDR04->Fill(NVertex,ecalIsoDR04);
	  h_AvgHcalIsoVsNVertexDR04->Fill(NVertex,hcalIsoDR04);
	  h_AvgTrackIsoVsNVertexDR04->Fill(NVertex,trackIsoDR04);
	  h_AvgEcalIsoVsRho25DR04->Fill(Rho,ecalIsoDR04);
	  h_AvgHcalIsoVsRho25DR04->Fill(Rho,hcalIsoDR04);
	  h_AvgTrackIsoVsRho25DR04->Fill(Rho,trackIsoDR04);
	  h_AvgEcalIsoVsRho25DR03->Fill(Rho,ecalIsoDR03);
	  h_AvgHcalIsoVsRho25DR03->Fill(Rho,hcalIsoDR03);
	  h_AvgTrackIsoVsRho25DR03->Fill(Rho,trackIsoDR03);
	  h_AvgCombIsoVsRho25DR03->Fill(Rho,combIsoDR03);
	  h_AvgCombIsoVsRho25DR04->Fill(Rho,combIsoDR04);*/

	if(doSinglePhoton && SinglePhoCut){
	  h_EcalIsoVsRho25DR03_SinglePho->Fill(Rho25,ecalIsoDR03);
	  h_HcalIsoVsRho25DR03_SinglePho->Fill(Rho25,hcalIsoDR03);
	  h_TrackIsoVsRho25DR03_SinglePho->Fill(Rho25,trackIsoDR03);
	  h_CombIsoVsRho25DR03_SinglePho->Fill(Rho25,combIsoDR03);
	  h_EcalIsoVsRhoBDR03_SinglePho->Fill(RhoB,ecalIsoDR03);
	  h_HcalIsoVsRhoBDR03_SinglePho->Fill(RhoB,hcalIsoDR03);
	  h_TrackIsoVsRhoBDR03_SinglePho->Fill(RhoB,trackIsoDR03);
	  h_CombIsoVsRhoBDR03_SinglePho->Fill(RhoB,combIsoDR03);
	}
	
	h_EcalIsoVsRho25DR03->Fill(Rho25,ecalIsoDR03);
	h_HcalIsoVsRho25DR03->Fill(Rho25,hcalIsoDR03);
	h_TrackIsoVsRho25DR03->Fill(Rho25,trackIsoDR03);
	h_CombIsoVsRho25DR03->Fill(Rho25,combIsoDR03);
	
	h_EcalIsoVsRho25DR04->Fill(Rho25,ecalIsoDR04);
	h_HcalIsoVsRho25DR04->Fill(Rho25,hcalIsoDR04);
	h_TrackIsoVsRho25DR04->Fill(Rho25,trackIsoDR04);
	h_CombIsoVsRho25DR04->Fill(Rho25,combIsoDR04);

	h_EcalIsoVsRhoBDR03->Fill(RhoB,ecalIsoDR03);
	h_HcalIsoVsRhoBDR03->Fill(RhoB,hcalIsoDR03);
	h_TrackIsoVsRhoBDR03->Fill(RhoB,trackIsoDR03);
	h_CombIsoVsRhoBDR03->Fill(RhoB,combIsoDR03);
	
	h_EcalIsoVsRhoBDR04->Fill(RhoB,ecalIsoDR04);
	h_HcalIsoVsRhoBDR04->Fill(RhoB,hcalIsoDR04);
	h_TrackIsoVsRhoBDR04->Fill(RhoB,trackIsoDR04);
	h_CombIsoVsRhoBDR04->Fill(RhoB,combIsoDR04);

	h_EcalIsoVsNVertexDR03->Fill(NVertex,ecalIsoDR03);
	h_HcalIsoVsNVertexDR03->Fill(NVertex,hcalIsoDR03);
	h_TrackIsoVsNVertexDR03->Fill(NVertex,trackIsoDR03);
	h_CombIsoVsNVertexDR03->Fill(NVertex,combIsoDR03);
	
	h_EcalIsoVsNVertexDR04->Fill(NVertex,ecalIsoDR04);
	h_HcalIsoVsNVertexDR04->Fill(NVertex,hcalIsoDR04);
	h_TrackIsoVsNVertexDR04->Fill(NVertex,trackIsoDR04);
	h_CombIsoVsNVertexDR04->Fill(NVertex,combIsoDR04);

	h_HcalIsoVsEcalIsoDR03->Fill(ecalIsoDR03,hcalIsoDR03);
	h_TrackIsoVsEcalIsoDR03->Fill(ecalIsoDR03,trackIsoDR03);
	h_TrackIsoVsHcalIsoDR03->Fill(hcalIsoDR03,trackIsoDR03);
	
	if(NVertex<=5){
	  h_EcalIsoVsRho25DR03_lt6NV->Fill(Rho25,ecalIsoDR03);
	  h_HcalIsoVsRho25DR03_lt6NV->Fill(Rho25,hcalIsoDR03);
	}
	if(NVertex>5  && NVertex<=10){
	  h_EcalIsoVsRho25DR03_6to10NV->Fill(Rho25,ecalIsoDR03);
	  h_HcalIsoVsRho25DR03_6to10NV->Fill(Rho25,hcalIsoDR03);
	}
	if(NVertex>10  && NVertex <=15){
	  h_EcalIsoVsRho25DR03_11to15NV->Fill(Rho25,ecalIsoDR03);
	  h_HcalIsoVsRho25DR03_11to15NV->Fill(Rho25,hcalIsoDR03);
	} 
	if(NVertex>15){
	  h_EcalIsoVsRho25DR03_gt15NV->Fill(Rho25,ecalIsoDR03);
	  h_HcalIsoVsRho25DR03_gt15NV->Fill(Rho25,hcalIsoDR03);
	}

	if(Pt<40){
	  h_EcalIsoVsRho25DR03_Pt0to40->Fill(Rho25,ecalIsoDR03);
	  h_HcalIsoVsRho25DR03_Pt0to40->Fill(Rho25,hcalIsoDR03);
	  h_TrackIsoVsRho25DR03_Pt0to40->Fill(Rho25,trackIsoDR03);
	  h_CombIsoVsRho25DR03_Pt0to40->Fill(Rho25,combIsoDR03);
	}
	if(Pt>=40 && Pt<50){
	  h_EcalIsoVsRho25DR03_Pt40to50->Fill(Rho25,ecalIsoDR03);
	  h_HcalIsoVsRho25DR03_Pt40to50->Fill(Rho25,hcalIsoDR03);
	  h_TrackIsoVsRho25DR03_Pt40to50->Fill(Rho25,trackIsoDR03);
	  h_CombIsoVsRho25DR03_Pt40to50->Fill(Rho25,combIsoDR03);
	}
	if(Pt>=50){
	  h_EcalIsoVsRho25DR03_Pt50toINF->Fill(Rho25,ecalIsoDR03);
	  h_HcalIsoVsRho25DR03_Pt50toINF->Fill(Rho25,hcalIsoDR03);
	  h_TrackIsoVsRho25DR03_Pt50toINF->Fill(Rho25,trackIsoDR03);
	  h_CombIsoVsRho25DR03_Pt50toINF->Fill(Rho25,combIsoDR03);
	}
	  
	ne=0;
	if(EleTagCut){
	  for(std::vector<susy::Photon>::iterator it_Ele = phoMap->second.begin(); it_Ele != phoMap->second.end(); it_Ele++) {
	    if(!isSameObject(it_Pho->caloPosition,it_Ele->caloPosition,0.1)){
	      if(InvariantMass((&*it_Pho)->momentum,(&*it_Ele)->momentum)>81 && InvariantMass((&*it_Pho)->momentum,(&*it_Ele)->momentum)<101){
		if(//Make sure other Electron passes base cuts:
		   std::abs(it_Ele->caloPosition.Eta())<susy::etaGapBegin &&
		   it_Ele->r9<1.0 &&
		   it_Ele->sigmaIetaIeta<0.014 &&
		   it_Ele->nPixelSeeds>0 &&
		   it_Ele->momentum.Et()>25/* &&
					      (it_Ele->r9>0.8 || 
					      (it_Ele->ecalRecHitSumEtConeDR03  < 6.0 + 0.012*it_Ele->momentum.Et() &&
					      it_Ele->hcalTowerSumEtConeDR03() < 4.0 + 0.005*it_Ele->momentum.Et() &&
					      it_Ele->trkSumPtHollowConeDR03   < 4.0 + 0.002*it_Ele->momentum.Et() 
					      )
					      )*/
		   ){
		  h_HOverEVsRho25_ee->Fill(Rho25,it_Ele->hadronicOverEm);
		  if(it_Ele->ecalRecHitSumEtConeDR03+it_Ele->hcalTowerSumEtConeDR03()+it_Ele->trkSumPtHollowConeDR03-(PUCorr_ECAL+PUCorr_HCAL+PUCorr_TRACK)*Rho25<6.0)h_HOverEAfterIsoVsRho25_ee->Fill(Rho25,it_Ele->hadronicOverEm);
		  if(it_Ele->hadronicOverEm<0.05){
		    ne++;
		    h_EcalIsoVsRho25DR03_ee->Fill(Rho25,it_Ele->ecalRecHitSumEtConeDR03);
		    h_HcalIsoVsRho25DR03_ee->Fill(Rho25,it_Ele->hcalTowerSumEtConeDR03());
		    h_TrackIsoVsRho25DR03_ee->Fill(Rho25,it_Ele->trkSumPtHollowConeDR03);
		    h_CombIsoVsRho25DR03_ee->Fill(Rho25,it_Ele->ecalRecHitSumEtConeDR03+it_Ele->hcalTowerSumEtConeDR03()+it_Ele->trkSumPtHollowConeDR03);
		    h_EcalIsoVsRhoBDR03_ee->Fill(RhoB,it_Ele->ecalRecHitSumEtConeDR03);
		    h_HcalIsoVsRhoBDR03_ee->Fill(RhoB,it_Ele->hcalTowerSumEtConeDR03());
		    h_TrackIsoVsRhoBDR03_ee->Fill(RhoB,it_Ele->trkSumPtHollowConeDR03);
		    h_CombIsoVsRhoBDR03_ee->Fill(RhoB,it_Ele->ecalRecHitSumEtConeDR03+it_Ele->hcalTowerSumEtConeDR03()+it_Ele->trkSumPtHollowConeDR03);
		    h_EcalIsoVsRho25DR04_ee->Fill(Rho25,it_Ele->ecalRecHitSumEtConeDR04);
		    h_HcalIsoVsRho25DR04_ee->Fill(Rho25,it_Ele->hcalTowerSumEtConeDR04());
		    h_TrackIsoVsRho25DR04_ee->Fill(Rho25,it_Ele->trkSumPtHollowConeDR04);
		    h_CombIsoVsRho25DR04_ee->Fill(Rho25,it_Ele->ecalRecHitSumEtConeDR04+it_Ele->hcalTowerSumEtConeDR04()+it_Ele->trkSumPtHollowConeDR04);
		    h_chargedHadronIsoVsRho25_ee->Fill(Rho25,it_Ele->chargedHadronIso);
		    h_neutralHadronIsoVsRho25_ee->Fill(Rho25,it_Ele->neutralHadronIso);
		    h_photonIsoVsRho25_ee->Fill(Rho25,it_Ele->photonIso);
		    h_PfCombIsoVsRho25_ee->Fill(Rho25,(it_Ele->chargedHadronIso+it_Ele->neutralHadronIso+it_Ele->photonIso));
		  }
		}
	      }
	    }
	  }   
	}
	if(ne>0)n2e++;
	if(ne>1)n3e++;

	if(printLevel>0) cout<<"End of Photon Loop"<<endl;
	  
      }//for(it_Pho)
      
    }//if phoMap!=end (after phoMap def)
  
  } // for jentry
  
  
  cout << "---ALL DONE!------"<<endl;
  cout << " ----------------- Job Summary ----------------- " << endl;
  cout << " Total events               : " << nCnt[0] << " (" << 100*(float)nCnt[0]/float(nCnt[0]) << "%)" << endl;
  cout << " JSON events passed         : " << nCnt[1] << " (" << 100*(float)nCnt[1]/float(nCnt[0]) << "%)" << endl;
  cout << " HLT events passed          : " << nCnt[2] << " (" << 100*(float)nCnt[2]/float(nCnt[0]) << "%)" << endl;
  cout << " nVertex events passed      : " << nCnt[3] << " (" << 100*(float)nCnt[3]/float(nCnt[0]) << "%)" << endl;
  cout << " Barrel eta photons passed  : " << nCnt[4] /*<< " (" << 100*(float)nCnt[4]/float(nCnt[0]) << "%)"*/ << endl;
  cout << " !isSpike photons passed    : " << nCnt[5] << " (" << 100*(float)nCnt[5]/float(nCnt[4]) << "%)" << endl;
  cout << " Et>25 photons passed       : " << nCnt[6] << " (" << 100*(float)nCnt[6]/float(nCnt[4]) << "%)" << endl;
  //cout << " CaloIdLCut photons passed  : " << nCnt[7] << " (" << 100*(float)nCnt[7]/float(nCnt[4]) << "%)" << endl;
  //cout << " IsoVL or R9 photons passed : " << nCnt[8] << " (" << 100*(float)nCnt[8]/float(nCnt[4]) << "%)" << endl;
  cout << " heCut photons passed       : " << nCnt[9] << " (" << 100*(float)nCnt[9]/float(nCnt[4]) << "%)" << endl;
 
  cout << " ----------------------------------------------- " << endl;

  cout<<"Writing root output to: /data/ndpc3/b/dmorse/RA3/AnalysisOutput/Pileup/cms525v3_jec2012/hist_"<<ds<<".root"<<endl;
  //cout<<"Writing root output to: /Users/dmorse/RA3/AnalysisOutput/hist_"<<ds<<".root"<<endl;

  // close the output file

  fout->cd();
  fout->Write();
  fout->Close();
  delete fout;

}
    

void SusyEventAnalyzer::PhotonId() {
  
  if (fChain == 0) return;

  Long64_t nentries = fChain->GetEntries();

  cout << "total events in files  : " << nentries << endl;

  if(processNEvents <= 0 || processNEvents > nentries) processNEvents = nentries;

  cout << "events to be processed : " << processNEvents << endl; 
  


  if(printLevel>0) cout << "Initialize event counters." << endl;
  const int NCNT = 20;
  int nCnt[NCNT];
  for(int i=0; i<NCNT; i++) nCnt[i] = 0;

  // open hist file and define histograms

  TFile* fout = new TFile("/data/ndpc3/b/dmorse/RA3/AnalysisOutput/PhotonId/hist_"+ds+".root","RECREATE");

  TCanvas *c1 = new TCanvas("c1","c1",800,600);
  c1->Divide(2);
  c1->cd(1)->SetPad(0.,.36,1.,1.);
  c1->cd(2)->SetPad(0.,0.,1.,.36);
  fout->cd();
  int NumBins=38;
  double EtBins[39]={0.};
  for(int i=0;i<39;i++){
    if(i<=20)EtBins[i]=i*10;//0-200
    if(i>20 && i<=30)EtBins[i]=i*20-200;//200-400
    if(i>30 && i<=33)EtBins[i]=i*50-1100;//400-600
    if(i>33)EtBins[i]=i*100-2800;//600-1000
  }

  TH1F* h_Pho_Et = new TH1F("Pho_Et","E_{T} of all reco::photon's;E_{T} (GeV);Events",100,0.,1000.);  

  TH1F* h_Pho_Et_Truth = new TH1F("Pho_Et_Truth","E_{T} of reco::photon dR matched to genPhoton;E_{T} (GeV);Events",100,0.,1000.);
  TH1F* h_Pho_Eta_Truth = new TH1F("Pho_Eta_Truth","#eta of reco::photon dR matched to genPhoton;#eta;Events",20,-2.,2.);
  TH1F* h_Pho_Phi_Truth = new TH1F("Pho_Phi_Truth","#phi of reco::photon dR matched to genPhoton;#phi;Events",20,-4.,4.);
  TH1I* h_Pho_Nvertex_Truth = new TH1I("Pho_Nvertex_Truth","NVertex of reco::photon dR matched to genPhoton;NVertex;Events",50,0,50);

  TH1F* h_Pho_Et_Truth_PF = new TH1F("Pho_Et_Truth_PF","E_{T} of reco::photon dR matched to genPhoton;E_{T} (GeV);Events",100,0.,1000.);
  TH1F* h_Pho_Eta_Truth_PF = new TH1F("Pho_Eta_Truth_PF","#eta of reco::photon dR matched to genPhoton;#eta;Events",20,-2.,2.);
  TH1F* h_Pho_Phi_Truth_PF = new TH1F("Pho_Phi_Truth_PF","#phi of reco::photon dR matched to genPhoton;#phi;Events",20,-4.,4.);
  TH1I* h_Pho_Nvertex_Truth_PF = new TH1I("Pho_Nvertex_Truth_PF","NVertex of reco::photon dR matched to genPhoton;NVertex;Events",50,0,50);
  TH1I* h_Pho_Nvertex_Truth_PF_BG = new TH1I("Pho_Nvertex_Truth_PF_BG","NVertex of reco::photon dR matched to genPhoton;NVertex;Events",50,0,50);

  TH1F* h_Pho_Et_Truth_BG = new TH1F("Pho_Et_Truth_BG","E_{T} of reco::photon dR matched to genPhoton;E_{T} (GeV);Events",100,0.,1000.);
  TH1F* h_Pho_Eta_Truth_BG = new TH1F("Pho_Eta_Truth_BG","#eta of reco::photon dR matched to genPhoton;#eta;Events",20,-2.,2.);
  TH1F* h_Pho_Phi_Truth_BG = new TH1F("Pho_Phi_Truth_BG","#phi of reco::photon dR matched to genPhoton;#phi;Events",20,-4.,4.);
  TH1I* h_Pho_Nvertex_Truth_BG = new TH1I("Pho_Nvertex_Truth_BG","NVertex of reco::photon dR matched to genPhoton;NVertex;Events",50,0,50);

  TH1F* h_Pho_Et_RA3 = new TH1F("Pho_Et_RA3","E_{T} of reco::photon passing RA3 selection;E_{T} (GeV);Events",100,0.,1000.);
  TH1F* h_Pho_Eta_RA3 = new TH1F("Pho_Eta_RA3","#eta of reco::photon passing RA3 selection;#eta;Events",20,-2.,2.);
  TH1F* h_Pho_Phi_RA3 = new TH1F("Pho_Phi_RA3","#phi of reco::photon passing RA3 selection;#phi;Events",20,-4.,4.);
  TH1I* h_Pho_Nvertex_RA3 = new TH1I("Pho_Nvertex_RA3","NVertex of reco::photon passing RA3 selection;NVertex;Events",50,0,50);

  TH1I* h_Pho_Nvertex_RA3_NoPUcorr = new TH1I("Pho_Nvertex_RA3_NoPUcorr","NVertex of reco::photon passing RA3 selection with No Rho correction;NVertex;Events",50,0,50);
  TH1I* h_Pho_Nvertex_Egamma = new TH1I("Pho_Nvertex_Egamma","NVertex of reco::photon passing Egamma selection;NVertex;Events",50,0,50);
  TH1I* h_Pho_Nvertex_Egamma_NoPUcorr = new TH1I("Pho_Nvertex_Egamma_NoPUcorr","NVertex of reco::photon passing Egamma selection with No Rho correction;NVertex;Events",50,0,50);

  TH1I* h_Pho_Nvertex_Egamma_NoTrackIso = new TH1I("Pho_Nvertex_Egamma_NoTrackIso","NVertex of reco::photon passing Egamma selection except track isolation;NVertex;Events",50,0,50);
  TH1I* h_Pho_Nvertex_Egamma_NoTrackIso_NoPUcorr = new TH1I("Pho_Nvertex_Egamma_NoTrackIso_NoPUcorr","NVertex of reco::photon passing Egamma selection except track isolation with No Rho correction;NVertex;Events",50,0,50);
  TH1I* h_Pho_Nvertex_Egamma_NoTrackIsoNoEcalIso = new TH1I("Pho_Nvertex_Egamma_NoTrackIsoNoEcalIso","NVertex of reco::photon passing Egamma selection except track or hcal isolation;NVertex;Events",50,0,50);
  TH1I* h_Pho_Nvertex_Egamma_NoTrackIsoNoEcalIso_NoPUcorr = new TH1I("Pho_Nvertex_Egamma_NoTrackIsoNoEcalIso_NoPUcorr","NVertex of reco::photon passing Egamma selection except track or hcal isolation with No Rho correction;NVertex;Events",50,0,50);
  TH1I* h_Pho_Nvertex_Egamma_NoIso = new TH1I("Pho_Nvertex_Egamma_NoIso","NVertex of reco::photon passing Egamma selection except isolation;NVertex;Events",50,0,50);
 



  TH1F* h_Pho_Et_RA3_BG = new TH1F("Pho_Et_RA3_BG","E_{T} of reco::photon passing RA3 selection;E_{T} (GeV);Events",100,0.,1000.);
  TH1F* h_Pho_Eta_RA3_BG = new TH1F("Pho_Eta_RA3_BG","#eta of reco::photon passing RA3 selection;#eta;Events",20,-2.,2.);
  TH1F* h_Pho_Phi_RA3_BG = new TH1F("Pho_Phi_RA3_BG","#phi of reco::photon passing RA3 selection;#phi;Events",20,-4.,4.);
  TH1I* h_Pho_Nvertex_RA3_BG = new TH1I("Pho_Nvertex_RA3_BG","NVertex of reco::photon passing RA3 selection;NVertex;Events",50,0,50);

  TH1I* h_Pho_Nvertex_RA3_BG_NoPUcorr = new TH1I("Pho_Nvertex_RA3_BG_NoPUcorr","NVertex of reco::photon passing RA3 selection with No Rho correction;NVertex;Events",50,0,50);
  
  TH1F* h_Pho_Et_PF = new TH1F("Pho_Et_PF","E_{T} of reco::photon passing PF selection;E_{T} (GeV);Events",100,0.,1000.);
  TH1F* h_Pho_Eta_PF = new TH1F("Pho_Eta_PF","#eta of reco::photon passing PF selection;#eta;Events",20,-2.,2.);
  TH1F* h_Pho_Phi_PF = new TH1F("Pho_Phi_PF","#phi of reco::photon passing PF selection;#phi;Events",20,-4.,4.);
  TH1I* h_Pho_Nvertex_PF = new TH1I("Pho_Nvertex_PF","NVertex of reco::photon passing PF selection;NVertex;Events",50,0,50);
  TH1I* h_Pho_Nvertex_PF_NoPUcorr = new TH1I("Pho_Nvertex_PF_NoPUcorr","NVertex of reco::photon passing PF selection;NVertex;Events",50,0,50);

  TH1F* h_Pho_Et_PF_BG = new TH1F("Pho_Et_PF_BG","E_{T} of reco::photon passing PF selection;E_{T} (GeV);Events",100,0.,1000.);
  TH1F* h_Pho_Eta_PF_BG = new TH1F("Pho_Eta_PF_BG","#eta of reco::photon passing PF selection;#eta;Events",20,-2.,2.);
  TH1F* h_Pho_Phi_PF_BG = new TH1F("Pho_Phi_PF_BG","#phi of reco::photon passing PF selection;#phi;Events",20,-4.,4.);
  TH1I* h_Pho_Nvertex_PF_BG = new TH1I("Pho_Nvertex_PF_BG","NVertex of reco::photon passing PF selection;NVertex;Events",50,0,50);
  TH1I* h_numChi0 = new TH1I("numChi0","Number of neutralinos in event",10,0,10);
  TH1I* h_numPhoFromChi0 = new TH1I("numPhoFromChi0","Number of photons from neutralinos in event",10,0,10);

  int numPhos=0,numPfPhos=0,numPhosRA3=0,numPFPhosRA3=0,numPhosTruth=0,numPhosVgamma=0;
  int numPho=0,numPhoMatch=0;
  
  if(doRhoCorrection)cout<<"Applying Rho Pileup corrections!"<<endl;
  else cout<<"Applying NO Pileup corrections!"<<endl;
 
  // start event looping
  Long64_t nbytes = 0, nb = 0;
  for (Long64_t jentry=0; jentry < processNEvents; jentry++) {

    if(doNVertexCorrection && doRhoCorrection){ cout<<"Trying to apply both Rho AND Nvertex Pileup corrections!"<<endl; break;}
    
    if(printLevel>0) cout << "Get the tree contents." << endl;
    
    // if( (int)(((float)jentry/processNEvents)*100)%10==0 )cout << (int)(((float)jentry/processNEvents)*100) << " percent done..." << endl;

    Long64_t ientry = LoadTree(jentry);
    if (ientry < 0) break;
    nb = fChain->GetEntry(jentry);   nbytes += nb;


    if(printLevel>0 || (printInterval > 0 && (jentry >= printInterval && jentry%printInterval == 0)) ) {
      cout <</* endl <<*/ int(jentry) << " events processed with Run:"
	   << event->runNumber << ", Event:" << event->eventNumber << endl;
    }


    if(printLevel>0) cout << "Initialize any global variables to be reset per event." << endl;

    InitializePerEvent();

    nCnt[0]++; // total number of events    

    if(printLevel>0) cout << "Apply good run list." << endl;
    // uncomment this to use the Json file to flag good data (or bad depending on your outlook)  
    if(printLevel>0)cout<<"runNumber="<<event->runNumber<<"  lumiNumber="<<event->luminosityBlockNumber<<endl;
    if(event->isRealData && useJSON){
      if(!isInJson(event->runNumber,event->luminosityBlockNumber)) continue;
    }
    // uncomment this to print all ntuple variables
    //Print(*event);
    
    nCnt[1]++; // total number of events passing Json 

    if(printLevel>0) cout << "Apply trigger selection in the event." << endl;
    bool passHLT = (useTrigger ? PassTriggers() : true);
    if(!passHLT )continue;//only accept events which pass our trigger(s)
    nCnt[2]++;// number of events that pass trigger
   
    //  Get NVertex and Rho for event
    int NVertex=0;
    for(std::vector<susy::Vertex>::iterator Vtx_it = event->vertices.begin(); Vtx_it<event->vertices.end(); Vtx_it++){
      if(    !Vtx_it->isFake() 
	     && Vtx_it->ndof>4 
	     && fabs(Vtx_it->position.z()<24.0) 
	     && sqrt(Vtx_it->position.x()*Vtx_it->position.x()+Vtx_it->position.y()*Vtx_it->position.y())<2.0 ) NVertex++;
    }
    float Rho = event->rho;float RhoB = event->rhoBarrel;float Rho25 = event->rho25;
   
    //Require at least 1 good vertex
    if(NVertex<1){
      cout<<"No Good Vertex!!!!  Run: "<<event->runNumber<<"  Event: "<<event->eventNumber<<endl;
      continue;
    }
    nCnt[3]++;// number of events that pass NVertex
  
    if(!event->isRealData &&jentry==0){
      cout<<"Neutralino Mass: " <<event->gridParams["mChi0"]<<endl;
      cout<<"Gluino Mass: " <<event->gridParams["mGluino"]<<endl;
      cout<<"Squark Mass: " <<event->gridParams["mSquark"]<<endl;
      cout<<"Cross Section: " <<event->gridParams["xsec"]<<endl;
      //cout<<"ptHat: " <<event->gridParams["ptHat"]<<endl;
    }
    
    //LumiWeight = (x-sec)(IntegratedLumi)/(# events)
    //float LumiWeight = 1;
    //float ptHatWeight=1./pow((event->gridParams["ptHat"]/15.),4.5);

    
    //----------
    std::vector<susy::Photon*>   pho_Cands_RA3_NoPUcorr;
    std::vector<susy::Photon*>   pho_Cands_RA3;
    std::vector<susy::Photon*>   pho_Cands_Egamma_NoPUcorr;
    std::vector<susy::Photon*>   pho_Cands_Egamma;
    std::vector<susy::Photon*>   pho_Cands_PF;
    std::vector<susy::Photon*>   pho_Cands_PF_NoPUcorr;
    std::vector<susy::Photon*>   pho_Cands_Truth;
    std::vector<susy::Photon*>   pho_Cands_Truth_PF;    
    std::vector<susy::Photon*>   pho_Cands_Truth_PF_NoPUcorr;
    std::vector<susy::Photon*>   pho_Cands_RA3_BG_NoPUcorr;
    std::vector<susy::Photon*>   pho_Cands_RA3_BG;
    std::vector<susy::Photon*>   pho_Cands_PF_BG;
    std::vector<susy::Photon*>   pho_Cands_Truth_BG;
    std::vector<susy::Photon*>   pho_Cands_Truth_PF_BG;
    susy::Particle* genPart = new susy::Particle; genPart->Init();
    susy::Particle* genPartBG = new susy::Particle; genPartBG->Init();

    int Chi0=0,PhoFromChi0=0;
    for(std::vector<susy::Particle>::iterator Part_it = event->genParticles.begin(); 
	Part_it != event->genParticles.end(); Part_it++){
      if(Part_it->pdgId==1000022)Chi0++;
      if(Part_it->pdgId==22/* && Part_it->motherId==1000022*/)PhoFromChi0++;
    }
    h_numChi0->Fill(Chi0);
    h_numPhoFromChi0->Fill(PhoFromChi0);
    
    if(printLevel>0) cout << "Find loose and tight photons in the event." << endl;
    //find photons, sort by energy
    //----------
    std::map<TString, std::vector<susy::Photon> >::iterator phoMap = event->photons.find("photons");
    if(phoMap != event->photons.end()) {

      //loop over photon collection 
      for(std::vector<susy::Photon>::iterator it_Pho = phoMap->second.begin(); it_Pho != phoMap->second.end(); it_Pho++) {
	if(printLevel>0) cout<<"looping over photon collection"<<endl;
	numPhos++;

	h_Pho_Et->Fill(it_Pho->momentum.Et());
	//if(it_Pho->chargedHadronIso!=0 || it_Pho->neutralHadronIso!=0 || it_Pho->photonIso!=0)cout<<"chargedHadronIso: "<<it_Pho->chargedHadronIso<<"  neutralHadronIso:"<<it_Pho->neutralHadronIso<<"  photonIso: "<<it_Pho->photonIso<<endl<<endl;
	//if find genMatch, put truth pho into truth histo
	bool hasMatch=false,hasMatchBG=false;
	for(std::vector<susy::Particle>::iterator Part_it = event->genParticles.begin(); 
	    Part_it != event->genParticles.end(); Part_it++){
	  if(Part_it->pdgId==22/* && Part_it->motherId==1000022*/ && isSameObject(it_Pho->caloPosition,Part_it->momentum,0.3)){
	    numPho++;
	    if(isSameObject(it_Pho->caloPosition,Part_it->momentum,0.1)){
	      numPhoMatch++;
	    }
	  }
	  if(Part_it->pdgId==22/* && Part_it->motherId==1000022*/){
	    if( isSameObject(it_Pho->caloPosition,Part_it->momentum,0.1) ){
	      genPart=&*Part_it;hasMatch=true;
	    }
	  }
	  if(Part_it->pdgId==22/* && Part_it->motherId==111*/){
	    if( isSameObject(it_Pho->caloPosition,Part_it->momentum,0.1) ){
	      genPartBG=&*Part_it;hasMatchBG=true;
	    }
	  }
	  if(hasMatch || hasMatchBG)break;
	}
	//only look at reco::photons that have truth match
	//if(hasMatch || hasMatchBG){
	 
	//do things that want all photons with no cuts here:
	    
	//----------------set up cuts-------------------
	float ecalIsoDR03=it_Pho->ecalRecHitSumEtConeDR03;
	float hcalIsoDR03=it_Pho->hcalTowerSumEtConeDR03();
	float trackIsoDR03=it_Pho->trkSumPtHollowConeDR03;
	float ecalIsoDR04=it_Pho->ecalRecHitSumEtConeDR04;
	float hcalIsoDR04=it_Pho->hcalTowerSumEtConeDR04();
	float trackIsoDR04=it_Pho->trkSumPtHollowConeDR04;
	float chargedHadronIso=it_Pho->chargedHadronIso;
	float neutralHadronIso=it_Pho->neutralHadronIso;
	float photonIso=it_Pho->photonIso;
	float PhoEt=it_Pho->momentum.Et();
	// fiducial cuts. Look for only barrel now
	bool etaCut = (std::abs(it_Pho->caloPosition.Eta()) < susy::etaGapBegin);
	    
	// Spike cleaning
	bool isSpike = (it_Pho->r9 > 1.0 || it_Pho->sigmaIetaIeta<0.001 || it_Pho->sigmaIphiIphi<0.001);
	//bool isSpikeGen = (genPart->r9 > 1.0 || genPart->sigmaIetaIeta<0.001 || genPart->sigmaIphiIphi<0.001);
	    
	// Et cuts, 25 GeV for trailing photons. Will apply tighter for the leading one.
	bool EtCut = (PhoEt > 25.0);
	    
	// H/E (in trigger, 0.15 for EB, 0.10 for EE)
	bool heCut = (it_Pho->hadronicOverEm < 0.05);
	// sigma_ietaieta (in trigger 0.014 for EB, 0.034 for EE)
	bool sIetaCut = (it_Pho->sigmaIetaIeta < 0.011);

	//extra Vgamma cuts
	bool sIetaLowCut = (it_Pho->sigmaIetaIeta > 0.001);
	bool sIphiLowCut = (it_Pho->sigmaIphiIphi > 0.001);
	bool EcalIsoEgammaCutNoPUcorr = ecalIsoDR04 < 4.2 + 0.006*PhoEt;
	bool HcalIsoEgammaCutNoPUcorr = hcalIsoDR04 < 2.2 + 0.0025*PhoEt;
	bool TrackIsoEgammaCutNoPUcorr = trackIsoDR04 < 2.0 + 0.001*PhoEt;
	bool EcalIsoEgammaCut = ecalIsoDR04 < 4.2 + 0.006*PhoEt + 0.183*Rho25;
	bool HcalIsoEgammaCut = hcalIsoDR04 < 2.2 + 0.0025*PhoEt + 0.062*Rho25;
	bool TrackIsoEgammaCut = trackIsoDR04 < 2.0 + 0.001*PhoEt + 0.0167*Rho25;
	bool EgammaIsoCutNoPUcorr=EcalIsoEgammaCutNoPUcorr && HcalIsoEgammaCutNoPUcorr && TrackIsoEgammaCutNoPUcorr;
	bool EgammaIsoCut=EcalIsoEgammaCut && HcalIsoEgammaCut && TrackIsoEgammaCut;
	//combined cuts
	//  bool combIsoCut =( ( ecalIsoDR03 + hcalIsoDR03 + trackIsoDR03 ) < 6.0 );
	bool combIsoCut_NoPUcorr =( ( ecalIsoDR03 + hcalIsoDR03 + trackIsoDR03 ) < 6.0 );
	bool combIsoCut =( ( ecalIsoDR03 - PUCorr_ECAL*Rho25 + hcalIsoDR03 - PUCorr_HCAL*Rho25 + trackIsoDR03 - PUCorr_TRACK*Rho25 ) < 6.0 );

	//bool PFIsoCut = (chargedHadronIso + neutralHadronIso + photonIso) / PhoEt < 0.1;
	bool PFIsoCut = (chargedHadronIso+neutralHadronIso+photonIso - (PUCorr_chargedHadron+PUCorr_neutralHadron+PUCorr_photon)*Rho25 )<6.0;	
	bool PFIsoCut_NoPUcorr = (chargedHadronIso+neutralHadronIso+photonIso)<6.0;
	//hlt cuts
	bool ecalIsoVLcut = ( ecalIsoDR03  < 6.0 + 0.012*PhoEt );
	bool hcalIsoVLcut = ( hcalIsoDR03 < 4.0 + 0.005*PhoEt );
	bool trackIsoVLcut = ( trackIsoDR03  < 4.0 + 0.002*PhoEt );
	bool IsoVLCut = ( ecalIsoVLcut && hcalIsoVLcut && trackIsoVLcut);
	bool CaloIdLCut = ( (it_Pho->hadronicOverEm < 0.15) && (it_Pho->sigmaIetaIeta < 0.014) );
	//Pixel cut
	bool pixelCut = (it_Pho->nPixelSeeds == 0);
	    
	bool R9Id85=it_Pho->r9>0.85;
	bool CaloId10=( it_Pho->hadronicOverEm<0.1 && it_Pho->sigmaIetaIeta < 0.014 );
	bool Iso50=(ecalIsoDR03<5.0 + 0.012*PhoEt
		    && hcalIsoDR03<5.0 + 0.005*PhoEt
		    && trackIsoDR03<5.0+ 0.002*PhoEt
		    );
	bool R9Id85orCaloId10andIso50Cut = R9Id85 || ( CaloId10 && Iso50 );
	
	bool PhoCut_NoPUcorr = (pixelCut && etaCut && EtCut && !isSpike && heCut && combIsoCut_NoPUcorr && sIetaCut /*&& CaloId10 && Iso50*/);
	bool PhoCut = (pixelCut && etaCut && EtCut && !isSpike && heCut && combIsoCut && sIetaCut /*&& CaloId10 && Iso50*/);
	bool PhoCutEgamma = (pixelCut && etaCut && EtCut && sIetaLowCut && sIphiLowCut && heCut && EgammaIsoCut && sIetaCut /*&& CaloId10 && Iso50*/);
	bool PhoCutEgamma_NoPUcorr = (pixelCut && etaCut && EtCut && sIetaLowCut && sIphiLowCut && heCut && EgammaIsoCutNoPUcorr && sIetaCut /*&& CaloId10 && Iso50*/);
	bool PhoCut_PF = (pixelCut && etaCut && EtCut && !isSpike && heCut && PFIsoCut && sIetaCut/* && CaloId10 && Iso50*/);
	bool PhoCut_PF_NoPUcorr = (pixelCut && etaCut && EtCut && !isSpike && heCut && PFIsoCut_NoPUcorr && sIetaCut/* && CaloId10 && Iso50*/);

	bool passHLT_Pho  = (useTrigger ? ( PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_CaloId10_Iso50_v") ) : true);

	//Now fill pho_Cands
	if(hasMatch){
	  if(1){
	    numPhosTruth++;	 
	    pho_Cands_Truth.push_back(&*it_Pho);
	    h_Pho_Nvertex_Truth->Fill(NVertex);
	  }

	  if( PhoCut_PF && passHLT_Pho){
	    pho_Cands_PF.push_back(&*it_Pho);
	    h_Pho_Nvertex_PF->Fill(NVertex);
	  }
	  if( PhoCut_PF_NoPUcorr && passHLT_Pho){
	    pho_Cands_PF_NoPUcorr.push_back(&*it_Pho);
	    h_Pho_Nvertex_PF_NoPUcorr->Fill(NVertex);
	  }

	  if(PhoCut && passHLT_Pho ){
	    numPhosRA3++;
	    pho_Cands_RA3.push_back(&*it_Pho);
	    h_Pho_Nvertex_RA3->Fill(NVertex);
	  }
	    
	  if( PhoCut_NoPUcorr && passHLT_Pho){
	    pho_Cands_RA3_NoPUcorr.push_back(&*it_Pho);
	    h_Pho_Nvertex_RA3_NoPUcorr->Fill(NVertex);
	  }

	  if(pixelCut && etaCut && EtCut && sIetaLowCut && sIphiLowCut && heCut && sIetaCut && CaloId10 && Iso50){
	    h_Pho_Nvertex_Egamma_NoIso->Fill(NVertex);
	    if(HcalIsoEgammaCut){
	      h_Pho_Nvertex_Egamma_NoTrackIsoNoEcalIso->Fill(NVertex);
	      if(HcalIsoEgammaCutNoPUcorr){
		h_Pho_Nvertex_Egamma_NoTrackIsoNoEcalIso_NoPUcorr->Fill(NVertex);
	      }
	    }//end hcal
	    if(EcalIsoEgammaCut){
	      h_Pho_Nvertex_Egamma_NoTrackIso->Fill(NVertex);
	      if(EcalIsoEgammaCutNoPUcorr){
		h_Pho_Nvertex_Egamma_NoTrackIso_NoPUcorr->Fill(NVertex);
	      }
	    }
	  }
	  
	  if( PhoCutEgamma && passHLT_Pho ){
	    numPhosVgamma++;
	    pho_Cands_Egamma.push_back(&*it_Pho);
	    h_Pho_Nvertex_Egamma->Fill(NVertex);
	  }
	    
	  if( PhoCutEgamma_NoPUcorr && passHLT_Pho){
	    pho_Cands_Egamma_NoPUcorr.push_back(&*it_Pho);
	    h_Pho_Nvertex_Egamma_NoPUcorr->Fill(NVertex);
	  }
	  
	}
	if(hasMatchBG){
	  if(1){
	    pho_Cands_Truth_BG.push_back(&*it_Pho);
	    h_Pho_Nvertex_Truth_BG->Fill(NVertex);
	  }
	    
	  if( PhoCut && passHLT_Pho ){
	    pho_Cands_RA3_BG.push_back(&*it_Pho);
	    h_Pho_Nvertex_RA3_BG->Fill(NVertex);
	  }
	    
	  if( PhoCut_NoPUcorr && passHLT_Pho){
	    pho_Cands_RA3_BG_NoPUcorr.push_back(&*it_Pho);
	    h_Pho_Nvertex_RA3_BG_NoPUcorr->Fill(NVertex);
	  }
	  
	  if( PhoCut_PF && passHLT_Pho){
	    pho_Cands_PF_BG.push_back(&*it_Pho);
	    h_Pho_Nvertex_PF_BG->Fill(NVertex);
	  }
	}
	if(printLevel>0) cout<<"End of Photon Loop"<<endl;
	//}//if(hasMatch)
      }//for(it_Pho)
    }//phoMap

    //Now grab PF photons
    std::map<TString, std::vector<susy::Photon> >::iterator phoMapPF = event->photons.find("pfPhotonTranslator:pfphot");
    if(phoMapPF != event->photons.end()) {
      numPfPhos++;
      //loop over photon collection 
      for(std::vector<susy::Photon>::iterator it_PhoPF = phoMapPF->second.begin(); it_PhoPF != phoMapPF->second.end(); it_PhoPF++) {
	if(printLevel>0) cout<<"looping over photon collection"<<endl;
	
	h_Pho_Et->Fill(it_PhoPF->momentum.Et());
	//if(it_PhoPF->chargedHadronIso!=0 || it_PhoPF->neutralHadronIso!=0 || it_PhoPF->photonIso!=0)cout<<"chargedHadronIso: "<<it_PhoPF->chargedHadronIso<<"  neutralHadronIso:"<<it_PhoPF->neutralHadronIso<<"  photonIso: "<<it_PhoPF->photonIso<<endl<<endl;
	//if find genMatch, put truth pho into truth histo
	bool hasMatch=false,hasMatchBG=false;
	for(std::vector<susy::Particle>::iterator Part_it = event->genParticles.begin(); 
	    Part_it != event->genParticles.end(); Part_it++){
	  if(Part_it->pdgId==22/* && Part_it->motherId==1000022*/){
	    if( isSameObject(it_PhoPF->caloPosition,Part_it->momentum,0.1) ){
	      genPart=&*Part_it;hasMatch=true;
	    }
	  }
	  if(Part_it->pdgId==22/* && Part_it->motherId==111*/){
	    if( isSameObject(it_PhoPF->caloPosition,Part_it->momentum,0.1) ){
	      genPartBG=&*Part_it;hasMatchBG=true;
	    }
	  }
	}
	//only look at reco::photons that have truth match
	//if(hasMatch || hasMatchBG){
	 
	//do things that want all photons with no cuts here:
	    
	//----------------set up cuts-------------------
	float ecalIsoDR03=it_PhoPF->ecalRecHitSumEtConeDR03;
	float hcalIsoDR03=it_PhoPF->hcalTowerSumEtConeDR03();
	float trackIsoDR03=it_PhoPF->trkSumPtHollowConeDR03;
	float chargedHadronIso=it_PhoPF->chargedHadronIso;
	float neutralHadronIso=it_PhoPF->neutralHadronIso;
	float photonIso=it_PhoPF->photonIso;
	float PhoEt=it_PhoPF->momentum.Et();
	// fiducial cuts. Look for only barrel now
	bool etaCut = (std::abs(it_PhoPF->caloPosition.Eta()) < susy::etaGapBegin);
	    
	// Spike cleaning
	bool isSpike = (it_PhoPF->r9 > 1.0);
	    
	// Et cuts, 25 GeV for trailing photons. Will apply tighter for the leading one.
	bool EtCut = (PhoEt > 25.0);
	    
	// H/E (in trigger, 0.15 for EB, 0.10 for EE)
	bool heCut = (it_PhoPF->hadronicOverEm < 0.05);
	// sigma_ietaieta (in trigger 0.014 for EB, 0.034 for EE)
	bool sIetaCut = (it_PhoPF->sigmaIetaIeta < 0.011);
	    
	    
	//combined cuts
	//  bool combIsoCut =( ( ecalIsoDR03 + hcalIsoDR03 + trackIsoDR03 ) < 6.0 );
	bool combIsoCut_NoPUcorr =( ( ecalIsoDR03 + hcalIsoDR03 + trackIsoDR03 ) < 6.0 );
	bool combIsoCut =( ( ecalIsoDR03 - PUCorr_ECAL*Rho25 + hcalIsoDR03 - PUCorr_HCAL*Rho25 + trackIsoDR03 - PUCorr_TRACK*Rho25 ) < 6.0 );
	bool PFIsoCut = (chargedHadronIso + neutralHadronIso + photonIso) / PhoEt < 0.1;
	//hlt cuts
	bool ecalIsoVLcut = ( ecalIsoDR03  < 6.0 + 0.012*PhoEt );
	bool hcalIsoVLcut = ( hcalIsoDR03 < 4.0 + 0.005*PhoEt );
	bool trackIsoVLcut = ( trackIsoDR03  < 4.0 + 0.002*PhoEt );
	bool IsoVLCut = ( ecalIsoVLcut && hcalIsoVLcut && trackIsoVLcut);
	bool CaloIdLCut = ( (it_PhoPF->hadronicOverEm < 0.15) && (it_PhoPF->sigmaIetaIeta < 0.014) );
	//Pixel cut
	bool pixelCut = (it_PhoPF->nPixelSeeds == 0);

	bool R9Id85=it_PhoPF->r9>0.85;
	bool CaloId10=( it_PhoPF->hadronicOverEm<0.1 && it_PhoPF->sigmaIetaIeta < 0.014 );
	bool Iso50=(ecalIsoDR03<5.0 + 0.012*PhoEt
		    && hcalIsoDR03<5.0 + 0.005*PhoEt
		    && trackIsoDR03<5.0+ 0.002*PhoEt
		    );
	bool R9Id85orCaloId10andIso50Cut = R9Id85 || ( CaloId10 && Iso50 );
	bool PhoCut = (pixelCut && etaCut && EtCut && !isSpike && heCut && combIsoCut && sIetaCut && CaloId10 && Iso50);
	bool PhoCut_PF = (pixelCut && etaCut && EtCut && !isSpike && heCut && PFIsoCut && sIetaCut && CaloId10 && Iso50);

	bool passHLT_Pho  = (useTrigger ? ( PassTrigger("HLT_Photon26_IsoVL_Photon18_v") 
					    || PassTrigger("HLT_Photon36_CaloIdL_Photon22_CaloIdL_v") 
					    || PassTrigger("HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_IsoVL_v") ) : true);
	    
       
	if(PhoCut)numPFPhosRA3++;
	//Now fill pho_Cands
	if(hasMatch){
	  if(1){
	    pho_Cands_Truth_PF.push_back(&*it_PhoPF);
	    h_Pho_Nvertex_Truth_PF->Fill(NVertex);
	  }
	  /*
	    if(PhoCut_PF && passHLT_Pho){
	    pho_Cands_PF.push_back(&*it_PhoPF);
	    h_Pho_Nvertex_PF->Fill(NVertex);
	    }*/
	}
	if(hasMatchBG){
	  if(1){
	    pho_Cands_Truth_PF_BG.push_back(&*it_PhoPF);
	    h_Pho_Nvertex_Truth_PF_BG->Fill(NVertex);
	  }
	    
	  if(PhoCut_PF && passHLT_Pho){
	    pho_Cands_PF_BG.push_back(&*it_PhoPF);
	    h_Pho_Nvertex_PF_BG->Fill(NVertex);
	  }
	}
	if(printLevel>0) cout<<"End of Photon Loop"<<endl;
	//}//if(hasMatch)
      }//for(it_PhoPF)
    }//phoMapPF

    for(std::vector<susy::Photon*>::iterator pho_it_Truth = pho_Cands_Truth.begin();pho_it_Truth!=pho_Cands_Truth.end();pho_it_Truth++){
      h_Pho_Et_Truth->Fill((*pho_it_Truth)->momentum.Et());
      h_Pho_Eta_Truth->Fill((*pho_it_Truth)->momentum.Eta());
      h_Pho_Phi_Truth->Fill((*pho_it_Truth)->momentum.Phi());
    }
    for(std::vector<susy::Photon*>::iterator pho_it_Truth_PF = pho_Cands_Truth_PF.begin();pho_it_Truth_PF!=pho_Cands_Truth_PF.end();pho_it_Truth_PF++){
      h_Pho_Et_Truth_PF->Fill((*pho_it_Truth_PF)->momentum.Et());
      h_Pho_Eta_Truth_PF->Fill((*pho_it_Truth_PF)->momentum.Eta());
      h_Pho_Phi_Truth_PF->Fill((*pho_it_Truth_PF)->momentum.Phi());
    }
    for(std::vector<susy::Photon*>::iterator pho_it = pho_Cands_RA3.begin();pho_it!=pho_Cands_RA3.end();pho_it++){
      h_Pho_Et_RA3->Fill((*pho_it)->momentum.Et());
      h_Pho_Eta_RA3->Fill((*pho_it)->momentum.Eta());
      h_Pho_Phi_RA3->Fill((*pho_it)->momentum.Phi());
    }
    for(std::vector<susy::Photon*>::iterator PFpho_it = pho_Cands_PF.begin();PFpho_it!=pho_Cands_PF.end();PFpho_it++){
      h_Pho_Et_PF->Fill((*PFpho_it)->momentum.Et());
      h_Pho_Eta_PF->Fill((*PFpho_it)->momentum.Eta());
      h_Pho_Phi_PF->Fill((*PFpho_it)->momentum.Phi());
    }
    for(std::vector<susy::Photon*>::iterator pho_it_Truth_BG = pho_Cands_Truth_BG.begin();pho_it_Truth_BG!=pho_Cands_Truth_BG.end();pho_it_Truth_BG++){
      h_Pho_Et_Truth_BG->Fill((*pho_it_Truth_BG)->momentum.Et());
      h_Pho_Eta_Truth_BG->Fill((*pho_it_Truth_BG)->momentum.Eta());
      h_Pho_Phi_Truth_BG->Fill((*pho_it_Truth_BG)->momentum.Phi());
    }
    for(std::vector<susy::Photon*>::iterator pho_it_BG = pho_Cands_RA3_BG.begin();pho_it_BG!=pho_Cands_RA3_BG.end();pho_it_BG++){
      h_Pho_Et_RA3_BG->Fill((*pho_it_BG)->momentum.Et());
      h_Pho_Eta_RA3_BG->Fill((*pho_it_BG)->momentum.Eta());
      h_Pho_Phi_RA3_BG->Fill((*pho_it_BG)->momentum.Phi());
    }
    for(std::vector<susy::Photon*>::iterator PFpho_it_BG = pho_Cands_PF_BG.begin();PFpho_it_BG!=pho_Cands_PF_BG.end();PFpho_it_BG++){
      h_Pho_Et_PF_BG->Fill((*PFpho_it_BG)->momentum.Et());
      h_Pho_Eta_PF_BG->Fill((*PFpho_it_BG)->momentum.Eta());
      h_Pho_Phi_PF_BG->Fill((*PFpho_it_BG)->momentum.Phi());
    }

  }//for jentry
  TH1F* num=(TH1F*)h_Pho_Et_RA3->Rebin(NumBins,"num",EtBins);TH1F* den=(TH1F*)h_Pho_Et_Truth->Rebin(NumBins,"den",EtBins);
  TGraphAsymmErrors *h_et_RA3 = new TGraphAsymmErrors(num,den,"");
  h_et_RA3->SetMarkerSize(0.6);
  h_et_RA3->SetTitle("");
  h_et_RA3->GetXaxis()->SetTitle("E_{T}");
  h_et_RA3->GetYaxis()->SetTitle("Efficiency");
  h_et_RA3->Write("Eff_et_RA3");

  TGraphAsymmErrors *h_eta_RA3 = new TGraphAsymmErrors(h_Pho_Eta_RA3,h_Pho_Eta_Truth,"");
  h_eta_RA3->SetMarkerSize(0.6);
  h_eta_RA3->GetXaxis()->SetTitle("#eta");
  h_eta_RA3->GetYaxis()->SetTitle("Efficiency");
  h_eta_RA3->Write("Eff_eta_RA3");

  TGraphAsymmErrors *h_phi_RA3 = new TGraphAsymmErrors(h_Pho_Phi_RA3,h_Pho_Phi_Truth,"");
  h_phi_RA3->SetMarkerSize(0.6);
  h_phi_RA3->GetXaxis()->SetTitle("#phi");
  h_phi_RA3->GetYaxis()->SetTitle("Efficiency");
  h_phi_RA3->Write("Eff_phi_RA3");

  TGraphAsymmErrors *h_nvertex_RA3 = new TGraphAsymmErrors(h_Pho_Nvertex_RA3,h_Pho_Nvertex_Truth,"");
  h_nvertex_RA3->SetMarkerSize(0.6);
  h_nvertex_RA3->GetXaxis()->SetTitle("nVertex");
  h_nvertex_RA3->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_RA3->Write("Eff_nvertex_RA3");
 
  TGraphAsymmErrors *h_nvertex_RA3_NoPUcorr = new TGraphAsymmErrors(h_Pho_Nvertex_RA3_NoPUcorr,h_Pho_Nvertex_Truth,"");
  h_nvertex_RA3_NoPUcorr->SetMarkerSize(0.6);
  h_nvertex_RA3_NoPUcorr->GetXaxis()->SetTitle("nVertex");
  h_nvertex_RA3_NoPUcorr->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_RA3_NoPUcorr->SetLineColor(kRed);
  h_nvertex_RA3_NoPUcorr->SetMarkerColor(kRed);
  h_nvertex_RA3_NoPUcorr->Write("Eff_nvertex_RA3_NoPUcorr");

  TGraphAsymmErrors *h_nvertex_Egamma = new TGraphAsymmErrors(h_Pho_Nvertex_Egamma,h_Pho_Nvertex_Truth,"");
  h_nvertex_Egamma->SetMarkerSize(0.6);
  h_nvertex_Egamma->GetXaxis()->SetTitle("nVertex");
  h_nvertex_Egamma->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_Egamma->Write("Eff_nvertex_Egamma");
 
  TGraphAsymmErrors *h_nvertex_Egamma_NoPUcorr = new TGraphAsymmErrors(h_Pho_Nvertex_Egamma_NoPUcorr,h_Pho_Nvertex_Truth,"");
  h_nvertex_Egamma_NoPUcorr->SetMarkerSize(0.6);
  h_nvertex_Egamma_NoPUcorr->GetXaxis()->SetTitle("nVertex");
  h_nvertex_Egamma_NoPUcorr->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_Egamma_NoPUcorr->SetLineColor(kRed);
  h_nvertex_Egamma_NoPUcorr->SetMarkerColor(kRed);
  h_nvertex_Egamma_NoPUcorr->Write("Eff_nvertex_Egamma_NoPUcorr");

  TGraphAsymmErrors *h_nvertex_Egamma_NoIso = new TGraphAsymmErrors(h_Pho_Nvertex_Egamma_NoIso,h_Pho_Nvertex_Truth,"");
  h_nvertex_Egamma_NoIso->SetMarkerSize(0.6);
  h_nvertex_Egamma_NoIso->GetXaxis()->SetTitle("nVertex");
  h_nvertex_Egamma_NoIso->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_Egamma_NoIso->Write("Eff_nvertex_Egamma_NoIso");

  TGraphAsymmErrors *h_nvertex_Egamma_NoTrackIso = new TGraphAsymmErrors(h_Pho_Nvertex_Egamma_NoTrackIso,h_Pho_Nvertex_Truth,"");
  h_nvertex_Egamma_NoTrackIso->SetMarkerSize(0.6);
  h_nvertex_Egamma_NoTrackIso->GetXaxis()->SetTitle("nVertex");
  h_nvertex_Egamma_NoTrackIso->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_Egamma_NoTrackIso->Write("Eff_nvertex_Egamma_NoTrackIso");
 
  TGraphAsymmErrors *h_nvertex_Egamma_NoTrackIso_NoPUcorr = new TGraphAsymmErrors(h_Pho_Nvertex_Egamma_NoTrackIso_NoPUcorr,h_Pho_Nvertex_Truth,"");
  h_nvertex_Egamma_NoTrackIso_NoPUcorr->SetMarkerSize(0.6);
  h_nvertex_Egamma_NoTrackIso_NoPUcorr->GetXaxis()->SetTitle("nVertex");
  h_nvertex_Egamma_NoTrackIso_NoPUcorr->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_Egamma_NoTrackIso_NoPUcorr->SetLineColor(kRed);
  h_nvertex_Egamma_NoTrackIso_NoPUcorr->SetMarkerColor(kRed);
  h_nvertex_Egamma_NoTrackIso_NoPUcorr->Write("Eff_nvertex_Egamma_NoTrackIso_NoPUcorr");

  TGraphAsymmErrors *h_nvertex_Egamma_NoTrackIsoNoEcalIso = new TGraphAsymmErrors(h_Pho_Nvertex_Egamma_NoTrackIsoNoEcalIso,h_Pho_Nvertex_Truth,"");
  h_nvertex_Egamma_NoTrackIsoNoEcalIso->SetMarkerSize(0.6);
  h_nvertex_Egamma_NoTrackIsoNoEcalIso->GetXaxis()->SetTitle("nVertex");
  h_nvertex_Egamma_NoTrackIsoNoEcalIso->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_Egamma_NoTrackIsoNoEcalIso->Write("Eff_nvertex_Egamma_NoTrackIsoNoEcalIso");
 
  TGraphAsymmErrors *h_nvertex_Egamma_NoTrackIsoNoEcalIso_NoPUcorr = new TGraphAsymmErrors(h_Pho_Nvertex_Egamma_NoTrackIsoNoEcalIso_NoPUcorr,h_Pho_Nvertex_Truth,"");
  h_nvertex_Egamma_NoTrackIsoNoEcalIso_NoPUcorr->SetMarkerSize(0.6);
  h_nvertex_Egamma_NoTrackIsoNoEcalIso_NoPUcorr->GetXaxis()->SetTitle("nVertex");
  h_nvertex_Egamma_NoTrackIsoNoEcalIso_NoPUcorr->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_Egamma_NoTrackIsoNoEcalIso_NoPUcorr->SetLineColor(kRed);
  h_nvertex_Egamma_NoTrackIsoNoEcalIso_NoPUcorr->SetMarkerColor(kRed);
  h_nvertex_Egamma_NoTrackIsoNoEcalIso_NoPUcorr->Write("Eff_nvertex_Egamma_NoTrackIsoNoEcalIso_NoPUcorr");

  //TH1F* numEt_PF=(TH1F*)h_Pho_Et_PF->Rebin(NumBins,"numEt_PF",EtBins);TH1F* denEt_PF=(TH1F*)h_Pho_Et_Truth_PF->Rebin(NumBins,"denEt_PF",EtBins);
  TGraphAsymmErrors *h_et_PF = new TGraphAsymmErrors(h_Pho_Et_PF,h_Pho_Et_Truth,"");
  h_et_PF->SetMarkerSize(0.6);
  h_et_PF->GetXaxis()->SetTitle("E_{T}");
  h_et_PF->GetYaxis()->SetTitle("Efficiency");
  h_et_PF->SetLineColor(kBlue);
  h_et_PF->SetMarkerColor(kBlue);
  h_et_PF->Write("Eff_et_PF");

  TGraphAsymmErrors *h_eta_PF = new TGraphAsymmErrors(h_Pho_Eta_PF,h_Pho_Eta_Truth,"");
  h_eta_PF->SetMarkerSize(0.6);
  h_eta_PF->GetXaxis()->SetTitle("#eta");
  h_eta_PF->GetYaxis()->SetTitle("Efficiency");
  h_eta_PF->SetLineColor(kBlue);
  h_eta_PF->SetMarkerColor(kBlue);
  h_eta_PF->Write("Eff_eta_PF");

  TGraphAsymmErrors *h_phi_PF = new TGraphAsymmErrors(h_Pho_Phi_PF,h_Pho_Phi_Truth,"");
  h_phi_PF->SetMarkerSize(0.6);
  h_phi_PF->GetXaxis()->SetTitle("#phi");
  h_phi_PF->GetYaxis()->SetTitle("Efficiency");
  h_phi_PF->SetLineColor(kBlue);
  h_phi_PF->SetMarkerColor(kBlue);
  h_phi_PF->Write("Eff_phi_PF");

  TGraphAsymmErrors *h_nvertex_PF = new TGraphAsymmErrors(h_Pho_Nvertex_PF,h_Pho_Nvertex_Truth,"");
  h_nvertex_PF->SetMarkerSize(0.6);
  h_nvertex_PF->GetXaxis()->SetTitle("nVertex");
  h_nvertex_PF->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_PF->SetLineColor(kBlue);
  h_nvertex_PF->SetMarkerColor(kBlue);
  h_nvertex_PF->Write("Eff_nvertex_PF");
    
  TGraphAsymmErrors *h_nvertex_PF_NoPUcorr = new TGraphAsymmErrors(h_Pho_Nvertex_PF_NoPUcorr,h_Pho_Nvertex_Truth,"");
  h_nvertex_PF_NoPUcorr->SetMarkerSize(0.6);
  h_nvertex_PF_NoPUcorr->GetXaxis()->SetTitle("nVertex");
  h_nvertex_PF_NoPUcorr->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_PF_NoPUcorr->SetLineColor(kBlue);
  h_nvertex_PF_NoPUcorr->SetMarkerColor(kBlue);
  h_nvertex_PF_NoPUcorr->Write("Eff_nvertex_PF_NoPUcorr");
    
  //Now BG
  TGraphAsymmErrors *h_et_RA3_BG = new TGraphAsymmErrors(h_Pho_Et_RA3_BG,h_Pho_Et_Truth_BG,"");
  h_et_RA3_BG->SetMarkerSize(0.6);
  h_et_RA3_BG->GetXaxis()->SetTitle("E_{T}");
  h_et_RA3_BG->GetYaxis()->SetTitle("Efficiency");
  h_et_RA3_BG->Write("Eff_et_RA3_BG");

  TGraphAsymmErrors *h_eta_RA3_BG = new TGraphAsymmErrors(h_Pho_Eta_RA3_BG,h_Pho_Eta_Truth_BG,"");
  h_eta_RA3_BG->SetMarkerSize(0.6);
  h_eta_RA3_BG->GetXaxis()->SetTitle("#eta");
  h_eta_RA3_BG->GetYaxis()->SetTitle("Efficiency");
  h_eta_RA3_BG->Write("Eff_eta_RA3_BG");

  TGraphAsymmErrors *h_phi_RA3_BG = new TGraphAsymmErrors(h_Pho_Phi_RA3_BG,h_Pho_Phi_Truth_BG,"");
  h_phi_RA3_BG->SetMarkerSize(0.6);
  h_phi_RA3_BG->GetXaxis()->SetTitle("#phi");
  h_phi_RA3_BG->GetYaxis()->SetTitle("Efficiency");
  h_phi_RA3_BG->Write("Eff_phi_RA3_BG");

  TGraphAsymmErrors *h_nvertex_RA3_BG = new TGraphAsymmErrors(h_Pho_Nvertex_RA3_BG,h_Pho_Nvertex_Truth_BG,"");
  h_nvertex_RA3_BG->SetMarkerSize(0.6);
  h_nvertex_RA3_BG->GetXaxis()->SetTitle("nVertex");
  h_nvertex_RA3_BG->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_RA3_BG->Write("Eff_nvertex_RA3_BG");
 
  TGraphAsymmErrors *h_nvertex_RA3_BG_NoPUcorr = new TGraphAsymmErrors(h_Pho_Nvertex_RA3_BG_NoPUcorr,h_Pho_Nvertex_Truth_BG,"");
  h_nvertex_RA3_BG_NoPUcorr->SetMarkerSize(0.6);
  h_nvertex_RA3_BG_NoPUcorr->GetXaxis()->SetTitle("nVertex");
  h_nvertex_RA3_BG_NoPUcorr->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_RA3_BG_NoPUcorr->SetLineColor(kRed);
  h_nvertex_RA3_BG_NoPUcorr->SetMarkerColor(kRed);
  h_nvertex_RA3_BG_NoPUcorr->Write("Eff_nvertex_RA3_BG_NoPUcorr");

  TGraphAsymmErrors *h_et_PF_BG = new TGraphAsymmErrors(h_Pho_Et_PF_BG,h_Pho_Et_Truth_BG,"");
  h_et_PF_BG->SetMarkerSize(0.6);
  h_et_PF_BG->GetXaxis()->SetTitle("E_{T}");
  h_et_PF_BG->GetYaxis()->SetTitle("Efficiency");
  h_et_PF_BG->SetLineColor(kBlue);
  h_et_PF_BG->SetMarkerColor(kBlue);
  h_et_PF_BG->Write("Eff_et_PF_BG");

  TGraphAsymmErrors *h_eta_PF_BG = new TGraphAsymmErrors(h_Pho_Eta_PF_BG,h_Pho_Eta_Truth_BG,"");
  h_eta_PF_BG->SetMarkerSize(0.6);
  h_eta_PF_BG->GetXaxis()->SetTitle("#eta");
  h_eta_PF_BG->GetYaxis()->SetTitle("Efficiency");
  h_eta_PF_BG->SetLineColor(kBlue);
  h_eta_PF_BG->SetMarkerColor(kBlue);
  h_eta_PF_BG->Write("Eff_eta_PF_BG");

  TGraphAsymmErrors *h_phi_PF_BG = new TGraphAsymmErrors(h_Pho_Phi_PF_BG,h_Pho_Phi_Truth_BG,"");
  h_phi_PF_BG->SetMarkerSize(0.6);
  h_phi_PF_BG->GetXaxis()->SetTitle("#phi");
  h_phi_PF_BG->GetYaxis()->SetTitle("Efficiency");
  h_phi_PF_BG->SetLineColor(kBlue);
  h_phi_PF_BG->SetMarkerColor(kBlue);
  h_phi_PF_BG->Write("Eff_phi_PF_BG");

  TGraphAsymmErrors *h_nvertex_PF_BG = new TGraphAsymmErrors(h_Pho_Nvertex_PF_BG,h_Pho_Nvertex_Truth_BG,"");
  h_nvertex_PF_BG->SetMarkerSize(0.6);
  h_nvertex_PF_BG->GetXaxis()->SetTitle("nVertex");
  h_nvertex_PF_BG->GetYaxis()->SetTitle("Efficiency");
  h_nvertex_PF_BG->SetLineColor(kBlue);
  h_nvertex_PF_BG->SetMarkerColor(kBlue);
  h_nvertex_PF_BG->Write("Eff_nvertex_PF_BG");
    
  c1->cd(1);
  h_Pho_Et_Truth->SetLineColor(kBlack);
  h_Pho_Et_RA3->SetLineColor(kRed);
  h_Pho_Et_PF->SetLineColor(kBlue);
  h_Pho_Et_Truth->Draw();
  h_Pho_Et_RA3->Draw("SAMES");
  h_Pho_Et_PF->Draw("SAMES");
  TLegend *leg = new TLegend(.45,.4,.85,.7,"","brNDC");
  leg->AddEntry(h_Pho_Et_Truth,"reco::Photon matched to genPhoton","l");
  leg->AddEntry(h_Pho_Et_RA3,"reco::Photon passing RA3 cuts (STD Iso)","l");
  leg->AddEntry(h_Pho_Et_PF,"reco::Photon passing RA3 cuts (PF Iso)","l");
  leg->SetFillColor(kWhite);
  leg->Draw("SAME");
  c1->cd(2);
  h_et_RA3->SetLineColor(kRed);
  h_et_RA3->SetMarkerColor(kRed);
  h_et_PF->SetLineColor(kBlue);
  h_et_PF->SetMarkerColor(kBlue);
  h_et_PF->Draw("AP");
  h_et_RA3->Draw("sameP");
  c1->Write("Eff_et");

  cout << "---ALL DONE!------"<<endl;
    
  cout << " ----------------- Job Summary ----------------- " << endl;
  cout << " Total events                : " << nCnt[0] << " (" << 100*(float)nCnt[0]/float(nCnt[0]) << "%)" << endl;
  cout << " JSON events passed          : " << nCnt[1] << " (" << 100*(float)nCnt[1]/float(nCnt[0]) << "%)" << endl;
  cout << " HLT events passed           : " << nCnt[2] << " (" << 100*(float)nCnt[2]/float(nCnt[0]) << "%)" << endl;
  cout << " nVertex events passed       : " << nCnt[3] << " (" << 100*(float)nCnt[3]/float(nCnt[0]) << "%)" << endl;
  cout << " Number of photons           : " << numPhos << endl;
  cout << " Number of photons from Chi0 : " << numPhosTruth << endl;
  cout << " Number of RA3 photons       : " << numPhosRA3 << endl;
  cout << " Number of Vgamma photons    : " << numPhosVgamma << endl;
  cout << " Number of PF photons        : " << numPfPhos << endl;
  cout<<" numPho: "<<numPho<<endl;
  cout<<" numPhoMatch: "<<numPhoMatch<<endl;
  cout << " ----------------------------------------------- " << endl;
    
  cout<<"Writing root output to: /data/ndpc3/b/dmorse/RA3/AnalysisOutput/PhotonId/hist_"<<ds<<".root"<<endl;
    
    
  // close the output file
  fout->cd();
  fout->Write();
  fout->Close();
  delete fout;
    
}


void SusyEventAnalyzer::HiggsAna() {
  if (fChain == 0) return;

  Long64_t nentries = fChain->GetEntries();

  cout << "total events in files  : " << nentries << endl;

  if(processNEvents <= 0 || processNEvents > nentries) processNEvents = nentries;

  cout << "events to be processed : " << processNEvents << endl; 
 
  if(printLevel>0) cout << "Initialize event counters." << endl;
  const int NCNT = 20;
  int nCnt[NCNT];
  for(int i=0; i<NCNT; i++){nCnt[i] = 0;}
  int ngg2b=0;

  const int nFlow = 20;
  float eleCutFlow[nFlow],muCutFlow[nFlow];
  int NeleCutFlow=0,NmuCutFlow=0;
  for(int i=0;i<nFlow;i++){eleCutFlow[i]=0;muCutFlow[i]=0;}
  /*
total number of events
trigger
nvertex
met filter
diphoton
...

  */



  if(printLevel>0) cout<<"Open hist file" << endl;
  //TFile* fout = new TFile("/data/ndpc1/b/dmorse/RA3/AnalysisOutput/hist_HiggsAna_"+ds+".root","RECREATE");
  TFile* fout = new TFile("hist_HiggsAna_"+ds+".root","RECREATE");
  if(printLevel>0) cout<<"Hist file opened" << endl;

  fout->cd();

  TH1F* puweights;
  //Get MC pileup weight
  //TFile f_PUweights("PUweightsGluGluH.root","READ");//Use this for all Higgs samples
  ////TFile f_PUweights("PUweightsVBFH.root","READ");
  ////TFile f_PUweights("PUweightsWZH.root","READ");
  ////TFile f_PUweights("PUweightsTTH.root","READ");
  //TFile f_PUweights("PUweightsAAW.root","READ");
  //TFile f_PUweights("PUweightsSMS_WH.root","READ");
  //TFile f_PUweights("PUweightsSMS_ZH.root","READ");
  //TFile f_PUweights("PUweightsSMS_HH_2W2g.root","READ");
  //TFile f_PUweights("PUweightsSMS_HH_2Z2g.root","READ");
  TFile f_PUweights("PUweightsSMS_HH_2tau2g.root","READ");
  //TFile f_PUweights("PUweightsSMS_HH_2b2g.root","READ");
  //TFile f_PUweights("PUweightsForBino.root","READ");
  //TFile f_PUweights("PUweightsZG.root","READ");
  f_PUweights.cd();
  //puweights = (TH1F*)f_PUweights.Get("PUweightsBino");
  puweights = (TH1F*)f_PUweights.Get("PUweights");
  //f_PUweights.Close();
  fout->cd();
  float PUweight=1.;

  if(printLevel>0) cout<<"Define histograms" << endl;

  TH1F* h_met_Phi = new TH1F("met_Phi",";Phi;Events",128,0,6.4);
  TH1F* h_met_Phi_ggLoose = new TH1F("met_Phi_ggLoose",";Phi;Events",128,0,6.4);
  TH1F* h_met_Phi_ggLoose_metGT15 = new TH1F("met_Phi_ggLoose_metGT15",";Phi;Events",128,0,6.4);
  TH1F* h_met_Phi_ggLoose_metGT30 = new TH1F("met_Phi_ggLoose_metGT30",";Phi;Events",128,0,6.4);
  TH1F* h_met_Phi_ggLoose_metGT50 = new TH1F("met_Phi_ggLoose_metGT50",";Phi;Events",128,0,6.4);
  TH1F* h_met_Phi_ggLoose_Ele = new TH1F("met_Phi_ggLoose_Ele",";Phi;Events",128,0,6.4);
  TH1F* h_met_Phi_ggLoose_Mu = new TH1F("met_Phi_ggLoose_Mu",";Phi;Events",128,0,6.4);

  TH2F* h_ggMetVsInvarMass_Loose = new TH2F("ggMetVsInvarMass_Loose","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsUncorrectedInvarMass_Loose = new TH2F("ggMetVsUncorrectedInvarMass_Loose","gg (Loose WP) E_{T}^{miss} vs. Uncorrected Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggHiggsStVsInvarMass_Loose = new TH2F("ggHiggsStVsInvarMass_Loose","gg (Loose WP) HiggsSt vs. Invariant Mass;InvarMass (GeV);HiggsSt(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMassRaw_Loose = new TH2F("ggMetVsInvarMassRaw_Loose","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass with no FastSim smearing;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_JetReq = new TH2F("ggMetVsInvarMass_Loose_JetReq","gg_JetReq (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_2JetReq = new TH2F("ggMetVsInvarMass_Loose_2JetReq","gg_2JetReq (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_3JetReq = new TH2F("ggMetVsInvarMass_Loose_3JetReq","gg_3JetReq (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Med = new TH2F("ggMetVsInvarMass_Med","gg (Med WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Med_JetReq = new TH2F("ggMetVsInvarMass_Med_JetReq","gg_JetReq (Med WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Med_2JetReq = new TH2F("ggMetVsInvarMass_Med_2JetReq","gg_2JetReq (Med WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Med_3JetReq = new TH2F("ggMetVsInvarMass_Med_3JetReq","gg_3JetReq (Med WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Tight = new TH2F("ggMetVsInvarMass_Tight","gg (Tight WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Tight_JetReq = new TH2F("ggMetVsInvarMass_Tight_JetReq","gg_JetReq (Tight WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Tight_2JetReq = new TH2F("ggMetVsInvarMass_Tight_2JetReq","gg_2JetReq (Tight WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Tight_3JetReq = new TH2F("ggMetVsInvarMass_Tight_3JetReq","gg_3JetReq (Tight WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);

  TH2F* h_ggMetVsInvarMass_Loose_0Lep_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_0Lep_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_0Lep_2_3JetsWZwindow = new TH2F("ggMetVsInvarMass_Loose_0Lep_2_3JetsWZwindow","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_1Lep_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_1Lep_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_1Ele_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_1Ele_0_1Jets_ePhoZ = new TH2F("ggMetVsInvarMass_Loose_1Ele_0_1Jets_ePhoZ","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_1Ele_0_1Jets_FULL = new TH2F("ggMetVsInvarMass_Loose_1Ele_0_1Jets_FULL","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_1Mu_0_1Jets_FULL = new TH2F("ggMetVsInvarMass_Loose_1Mu_0_1Jets_FULL","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_1Ele_0_1Jets_FULL = new TH2F("ggMTvsInvarMass_Loose_1Ele_0_1Jets_FULL","gg (Loose WP) M_{T} vs. Invariant Mass;InvarMass (GeV);M_{T}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_1Mu_0_1Jets_FULL = new TH2F("ggMTvsInvarMass_Loose_1Mu_0_1Jets_FULL","gg (Loose WP) M_{T} vs. Invariant Mass;InvarMass (GeV);M_{T}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMassEPho_Loose_1Ele_0_1Jets = new TH2F("ggMetVsInvarMassEPho_Loose_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggInvarMassVsInvarMassEPho_Loose_1Ele_0_1Jets = new TH2F("ggInvarMassVsInvarMassEPho_Loose_1Ele_0_1Jets","gg (Loose WP) Invariant Mass (gamma1,gamma2) vs. Invariant Mass (gamma,e);M_{#gamma#gamma} [GeV];M_{e#gamma}[GeV]",2004,0.,1002.,2004,0.,1002.);
  TH2F* h_ggMetVsInvarMassEPho1_Loose_1Ele_0_1Jets = new TH2F("ggMetVsInvarMassEPho1_Loose_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMassEPho2_Loose_1Ele_0_1Jets = new TH2F("ggMetVsInvarMassEPho2_Loose_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH1F* h_eleCHiso_Loose_1Ele_0_1Jets = new TH1F("eleCHiso_Loose_1Ele_0_1Jets","",500,0.,20.);
  TH1F* h_eleNHiso_Loose_1Ele_0_1Jets = new TH1F("eleNHiso_Loose_1Ele_0_1Jets","",500,0.,20.);
  TH1F* h_elePHiso_Loose_1Ele_0_1Jets = new TH1F("elePHiso_Loose_1Ele_0_1Jets","",500,0.,20.);
  TH1F* h_eleIso_Loose_1Ele_0_1Jets = new TH1F("eleIso_Loose_1Ele_0_1Jets","",500,0.,20.);
  TH1F* h_dRgEle_Loose = new TH1F("dRgEle_Loose","gg (Loose WP) #DeltaR(ele,nearest #gamma);#DeltaR;Events",500,0.,5.);
  TH1F* h_dRgMu_Loose = new TH1F("dRgMu_Loose","gg (Loose WP) #DeltaR(muon,nearest #gamma);#DeltaR;Events",500,0.,5.);
  TH1F* h_dR_HiggsG_WZele_GenMatch = new TH1F("dR_HiggsG_WZele_GenMatch","GenMatched #DeltaR(ele,nearest #gamma);#DeltaR;Events",500,0.,5.);
  TH2F* h_ggMetVsInvarMass_Loose_1Mu_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_1Mu_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_1Mu_0Ele_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_1Mu_0Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_2Mu_0Ele_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_2Mu_0Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_2Mu_1Ele_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_2Mu_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_3Mu_0Ele_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_3Mu_0Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_1Mu_1Ele_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_1Mu_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_1Mu_2Ele_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_1Mu_2Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_1Mu_0Ele_0_1Jets = new TH2F("ggMTvsInvarMass_Loose_1Mu_0Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_2Mu_0Ele_0_1Jets = new TH2F("ggMTvsInvarMass_Loose_2Mu_0Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_2Mu_1Ele_0_1Jets = new TH2F("ggMTvsInvarMass_Loose_2Mu_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_3Mu_0Ele_0_1Jets = new TH2F("ggMTvsInvarMass_Loose_3Mu_0Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_1Mu_1Ele_0_1Jets = new TH2F("ggMTvsInvarMass_Loose_1Mu_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_1Mu_2Ele_0_1Jets = new TH2F("ggMTvsInvarMass_Loose_1Mu_2Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_lt2b_noMu_noEle_lt2jets = new TH2F("ggMetVsInvarMass_Loose_lt2b_noMu_noEle_lt2jets",";InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_lt2b_noMu_noEle_WZjets = new TH2F("ggMetVsInvarMass_Loose_lt2b_noMu_noEle_WZjets",";InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_2b = new TH2F("ggMetVsInvarMass_Loose_2b",";InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_1Lep_0_1Jets = new TH2F("ggMTvsInvarMass_Loose_1Lep_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_1Ele_0_1Jets = new TH2F("ggMTvsInvarMass_Loose_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_1Ele_0_1Jets_ePhoZ = new TH2F("ggMTvsInvarMass_Loose_1Ele_0_1Jets_ePhoZ","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_exactly1Ele_0_1Jets = new TH2F("ggMTvsInvarMass_Loose_exactly1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_exactly1Ele_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_exactly1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_exactly2Ele_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_exactly2Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_eeMetVsInvarMass_gg_Loose_exactly2Ele_0_1Jets = new TH2F("eeMetVsInvarMass_gg_Loose_exactly2Ele_0_1Jets",";InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_eeMTvsInvarMass_gg_Loose_exactly2Ele_0_1Jets = new TH2F("eeMTvsInvarMass_gg_Loose_exactly2Ele_0_1Jets",";InvarMass (GeV);M_{T}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_mumuMetVsInvarMass_gg_Loose_2Mu_0Ele_0_1Jets = new TH2F("mumuMetVsInvarMass_gg_Loose_2Mu_0Ele_0_1Jets",";InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_mumuMTvsInvarMass_gg_Loose_2Mu_0Ele_0_1Jets = new TH2F("mumuMTvsInvarMass_gg_Loose_2Mu_0Ele_0_1Jets",";InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_exactly3Ele_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_exactly3Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_exactly2Ele_0_1Jets = new TH2F("ggMTvsInvarMass_Loose_exactly2Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_exactly3Ele_0_1Jets = new TH2F("ggMTvsInvarMass_Loose_exactly3Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_2Ele_0_1Jets = new TH2F("ggMTvsInvarMass_Loose_2Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_2Ele_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_2Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMTvsInvarMass_Loose_1Mu_0_1Jets = new TH2F("ggMTvsInvarMass_Loose_1Mu_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_2EleOSonZ_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_2EleOSonZ_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_2MuOSonZ_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_2MuOSonZ_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_2LepOSSFonZ_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_2LepOSSFonZ_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMetVsInvarMass_Loose_2LepOSoffZ_0_1Jets = new TH2F("ggMetVsInvarMass_Loose_2LepOSoffZ_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH2F* h_ggMT2VsInvarMass_Loose_2LepOSoffZ_0_1Jets = new TH2F("ggMT2VsInvarMass_Loose_2LepOSoffZ_0_1Jets","gg (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);

  TH1F* h_d0_Ele = new TH1F("d0_Ele","",750,-1.5,1.5);
  TH1F* h_dZraw_Ele = new TH1F("dZraw_Ele","",750,-15.,15.);
  TH1F* h_dZ_Ele = new TH1F("dZ_Ele","",750,-15.,15.);
  TH1F* h_dZ_recalc_Ele = new TH1F("dZ_recalc_Ele","",750,-15.,15.);
  TH1F* h_d0_Mu = new TH1F("d0_Mu","",750,-1.5,1.5);
  TH1F* h_dZraw_Mu = new TH1F("dZraw_Mu","",750,-15.,15.);
  TH1F* h_dZ_Mu = new TH1F("dZ_Mu","",750,-15.,15.);
  TH1F* h_dZ_recalc_Mu = new TH1F("dZ_recalc_Mu","",750,-15.,15.);

  TH1F* h_ggMu_MuPt = new TH1F("ggMu_MuPt","",500,0,500);
  TH1F* h_ggEle_ElePt = new TH1F("ggEle_ElePt","",500,0,500);

  h_ggMetVsUncorrectedInvarMass_Loose->Sumw2();
  h_ggMetVsInvarMass_Loose_0Lep_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_1Ele_0_1Jets_FULL->Sumw2();h_ggMetVsInvarMass_Loose_1Mu_0_1Jets_FULL->Sumw2();h_ggMetVsInvarMass_Loose_0Lep_2_3JetsWZwindow->Sumw2();h_ggMTvsInvarMass_Loose_1Ele_0_1Jets_FULL->Sumw2();h_ggMTvsInvarMass_Loose_1Mu_0_1Jets_FULL->Sumw2();
  h_ggMetVsInvarMass_Loose_1Lep_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_1Ele_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_1Ele_0_1Jets_ePhoZ->Sumw2();h_ggMetVsInvarMass_Loose_1Mu_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_lt2b_noMu_noEle_lt2jets->Sumw2();h_ggMetVsInvarMass_Loose_lt2b_noMu_noEle_WZjets->Sumw2();h_ggMetVsInvarMass_Loose_2b->Sumw2();
  h_ggMetVsInvarMassEPho_Loose_1Ele_0_1Jets->Sumw2();h_ggMetVsInvarMassEPho1_Loose_1Ele_0_1Jets->Sumw2();h_ggMetVsInvarMassEPho2_Loose_1Ele_0_1Jets->Sumw2();
  h_ggMetVsInvarMass_Loose_1Mu_0Ele_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_2Mu_0Ele_0_1Jets->Sumw2();h_mumuMetVsInvarMass_gg_Loose_2Mu_0Ele_0_1Jets->Sumw2();h_mumuMTvsInvarMass_gg_Loose_2Mu_0Ele_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_2Mu_1Ele_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_3Mu_0Ele_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_1Mu_1Ele_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_1Mu_2Ele_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_2Ele_0_1Jets->Sumw2();
  h_ggMTvsInvarMass_Loose_1Mu_0Ele_0_1Jets->Sumw2();h_ggMTvsInvarMass_Loose_2Mu_0Ele_0_1Jets->Sumw2();h_ggMTvsInvarMass_Loose_2Mu_1Ele_0_1Jets->Sumw2();h_ggMTvsInvarMass_Loose_3Mu_0Ele_0_1Jets->Sumw2();h_ggMTvsInvarMass_Loose_1Mu_1Ele_0_1Jets->Sumw2();h_ggMTvsInvarMass_Loose_1Mu_2Ele_0_1Jets->Sumw2();h_ggMTvsInvarMass_Loose_2Ele_0_1Jets->Sumw2();
 h_ggMetVsInvarMass_Loose_exactly1Ele_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_exactly2Ele_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_exactly3Ele_0_1Jets->Sumw2();
 h_ggMTvsInvarMass_Loose_exactly1Ele_0_1Jets->Sumw2();h_ggMTvsInvarMass_Loose_exactly2Ele_0_1Jets->Sumw2();h_ggMTvsInvarMass_Loose_exactly3Ele_0_1Jets->Sumw2();


  h_ggInvarMassVsInvarMassEPho_Loose_1Ele_0_1Jets->Sumw2();
  h_ggMTvsInvarMass_Loose_1Lep_0_1Jets->Sumw2();h_ggMTvsInvarMass_Loose_1Ele_0_1Jets->Sumw2();h_ggMTvsInvarMass_Loose_1Mu_0_1Jets->Sumw2();
  h_ggMetVsInvarMass_Loose_2EleOSonZ_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_2MuOSonZ_0_1Jets->Sumw2();h_ggMetVsInvarMass_Loose_2LepOSSFonZ_0_1Jets->Sumw2();
  h_ggMetVsInvarMass_Loose_2LepOSoffZ_0_1Jets->Sumw2();h_ggMT2VsInvarMass_Loose_2LepOSoffZ_0_1Jets->Sumw2();

  h_ggMetVsInvarMass_Loose->Sumw2();h_ggMetVsInvarMass_Loose_JetReq->Sumw2();h_ggMetVsInvarMass_Loose_2JetReq->Sumw2();h_ggMetVsInvarMass_Loose_3JetReq->Sumw2();
  h_ggMetVsInvarMass_Med->Sumw2();h_ggMetVsInvarMass_Med_JetReq->Sumw2();h_ggMetVsInvarMass_Med_2JetReq->Sumw2();h_ggMetVsInvarMass_Med_3JetReq->Sumw2();
  h_ggMetVsInvarMass_Tight->Sumw2();h_ggMetVsInvarMass_Tight_JetReq->Sumw2();h_ggMetVsInvarMass_Tight_2JetReq->Sumw2();h_ggMetVsInvarMass_Tight_3JetReq->Sumw2();
  /* TH1F* h_ggInvarMass = new TH1F("ggInvarMass","gg Invariant Mass;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET20 = new TH1F("ggInvarMassMET20","gg Invariant Mass in events with met>20;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET30 = new TH1F("ggInvarMassMET30","gg Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET40 = new TH1F("ggInvarMassMET40","gg Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET50 = new TH1F("ggInvarMassMET50","gg Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET60 = new TH1F("ggInvarMassMET60","gg Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET70 = new TH1F("ggInvarMassMET70","gg Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET80 = new TH1F("ggInvarMassMET80","gg Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET100 = new TH1F("ggInvarMassMET100","gg Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMass_JetReq = new TH1F("ggInvarMass_JetReq","gg Invariant Mass with One Jet Requirement;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET20_JetReq = new TH1F("ggInvarMassMET20_JetReq","gg_JetReq Invariant Mass in events with met>20;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET30_JetReq = new TH1F("ggInvarMassMET30_JetReq","gg_JetReq Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET40_JetReq = new TH1F("ggInvarMassMET40_JetReq","gg_JetReq Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET50_JetReq = new TH1F("ggInvarMassMET50_JetReq","gg_JetReq Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET60_JetReq = new TH1F("ggInvarMassMET60_JetReq","gg_JetReq Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET70_JetReq = new TH1F("ggInvarMassMET70_JetReq","gg_JetReq Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET80_JetReq = new TH1F("ggInvarMassMET80_JetReq","gg_JetReq Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET100_JetReq = new TH1F("ggInvarMassMET100_JetReq","gg_JetReq Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMass_2JetReq = new TH1F("ggInvarMass_2JetReq","gg Invariant Mass with Two Jet Requirement;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET20_2JetReq = new TH1F("ggInvarMassMET20_2JetReq","gg_2JetReq Invariant Mass in events with met>20;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET30_2JetReq = new TH1F("ggInvarMassMET30_2JetReq","gg_2JetReq Invariant Mass in events with met>30;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET40_2JetReq = new TH1F("ggInvarMassMET40_2JetReq","gg_2JetReq Invariant Mass in events with met>40;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET50_2JetReq = new TH1F("ggInvarMassMET50_2JetReq","gg_2JetReq Invariant Mass in events with met>50;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET60_2JetReq = new TH1F("ggInvarMassMET60_2JetReq","gg_2JetReq Invariant Mass in events with met>60;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET70_2JetReq = new TH1F("ggInvarMassMET70_2JetReq","gg_2JetReq Invariant Mass in events with met>70;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET80_2JetReq = new TH1F("ggInvarMassMET80_2JetReq","gg_2JetReq Invariant Mass in events with met>80;(GeV);Events", 2004,0.,1002.);
     TH1F* h_ggInvarMassMET100_2JetReq = new TH1F("ggInvarMassMET100_2JetReq","gg_2JetReq Invariant Mass in events with met>100;(GeV);Events", 2004,0.,1002.);
  */
 
  TH1F* h_ggJetsInvarMass_Loose = new TH1F("ggJetsInvarMass_Loose","Invariant Mass of two highet E_{T} pfJets in gg_Loose sample;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggJetsInvarMass_Med = new TH1F("ggJetsInvarMass_Med","Invariant Mass of two highet E_{T} pfJets in gg_Med sample;(GeV);Events", 2004,0.,1002.);
  TH1F* h_ggJetsInvarMass_Tight = new TH1F("ggJetsInvarMass_Tight","Invariant Mass of two highet E_{T} pfJets in gg_Tight sample;(GeV);Events", 2004,0.,1002.);

  TH1F* h_ggJets_QuarkProb_LD_Lead_Loose = new TH1F("ggJets_QuarkProb_LD_Lead_Loose","lead likelihood discriminant (LD): 0=Gluon, 1=Quark",100,0.,1.);
  TH1F* h_ggJets_GluonProb_MLP_Lead_Loose = new TH1F("ggJets_GluonProb_MLP_Lead_Loose","lead multivariate discriminant (MLP): 0=Quark, 1=Gluon",100,0.,1.);
  TH1F* h_ggJets_QuarkProb_LD_Trail_Loose = new TH1F("ggJets_QuarkProb_LD_Trail_Loose","trail likelihood discriminant (LD): 0=Gluon, 1=Quark",100,0.,1.);
  TH1F* h_ggJets_GluonProb_MLP_Trail_Loose = new TH1F("ggJets_GluonProb_MLP_Trail_Loose","trail multivariate discriminant (MLP): 0=Quark, 1=Gluon",100,0.,1.);
  
  TH3F* h_ggJetsInvarMass_vs_QuarkProb_LD_Lead_vs_Trail_Loose = new TH3F("ggJetsInvarMass_vs_QuarkProb_LD_Lead_vs_Trail_Loose","lead quark disc., trail quark disc., Jet InvarMass",100,0.,1.,100,0.,1.,2004,0.,1002.);

  TH2F* h_ggMetVsInvarMass_Loose_2JetReqNoB = new TH2F("ggMetVsInvarMass_Loose_2JetReqNoB","gg_2JetReqNoB (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);
  TH1F* h_ggJetsInvarMassNoB_Loose = new TH1F("ggJetsInvarMassNoB_Loose","Invariant Mass of two highest E_{T} b-vetoed pfJets in gg_Loose sample;(GeV);Events", 2004,0.,1002.);
  /*  TH1F* h_ggJetsInvarMassNoB_Med = new TH1F("ggJetsInvarMassNoB_Med","Invariant Mass of two highest E_{T} b-vetoed pfJets in gg_Med sample;(GeV);Events", 2004,0.,1002.);
      TH1F* h_ggJetsInvarMassNoB_Tight = new TH1F("ggJetsInvarMassNoB_Tight","Invariant Mass of two highest E_{T} b-vetoed pfJets in gg_Tight sample;(GeV);Events", 2004,0.,1002.);
  */
  TH1F* h_ggJetsNoB_QuarkProb_LD_Lead_Loose = new TH1F("ggJetsNoB_QuarkProb_LD_Lead_Loose","lead likelihood discriminant (LD): 0=Gluon, 1=Quark",100,0.,1.);
  TH1F* h_ggJetsNoB_GluonProb_MLP_Lead_Loose = new TH1F("ggJetsNoB_GluonProb_MLP_Lead_Loose","lead multivariate discriminant (MLP): 0=Quark, 1=Gluon",100,0.,1.);
  TH1F* h_ggJetsNoB_QuarkProb_LD_Trail_Loose = new TH1F("ggJetsNoB_QuarkProb_LD_Trail_Loose","trail likelihood discriminant (LD): 0=Gluon, 1=Quark",100,0.,1.);
  TH1F* h_ggJetsNoB_GluonProb_MLP_Trail_Loose = new TH1F("ggJetsNoB_GluonProb_MLP_Trail_Loose","trail multivariate discriminant (MLP): 0=Quark, 1=Gluon",100,0.,1.);
  
  TH3F* h_ggJetsInvarMassNoB_vs_QuarkProb_LD_Lead_vs_Trail_Loose = new TH3F("ggJetsInvarMassNoB_vs_QuarkProb_LD_Lead_vs_Trail_Loose","lead quark disc., trail quark disc., Jet InvarMass",100,0.,1.,100,0.,1.,2004,0.,1002.);

  TH3F* h_ggJetsInvarMass_vs_QuarkProb_LD_Lead_vs_Trail_Wmother_Loose = new TH3F("ggJetsInvarMass_vs_QuarkProb_LD_Lead_vs_Trail_Wmother_Loose","lead quark disc., trail quark disc., Jet InvarMass",100,0.,1.,100,0.,1.,2004,0.,1002.);
  TH3F* h_ggJetsInvarMass_vs_QuarkProb_LD_Lead_vs_Trail_Zmother_Loose = new TH3F("ggJetsInvarMass_vs_QuarkProb_LD_Lead_vs_Trail_Zmother_Loose","lead quark disc., trail quark disc., Jet InvarMass",100,0.,1.,100,0.,1.,2004,0.,1002.);

  TH2F* h_ggMetVsInvarMass_QuarkProb50_JetsInvMass7090_Loose_2JetReqNoB = new TH2F("ggMetVsInvarMass_QuarkProb50_JetsInvMass7090_Loose_2JetReqNoB","gg_2JetReq (Loose WP) E_{T}^{miss} vs. Invariant Mass;InvarMass (GeV);E_{T}^{miss}(GeV)",2004,0.,1002.,1000,0.,1000.);



  TH1F* h_rho = new TH1F("rho","Fastjet correction rho for all events that pass JSON, HLT",150,0,150);
  TH1F* h_NVertex = new TH1F("NVertex","Number of good vertices for all events",60,0,60);h_NVertex->Sumw2();

  TH1I* MuCount = new TH1I("MuCount","Num of muons passing different cuts;Cut;Events",15,0,15);
  TH1I* EleCount = new TH1I("EleCount","Num of electrons passing different cuts;Cut;Events",15,0,15);
  TH1F* WmotherMuonPt = new TH1F("WmotherMuonPt","p_{T} of muons with W-mothers",1000,0.,500.);
  TH1F* WmotherElePt = new TH1F("WmotherElePt","p_{T} of electrons with W-mothers",1000,0.,500.);
  TH1F* ggWmotherMuonPt = new TH1F("ggWmotherMuonPt","p_{T} of muons with W-mothers in gg events",1000,0.,500.);
  TH1F* ggWmotherElePt = new TH1F("ggWmotherElePt","p_{T} of electrons with W-mothers in gg events",1000,0.,500.);

  TH1F* h_ggEta_GenMatch_Lead = new TH1F("ggEta_GenMatch_Lead","gg leading photon #eta where both g's gen matched to higgs;#eta;Events", 350,-3.5,3.5);
  TH1F* h_ggEta_GenMatch_Trail = new TH1F("ggEta_GenMatch_Trail","gg trailing photon #eta where both g's gen matched to higgs;#eta;Events", 350,-3.5,3.5);
  TH1F* h_ggPt_GenMatch_Lead = new TH1F("ggPt_GenMatch_Lead","gg leading photon p_{T} where both g's gen matched to higgs;p_{T} (GeV);Events", 200,0.,1000.);
  TH1F* h_ggPt_GenMatch_Trail = new TH1F("ggPt_GenMatch_Trail","gg trailing photon p_{T} where both g's gen matched to higgs;p_{T} (GeV);Events", 200,0.,1000.);

  Double_t xbins[]={130,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525};
  Double_t ybins[]={1,20,25,45,50,70,75,95,100,120,125,145,150,170,175,195,200,220,225,245,250,270,275,295,300,320,325,345,350,370,400};
  Double_t zbins[201];
  for(int i=0;i<201;i++){
    zbins[i]=5*i;
  }
  Double_t zbinsInvMass[201];
  for(int i=0;i<201;i++){
    zbinsInvMass[i]=i;
  }
  int nXbin=(sizeof(xbins)/sizeof(Double_t))-1;
  int nYbin=(sizeof(ybins)/sizeof(Double_t))-1;
  int nZbin=(sizeof(zbins)/sizeof(Double_t))-1;
  int nZbinInvMass=(sizeof(zbinsInvMass)/sizeof(Double_t))-1;

  TH3F* h_gg_SMS_Loose_mChi_mBino_met = new TH3F("gg_SMS_Loose_mChi_mBino_met","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_1Lep_0_1Jets_mChi_mBino_met = new TH3F("gg_SMS_Loose_1Lep_0_1Jets_mChi_mBino_met","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_met = new TH3F("gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_met","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_InvMass = new TH3F("gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_InvMass","",nXbin,xbins,nYbin,ybins,nZbinInvMass,zbinsInvMass);
  TH3F* h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_InvMass = new TH3F("gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_InvMass","",nXbin,xbins,nYbin,ybins,nZbinInvMass,zbinsInvMass);
  TH3F* h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_MT = new TH3F("gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_MT","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_MT_noScaleFactor = new TH3F("gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_MT_noScaleFactor","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_MT_noScaleFactor_noPUweight = new TH3F("gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_MT_noScaleFactor_noPUweight","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_met_noScaleFactor = new TH3F("gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_met_noScaleFactor","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_met_noScaleFactor_noPUweight = new TH3F("gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_met_noScaleFactor_noPUweight","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_met = new TH3F("gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_met","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_MT = new TH3F("gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_MT","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_MT_noScaleFactor = new TH3F("gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_MT_noScaleFactor","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_MT_noScaleFactor_noPUweight = new TH3F("gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_MT_noScaleFactor_noPUweight","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_met_noScaleFactor = new TH3F("gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_met_noScaleFactor","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_met_noScaleFactor_noPUweight = new TH3F("gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_met_noScaleFactor_noPUweight","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_2b_mChi_mBino_met = new TH3F("gg_SMS_Loose_2b_mChi_mBino_met","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_lt2b_noMu_noEle_lt2jets_mChi_mBino_met = new TH3F("gg_SMS_Loose_lt2b_noMu_noEle_lt2jets_mChi_mBino_met","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_lt2b_noMu_noEle_WZjets_mChi_mBino_met = new TH3F("gg_SMS_Loose_lt2b_noMu_noEle_WZjets_mChi_mBino_met","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_gg_SMS_Loose_2LepOSoffZ_0_1Jets_mChi_mBino_met = new TH3F("gg_SMS_Loose_2LepOSoffZ_0_1Jets_mChi_mBino_met","",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH2F* h_SMS_mChi_mBino = new TH2F("SMS_mChi_mBino","",nXbin,xbins,nYbin,ybins);
  TH2F* h_SMS_mChi_mBino_fromGenPart = new TH2F("SMS_mChi_mBino_fromGenPart","",nXbin,xbins,nYbin,ybins);


  TH1F* h_ggMT_JECup_Loose_1Ele_0_1Jets = new TH1F("ggMT_JECup_Loose_1Ele_0_1Jets","gg (Loose WP) M_{T} JECup;Events;M_{T}(GeV)",1000,0.,1000.);
  TH1F* h_ggMT_JECdown_Loose_1Ele_0_1Jets = new TH1F("ggMT_JECdown_Loose_1Ele_0_1Jets","gg (Loose WP) M_{T} JECdown;Events;M_{T}(GeV)",1000,0.,1000.);
  TH1F* h_ggMT_JECup_Loose_1Mu_0_1Jets = new TH1F("ggMT_JECup_Loose_1Mu_0_1Jets","gg (Loose WP) M_{T} JECup;Events;M_{T}(GeV)",1000,0.,1000.);
  TH1F* h_ggMT_JECdown_Loose_1Mu_0_1Jets = new TH1F("ggMT_JECdown_Loose_1Mu_0_1Jets","gg (Loose WP) M_{T} JECdown;Events;M_{T}(GeV)",1000,0.,1000.);
  TH1F* h_ggMT_NoJEC_Loose_1Ele_0_1Jets = new TH1F("ggMT_NoJEC_Loose_1Ele_0_1Jets","gg (Loose WP) M_{T} NoJEC;Events;M_{T}(GeV)",1000,0.,1000.);
  TH1F* h_ggMT_NoJEC_Loose_1Mu_0_1Jets = new TH1F("ggMT_NoJEC_Loose_1Mu_0_1Jets","gg (Loose WP) M_{T} NoJEC;Events;M_{T}(GeV)",1000,0.,1000.);

  h_ggMT_JECup_Loose_1Ele_0_1Jets->Sumw2();h_ggMT_JECdown_Loose_1Ele_0_1Jets->Sumw2();h_ggMT_JECup_Loose_1Ele_0_1Jets->SetLineColor(kRed);h_ggMT_JECdown_Loose_1Ele_0_1Jets->SetLineColor(kBlue);
  h_ggMT_JECup_Loose_1Mu_0_1Jets->Sumw2();h_ggMT_JECdown_Loose_1Mu_0_1Jets->Sumw2();h_ggMT_JECup_Loose_1Mu_0_1Jets->SetLineColor(kRed);h_ggMT_JECdown_Loose_1Mu_0_1Jets->SetLineColor(kBlue);
  h_ggMT_NoJEC_Loose_1Ele_0_1Jets->Sumw2();h_ggMT_JECdown_Loose_1Mu_0_1Jets->Sumw2();

  TH1F* h_ggMet_JECup_Loose_1Ele_0_1Jets = new TH1F("ggMet_JECup_Loose_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} JECup;Events;E_{T}^{miss}(GeV)",1000,0.,1000.);
  TH1F* h_ggMet_JECdown_Loose_1Ele_0_1Jets = new TH1F("ggMet_JECdown_Loose_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} JECdown;Events;E_{T}^{miss}(GeV)",1000,0.,1000.);
  TH1F* h_ggMet_JECup_Loose_1Mu_0_1Jets = new TH1F("ggMet_JECup_Loose_1Mu_0_1Jets","gg (Loose WP) E_{T}^{miss} JECup;Events;E_{T}^{miss}(GeV)",1000,0.,1000.);
  TH1F* h_ggMet_JECdown_Loose_1Mu_0_1Jets = new TH1F("ggMet_JECdown_Loose_1Mu_0_1Jets","gg (Loose WP) E_{T}^{miss} JECdown;Events;E_{T}^{miss}(GeV)",1000,0.,1000.);
  TH1F* h_ggMet_NoJEC_Loose_1Ele_0_1Jets = new TH1F("ggMet_NoJEC_Loose_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} NoJEC;Events;E_{T}^{miss}(GeV)",1000,0.,1000.);
  TH1F* h_ggMet_NoJEC_Loose_1Mu_0_1Jets = new TH1F("ggMet_NoJEC_Loose_1Mu_0_1Jets","gg (Loose WP) E_{T}^{miss} NoJEC;Events;E_{T}^{miss}(GeV)",1000,0.,1000.);

  h_ggMet_JECup_Loose_1Ele_0_1Jets->Sumw2();h_ggMet_JECdown_Loose_1Ele_0_1Jets->Sumw2();h_ggMet_JECup_Loose_1Ele_0_1Jets->SetLineColor(kRed);h_ggMet_JECdown_Loose_1Ele_0_1Jets->SetLineColor(kBlue);
  h_ggMet_JECup_Loose_1Mu_0_1Jets->Sumw2();h_ggMet_JECdown_Loose_1Mu_0_1Jets->Sumw2();h_ggMet_JECup_Loose_1Mu_0_1Jets->SetLineColor(kRed);h_ggMet_JECdown_Loose_1Mu_0_1Jets->SetLineColor(kBlue);
  h_ggMet_NoJEC_Loose_1Ele_0_1Jets->Sumw2();h_ggMet_JECdown_Loose_1Mu_0_1Jets->Sumw2();


  TH3F* h_SMS_ggMT_JECup_Loose_1Ele_0_1Jets = new TH3F("SMS_ggMT_JECup_Loose_1Ele_0_1Jets","gg (Loose WP) M_{T} JECup;Events;M_{T}(GeV)",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_SMS_ggMT_JECdown_Loose_1Ele_0_1Jets = new TH3F("SMS_ggMT_JECdown_Loose_1Ele_0_1Jets","gg (Loose WP) M_{T} JECdown;Events;M_{T}(GeV)",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_SMS_ggMT_JECup_Loose_1Mu_0_1Jets = new TH3F("SMS_ggMT_JECup_Loose_1Mu_0_1Jets","gg (Loose WP) M_{T} JECup;Events;M_{T}(GeV)",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_SMS_ggMT_JECdown_Loose_1Mu_0_1Jets = new TH3F("SMS_ggMT_JECdown_Loose_1Mu_0_1Jets","gg (Loose WP) M_{T} JECdown;Events;M_{T}(GeV)",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_SMS_ggMT_NoJEC_Loose_1Ele_0_1Jets = new TH3F("SMS_ggMT_NoJEC_Loose_1Ele_0_1Jets","gg (Loose WP) M_{T} NoJEC;Events;M_{T}(GeV)",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_SMS_ggMT_NoJEC_Loose_1Mu_0_1Jets = new TH3F("SMS_ggMT_NoJEC_Loose_1Mu_0_1Jets","gg (Loose WP) M_{T} NoJEC;Events;M_{T}(GeV)",nXbin,xbins,nYbin,ybins,nZbin,zbins);

  h_SMS_ggMT_JECup_Loose_1Ele_0_1Jets->Sumw2();h_SMS_ggMT_JECdown_Loose_1Ele_0_1Jets->Sumw2();h_SMS_ggMT_JECup_Loose_1Ele_0_1Jets->SetLineColor(kRed);h_SMS_ggMT_JECdown_Loose_1Ele_0_1Jets->SetLineColor(kBlue);
  h_SMS_ggMT_JECup_Loose_1Mu_0_1Jets->Sumw2();h_SMS_ggMT_JECdown_Loose_1Mu_0_1Jets->Sumw2();h_SMS_ggMT_JECup_Loose_1Mu_0_1Jets->SetLineColor(kRed);h_SMS_ggMT_JECdown_Loose_1Mu_0_1Jets->SetLineColor(kBlue);
  h_SMS_ggMT_NoJEC_Loose_1Ele_0_1Jets->Sumw2();h_SMS_ggMT_JECdown_Loose_1Mu_0_1Jets->Sumw2();

 TH3F* h_SMS_ggMet_JECup_Loose_1Ele_0_1Jets = new TH3F("SMS_ggMet_JECup_Loose_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} JECup;Events;E_{T}^{miss}(GeV)",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_SMS_ggMet_JECdown_Loose_1Ele_0_1Jets = new TH3F("SMS_ggMet_JECdown_Loose_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} JECdown;Events;E_{T}^{miss}(GeV)",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_SMS_ggMet_JECup_Loose_1Mu_0_1Jets = new TH3F("SMS_ggMet_JECup_Loose_1Mu_0_1Jets","gg (Loose WP) E_{T}^{miss} JECup;Events;E_{T}^{miss}(GeV)",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_SMS_ggMet_JECdown_Loose_1Mu_0_1Jets = new TH3F("SMS_ggMet_JECdown_Loose_1Mu_0_1Jets","gg (Loose WP) E_{T}^{miss} JECdown;Events;E_{T}^{miss}(GeV)",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_SMS_ggMet_NoJEC_Loose_1Ele_0_1Jets = new TH3F("SMS_ggMet_NoJEC_Loose_1Ele_0_1Jets","gg (Loose WP) E_{T}^{miss} NoJEC;Events;E_{T}^{miss}(GeV)",nXbin,xbins,nYbin,ybins,nZbin,zbins);
  TH3F* h_SMS_ggMet_NoJEC_Loose_1Mu_0_1Jets = new TH3F("SMS_ggMet_NoJEC_Loose_1Mu_0_1Jets","gg (Loose WP) E_{T}^{miss} NoJEC;Events;E_{T}^{miss}(GeV)",nXbin,xbins,nYbin,ybins,nZbin,zbins);

  h_SMS_ggMet_JECup_Loose_1Ele_0_1Jets->Sumw2();h_SMS_ggMet_JECdown_Loose_1Ele_0_1Jets->Sumw2();h_SMS_ggMet_JECup_Loose_1Ele_0_1Jets->SetLineColor(kRed);h_SMS_ggMet_JECdown_Loose_1Ele_0_1Jets->SetLineColor(kBlue);
  h_SMS_ggMet_JECup_Loose_1Mu_0_1Jets->Sumw2();h_SMS_ggMet_JECdown_Loose_1Mu_0_1Jets->Sumw2();h_SMS_ggMet_JECup_Loose_1Mu_0_1Jets->SetLineColor(kRed);h_SMS_ggMet_JECdown_Loose_1Mu_0_1Jets->SetLineColor(kBlue);
  h_SMS_ggMet_NoJEC_Loose_1Ele_0_1Jets->Sumw2();h_SMS_ggMet_JECdown_Loose_1Mu_0_1Jets->Sumw2();



  TH1F* h_eleRelIso_nMinus1 = new TH1F("eleRelIso_nMinus1","",1000,0,5);
  TH1F* h_eleRelIso_passID = new TH1F("eleRelIso_passID","",1000,0,5);
  TH2F* h_eleEtaVsRelIso_passID = new TH2F("eleEtaVsRelIso_passID","",1000,0,5,50,0,5);
  TH1F* h_eleRelIso_1Ele_0_1Jets = new TH1F("eleRelIso_1Ele_0_1Jets","",1000,0,5);
  TH1F* h_eleRelIso_1Ele_0_1Jets_Z = new TH1F("eleRelIso_1Ele_0_1Jets_Z","",1000,0,5);
  TH1F* h_eleRelIso_1Ele_0_1Jets_noZ = new TH1F("eleRelIso_1Ele_0_1Jets_noZ","",1000,0,5);
  TH1F* h_eleSihih_1Ele_0_1Jets_Z = new TH1F("eleSihih_1Ele_0_1Jets_Z","",1000,0,.05);
  TH1F* h_eleSihih_1Ele_0_1Jets_noZ = new TH1F("eleSihih_1Ele_0_1Jets_noZ","",1000,0,.05);
  TH1F* h_eleOneOverEminusOneOverP_1Ele_0_1Jets_Z = new TH1F("eleOneOverEminusOneOverP_1Ele_0_1Jets_Z","",1000,0,.1);
  TH1F* h_eleOneOverEminusOneOverP_1Ele_0_1Jets_noZ = new TH1F("eleOneOverEminusOneOverP_1Ele_0_1Jets_noZ","",1000,0,.1);

  float InvMassLow=120.,InvMassHigh=131.;


  if(printLevel>0) cout<<"Histograms defined" << endl;

  if(printLevel>0) cout<<"Define job-wide variables " << endl;
  susy::Photon* PhoOne = new susy::Photon; PhoOne->Init();
  susy::Photon* PhoTwo = new susy::Photon; PhoTwo->Init();
  susy::PFJet* invmassJet1 = new susy::PFJet; invmassJet1->Init();
  susy::PFJet* invmassJet2 = new susy::PFJet; invmassJet2->Init();
  susy::PFJet* invmassNoBJet1 = new susy::PFJet; invmassNoBJet1->Init();
  susy::PFJet* invmassNoBJet2 = new susy::PFJet; invmassNoBJet2->Init();

  int ngg=0,ngg_Loose=0,ngg_Med=0,ngg_Tight=0;
  int ngg_JetReq=0,ngg_Loose_JetReq=0,ngg_Med_JetReq=0,ngg_Tight_JetReq=0;
  int ngg_2JetReq=0,ngg_Loose_2JetReq=0,ngg_Med_2JetReq=0,ngg_Tight_2JetReq=0;
  int ngg_3JetReq=0,ngg_Loose_3JetReq=0,ngg_Med_3JetReq=0,ngg_Tight_3JetReq=0;
  int ngg_Loose_2JetReqNoB=0;
  int Lt2bjets0lepCount=0,ngg_Loose_Excl=0,nNotGe2bJets=0,nNotGeOneEle01bJets=0,nNotGeOneMu01bJets=0,nNotLt2bjets0lep=0;
  TRandom *rando = new TRandom();

  if(printLevel>0) cout<<"Job-wide variables defined" << endl;

  //define NVertex and Rho Correction factors
  if(doRhoCorrection)cout<<"Applying Rho Pileup corrections!"<<endl;
  else cout<<"Applying NO Pileup corrections!"<<endl;
  
  // to check duplicated events
  std::map<int, std::set<int> > allEvents;

  int mChi(0),mBino(0),mChiOld(0),mChi2(0),mBino2(0);

  // start event looping
  Long64_t nbytes = 0, nb = 0;
  for (Long64_t jentry=0; jentry < processNEvents; jentry++) {
    
    //make sure we are not trying to do multiple corrections at once
    if(doNVertexCorrection && doRhoCorrection){
      cout<<"Trying to correct for both NVertex and Rho!!!!!"<<endl;
      break;
    }
    if(printLevel>0) cout << endl << "Get the tree contents." << endl;

    Long64_t ientry = LoadTree(jentry);
    if (ientry < 0) break;
    nb = fChain->GetEntry(jentry);   nbytes += nb;


    if(printLevel>0 || (printInterval > 0 && (jentry >= printInterval && jentry%printInterval == 0)) ) {
      cout <</* endl <<*/ int(jentry) << " events processed with Run:"
	   << event->runNumber << ", Event:" << event->eventNumber << endl;
    }

    if(!event->isRealData){
      if(jentry==0){
	if(FastSim)cout<<"Using FastSim MC Smearing"<<endl;
	if(FullSim)cout<<"Using FullSim MC Smearing"<<endl;
	if(FastSim && FullSim){cout<<"Error:  Trying to use both FastSim and FullSim MC Smearing!!!!!"<<endl;break;}
      }
    }
  
    bool doSMS2Dscan=true;
    if(event->isRealData)doSMS2Dscan=false;
    if(!event->isRealData &&jentry==0){
      cout<<"Neutralino Mass: " <<event->gridParams["mChi0"]<<endl;
      cout<<"Gluino Mass: " <<event->gridParams["mGluino"]<<endl;
      cout<<"Squark Mass: " <<event->gridParams["mSquark"]<<endl;
      cout<<"Cross Section: " <<event->gridParams["xsec"]<<endl;
      //cout<<"ptHat: " <<event->gridParams["ptHat"]<<endl;
    }
    
    if(doSMS2Dscan){
      TString comment = event->LHEparams["gridPoint"];
      int one = comment.Index("_chargino");
      one+=9;
      int two = comment.Index("_",one+1);
      TString mCHI (comment(one,two-one));
      one = comment.Index("_bino");
      one+=5;
      two = comment.Index("_",one+1);
      TString mBINO (comment(one,two-one));
      mChiOld=mChi;
      mChi = mCHI.Atof();
      mBino = mBINO.Atof();
      for(std::vector<susy::Particle>::iterator Part_it = event->genParticles.begin(); Part_it != (event->genParticles.end())-1; Part_it++){
	if(fabs(Part_it->pdgId)==1000024)mChi2=Part_it->momentum.M();//cout<<"Chargino   with mass: "<<Part_it->momentum.M()<<endl;
	if(fabs(Part_it->pdgId)==1000023);//cout<<"Neutralino with mass: "<<Part_it->momentum.M()<<endl;
	if(fabs(Part_it->pdgId)==1000022)mBino2=Part_it->momentum.M();//cout<<"Bino       with mass: "<<Part_it->momentum.M()<<endl;
	if(mBino2==0)mBino2++;
	else if(mBino2%5 != 0)mBino2++;
	if(mChi2%5 != 0)mChi2++;
      }
      //cout<<"LHE comment: "<<event->LHEparams["gridPoint"]<<endl<<"mChi    : "<<mChi<<"  mBino    : "<<mBino<<endl<<"mChi gen: "<<mChi2<<"  mBino gen: "<<mBino2<<endl;
      
    }
    
    h_SMS_mChi_mBino->Fill(mChi,mBino);
    h_SMS_mChi_mBino_fromGenPart->Fill(mChi2,mBino2);

    if(event->runNumber>=0/* && event->runNumber<=175831*/){

      nCnt[0]++; // total number of events   
      NeleCutFlow=0,NmuCutFlow=0;

      if(mChi==130 && mBino==1){
	eleCutFlow[NeleCutFlow]++;NeleCutFlow++;
	muCutFlow[NmuCutFlow]++;NmuCutFlow++;
      }

      if(printLevel>0) cout << "Apply good run list." << endl;
      if(printLevel>0) cout<<"runNumber="<<event->runNumber<<"  lumiNumber="<<event->luminosityBlockNumber<<endl;
      if(useJSON){
	if(!isInJson(event->runNumber,event->luminosityBlockNumber)) continue;
      }

      nCnt[1]++; // total number of events that pass Json

      if(printLevel>0) cout << "Check duplicated events for data only." << endl;
     
      if(event->isRealData){
	bool duplicateEvent = ! (allEvents[event->runNumber].insert(event->eventNumber)).second;
	if(duplicateEvent){
	  cout<<"Duplicate Event! Run "<<event->runNumber<<" Event "<<event->eventNumber<<endl;
	  continue;
	}
      }
      nCnt[2]++;//number of events that pass duplicate check
    
      float numTrueInt = -1;
      if(!event->isRealData){		
	susy::PUSummaryInfoCollection::const_iterator iBX = event->pu.begin();
	for(std::vector<susy::PUSummaryInfo>::iterator PU_it = event->pu.begin(); PU_it != event->pu.end(); PU_it++){
	  if(PU_it->BX==0){
	    // cout<<"PU_it numTrueInt: "<<PU_it->trueNumInteractions<<endl;
	  }
	}
	bool foundInTimeBX = false;
	while((iBX != event->pu.end()) && !foundInTimeBX) {
	  if(iBX->BX == 0) {
	    numTrueInt = iBX->trueNumInteractions;
	    foundInTimeBX = true;
	  }
	  ++iBX;
	}
      }
      //h_numTrueInt->Fill(numTrueInt);
      //cout<<"numTrueInt:"<<numTrueInt<<endl;
      
      //  Get NVertex and Rho for event
      int NVertex=0;float Rho25 = event->rho25;
      bool hasPrimeVert=false;susy::Vertex primVtx = event->vertices[0];
      for(std::vector<susy::Vertex>::iterator Vtx_it = event->vertices.begin(); Vtx_it<event->vertices.end(); Vtx_it++){
	if(    !Vtx_it->isFake() 
	       && Vtx_it->ndof>4 
	       && fabs(Vtx_it->position.z()<24.0) 
	       && sqrt(Vtx_it->position.x()*Vtx_it->position.x()+Vtx_it->position.y()*Vtx_it->position.y())<2.0 ){
	  NVertex++;
	  if(!hasPrimeVert){primVtx=(*Vtx_it);hasPrimeVert=true;}
	}
	else if(printLevel>0){
	  if(Vtx_it->isFake())cout<<"vertex isFake() !"<<endl;
	  if(Vtx_it->ndof<=4)cout<<"vertex ndof<=4 !"<<endl;
	  if(fabs(Vtx_it->position.z()>=24.0))cout<<"vertex z>=24 !"<<endl;
	  if(sqrt(Vtx_it->position.x()*Vtx_it->position.x()+Vtx_it->position.y()*Vtx_it->position.y())>=2.0)cout<<"vertex rho>=2 !"<<endl;
	}
      }
      h_rho->Fill(Rho25);h_NVertex->Fill(NVertex);


      if(printLevel>0) cout << "Apply trigger selection in the event." << endl;
      bool passHLT = (useTrigger ? PassTriggers() : true);
      bool passHLT_Pho  = (useTrigger ? PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_CaloId10_Iso50_v") : true);
      bool passHLT_3others = (passHLT && !passHLT_Pho);
      if(!passHLT )continue;//only accept events which pass our triggers
      if(mChi==130 && mBino==1){
	eleCutFlow[NeleCutFlow]++;NeleCutFlow++;
	muCutFlow[NmuCutFlow]++;NmuCutFlow++;
      }
      nCnt[3]++;
      //if(!passHLT_Pho )continue;//only accept events which pass our signal trigger
      //if(!passHLT_3others )continue;//only accept events which pass our signal trigger
      nCnt[4]++;// number of events that pass trigger

     
      //Require at least 1 good vertex
      if(NVertex<1){
	if(printLevel>0){cout<<"No Good Vertex!!!!  Run: "<<event->runNumber<<"  Event: "<<event->eventNumber<<endl;}
	continue;
      }
      nCnt[5]++;// number of events that pass nVertex>=1

      if(mChi==130 && mBino==1){
	eleCutFlow[NeleCutFlow]++;NeleCutFlow++;
	muCutFlow[NmuCutFlow]++;NmuCutFlow++;
      }

      if(event->isRealData && !event->passMetFilters())continue;
      nCnt[6]++;// number of events that pass all Met filters

      if(mChi==130 && mBino==1){
	eleCutFlow[NeleCutFlow]++;NeleCutFlow++;
	muCutFlow[NmuCutFlow]++;NmuCutFlow++;
      }

      if(printLevel>0)cout<<"Line 1387, numTrueInt="<<numTrueInt<<endl;

      int PUbin=0;
      if(!event->isRealData){
	PUbin = puweights->FindBin(double(numTrueInt));
	if(printLevel>0)cout<<"Line 1390, PUbin="<<PUbin<<endl;
	PUweight =/* 1;*/puweights->GetBinContent(PUbin);
      }
      if(printLevel>0)cout<<"Line 1394, PUweight="<<PUweight<<endl;

      std::map<TString, susy::MET>::iterator metCorr_it = event->metMap.find("pfType1CorrectedMet");
      if(metCorr_it == event->metMap.end()) {
	cout << "Corrected MET map is not available!!!" << endl;
	continue;
      }
      susy::MET* met = &(metCorr_it->second);
      h_met_Phi->Fill(met->mEt.Phi());
      if(printLevel>0) cout << "Find PFelectrons in the event." << endl;
      //----------
      //find PFelectrons, apply quality cuts
      //----------
      std::vector<susy::Electron*>   pfEles;
      std::vector<susy::Electron*>   pfElesVeto;
      std::vector<susy::Electron*>   PhoCleanedpfEles;
      std::vector<susy::Electron*>   PhoCleanedpfElesVeto;
      std::map<TString, std::vector<susy::Electron> >::iterator eleMap = event->electrons.find("gsfElectrons");
      if(eleMap != event->electrons.end()) {
	//loop over electron collection 
	for(std::vector<susy::Electron>::iterator it_Ele = eleMap->second.begin(); it_Ele != eleMap->second.end(); it_Ele++) {
	  if(printLevel>0) cout<<"looping over electron collection"<<endl;	  
	  EleCount->Fill(0);
	  float eta=-999.;eta=it_Ele->momentum.Eta();
	  /*	  if(it_Ele->superClusterIndex < event->superClusters.size()){
	    eta=(event->superClusters[it_Ele->superClusterIndex]).position.Eta();
	    //cout<<"  eta: "<<(event->superClusters[it_Ele->superClusterIndex]).position.Eta()<<endl;
	    }
	    else{
	    if(printLevel>0)cout<<"ele SC index: "<<it_Ele->superClusterIndex<<" SC vector size: "<<event->superClusters.size()<<endl;
	    eta=it_Ele->momentum.Eta();
	    }*/
	  if(fabs(eta)>2.4) continue;EleCount->Fill(1);
	  if(fabs(eta)>1.4442 && fabs(eta)<1.566) continue;EleCount->Fill(2);
	  bool isbarrel = fabs(eta)<1.4442;
	  float dEtaIn=it_Ele->deltaEtaSuperClusterTrackAtVtx;
	  float dPhiIn=it_Ele->deltaPhiSuperClusterTrackAtVtx;
	  float sihihEle=it_Ele->sigmaIetaIeta;
	  float hOverEele=it_Ele->hcalOverEcal();
	  susy::Track& gsfTrack = event->tracks[it_Ele->gsfTrackIndex];
	  TVector3 trackVtx = gsfTrack.vertex;
	  float dxy = (-(trackVtx.X() - primVtx.position.X())*gsfTrack.momentum.Py()+(trackVtx.Y() - primVtx.position.Y())*gsfTrack.momentum.Px())/gsfTrack.momentum.Pt();
	  float d0=(-1)*dxy;
	  //float d0=gsfTrack.d0()-primVtx.position.Z();
	  h_d0_Ele->Fill(d0);
	  float dZ=gsfTrack.dz()-primVtx.position.Z();
	  float dZraw=gsfTrack.dz();
	  TVector3 delta = trackVtx - primVtx.position;
	  float dZrecalc = fabs( delta.Z() - ((delta.X()*gsfTrack.momentum.Px() - delta.Y()*gsfTrack.momentum.Py())/gsfTrack.momentum.Pt())*(gsfTrack.momentum.Pz()/gsfTrack.momentum.Pt())  );
	  float dZrecalcPlus = fabs( delta.Z() - ((delta.X()*gsfTrack.momentum.Px() + delta.Y()*gsfTrack.momentum.Py())/gsfTrack.momentum.Pt())*(gsfTrack.momentum.Pz()/gsfTrack.momentum.Pt())  );
	  //cout<<"dZraw: "<<dZraw<<"  dZ: "<<dZ<<"  dZrecalc: "<<dZrecalc<<"  dZrecalcPlus: "<<dZrecalcPlus<<endl;
	  h_dZ_recalc_Ele->Fill(dZrecalcPlus);
	  h_dZ_Ele->Fill(fabs(dZ));
	  h_dZraw_Ele->Fill(fabs(dZraw));
	  dZ=dZrecalcPlus;
	  TLorentzVector trackMomentum=it_Ele->trackMomentums["AtVtx"];
	  float OneOverEminusOneOverP=fabs(1./it_Ele->ecalEnergy - 1./trackMomentum.P());
	  float Iso=0.;
	  /*if(it_Ele->isPF())*/Iso=it_Ele->chargedHadronIso + it_Ele->neutralHadronIso + it_Ele->photonIso;
	  //else Iso=it_Ele->dr03EcalRecHitSumEt + it_Ele->dr03HcalDepth1TowerSumEt + it_Ele->dr03HcalDepth2TowerSumEt + it_Ele->dr03TkSumPt;
	  float pt=it_Ele->momentum.Pt();
	  
	  //if(!it_Ele->passingMvaPreselection())continue;
	  //if(pt<15) continue;
	  //if(Iso/pt>0.2) continue;
	  bool pfEleIdOld = 0;//( && pt>15 && Iso/pt<0.2);	  
	  bool pfEleIdNew = 1;//(isbarrel ? (dEtaIn<0.004 && dPhiIn<0.06 && sihihEle<0.01 && hOverEele<0.12 && d0<0.02 && dZ<0.1 && OneOverEminusOneOverP<0.05 && pt>15 && Iso/pt<0.15) : 
	  //		                (dEtaIn<0.007 && dPhiIn<0.03 && sihihEle<0.03 && hOverEele<0.10 && d0<0.02 && dZ<0.1 && OneOverEminusOneOverP<0.05 && pt>15 && Iso/pt<0.15)
	  //		     );

	  if(isbarrel){
	    if(dEtaIn>0.007)continue;
	    if(dPhiIn>0.8) continue;
	    if(sihihEle>0.01)continue;
	    if(hOverEele>0.15)continue;
	    if(fabs(d0)>0.04)continue;
	    if(fabs(dZ)>0.2)continue;
	    //if(OneOverEminusOneOverP>0.05)continue;
	    if(pt<15)continue;
	    if(Iso/pt>0.15)continue;
	  }
	  else{
	    if(dEtaIn>0.01)continue;
	    if(dPhiIn>0.7) continue;
	    if(sihihEle>0.03)continue;
	    //if(hOverEele>0.10)continue;
	    if(fabs(d0)>0.04)continue;
	    if(fabs(dZ)>0.2)continue;
	    //if(OneOverEminusOneOverP>0.05)continue;
	    if((pt>20 && Iso/pt>0.15) ||(pt<20 && Iso/pt>0.15))continue;
	  }
	  pfElesVeto.push_back(&*it_Ele);
	  
	  if(pfEleIdNew){
	    if(isbarrel){
	      if(dEtaIn>0.007)continue;EleCount->Fill(3);
	      if(dPhiIn>0.15) continue;EleCount->Fill(4);
	      if(sihihEle>0.01)continue;EleCount->Fill(5);
	      if(hOverEele>0.12)continue;EleCount->Fill(6);
	      if(fabs(d0)>0.02)continue;EleCount->Fill(7);
	      if(fabs(dZ)>0.2)continue;EleCount->Fill(8);
	      if(OneOverEminusOneOverP>0.05)continue;EleCount->Fill(9);
	      if(pt<15)continue;EleCount->Fill(10);
	      h_eleRelIso_nMinus1->Fill(Iso/pt);
	      if(Iso/pt>0.15)continue;EleCount->Fill(11);
	      h_eleRelIso_passID->Fill(Iso/pt);
	      h_eleEtaVsRelIso_passID->Fill(Iso/pt,fabs(eta));
	    }
	    else{
	      if(dEtaIn>0.009)continue;EleCount->Fill(3);
	      if(dPhiIn>0.10) continue;EleCount->Fill(4);
	      if(sihihEle>0.03)continue;EleCount->Fill(5);
	      if(hOverEele>0.10)continue;EleCount->Fill(6);
	      if(fabs(d0)>0.02)continue;EleCount->Fill(7);
	      if(fabs(dZ)>0.2)continue;EleCount->Fill(8);
	      if(OneOverEminusOneOverP>0.05)continue;EleCount->Fill(9);
	      if(pt<15)continue;EleCount->Fill(10);
	      h_eleRelIso_nMinus1->Fill(Iso/pt);
	      if((pt>20 && Iso/pt>0.15) ||(pt<20 && Iso/pt>0.10))continue;EleCount->Fill(11);
	      h_eleRelIso_passID->Fill(Iso/pt);
	      h_eleEtaVsRelIso_passID->Fill(Iso/pt,fabs(eta));
	    }
	  }
	  else if(pfEleIdOld){
	    if(!it_Ele->passingMvaPreselection())continue;EleCount->Fill(3);
	    if(pt<15)continue;EleCount->Fill(4);
	    if(Iso/pt>0.2)continue;EleCount->Fill(5);
	  }
	
	  pfEles.push_back(&*it_Ele);
	}//end it_Ele electron loop

    
      }//end eleMap
      
      
      //sort pfEles by Pt
      std::sort(pfEles.begin(), pfEles.end(), EtGreater<susy::Electron>);
      if(printLevel>0)cout<<"pfEles size= "<<pfEles.size()<<endl;
      /*
      //Try and match photons to pfEles to check for conversions
    susy::Photon *phoEleMatch = new susy::Photon;phoEleMatch->Init();
    bool gotPho=false;
    float drMin=999.,pMatch=999.;
    for(std::vector<susy::Electron*>::iterator ele_it = pfEles.begin();ele_it!=pfEles.end();ele_it++){
    std::map<TString, std::vector<susy::Photon> >::iterator phoMapEle = event->photons.find("photons");
    if(phoMapEle != event->photons.end()) {
    //loop over photon collection 
    for(std::vector<susy::Photon>::iterator it_Pho = phoMapEle->second.begin(); it_Pho != phoMapEle->second.end(); it_Pho++) {
    if(getDR(ele_it->momentum,it_Pho->momentum)<drMin && fabs(ele_it->momentum.Pt()/it_Pho->momentum.Pt-1)<pMatch){
    drMin=getDR(ele_it->momentum,it_Pho->momentum);
    pMatch=fabs(ele_it->momentum.Pt()/it_Pho->momentum.Pt-1);
    phoEleMatch=*it_Pho;gotPho=true;
    }
    }
    }
    if(gotPho){
    cout<<"found matching photon  elePt:"<<ele_it->momentum.Pt()<<"  phoPt:"<<phoEleMatch->momentum.Pt()<<"  ele eta,phi:"<<ele_it->momentum.Eta()<<","<<ele_it->momentum.Phi()<<"  pho eta,phi:"<<phoEleMatch->momentum.Eta()<<","<<phoEleMatch->momentum.Phi()<<endl;
    cout<<"  pho eleSafeConvVeto: "<<phoEleMatch
    }
    }
    */
    if(printLevel>0) cout << "Find Muons in the event." << endl;
    //----------
    //find Muons, apply quality cuts
    //----------
    std::vector<susy::Muon*> Muons;
    std::vector<susy::Muon*> PhoCleanedMuons;
    //loop over muon collection 

    std::map<TString, std::vector<susy::Muon> >::iterator muMap = event->muons.find("muons");
    if(muMap != event->muons.end()) {	
      for(std::vector<susy::Muon>::iterator it_Mu = muMap->second.begin(); it_Mu != muMap->second.end(); it_Mu++) {
	if(printLevel>0) cout<<"looping over muon collection"<<endl;
	  	  
	MuCount->Fill(0);
	if(!it_Mu->isPFMuon()) continue;MuCount->Fill(1);
	if(!(it_Mu->isGlobalMuon() || it_Mu->isTrackerMuon())) continue;MuCount->Fill(2);

	float pt = it_Mu->momentum.Pt();
	float combIso=(it_Mu->ecalIsoR03 + it_Mu->hcalIsoR03 + it_Mu->trackIsoR03);
	float combIsoPF=( it_Mu->sumChargedHadronPt04 + std::max(0.,it_Mu->sumNeutralHadronEt04+it_Mu->sumPhotonEt04-0.5*it_Mu->sumPUPt04) );
	//float combIsoPF=( it_Mu->sumChargedHadronPt04 + it_Mu->sumNeutralHadronEt04 + it_Mu->sumPhotonEt04 );
	//float relIso = combIso/pt;
	float relIsoPF = combIsoPF/pt;
	float eta = fabs(it_Mu->momentum.Eta());
	//susy::Track& innerTrack = event->tracks[it_Mu->bestTrackIndex()];
	susy::Track& innerTrack = event->tracks[it_Mu->combinedTrackIndex];
	//float d0 = d0correction(event->beamSpot,combinedTrack);
	float numberOfValidPixelHits = innerTrack.numberOfValidPixelHits;
	TVector3 trackVtx = innerTrack.vertex;
	float dxy = (-(trackVtx.X() - primVtx.position.X())*innerTrack.momentum.Py()+(trackVtx.Y() - primVtx.position.Y())*innerTrack.momentum.Px())/innerTrack.momentum.Pt();
	float d0=(-1)*dxy;//float d0 = innerTrack.d0();
	h_d0_Mu->Fill(d0);
	float dZ = innerTrack.dz()-primVtx.position.Z();
	float dZraw=innerTrack.dz();
	TVector3 delta = trackVtx - primVtx.position;
	float dZrecalc = fabs( delta.Z() - ((delta.X()*innerTrack.momentum.Px() - delta.Y()*innerTrack.momentum.Py())/innerTrack.momentum.Pt())*(innerTrack.momentum.Pz()/innerTrack.momentum.Pt())  );
	float dZrecalcPlus = fabs( delta.Z() - ((delta.X()*innerTrack.momentum.Px() + delta.Y()*innerTrack.momentum.Py())/innerTrack.momentum.Pt())*(innerTrack.momentum.Pz()/innerTrack.momentum.Pt())  );
	//cout<<"dZraw: "<<dZraw<<"  dZ: "<<dZ<<"  dZrecalc: "<<dZrecalc<<"  dZrecalcPlus: "<<dZrecalcPlus<<endl;
	h_dZ_recalc_Mu->Fill(dZrecalcPlus);
	h_dZ_Mu->Fill(fabs(dZ));
	h_dZraw_Mu->Fill(fabs(dZraw));
	dZ=dZrecalcPlus;
	//float d0=-(-primVtx.position.X()*it_Mu->momentum.Py() + primVtx.position.Y()*it_Mu->momentum.Px())/it_Mu->momentum.Pt();
	//float dZ=primVtx.position.Z() - (primVtx.position.X()*it_Mu->momentum.Px()+primVtx.position.Y()*it_Mu->momentum.Py())/it_Mu->momentum.Pt() * (it_Mu->momentum.Pz()/it_Mu->momentum.Pt());
	float numberOfValidTrackerHits = it_Mu->nValidTrackerHits;
	float numberOfValidMuonHits = it_Mu->nValidMuonHits;
	float chi2OverNdof = innerTrack.normChi2();
	float nMatchedStations = it_Mu->nMatchedStations;
	int nStripLayersWithMeasurement = it_Mu->nStripLayersWithMeasurement;


	bool MuonIdOld = 1;	  
	bool MuonIdNew = 0;

	if(pt < 15) continue;MuCount->Fill(3);
	if(MuonIdOld){
	  if(!(it_Mu->isGlobalMuon()))continue;MuCount->Fill(4);
	  if(fabs(eta) > 2.4) continue;MuCount->Fill(5);
	  if(chi2OverNdof >= 10)continue;MuCount->Fill(6);
	  if(numberOfValidMuonHits<=0)continue;MuCount->Fill(7);
	  if(fabs(d0) >= 0.2) continue;MuCount->Fill(8);
	  if(fabs(dZ) >= 0.5) continue;MuCount->Fill(9);
	  if(numberOfValidPixelHits<=0)continue;MuCount->Fill(10);
	  //if(numberOfValidTrackerHits<11)continue;
	  if(nMatchedStations<=1)continue;MuCount->Fill(11);
	  if(nStripLayersWithMeasurement<=5)continue;MuCount->Fill(12);
	  //now have trackerlayerswithmeasurement or numberofmatchedstations
	  //id from https://twiki.cern.ch/twiki/bin/view/CMSPublic/SWGuideMuonId
	  //if(relIsoPF > 0.15) continue;MuCount->Fill(13); //this is what di-lepton search uses, not sure why
	  if(relIsoPF > 0.12) continue;MuCount->Fill(13);//this is tight iso from POG
	}
	if(MuonIdNew){
	  if(fabs(eta) > 2.4) continue;MuCount->Fill(4);
	  if(relIsoPF > 0.2) continue;MuCount->Fill(5);
	}
	Muons.push_back(&*it_Mu);
      }//end it_Mu muon loop
    }
    //sort Muons by Pt
    std::sort(Muons.begin(), Muons.end(), EtGreater<susy::Muon>);
    if(printLevel>0)cout<<"Muons size= "<<Muons.size()<<endl;
      
    //----------JETS------------
    std::vector<susy::PFJet*> pfJets,pfJetsJECup,pfJetsJECdown,pfJetsDiffJECup,pfJetsDiffJECdown;
    std::vector<susy::PFJet*> PhoCleanedpfJets_Loose,PhoCleanedpfJets_Med,PhoCleanedpfJets_Tight;
    std::vector<susy::PFJet*> PhoCleanedpfJets_JECup,PhoCleanedpfJets_JECdown;
    std::vector<susy::PFJet*> PhoCleanedpfJetsNoB_Loose/*,PhoCleanedpfJets_Med,PhoCleanedpfJets_Tight*/;
    if(printLevel>0) cout << "Find pfJets in the event." << endl;
  
    std::map<TString,susy::PFJetCollection>::iterator pfJets_it = event->pfJets.find("ak5");

    if(pfJets_it != event->pfJets.end()){

      susy::PFJetCollection& jetColl = pfJets_it->second;

      for(std::vector<susy::PFJet>::iterator jet_it = jetColl.begin(); jet_it != jetColl.end(); jet_it++) {
	// set up corrections for PFJets
	std::map<TString,Float_t>::iterator s_it_L1FastL2L3 = jet_it->jecScaleFactors.find("L1FastL2L3");
	if (s_it_L1FastL2L3 == jet_it->jecScaleFactors.end()) {
	  cout << "JEC is not available for this jet!!!" << endl;
	  continue;
	}
	float scale = s_it_L1FastL2L3->second;

	TLorentzVector corrP4 = scale * jet_it->momentum;
	//cout<<"corrP4 pT:"<<corrP4.Pt()<<"  eta:"<<corrP4.Eta()<<endl;
	//This is for pfJets
	float JetThreshold=30.;
	if(   corrP4.Pt()>=JetThreshold
	      && std::abs(corrP4.Eta()) <= 2.4
	      && jet_it->nConstituents>1
	      //use uncorrected jet E for fractions
	      && jet_it->neutralHadronEnergy/jet_it->momentum.E()<0.99
	      && jet_it->neutralEmEnergy/jet_it->momentum.E()<0.99 
	      && jet_it->passPuJetIdLoose(susy::kFull)
	      ) {
	  bool cleanedFromLeps=true;
	  //first clean from eles and muons
	  for(std::vector<susy::Electron*>::iterator ele_it = pfEles.begin();ele_it!=pfEles.end();ele_it++){
	    if(isSameObject((*ele_it)->momentum,jet_it->momentum,0.5)){cleanedFromLeps=false;break;}
	  }
	  for(std::vector<susy::Muon*>::iterator mu_it = Muons.begin();mu_it!=Muons.end();mu_it++){
	    if(isSameObject((*mu_it)->momentum,jet_it->momentum,0.5)){cleanedFromLeps=false;break;}
	  }
	  if(cleanedFromLeps){
	    if(std::abs(corrP4.Eta()) >= 2.4){
	      //cout<<"Jet Eta:            "<<jet_it->momentum.Eta()<<endl;
	      //set jet momentum to L1FastL2L3 corrected one
	      jet_it->momentum=corrP4;
	      //cout<<"Jet corrP4 Eta:     "<<jet_it->momentum.Eta()<<endl;
	      pfJets.push_back(&*jet_it);
	      susy::PFJet* jetUP = JECup(&*jet_it);
	      //JECup(&*jet_it);
	      if(printLevel>0)cout<<"jet   pT: "<<jet_it->momentum.Pt()<<"  eta: "<<jet_it->momentum.Eta()<<endl;
	      if(printLevel>0)cout<<"jetUp pT: "<<jetUP->momentum.Pt()<<"  eta: "<<jetUP->momentum.Eta()<<endl;
	      pfJetsJECup.push_back(jetUP);
	      TLorentzVector pDiffUp = jetUP->momentum - jet_it->momentum;
	      susy::PFJet* jetUpDiff = new susy::PFJet();
	      //if(printLevel>0)cout<<"jetUpDiff pT:"<<jetUpDiff->momentum.Pt()<<" eta:"<<jetUpDiff->momentum.Eta()<<endl;
	      jetUpDiff->momentum = pDiffUp;
	      if(printLevel>0)cout<<"jetUpDiff pT:"<<jetUpDiff->momentum.Pt()<<" eta:"<<jetUpDiff->momentum.Eta()<<endl;
	      pfJetsDiffJECup.push_back(jetUpDiff);
	      susy::PFJet* jetDOWN = JECdown(&*jet_it);
	      //JECdown(&*jet_it);
	      if(printLevel>0)cout<<"jet   pT: "<<jet_it->momentum.Pt()<<"  eta: "<<jet_it->momentum.Eta()<<endl;
	      if(printLevel>0)cout<<"jetDown pT: "<<jetDOWN->momentum.Pt()<<"  eta: "<<jetDOWN->momentum.Eta()<<endl;
	      pfJetsJECdown.push_back(jetDOWN);
	      TLorentzVector pDiffDown = jetDOWN->momentum - jet_it->momentum;
	      susy::PFJet* jetDownDiff = new susy::PFJet();
	      //if(printLevel>0)cout<<"jetDownDiff pT:"<<jetDownDiff->momentum.Pt()<<" eta:"<<jetDownDiff->momentum.Eta()<<endl;
	      jetDownDiff->momentum = pDiffDown;
	      if(printLevel>0)cout<<"jetDownDiff pT:"<<jetDownDiff->momentum.Pt()<<" eta:"<<jetDownDiff->momentum.Eta()<<endl;
	      pfJetsDiffJECdown.push_back(jetDownDiff);
	    }
	    else if( jet_it->chargedMultiplicity>0 
		     && jet_it->chargedHadronEnergy/jet_it->momentum.E()>0
		     && jet_it->chargedEmEnergy/jet_it->momentum.E()<0.99){
	      jet_it->momentum=corrP4;
	      pfJets.push_back(&*jet_it);
	      susy::PFJet* jetUP = JECup(&*jet_it);
	      //JECup(&*jet_it);
	      if(printLevel>0)cout<<"jet   pT: "<<jet_it->momentum.Pt()<<"  eta: "<<jet_it->momentum.Eta()<<endl;
	      if(printLevel>0)cout<<"jetUp pT: "<<jetUP->momentum.Pt()<<"  eta: "<<jetUP->momentum.Eta()<<endl;
	      pfJetsJECup.push_back(jetUP);
	      TLorentzVector pDiffUp = jetUP->momentum - jet_it->momentum;
	      susy::PFJet* jetUpDiff = new susy::PFJet();
	      //if(printLevel>0)cout<<"jetUpDiff pT:"<<jetUpDiff->momentum.Pt()<<" eta:"<<jetUpDiff->momentum.Eta()<<endl;
	      jetUpDiff->momentum = pDiffUp;
	      if(printLevel>0)cout<<"jetUpDiff pT:"<<jetUpDiff->momentum.Pt()<<" eta:"<<jetUpDiff->momentum.Eta()<<endl;
	      pfJetsDiffJECup.push_back(jetUpDiff);
	      susy::PFJet* jetDOWN = JECdown(&*jet_it);
	      //JECdown(&*jet_it);
	      if(printLevel>0)cout<<"jet   pT: "<<jet_it->momentum.Pt()<<"  eta: "<<jet_it->momentum.Eta()<<endl;
	      if(printLevel>0)cout<<"jetDown pT: "<<jetDOWN->momentum.Pt()<<"  eta: "<<jetDOWN->momentum.Eta()<<endl;
	      pfJetsJECdown.push_back(jetDOWN);
	      TLorentzVector pDiffDown = jetDOWN->momentum - jet_it->momentum;
	      susy::PFJet* jetDownDiff = new susy::PFJet();
	      //if(printLevel>0)cout<<"jetDownDiff pT:"<<jetDownDiff->momentum.Pt()<<" eta:"<<jetDownDiff->momentum.Eta()<<endl;
	      jetDownDiff->momentum = pDiffDown;
	      if(printLevel>0)cout<<"jetDownDiff pT:"<<jetDownDiff->momentum.Pt()<<" eta:"<<jetDownDiff->momentum.Eta()<<endl;
	      pfJetsDiffJECdown.push_back(jetDownDiff);
	    }
	  }
	}//lepton cleaning
      }// for jet
    }// if not end
    std::sort(pfJets.begin(),pfJets.end(),EtGreater<susy::PFJet>);

    if(printLevel>0) cout << "Find photons in the event." << endl;
    std::vector<susy::Photon*> pho_Cands_Loose,pho_Cands_Med,pho_Cands_Tight;

    double leadEtCut =40.0,
      trailEtCut     =25.0,
      maxEta         =1.4442,
      maxHoverE      =0.05,
      maxSihih_Loose =0.012,
      maxSihih_Med   =0.011,
      maxSihih_Tight =0.011;
      
    std::map<TString, std::vector<susy::Photon> >::iterator phoMap = event->photons.find("photons");
    if(phoMap != event->photons.end()) {
      //loop over photon collection 
      for(std::vector<susy::Photon>::iterator it_Pho = phoMap->second.begin(); it_Pho != phoMap->second.end(); it_Pho++) {
	if(printLevel>0) cout<<"looping over photon collection"<<endl;

	float chargedHadronIso=it_Pho->chargedHadronIso,
	  neutralHadronIso=it_Pho->neutralHadronIso,
	  photonIso=it_Pho->photonIso,
	  PhoEt=it_Pho->momentum.Et();
	  
	bool etaCut = (std::abs(it_Pho->caloPosition.Eta()) < maxEta);
	bool EtCut = (PhoEt > trailEtCut);
	bool heCut = (it_Pho->hadTowOverEm < maxHoverE);
	bool sIetaCut_Loose = (it_Pho->sigmaIetaIeta < maxSihih_Loose);
	bool sIetaCut_Med = (it_Pho->sigmaIetaIeta < maxSihih_Med);
	bool sIetaCut_Tight = (it_Pho->sigmaIetaIeta < maxSihih_Tight);
	bool isSpike = (it_Pho->sigmaIetaIeta<=0.001 || it_Pho->sigmaIphiIphi<=0.001);
	bool pixelVeto = (it_Pho->nPixelSeeds==0);
	bool Iso2012IdCutLoose = false,Iso2012IdCutMed = false,Iso2012IdCutTight = false;

	if(fabs(it_Pho->caloPosition.Eta())<1.0){
	  Iso2012IdCutLoose=((chargedHadronIso<2.6+0.012*Rho25) && (neutralHadronIso<3.5+PhoEt*0.04+0.03*Rho25) && (photonIso<1.3+PhoEt*0.005+.148*Rho25));
	  Iso2012IdCutMed=((chargedHadronIso<1.5+0.012*Rho25) && (neutralHadronIso<1.0+PhoEt*0.04+0.03*Rho25) && (photonIso<0.7+PhoEt*0.005+.148*Rho25));
	  Iso2012IdCutTight=((chargedHadronIso<0.7+0.012*Rho25) && (neutralHadronIso<0.4+PhoEt*0.04+0.03*Rho25) && (photonIso<0.5+PhoEt*0.005+.148*Rho25));
	}
	else{
	  Iso2012IdCutLoose=((chargedHadronIso<2.6+0.010*Rho25) && (neutralHadronIso<3.5+PhoEt*0.04+0.057*Rho25) && (photonIso<1.3+PhoEt*0.005+.130*Rho25));
	  Iso2012IdCutMed=((chargedHadronIso<1.5+0.010*Rho25) && (neutralHadronIso<1.0+PhoEt*0.04+0.057*Rho25) && (photonIso<0.7+PhoEt*0.005+.130*Rho25));
	  Iso2012IdCutTight=((chargedHadronIso<0.7+0.010*Rho25) && (neutralHadronIso<0.4+PhoEt*0.04+0.057*Rho25) && (photonIso<0.5+PhoEt*0.005+.130*Rho25));
	}	

	bool PhoCut_Loose = ( etaCut && EtCut && !isSpike && heCut && Iso2012IdCutLoose && sIetaCut_Loose && pixelVeto);	 
	bool PhoCut_Med = ( etaCut && EtCut && !isSpike && heCut && Iso2012IdCutMed && sIetaCut_Med && pixelVeto);	 
	bool PhoCut_Tight = ( etaCut && EtCut && !isSpike && heCut && Iso2012IdCutTight && sIetaCut_Tight && pixelVeto);

	//bool passHLT_Pho  = (useTrigger ? PassTrigger("HLT_Photon36_CaloId10_Iso50_Photon22_CaloId10_Iso50_v") : true);
	//if(!passHLT_Pho)continue;

	if(PhoCut_Loose)pho_Cands_Loose.push_back(&*it_Pho);	
	if(PhoCut_Med)pho_Cands_Med.push_back(&*it_Pho);	 
	if(PhoCut_Tight)pho_Cands_Tight.push_back(&*it_Pho);

	if(printLevel>0) cout<<"End of Photon Loop"<<endl;
      }//for(it_Pho)

      std::sort(pho_Cands_Loose.begin(), pho_Cands_Loose.end(), EtGreater<susy::Photon>);
      std::sort(pho_Cands_Med.begin(), pho_Cands_Med.end(), EtGreater<susy::Photon>);
      std::sort(pho_Cands_Tight.begin(), pho_Cands_Tight.end(), EtGreater<susy::Photon>);


      //find electrons and muons from W mothers in the event
      if(!(event->isRealData)){
	bool gotit=false;
	float pt1=0.,pt2=0.,eta1=0.,eta2=0.;
	for(std::vector<susy::Particle>::iterator Part_it = event->genParticles.begin(); Part_it != (event->genParticles.end())-1; Part_it++){
	  if(Part_it->momentum.Et()){
	    if(abs(Part_it->pdgId)==13 && abs(event->genParticles[Part_it->motherIndex].pdgId)==24){
	      //cout<<"Muon with W-mother, Pt = "<<Part_it->momentum.Pt()<<endl;
	      WmotherMuonPt->Fill(Part_it->momentum.Pt());
	    }
	    if(abs(Part_it->pdgId)==11 && abs(event->genParticles[Part_it->motherIndex].pdgId)==24){
	      //cout<<"Electron with W-mother, Pt = "<<Part_it->momentum.Pt()<<endl;
	      WmotherElePt->Fill(Part_it->momentum.Pt());
	    }
	    //find photons from higgs mothers
	    for(std::vector<susy::Particle>::iterator Part_it2 = (Part_it+1); Part_it2 != event->genParticles.end(); Part_it2++){
	      if((Part_it->pdgId==22 && event->genParticles[Part_it->motherIndex].pdgId==25) && 
		 (Part_it2->pdgId==22 && event->genParticles[Part_it2->motherIndex].pdgId==25) && 
		 getDR(Part_it->momentum,Part_it2->momentum)>0.3
		 ){
		gotit=true;
		if(Part_it->momentum.Pt()>pt1){pt1=Part_it->momentum.Pt();eta1=Part_it->momentum.Eta();}
		if(Part_it2->momentum.Pt()>pt2){pt2=Part_it2->momentum.Pt();eta2=Part_it2->momentum.Eta();}
	      }//photons from higgs
	    }//for Part_it2
	  }//Et check
	}//for Part_it
	if(gotit){
	  if(pt1>pt2){
	    h_ggEta_GenMatch_Lead->Fill(eta1); h_ggEta_GenMatch_Trail->Fill(eta2);
	    h_ggPt_GenMatch_Lead->Fill(pt1); h_ggPt_GenMatch_Trail->Fill(pt2);
	  }
	  else{
	    h_ggEta_GenMatch_Lead->Fill(eta2);h_ggEta_GenMatch_Trail->Fill(eta1);
	    h_ggPt_GenMatch_Lead->Fill(pt2);h_ggPt_GenMatch_Trail->Fill(pt1);
	  }
	}
      }//isRealData
      int JetCounter=0,JetCounterNoB=0,JetCounterB=0;
      bool breakPho=false,IsGoodJet=true,dogg=false;
      //first Loose Photons
      if( pho_Cands_Loose.size()>=2 && (*pho_Cands_Loose.begin())->momentum.Et()>leadEtCut){ //make sure top pT object has at least 40GeV
	if(printLevel>0)cout<<"Now do phoCands no jet req case"<<endl;
	breakPho=false;	  
	for(std::vector<susy::Photon*>::iterator pho_it = pho_Cands_Loose.begin();pho_it<(pho_Cands_Loose.end())-1;pho_it++){
	  if(breakPho)break;
	  PhoOne=*pho_it;if(PhoOne->momentum.Pt()<leadEtCut)break;
	  for(std::vector<susy::Photon*>::iterator pho_it2 = (pho_it+1);pho_it2!=pho_Cands_Loose.end();pho_it2++){
	    //require dPhi>0.05,dR>0.6
	    if(   !isSameObject(PhoOne->caloPosition,(*pho_it2)->caloPosition,0.6) 
		  && !tooClosePhi(PhoOne->caloPosition,(*pho_it2)->caloPosition,0.05)  ){
	      PhoTwo=*pho_it2;breakPho=true;dogg=true;
	      //use pfJets
	      for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.begin(); jet_it != pfJets.end(); jet_it++){
		IsGoodJet=true;
		if(!isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5) && !isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5)){
		  JetCounter++;
		  if(JetCounter==1)invmassJet1=(*jet_it);if(JetCounter==2)invmassJet2=(*jet_it);
		  if((*jet_it)->bTagDiscriminators[susy::kCSV]>0.679 && abs((*jet_it)->momentum.Eta())<2.4 ){
		    JetCounterB++;
		  }
		  else{ 
		    JetCounterNoB++;
		    if(JetCounterNoB==1)invmassNoBJet1=(*jet_it);if(JetCounterNoB==2)invmassNoBJet2=(*jet_it);
		    PhoCleanedpfJetsNoB_Loose.push_back(*jet_it);
		  }
		  PhoCleanedpfJets_Loose.push_back(*jet_it);
		  susy::PFJet* jetUP=JECup(*jet_it);
		  PhoCleanedpfJets_JECup.push_back(jetUP);
		  susy::PFJet* jetDOWN = JECdown(*jet_it);
		  PhoCleanedpfJets_JECdown.push_back(jetDOWN);
		}
	      }//end pfjets
	      break;
	    }//end dR, dPhi photon cut
	  }//end pho2
	}//end pho1
	if(printLevel>0)cout<<"After jet-photon cleaning"<<endl;
	if(dogg){
	  if(printLevel>0)cout<<"Inside gg_Loose"<<endl;
	  ngg_Loose++;
	  float LepCleanDR=0.3;//dR that ele or muon must be from phoOne and phoTwo
	  for(std::vector<susy::Electron*>::iterator ele_it = pfEles.begin(); ele_it != pfEles.end(); ele_it++){
	    float closestDr=getDR(PhoOne->caloPosition,(*ele_it)->momentum);
	    if(getDR(PhoTwo->caloPosition,(*ele_it)->momentum)<closestDr)closestDr=getDR(PhoTwo->caloPosition,(*ele_it)->momentum);
	    h_dRgEle_Loose->Fill(closestDr);
	    if(!isSameObject(PhoOne->caloPosition,(*ele_it)->momentum,LepCleanDR) && !isSameObject(PhoTwo->caloPosition,(*ele_it)->momentum,LepCleanDR)){
	      PhoCleanedpfEles.push_back(*ele_it);
	    }
	  }
	  for(std::vector<susy::Electron*>::iterator ele_it = pfElesVeto.begin(); ele_it != pfElesVeto.end(); ele_it++){
	    float closestDr=getDR(PhoOne->caloPosition,(*ele_it)->momentum);
	    if(getDR(PhoTwo->caloPosition,(*ele_it)->momentum)<closestDr)closestDr=getDR(PhoTwo->caloPosition,(*ele_it)->momentum);
	    h_dRgEle_Loose->Fill(closestDr);
	    if(!isSameObject(PhoOne->caloPosition,(*ele_it)->momentum,LepCleanDR) && !isSameObject(PhoTwo->caloPosition,(*ele_it)->momentum,LepCleanDR)){
	      PhoCleanedpfElesVeto.push_back(*ele_it);
	    }
	  }
	  if(printLevel>0)cout<<"After filling PhoCleanedpfEles vector"<<endl;
	  for(std::vector<susy::Muon*>::iterator mu_it = Muons.begin(); mu_it != Muons.end(); mu_it++){
	    float closestDr=getDR(PhoOne->caloPosition,(*mu_it)->momentum);
	    if(getDR(PhoTwo->caloPosition,(*mu_it)->momentum)<closestDr)closestDr=getDR(PhoTwo->caloPosition,(*mu_it)->momentum);
	    h_dRgMu_Loose->Fill(closestDr);
	    if(!isSameObject(PhoOne->caloPosition,(*mu_it)->momentum,LepCleanDR) && !isSameObject(PhoTwo->caloPosition,(*mu_it)->momentum,LepCleanDR)){
	      PhoCleanedMuons.push_back(*mu_it);
	    }
	  }
	  if(printLevel>0)cout<<"After filling PhoCleanedMuons vector"<<endl;
	  /*TVector3 vPos = primVtx.position;
	    TVector3 dirPhoOne=PhoOne->caloPosition - vPos,dirPhoTwo=PhoTwo->caloPosition - vPos;
	    TVector3 pOne=dirPhoOne.Unit()*PhoOne->MVAregEnergy,pTwo=dirPhoTwo.Unit()*PhoTwo->MVAregEnergy;
	    TLorentzVector p4PhoOneVcorr(pOne.x(),pOne.y(),pOne.z(),PhoOne->MVAregEnergy),p4PhoTwoVcorr(pTwo.x(),pTwo.y(),pTwo.z(),PhoTwo->MVAregEnergy);
	    float InvMass=InvariantMass(p4PhoOneVcorr,p4PhoTwoVcorr);*/
	  TVector3 vPos = primVtx.position;
	  TVector3 dirPhoOne=PhoOne->caloPosition - vPos,dirPhoTwo=PhoTwo->caloPosition - vPos;
	  TVector3 pOneRaw=dirPhoOne.Unit()*(PhoOne->MVAcorrMomentum).E(),pTwoRaw=dirPhoTwo.Unit()*(PhoTwo->MVAcorrMomentum).E();
	  TLorentzVector p4PhoOneVcorrRaw(pOneRaw.x(),pOneRaw.y(),pOneRaw.z(),(PhoOne->MVAcorrMomentum).E()),p4PhoTwoVcorrRaw(pTwoRaw.x(),pTwoRaw.y(),pTwoRaw.z(),(PhoTwo->MVAcorrMomentum).E());
	  float InvMassRaw=InvariantMass(p4PhoOneVcorrRaw,p4PhoTwoVcorrRaw);
	  if(!event->isRealData && FastSim==true){PhoOne->MVAcorrMomentum*=FastSimSmear(PhoOne,rando);PhoTwo->MVAcorrMomentum*=FastSimSmear(PhoTwo,rando);}
	  else if(!event->isRealData && FullSim==true){PhoOne->MVAcorrMomentum*=FullSimSmear(PhoOne,rando);PhoTwo->MVAcorrMomentum*=FullSimSmear(PhoTwo,rando);}
	  TVector3 pOne=dirPhoOne.Unit()*(PhoOne->MVAcorrMomentum).E(),pTwo=dirPhoTwo.Unit()*(PhoTwo->MVAcorrMomentum).E();
	  TLorentzVector p4PhoOneVcorr(pOne.x(),pOne.y(),pOne.z(),(PhoOne->MVAcorrMomentum).E()),p4PhoTwoVcorr(pTwo.x(),pTwo.y(),pTwo.z(),(PhoTwo->MVAcorrMomentum).E());
	  float InvMass=InvariantMass(p4PhoOneVcorr,p4PhoTwoVcorr);
	  float InvMassJets=InvariantMass(invmassJet1->momentum,invmassJet2->momentum);
	  float InvMassJetsNoB=InvariantMass(invmassNoBJet1->momentum,invmassNoBJet2->momentum);
	  h_ggMetVsInvarMass_Loose->Fill(InvMass,met->met(),PUweight);
	  h_ggMetVsUncorrectedInvarMass_Loose->Fill(InvariantMass(PhoOne->momentum,PhoTwo->momentum),met->met(),PUweight);
	  h_ggHiggsStVsInvarMass_Loose->Fill(InvMass,GetDiEmPt(p4PhoOneVcorr,p4PhoTwoVcorr),PUweight);
	  h_ggMetVsInvarMassRaw_Loose->Fill(InvMassRaw,met->met(),PUweight);
	  if(InvMass>InvMassLow && InvMass<InvMassHigh)h_gg_SMS_Loose_mChi_mBino_met->Fill((float)mChi,(float)mBino,met->met(),PUweight);
	  if(JetCounter>0){h_ggMetVsInvarMass_Loose_JetReq->Fill(InvMass,met->met(),PUweight);ngg_Loose_JetReq++;}
	  if(JetCounter>1){
	    ngg_Loose_2JetReq++;h_ggMetVsInvarMass_Loose_2JetReq->Fill(InvMass,met->met(),PUweight);
	    h_ggJetsInvarMass_Loose->Fill(InvMassJets,PUweight);
	    //h_ggJets_QuarkProb_LD_Lead_Loose->Fill(invmassJet1->qgDiscriminators[susy::kQuarkLikelihood],PUweight);
	    //h_ggJets_GluonProb_MLP_Lead_Loose->Fill(invmassJet1->qgDiscriminators[susy::kGluonMLP],PUweight);
	    //h_ggJets_QuarkProb_LD_Trail_Loose->Fill(invmassJet2->qgDiscriminators[susy::kQuarkLikelihood],PUweight);
	    //h_ggJets_GluonProb_MLP_Trail_Loose->Fill(invmassJet2->qgDiscriminators[susy::kGluonMLP],PUweight);
	    //h_ggJetsInvarMass_vs_QuarkProb_LD_Lead_vs_Trail_Loose->Fill(invmassJet1->qgDiscriminators[susy::kQuarkLikelihood],invmassJet2->qgDiscriminators[susy::kQuarkLikelihood],InvMassJets,PUweight);
	    float nearestDR1=999.,nearestDR2=999.;
	    susy::Particle *part1(0),*part2(0);
	    bool Wmother=0,Zmother=0;
	    if(!event->isRealData){
	      for(std::vector<susy::Particle>::iterator Part_it = event->genParticles.begin(); Part_it != (event->genParticles.end()-1); Part_it++){
		if(Part_it->momentum.Et()){
		  if(abs(Part_it->pdgId)==13 && abs(event->genParticles[Part_it->motherIndex].pdgId)==24){
		    //cout<<"Muon with W-mother, Pt = "<<Part_it->momentum.Pt()<<endl;
		    ggWmotherMuonPt->Fill(Part_it->momentum.Pt());
		  }
		  if(abs(Part_it->pdgId)==11 && abs(event->genParticles[Part_it->motherIndex].pdgId)==24){
		    //cout<<"Electron with W-mother, Pt = "<<Part_it->momentum.Pt()<<endl;
		    ggWmotherElePt->Fill(Part_it->momentum.Pt());
		  }
		  if(getDR(Part_it->momentum,invmassJet1->momentum)<nearestDR1){
		    nearestDR1=getDR(Part_it->momentum,invmassJet1->momentum);
		    part1=&*Part_it;
		  }
		  if(getDR(Part_it->momentum,invmassJet2->momentum)<nearestDR2){
		    nearestDR2=getDR(Part_it->momentum,invmassJet2->momentum);
		    part2=&*Part_it;
		  }
		  for(std::vector<susy::Particle>::iterator Part_it2 = (Part_it+1); Part_it2 != event->genParticles.end(); Part_it2++){
		    if(Part_it2->momentum.Et()){
		      if( ((Part_it->pdgId==22 && event->genParticles[Part_it->motherIndex].pdgId==25) && (abs(Part_it2->pdgId)==11 && (event->genParticles[Part_it2->motherIndex].pdgId==23 || fabs(event->genParticles[Part_it2->motherIndex].pdgId==24)))) ||
			  ((Part_it2->pdgId==22 && event->genParticles[Part_it2->motherIndex].pdgId==25) && (abs(Part_it->pdgId)==11 && (event->genParticles[Part_it->motherIndex].pdgId==23 || fabs(event->genParticles[Part_it->motherIndex].pdgId==24)))) ){
			h_dR_HiggsG_WZele_GenMatch->Fill(getDR(Part_it->momentum,Part_it2->momentum));
		      }
		    }
		  }
		}
	      }//end particles
	      if(abs(event->genParticles[part1->motherIndex].pdgId)==24 && abs(event->genParticles[part2->motherIndex].pdgId)==24)Wmother=1;
	      if(event->genParticles[part1->motherIndex].pdgId==23 && event->genParticles[part2->motherIndex].pdgId==23)Zmother=1;
	      /*	if(Wmother){
		h_ggJetsInvarMass_vs_QuarkProb_LD_Lead_vs_Trail_Wmother_Loose->Fill(invmassJet1->qgDiscriminators[susy::kQuarkLikelihood],invmassJet2->qgDiscriminators[susy::kQuarkLikelihood],InvMassJets,PUweight);
		}
		if(Zmother){
		h_ggJetsInvarMass_vs_QuarkProb_LD_Lead_vs_Trail_Zmother_Loose->Fill(invmassJet1->qgDiscriminators[susy::kQuarkLikelihood],invmassJet2->qgDiscriminators[susy::kQuarkLikelihood],InvMassJets,PUweight);
		}*/
	    }//!isrealdata
	  }//jetcounter>1
	  if(JetCounterNoB>1){
	    ngg_Loose_2JetReqNoB++;h_ggMetVsInvarMass_Loose_2JetReqNoB->Fill(InvMass,met->met(),PUweight);
	    h_ggJetsInvarMassNoB_Loose->Fill(InvMassJetsNoB,PUweight);
	    /*h_ggJetsNoB_QuarkProb_LD_Lead_Loose->Fill(invmassNoBJet1->qgDiscriminators[susy::kQuarkLikelihood],PUweight);
	      h_ggJetsNoB_GluonProb_MLP_Lead_Loose->Fill(invmassNoBJet1->qgDiscriminators[susy::kGluonMLP],PUweight);
	      h_ggJetsNoB_QuarkProb_LD_Trail_Loose->Fill(invmassNoBJet2->qgDiscriminators[susy::kQuarkLikelihood],PUweight);
	      h_ggJetsNoB_GluonProb_MLP_Trail_Loose->Fill(invmassNoBJet2->qgDiscriminators[susy::kGluonMLP],PUweight);
	      h_ggJetsInvarMassNoB_vs_QuarkProb_LD_Lead_vs_Trail_Loose->Fill(invmassNoBJet1->qgDiscriminators[susy::kQuarkLikelihood],invmassNoBJet2->qgDiscriminators[susy::kQuarkLikelihood],InvMassJetsNoB,PUweight);
	      if(invmassNoBJet1->qgDiscriminators[susy::kQuarkLikelihood]>0.5 && invmassNoBJet2->qgDiscriminators[susy::kQuarkLikelihood]>0.5){
	      if(InvMassJetsNoB>=70 && InvMassJetsNoB<90){
	      h_ggMetVsInvarMass_QuarkProb50_JetsInvMass7090_Loose_2JetReqNoB->Fill(InvMass,met->met(),PUweight);
	      }
	      }*/
	  }
	  if(JetCounter>2){h_ggMetVsInvarMass_Loose_3JetReq->Fill(InvMass,met->met(),PUweight);ngg_Loose_3JetReq++;}

	  //TVector2 metJECupVec=CalcMet(PhoCleanedpfJets_JECup,PhoOne,PhoTwo,PhoCleanedpfEles,PhoCleanedMuons);
	  //TVector2 metJECdownVec=CalcMet(PhoCleanedpfJets_JECdown,PhoOne,PhoTwo,PhoCleanedpfEles,PhoCleanedMuons);
	  //TVector2 metNoJECVec=CalcMet(PhoCleanedpfJets_Loose,PhoOne,PhoTwo,PhoCleanedpfEles,PhoCleanedMuons);
	 
	  if(printLevel>0)cout<<"up"<<endl;
	  TVector2 metJECupVec=CalcMetFromPFandJets(pfJetsDiffJECup,met->mEt);
	  if(printLevel>0)cout<<"down"<<endl;
	  TVector2 metJECdownVec=CalcMetFromPFandJets(pfJetsDiffJECdown,met->mEt);
	  if(printLevel>0)cout<<"none"<<endl;
	  TVector2 metNoJECVec=CalcMetFromPFandJets(pfJets,met->mEt);

	  float metJECup=metJECupVec.Mod();
	  float metJECdown=metJECdownVec.Mod();
	  float metNoJEC=metNoJECVec.Mod();
	  //all cases: 
	  bool ZeroLep=(PhoCleanedpfEles.size()==0 && PhoCleanedMuons.size()==0);
	  bool ZeroLep01Jets=(ZeroLep && JetCounter<2);
	  bool ZeroLep23Jets=(ZeroLep && JetCounterNoB>=2 && JetCounterNoB<=3);
	  bool OneLep=((PhoCleanedpfEles.size()==1 || PhoCleanedMuons.size()==1) && !(PhoCleanedpfEles.size()==1 && PhoCleanedMuons.size()==1));
	  bool GeOneLep = (PhoCleanedpfEles.size()+PhoCleanedMuons.size()>=1);
	  bool OneLep01Jets=(OneLep && JetCounter<2);
	  bool GeOneLep01Jets=(GeOneLep && JetCounterB<2);
	  bool OneMu01Jets=(OneLep01Jets && PhoCleanedpfEles.size()==0 && PhoCleanedMuons.size()==1 && JetCounter<2);
	  bool OneEle01Jets=(OneLep01Jets && PhoCleanedpfEles.size()==1 && PhoCleanedMuons.size()==0 && JetCounter<2);
	  bool GeOneMu01Jets=(GeOneLep01Jets && PhoCleanedMuons.size()>=1 && JetCounterB<2);
	  bool OneMu0Ele01Jets=(GeOneMu01Jets && PhoCleanedpfEles.size()==0 && PhoCleanedMuons.size()==1);
	  bool OneMu1Ele01Jets=(GeOneMu01Jets && PhoCleanedpfEles.size()==1 && PhoCleanedMuons.size()==1);
	  bool OneMu2Ele01Jets=(GeOneMu01Jets && PhoCleanedpfEles.size()==2 && PhoCleanedMuons.size()==1);
	  bool TwoMu0Ele01Jets=(GeOneMu01Jets && PhoCleanedpfEles.size()==0 && PhoCleanedMuons.size()==2);
	  bool TwoMu1Ele01Jets=(GeOneMu01Jets && PhoCleanedpfEles.size()==1 && PhoCleanedMuons.size()==2);
	  bool ThreeMu0Ele01Jets=(GeOneMu01Jets && PhoCleanedpfEles.size()==0 && PhoCleanedMuons.size()==3);
	  bool GeOneEle01Jets=(GeOneLep01Jets && PhoCleanedpfEles.size()>=1 && JetCounterB<2 && !GeOneMu01Jets);
	  bool OneEle0Mu01Jets=(GeOneLep01Jets && PhoCleanedpfEles.size()==1 && JetCounterB<2 && !GeOneMu01Jets);
	  bool TwoEle0Mu01Jets=(GeOneLep01Jets && PhoCleanedpfEles.size()==2 && JetCounterB<2 && !GeOneMu01Jets);
	  bool ThreeEle0Mu01Jets=(GeOneLep01Jets && PhoCleanedpfEles.size()==3 && JetCounterB<2 && !GeOneMu01Jets);
	  bool TwoLep=((PhoCleanedpfEles.size()+PhoCleanedMuons.size()==2));
	  bool TwoLep01Jets=(TwoLep && JetCounter<2);
	  bool TwoEle01Jets=(TwoLep01Jets && PhoCleanedpfEles.size()==2 && PhoCleanedMuons.size()==0 && JetCounter<2);
	  bool TwoMu01Jets=(TwoLep01Jets && PhoCleanedpfEles.size()==0 && PhoCleanedMuons.size()==2 && JetCounter<2);
	  bool OneEleOneMu01Jets=(TwoLep01Jets && PhoCleanedpfEles.size()==1 && PhoCleanedMuons.size()==1 && JetCounter<2);

	  bool Ge2bJets = JetCounterB>=2;
	  bool GeOneMu01bJets = (JetCounterB<2 && PhoCleanedMuons.size()>=1);
	  bool GeOneEle01bJets = (JetCounterB<2 && PhoCleanedMuons.size()==0 && PhoCleanedpfEles.size()>=1);
	  bool GeOneMu01bJets_noClean_noBveto = (Muons.size()>=1);
	  bool GeOneEle01bJets_noClean_noBveto = (Muons.size()==0 && pfEles.size()>=1);
	  bool GeOneMu01bJets_noClean = (JetCounterB<2 && Muons.size()>=1);
	  bool GeOneEle01bJets_noClean = (JetCounterB<2 && Muons.size()==0 && pfEles.size()>=1);
	  bool Lt2bjets0lep = (JetCounterB<2 && PhoCleanedMuons.size()==0 && PhoCleanedpfElesVeto.size()==0);

	  h_met_Phi_ggLoose->Fill(met->mEt.Phi());
	  if(met->met()>15){h_met_Phi_ggLoose_metGT15->Fill(met->mEt.Phi());}
	  if(met->met()>30){h_met_Phi_ggLoose_metGT30->Fill(met->mEt.Phi());}
	  if(met->met()>50){h_met_Phi_ggLoose_metGT50->Fill(met->mEt.Phi());}

	  if(printLevel>0)cout<<"Exclusive Selection booleans set"<<endl;
	  ngg_Loose_Excl++;

	  if(mChi==130 && mBino==1){
	    
	    eleCutFlow[NeleCutFlow]++;NeleCutFlow++;//diphoton
	    muCutFlow[NmuCutFlow]++;NmuCutFlow++;
	    
	    /*
	      bool matchPhoOne=false, matchPhoTwo=false;
	      susy::Particle *matchPart1,*matchPart2;
	      if(!event->isRealData){
	      float closestDR1=999.,tempClosestDR1=999.,closestDR2=999.,tempClosestDR2=999.;
	      for(std::vector<susy::Particle>::iterator Part_it = event->genParticles.begin(); Part_it != (event->genParticles.end()-1); Part_it++){
	      if(Part_it->momentum.Et()){
	      tempClosestDR1=getDR(PhoOne->caloPosition,Part_it->momentum);
	      if(tempClosestDR1<closestDR1)closestDR1=tempClosestDR1;
	      matchPart1=&*Part_it;
	      tempClosestDR2=getDR(PhoOne->caloPosition,Part_it->momentum);
	      if(tempClosestDR2<closestDR2)closestDR2=tempClosestDR2;
	      matchPart2=&*Part_it;
	      }
	      }
	      }
	      
	      if(matchPart1->pdgId==22)matchPhoOne=true;
	      if(matchPart2->pdgId==22)matchPhoTwo=true;
	      if(!matchPhoOne || !matchPhoTwo)continue;//remove this after check
	      
	      eleCutFlow[NeleCutFlow]++;NeleCutFlow++;//diphoton, force generator level match
	      muCutFlow[NmuCutFlow]++;NmuCutFlow++;
	    */
	    
	    
	    if(GeOneMu01bJets_noClean_noBveto){
	      muCutFlow[NmuCutFlow]++;NmuCutFlow++;//diphoton+muon, no dr cleaning, no b veto
	      
	    }
	    if(GeOneEle01bJets_noClean_noBveto){
	      eleCutFlow[NeleCutFlow]++;NeleCutFlow++;//diphoton+electron, no dr cleaning, no b veto
	      
	    }
	    if(GeOneMu01bJets_noClean){
	      muCutFlow[NmuCutFlow]++;NmuCutFlow++;//diphoton+muon, no dr cleaning
	      
	    }
	    if(GeOneEle01bJets_noClean){
	      eleCutFlow[NeleCutFlow]++;NeleCutFlow++;//diphoton+electron, no dr cleaning
	      
	    }  
	  }
	  
	  if(Ge2bJets){ngg2b++;
	    h_ggMetVsInvarMass_Loose_2b->Fill(InvMass,met->met(),PUweight);
	    if(InvMass>InvMassLow && InvMass<InvMassHigh)h_gg_SMS_Loose_2b_mChi_mBino_met->Fill((float)mChi,(float)mBino,met->met(),PUweight);
	  }
	  else{nNotGe2bJets++;}
	  if(printLevel>0)cout<<"Exclusive Selection - gg+e"<<endl;
	  if( GeOneEle01bJets ){
	    h_ggMetVsInvarMass_Loose_1Ele_0_1Jets_FULL->Fill(InvMass,met->met(),PUweight);
	    h_ggMTvsInvarMass_Loose_1Ele_0_1Jets_FULL->Fill(InvMass,TransverseMass(PhoCleanedpfEles[0]->momentum,met->mEt),PUweight);

	    if((InvariantMass(p4PhoOneVcorr,PhoCleanedpfEles[0]->momentum)<86 || InvariantMass(p4PhoOneVcorr,PhoCleanedpfEles[0]->momentum)>96)
	       && (InvariantMass(p4PhoTwoVcorr,PhoCleanedpfEles[0]->momentum)<86 || InvariantMass(p4PhoTwoVcorr,PhoCleanedpfEles[0]->momentum)>96)) 
	      {
		if(mChi==130 && mBino==1)eleCutFlow[NeleCutFlow]++;NeleCutFlow++;//diphoton+electron, m_{e,gamma} veto
		h_met_Phi_ggLoose_Ele->Fill(met->mEt.Phi(),PUweight);
		float PUweight_noScaleFactor=PUweight;
		if(!event->isRealData)PUweight*=GetEleScaleFactor(PhoCleanedpfEles[0]);
		h_ggMetVsInvarMass_Loose_1Ele_0_1Jets->Fill(InvMass,met->met(),PUweight);
		h_ggMTvsInvarMass_Loose_1Ele_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedpfEles[0]->momentum,met->mEt),PUweight);
		h_ggMTvsInvarMass_Loose_1Lep_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedpfEles[0]->momentum,met->mEt),PUweight);
		h_ggMT_JECup_Loose_1Ele_0_1Jets->Fill(TransverseMass(PhoCleanedpfEles[0]->momentum,metJECupVec),PUweight);
		h_ggMT_JECdown_Loose_1Ele_0_1Jets->Fill(TransverseMass(PhoCleanedpfEles[0]->momentum,metJECdownVec),PUweight);
		h_ggMT_NoJEC_Loose_1Ele_0_1Jets->Fill(TransverseMass(PhoCleanedpfEles[0]->momentum,metNoJECVec),PUweight);
		h_ggMet_JECup_Loose_1Ele_0_1Jets->Fill(metJECup,PUweight);
		h_ggMet_JECdown_Loose_1Ele_0_1Jets->Fill(metJECdown,PUweight);
		h_ggMet_NoJEC_Loose_1Ele_0_1Jets->Fill(metNoJEC,PUweight);
		//cout<<"mt raw: "<<TransverseMass(PhoCleanedpfEles[0]->momentum,metNoJECVec)<<" JECup: "<<TransverseMass(PhoCleanedpfEles[0]->momentum,metJECupVec)<<"JEC down: "<<TransverseMass(PhoCleanedpfEles[0]->momentum,metJECdownVec)<<endl;
		if(InvMass>InvMassLow && InvMass<InvMassHigh){
		  h_SMS_ggMT_JECup_Loose_1Ele_0_1Jets->Fill((float)mChi,(float)mBino,TransverseMass(PhoCleanedpfEles[0]->momentum,metJECupVec),PUweight);
		  h_SMS_ggMT_JECdown_Loose_1Ele_0_1Jets->Fill((float)mChi,(float)mBino,TransverseMass(PhoCleanedpfEles[0]->momentum,metJECdownVec),PUweight);
		  h_SMS_ggMT_NoJEC_Loose_1Ele_0_1Jets->Fill((float)mChi,(float)mBino,TransverseMass(PhoCleanedpfEles[0]->momentum,metNoJECVec),PUweight);
		  h_SMS_ggMet_JECup_Loose_1Ele_0_1Jets->Fill((float)mChi,(float)mBino,metJECup,PUweight);
		  h_SMS_ggMet_JECdown_Loose_1Ele_0_1Jets->Fill((float)mChi,(float)mBino,metJECdown,PUweight);
		  h_SMS_ggMet_NoJEC_Loose_1Ele_0_1Jets->Fill((float)mChi,(float)mBino,metNoJEC,PUweight);
		}

		if(OneEle0Mu01Jets){
		  if(printLevel>0)cout<<"Exclusive Selection - gg+e - 1 ele, 0 mu"<<endl;
		  h_ggMetVsInvarMass_Loose_exactly1Ele_0_1Jets->Fill(InvMass,met->met(),PUweight);
		  h_ggMTvsInvarMass_Loose_exactly1Ele_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedpfEles[0]->momentum,met->mEt),PUweight);
		  /*if(InvMass>120 && InvMass<131)*/if(event->isRealData)cout<<"1 ele, 0 mu, pho1 pt="<<PhoOne->momentum.Pt()<<"  pho2 pt="<<PhoTwo->momentum.Pt()<<"  m_gg= "<<InvMass<<"  ele1 pt="<<PhoCleanedpfEles[0]->momentum.Pt()<<"                   met= "<<met->met()<<"  mt= "<<TransverseMass(PhoCleanedpfEles[0]->momentum,met->mEt)<<" :\n          runNumber="<<event->runNumber<<"  lumiNumber="<<event->luminosityBlockNumber<<" Event "<<event->eventNumber<<endl;
		}
    		if(TwoEle0Mu01Jets){
		  if(printLevel>0)cout<<"Exclusive Selection - gg+e - 2 ele, 0 mu"<<endl;
		  h_ggMetVsInvarMass_Loose_exactly2Ele_0_1Jets->Fill(InvMass,met->met(),PUweight);
		  h_ggMTvsInvarMass_Loose_exactly2Ele_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedpfEles[0]->momentum,met->mEt),PUweight);
		  h_eeMetVsInvarMass_gg_Loose_exactly2Ele_0_1Jets->Fill(InvariantMass(PhoCleanedpfEles[0]->momentum,PhoCleanedpfEles[1]->momentum),met->met(),PUweight);
		  h_eeMTvsInvarMass_gg_Loose_exactly2Ele_0_1Jets->Fill(InvariantMass(PhoCleanedpfEles[0]->momentum,PhoCleanedpfEles[1]->momentum),TransverseMass(PhoCleanedpfEles[0]->momentum,met->mEt),PUweight);
		  /*if(InvMass>120 && InvMass<131)*/if(event->isRealData)cout<<"2 ele, 0 mu, pho1 pt="<<PhoOne->momentum.Pt()<<"  pho2 pt="<<PhoTwo->momentum.Pt()<<"  m_gg= "<<InvMass<<"  ele1 pt="<<PhoCleanedpfEles[0]->momentum.Pt()<<"  ele2 pt="<<PhoCleanedpfEles[1]->momentum.Pt()<<"  met= "<<met->met()<<"  mt= "<<TransverseMass(PhoCleanedpfEles[0]->momentum,met->mEt)<<"\n          eeg1 invmass:"<<InvariantMass(PhoOne->momentum,PhoCleanedpfEles[0]->momentum,PhoCleanedpfEles[1]->momentum)<<"  eeg2 invmass:"<<InvariantMass(PhoTwo->momentum,PhoCleanedpfEles[0]->momentum,PhoCleanedpfEles[1]->momentum)<<" :\n          runNumber="<<event->runNumber<<"  lumiNumber="<<event->luminosityBlockNumber<<" Event "<<event->eventNumber<<endl;

		}
    		if(ThreeEle0Mu01Jets){
		  h_ggMetVsInvarMass_Loose_exactly3Ele_0_1Jets->Fill(InvMass,met->met(),PUweight);
		  h_ggMTvsInvarMass_Loose_exactly3Ele_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedpfEles[0]->momentum,met->mEt),PUweight);
		}
		h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_InvMass->Fill((float)mChi,(float)mBino,InvMass,PUweight);
		if(InvMass>InvMassLow && InvMass<InvMassHigh){
		  h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_met->Fill((float)mChi,(float)mBino,met->met(),PUweight);
		  h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_MT_noScaleFactor->Fill((float)mChi,(float)mBino,TransverseMass(PhoCleanedpfEles[0]->momentum,met->mEt),PUweight_noScaleFactor);
		  h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_MT_noScaleFactor_noPUweight->Fill((float)mChi,(float)mBino,TransverseMass(PhoCleanedpfEles[0]->momentum,met->mEt),1);
		  h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_met_noScaleFactor->Fill((float)mChi,(float)mBino,met->met(),PUweight_noScaleFactor);
		  h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_met_noScaleFactor_noPUweight->Fill((float)mChi,(float)mBino,met->met(),1);
		  h_gg_SMS_Loose_1Ele_0_1Jets_mChi_mBino_MT->Fill((float)mChi,(float)mBino,TransverseMass(PhoCleanedpfEles[0]->momentum,met->mEt),PUweight);
		  if(mChi==130 && mBino==1)h_ggEle_ElePt->Fill(PhoCleanedpfEles[0]->momentum.Pt());
		  if(mChi==130 && mBino==1)eleCutFlow[NeleCutFlow]++;NeleCutFlow++;//diphoton+electron, higgs invmass  -- final count
		}
	      }
	    else{
	      h_ggMetVsInvarMass_Loose_1Ele_0_1Jets_ePhoZ->Fill(InvMass,met->met(),PUweight);
	      h_ggMTvsInvarMass_Loose_1Ele_0_1Jets_ePhoZ->Fill(InvMass,TransverseMass(PhoCleanedpfEles[0]->momentum,met->mEt),PUweight);
	    }
	    h_ggMetVsInvarMassEPho_Loose_1Ele_0_1Jets->Fill(InvariantMass(p4PhoOneVcorr,PhoCleanedpfEles[0]->momentum),met->met(),PUweight);
	    h_ggMetVsInvarMassEPho1_Loose_1Ele_0_1Jets->Fill(InvariantMass(p4PhoOneVcorr,PhoCleanedpfEles[0]->momentum),met->met(),PUweight);
	    h_ggMetVsInvarMassEPho_Loose_1Ele_0_1Jets->Fill(InvariantMass(p4PhoTwoVcorr,PhoCleanedpfEles[0]->momentum),met->met(),PUweight);
	    h_ggMetVsInvarMassEPho2_Loose_1Ele_0_1Jets->Fill(InvariantMass(p4PhoTwoVcorr,PhoCleanedpfEles[0]->momentum),met->met(),PUweight);
	    h_ggInvarMassVsInvarMassEPho_Loose_1Ele_0_1Jets->Fill(InvariantMass(p4PhoTwoVcorr,PhoCleanedpfEles[0]->momentum),InvMass,PUweight);
	    h_eleCHiso_Loose_1Ele_0_1Jets->Fill(PhoCleanedpfEles[0]->chargedHadronIso,PUweight);
	    h_eleNHiso_Loose_1Ele_0_1Jets->Fill(PhoCleanedpfEles[0]->neutralHadronIso,PUweight);
	    h_elePHiso_Loose_1Ele_0_1Jets->Fill(PhoCleanedpfEles[0]->photonIso,PUweight);
	    h_eleIso_Loose_1Ele_0_1Jets->Fill(PhoCleanedpfEles[0]->chargedHadronIso+PhoCleanedpfEles[0]->neutralHadronIso+PhoCleanedpfEles[0]->photonIso,PUweight);
	    h_eleRelIso_1Ele_0_1Jets->Fill((PhoCleanedpfEles[0]->chargedHadronIso+PhoCleanedpfEles[0]->neutralHadronIso+PhoCleanedpfEles[0]->photonIso)/PhoCleanedpfEles[0]->momentum.Pt());
	    if((InvariantMass(p4PhoOneVcorr,PhoCleanedpfEles[0]->momentum)>86 && InvariantMass(p4PhoOneVcorr,PhoCleanedpfEles[0]->momentum)<96)){
	      h_eleRelIso_1Ele_0_1Jets_Z->Fill((PhoCleanedpfEles[0]->chargedHadronIso+PhoCleanedpfEles[0]->neutralHadronIso+PhoCleanedpfEles[0]->photonIso)/PhoCleanedpfEles[0]->momentum.Pt());
	      h_eleSihih_1Ele_0_1Jets_Z->Fill(PhoCleanedpfEles[0]->sigmaIetaIeta);
	      TLorentzVector trackMomentum=PhoCleanedpfEles[0]->trackMomentums["AtVtx"];
	      h_eleOneOverEminusOneOverP_1Ele_0_1Jets_Z->Fill(fabs(1./PhoCleanedpfEles[0]->ecalEnergy - 1./trackMomentum.P()));
	    }
	    else if((InvariantMass(p4PhoTwoVcorr,PhoCleanedpfEles[0]->momentum)>86 && InvariantMass(p4PhoTwoVcorr,PhoCleanedpfEles[0]->momentum)<96)){
	      h_eleRelIso_1Ele_0_1Jets_Z->Fill((PhoCleanedpfEles[0]->chargedHadronIso+PhoCleanedpfEles[0]->neutralHadronIso+PhoCleanedpfEles[0]->photonIso)/PhoCleanedpfEles[0]->momentum.Pt());
	      h_eleSihih_1Ele_0_1Jets_Z->Fill(PhoCleanedpfEles[0]->sigmaIetaIeta);
	      TLorentzVector trackMomentum=PhoCleanedpfEles[0]->trackMomentums["AtVtx"];
	      h_eleOneOverEminusOneOverP_1Ele_0_1Jets_Z->Fill(fabs(1./PhoCleanedpfEles[0]->ecalEnergy - 1./trackMomentum.P()));
	    }
	    else h_eleRelIso_1Ele_0_1Jets_noZ->Fill((PhoCleanedpfEles[0]->chargedHadronIso+PhoCleanedpfEles[0]->neutralHadronIso+PhoCleanedpfEles[0]->photonIso)/PhoCleanedpfEles[0]->momentum.Pt());
	    h_eleSihih_1Ele_0_1Jets_noZ->Fill(PhoCleanedpfEles[0]->sigmaIetaIeta);
	    TLorentzVector trackMomentum=PhoCleanedpfEles[0]->trackMomentums["AtVtx"];
	    h_eleOneOverEminusOneOverP_1Ele_0_1Jets_noZ->Fill(fabs(1./PhoCleanedpfEles[0]->ecalEnergy - 1./trackMomentum.P()));
	  }
	  else nNotGeOneEle01bJets++;

	  if(printLevel>0)cout<<"Exclusive Selection - gg+mu"<<endl;
	  if( GeOneMu01bJets ){

	    h_ggMetVsInvarMass_Loose_1Mu_0_1Jets_FULL->Fill(InvMass,met->met(),PUweight);
	    h_ggMTvsInvarMass_Loose_1Mu_0_1Jets_FULL->Fill(InvMass,TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),PUweight);
	    //cout<<"before"<<endl;
	    //if((InvariantMass(p4PhoOneVcorr,PhoCleanedMuons[0]->momentum)<86 || InvariantMass(p4PhoOneVcorr,PhoCleanedMuons[0]->momentum)>96)//test for m_{mu,g} veto
	    //   && (InvariantMass(p4PhoTwoVcorr,PhoCleanedMuons[0]->momentum)<86 || InvariantMass(p4PhoTwoVcorr,PhoCleanedMuons[0]->momentum)>96))//test for m_{mu,g} veto 
	    //  {//test for m_{mu,g} veto
	      //cout<<"after"<<endl;
	    h_met_Phi_ggLoose_Mu->Fill(met->mEt.Phi(),PUweight);
	    float PUweight_noScaleFactor=PUweight;
	    if(!event->isRealData)PUweight*=GetMuScaleFactor(PhoCleanedMuons[0]);
	    h_ggMetVsInvarMass_Loose_1Mu_0_1Jets->Fill(InvMass,met->met(),PUweight);
	    if(mChi==130 && mBino==1)muCutFlow[NmuCutFlow]++;NmuCutFlow++;//diphoton+muon  -- before invmass
	    h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_InvMass->Fill((float)mChi,(float)mBino,InvMass,PUweight);
	    if(InvMass>InvMassLow && InvMass<InvMassHigh){
	      h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_met->Fill((float)mChi,(float)mBino,met->met(),PUweight);
	      h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_MT->Fill((float)mChi,(float)mBino,TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),PUweight);
	      h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_MT_noScaleFactor->Fill((float)mChi,(float)mBino,TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),PUweight_noScaleFactor);
	      h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_MT_noScaleFactor_noPUweight->Fill((float)mChi,(float)mBino,TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),1);
	      h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_met_noScaleFactor->Fill((float)mChi,(float)mBino,met->met(),PUweight_noScaleFactor);
	      h_gg_SMS_Loose_1Mu_0_1Jets_mChi_mBino_met_noScaleFactor_noPUweight->Fill((float)mChi,(float)mBino,met->met(),1);
	      if(mChi==130 && mBino==1)h_ggMu_MuPt->Fill(PhoCleanedMuons[0]->momentum.Pt());
	      if(mChi==130 && mBino==1)muCutFlow[NmuCutFlow]++;NmuCutFlow++;//diphoton+muon  -- final count
	      //cout<<"mChi: "<<mChi<<"  mBino: "<<mBino<<endl;
	    }
	    //  }//test for m_{mu,g} veto
	    h_ggMTvsInvarMass_Loose_1Mu_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),PUweight);
	    h_ggMTvsInvarMass_Loose_1Lep_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),PUweight);
	    h_ggMT_JECup_Loose_1Mu_0_1Jets->Fill(TransverseMass(PhoCleanedMuons[0]->momentum,metJECupVec),PUweight);
	    h_ggMT_JECdown_Loose_1Mu_0_1Jets->Fill(TransverseMass(PhoCleanedMuons[0]->momentum,metJECdownVec),PUweight);
	    h_ggMT_NoJEC_Loose_1Mu_0_1Jets->Fill(TransverseMass(PhoCleanedMuons[0]->momentum,metNoJECVec),PUweight);
	    h_ggMet_JECup_Loose_1Mu_0_1Jets->Fill(metJECup,PUweight);
	    h_ggMet_JECdown_Loose_1Mu_0_1Jets->Fill(metJECdown,PUweight);
	    h_ggMet_NoJEC_Loose_1Mu_0_1Jets->Fill(metNoJEC,PUweight);
	    if(InvMass>InvMassLow && InvMass<InvMassHigh){
	      h_SMS_ggMT_JECup_Loose_1Mu_0_1Jets->Fill((float)mChi,(float)mBino,TransverseMass(PhoCleanedMuons[0]->momentum,metJECupVec),PUweight);
	      h_SMS_ggMT_JECdown_Loose_1Mu_0_1Jets->Fill((float)mChi,(float)mBino,TransverseMass(PhoCleanedMuons[0]->momentum,metJECdownVec),PUweight);
	      h_SMS_ggMT_NoJEC_Loose_1Mu_0_1Jets->Fill((float)mChi,(float)mBino,TransverseMass(PhoCleanedMuons[0]->momentum,metNoJECVec),PUweight);
	      h_SMS_ggMet_JECup_Loose_1Mu_0_1Jets->Fill((float)mChi,(float)mBino,metJECup,PUweight);
	      h_SMS_ggMet_JECdown_Loose_1Mu_0_1Jets->Fill((float)mChi,(float)mBino,metJECdown,PUweight);
	      h_SMS_ggMet_NoJEC_Loose_1Mu_0_1Jets->Fill((float)mChi,(float)mBino,metNoJEC,PUweight);
	    }
	    if(OneMu0Ele01Jets){
	      h_ggMTvsInvarMass_Loose_1Mu_0Ele_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),PUweight);
	      h_ggMetVsInvarMass_Loose_1Mu_0Ele_0_1Jets->Fill(InvMass,met->met(),PUweight);
	      /*if(InvMass>120 && InvMass<131)*/if(event->isRealData)cout<<"1 mu, 0 ele, pho1 pt="<<PhoOne->momentum.Pt()<<"  pho2 pt="<<PhoTwo->momentum.Pt()<<"  m_gg= "<<InvMass<<"  mu1 pt ="<<PhoCleanedMuons[0]->momentum.Pt()<<"                   met= "<<met->met()<<"  mt= "<<TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt)<<" :\n          runNumber="<<event->runNumber<<"  lumiNumber="<<event->luminosityBlockNumber<<" Event "<<event->eventNumber<<endl;
	    }
	    if(OneMu1Ele01Jets){
	      h_ggMTvsInvarMass_Loose_1Mu_1Ele_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),PUweight);
	      h_ggMetVsInvarMass_Loose_1Mu_1Ele_0_1Jets->Fill(InvMass,met->met(),PUweight);
	      /*if(InvMass>120 && InvMass<131)*/if(event->isRealData)cout<<"1 mu, 1 ele, pho1 pt="<<PhoOne->momentum.Pt()<<"  pho2 pt="<<PhoTwo->momentum.Pt()<<"  m_gg= "<<InvMass<<"  mu1 pt ="<<PhoCleanedMuons[0]->momentum.Pt()<<"  ele1 pt="<<PhoCleanedpfEles[0]->momentum.Pt()<<"  met= "<<met->met()<<"  mt= "<<TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt)<<" :\n          runNumber="<<event->runNumber<<"  lumiNumber="<<event->luminosityBlockNumber<<" Event "<<event->eventNumber<<endl;
	    }
	    if(OneMu2Ele01Jets){
	      h_ggMTvsInvarMass_Loose_1Mu_2Ele_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),PUweight);
	      h_ggMetVsInvarMass_Loose_1Mu_2Ele_0_1Jets->Fill(InvMass,met->met(),PUweight);
	    }
	    if(TwoMu0Ele01Jets){
	      h_ggMTvsInvarMass_Loose_2Mu_0Ele_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),PUweight);
	      h_ggMetVsInvarMass_Loose_2Mu_0Ele_0_1Jets->Fill(InvMass,met->met(),PUweight);
	      h_mumuMetVsInvarMass_gg_Loose_2Mu_0Ele_0_1Jets->Fill(InvariantMass(PhoCleanedMuons[0]->momentum,PhoCleanedMuons[1]->momentum),met->met(),PUweight);
	      h_mumuMTvsInvarMass_gg_Loose_2Mu_0Ele_0_1Jets->Fill(InvariantMass(PhoCleanedMuons[0]->momentum,PhoCleanedMuons[1]->momentum),TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),PUweight);
	      /*if(InvMass>120 && InvMass<131)*/if(event->isRealData)cout<<"2 mu, 0 ele, pho1 pt="<<PhoOne->momentum.Pt()<<"  pho2 pt="<<PhoTwo->momentum.Pt()<<"  m_gg= "<<InvMass<<"  mu1 pt ="<<PhoCleanedMuons[0]->momentum.Pt()<<"  mu2 pt ="<<PhoCleanedMuons[1]->momentum.Pt()<<"  met= "<<met->met()<<"  mt= "<<TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt)<<"\n          mumug1 invmass:"<<InvariantMass(PhoOne->momentum,PhoCleanedMuons[0]->momentum,PhoCleanedMuons[1]->momentum)<<"  mumug2 invmass:"<<InvariantMass(PhoTwo->momentum,PhoCleanedMuons[0]->momentum,PhoCleanedMuons[1]->momentum)<<" :\n          runNumber="<<event->runNumber<<"  lumiNumber="<<event->luminosityBlockNumber<<" Event "<<event->eventNumber<<endl;

	    }
	    if(ThreeMu0Ele01Jets){
	      h_ggMTvsInvarMass_Loose_3Mu_0Ele_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),PUweight);
	      h_ggMetVsInvarMass_Loose_3Mu_0Ele_0_1Jets->Fill(InvMass,met->met(),PUweight);
	    }
	    
	    if(TwoMu1Ele01Jets){
	      h_ggMTvsInvarMass_Loose_2Mu_1Ele_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),PUweight);
	      h_ggMetVsInvarMass_Loose_2Mu_1Ele_0_1Jets->Fill(InvMass,met->met(),PUweight);
	    }
	    /*
	    if(ThreeMu1Ele01Jets){
	      h_ggMTvsInvarMass_Loose_3Mu_1Ele_0_1Jets->Fill(InvMass,TransverseMass(PhoCleanedMuons[0]->momentum,met->mEt),PUweight);
	      h_ggMetVsInvarMass_Loose_3Mu_1Ele_0_1Jets->Fill(InvMass,met->met(),PUweight);
	    }
	    */
	  }	
	  else nNotGeOneMu01bJets++;
	    
	  if(printLevel>0)cout<<"Exclusive Selection - gg+<2bjets+0leps+no 70<M_jj<110 jets"<<endl;
	  if(Lt2bjets0lep){
	    Lt2bjets0lepCount++;
	    bool inWZwin=false;
	    if(JetCounter>=2){
	      for(std::vector<susy::PFJet*>::iterator jet_it = PhoCleanedpfJets_Loose.begin(); jet_it != PhoCleanedpfJets_Loose.end(); jet_it++){
		for(std::vector<susy::PFJet*>::iterator jet_it2 = (jet_it+1); jet_it2 != PhoCleanedpfJets_Loose.end(); jet_it2++){
		  if( InvariantMass((*jet_it)->momentum,(*jet_it2)->momentum)>65 && InvariantMass((*jet_it)->momentum,(*jet_it2)->momentum)<120 ){inWZwin=true;}
		}	
	      }
	    }
	    if(inWZwin==false){
	      h_ggMetVsInvarMass_Loose_lt2b_noMu_noEle_lt2jets->Fill(InvMass,met->met(),PUweight);
	      if(InvMass>InvMassLow && InvMass<InvMassHigh)h_gg_SMS_Loose_lt2b_noMu_noEle_lt2jets_mChi_mBino_met->Fill((float)mChi,(float)mBino,met->met(),PUweight);
	    }
	    else{h_ggMetVsInvarMass_Loose_lt2b_noMu_noEle_WZjets->Fill(InvMass,met->met(),PUweight);
	      if(InvMass>InvMassLow && InvMass<InvMassHigh)h_gg_SMS_Loose_lt2b_noMu_noEle_WZjets_mChi_mBino_met->Fill((float)mChi,(float)mBino,met->met(),PUweight);
	    }
	  }
	  else nNotLt2bjets0lep++;

	  if(printLevel>0)cout<<"Exclusive Selection - gg+0leps"<<endl;
	  if( ZeroLep ){
	    if( ZeroLep01Jets ){
	      h_ggMetVsInvarMass_Loose_0Lep_0_1Jets->Fill(InvMass,met->met(),PUweight);
	    }
	    if( ZeroLep23Jets ){
	      bool inWZwindow=false;
	      //cout<<"PhoCleanedpfJetsNoB_Loose.size(): "<<PhoCleanedpfJetsNoB_Loose.size()<<endl;
	      if(PhoCleanedpfJetsNoB_Loose.size()>=2){
		for(std::vector<susy::PFJet*>::iterator jet_it = PhoCleanedpfJetsNoB_Loose.begin(); jet_it != PhoCleanedpfJetsNoB_Loose.end(); jet_it++){
		  for(std::vector<susy::PFJet*>::iterator jet_it2 = (jet_it+1); jet_it2 != PhoCleanedpfJetsNoB_Loose.end(); jet_it2++){
		    if( InvariantMass((*jet_it)->momentum,(*jet_it2)->momentum)>65 && InvariantMass((*jet_it)->momentum,(*jet_it2)->momentum)<120 )inWZwindow=true;
		  }	
		}
	      }
	      if(inWZwindow)h_ggMetVsInvarMass_Loose_0Lep_2_3JetsWZwindow->Fill(InvMass,met->met(),PUweight);
	    }
	  }//0 lepton

	  if(printLevel>0)cout<<"Exclusive Selection - gg+1ele+1mu"<<endl;
	  if( OneEleOneMu01Jets ){
	    //cout<<"before inv mass"<<endl;
	    if(InvariantMass(PhoCleanedpfEles[0]->momentum,PhoCleanedMuons[0]->momentum)>81 && InvariantMass(PhoCleanedpfEles[0]->momentum,PhoCleanedMuons[0]->momentum)<101){
	      //cout<<"   in yes"<<endl;
	    }
	    else{//cout<<"   in no"<<endl;
	      h_ggMetVsInvarMass_Loose_2LepOSoffZ_0_1Jets->Fill(InvMass,met->met(),PUweight);
	      h_ggMT2VsInvarMass_Loose_2LepOSoffZ_0_1Jets->Fill(InvMass,TransverseMassSquare3body(PhoCleanedpfEles[0]->momentum,PhoCleanedMuons[0]->momentum,met->mEt),PUweight);
	    }
	  }//1 ele && 1 muon
	  else if( OneLep01Jets ){
	    //if( PhoCleanedpfEles.size()==1 && PhoCleanedMuons.size()==1)cout<<"Run:"<<event->runNumber<<" Event:"<<event->eventNumber<<" has 1 ele and 1 muon"<<endl;
	    h_ggMetVsInvarMass_Loose_1Lep_0_1Jets->Fill(InvMass,met->met(),PUweight);
	    if(InvMass>InvMassLow && InvMass<InvMassHigh)h_gg_SMS_Loose_1Lep_0_1Jets_mChi_mBino_met->Fill((float)mChi,(float)mBino,met->met(),PUweight);
	      
	  }//1 lepton
	  else if( TwoLep01Jets ){
	    //if( PhoCleanedpfEles.size()==1 && PhoCleanedMuons.size()==1)cout<<"Run:"<<event->runNumber<<" Event:"<<event->eventNumber<<" has 1 ele and 1 muon"<<endl;
	    if( TwoEle01Jets ){
	      //if(PhoCleanedpfEles[0]->scPixCharge*PhoCleanedpfEles[1]->scPixCharge == -1){
	      //opposite charge
	      if(InvariantMass(PhoCleanedpfEles[0]->momentum,PhoCleanedpfEles[1]->momentum)>81 && InvariantMass(PhoCleanedpfEles[0]->momentum,PhoCleanedpfEles[1]->momentum)<101){
		h_ggMetVsInvarMass_Loose_2EleOSonZ_0_1Jets->Fill(InvMass,met->met(),PUweight);
		h_ggMetVsInvarMass_Loose_2LepOSSFonZ_0_1Jets->Fill(InvMass,met->met(),PUweight);
	      }
	      else{
		h_ggMetVsInvarMass_Loose_2LepOSoffZ_0_1Jets->Fill(InvMass,met->met(),PUweight);
		if(InvMass>InvMassLow && InvMass<InvMassHigh)h_gg_SMS_Loose_2LepOSoffZ_0_1Jets_mChi_mBino_met->Fill((float)mChi,(float)mBino,met->met(),PUweight);
		h_ggMT2VsInvarMass_Loose_2LepOSoffZ_0_1Jets->Fill(InvMass,TransverseMassSquare3body(PhoCleanedpfEles[0]->momentum,PhoCleanedpfEles[1]->momentum,met->mEt),PUweight);
	      }
	      //}//opposite charge
	    }
	    if( TwoMu01Jets ){
	      //don't have charge info for muons
	      if(InvariantMass(PhoCleanedMuons[0]->momentum,PhoCleanedMuons[1]->momentum)>81 && InvariantMass(PhoCleanedMuons[0]->momentum,PhoCleanedMuons[1]->momentum)<101){
		h_ggMetVsInvarMass_Loose_2MuOSonZ_0_1Jets->Fill(InvMass,met->met(),PUweight);
		h_ggMetVsInvarMass_Loose_2LepOSSFonZ_0_1Jets->Fill(InvMass,met->met(),PUweight);
	      }
	      else{
		h_ggMetVsInvarMass_Loose_2LepOSoffZ_0_1Jets->Fill(InvMass,met->met(),PUweight);
		if(InvMass>InvMassLow && InvMass<InvMassHigh)h_gg_SMS_Loose_2LepOSoffZ_0_1Jets_mChi_mBino_met->Fill((float)mChi,(float)mBino,met->met(),PUweight);
		h_ggMT2VsInvarMass_Loose_2LepOSoffZ_0_1Jets->Fill(InvMass,TransverseMassSquare3body(PhoCleanedMuons[0]->momentum,PhoCleanedMuons[1]->momentum,met->mEt),PUweight);
	      }
	    }
	  }//2 lepton



	}//end dogg
      }//end Loose Photons
      //next Med Photons
      JetCounter=0;breakPho=false;IsGoodJet=true;dogg=false;
      if( pho_Cands_Med.size()>=2 && (*pho_Cands_Med.begin())->momentum.Et()>leadEtCut){ //make sure top pT object has at least 40GeV
	if(printLevel>0)cout<<"Now do phoCands no jet req case"<<endl;
	breakPho=false;	  
	for(std::vector<susy::Photon*>::iterator pho_it = pho_Cands_Med.begin();pho_it<(pho_Cands_Med.end())-1;pho_it++){
	  if(breakPho)break;
	  PhoOne=*pho_it;if(PhoOne->MVAcorrMomentum.Pt()<leadEtCut)break;
	  for(std::vector<susy::Photon*>::iterator pho_it2 = (pho_it+1);pho_it2!=pho_Cands_Med.end();pho_it2++){
	    //require dPhi>0.05,dR>0.6
	    if( !isSameObject(PhoOne->caloPosition,(*pho_it2)->caloPosition,0.6) 
		&& !tooClosePhi(PhoOne->caloPosition,(*pho_it2)->caloPosition,0.05) ){
	      PhoTwo=*pho_it2;breakPho=true;dogg=true;
	      //use pfJets
	      for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.begin(); jet_it != pfJets.end(); jet_it++){
		IsGoodJet=true;
		if(!isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5) && !isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5)){
		  JetCounter++;
		  if(JetCounter==1)invmassJet1=(*jet_it);if(JetCounter==2)invmassJet2=(*jet_it);
		  PhoCleanedpfJets_Med.push_back(*jet_it);
		}
	      }//end pfjets
	      break;
	    }//end dR, dPhi photon cut
	  }//end pho2
	}//end pho1
	if(dogg){
	  if(printLevel>0)cout<<"Inside gg_Med"<<endl;
	  ngg_Med++;
	  /* TVector3 vPos = primVtx.position;
	     TVector3 dirPhoOne=PhoOne->caloPosition - vPos,dirPhoTwo=PhoTwo->caloPosition - vPos;
	     TVector3 pOne=dirPhoOne.Unit()*PhoOne->MVAregEnergy,pTwo=dirPhoTwo.Unit()*PhoTwo->MVAregEnergy;
	     TLorentzVector p4PhoOneVcorr(pOne.x(),pOne.y(),pOne.z(),PhoOne->MVAregEnergy),p4PhoTwoVcorr(pTwo.x(),pTwo.y(),pTwo.z(),PhoTwo->MVAregEnergy);
	     float InvMass=InvariantMass(p4PhoOneVcorr,p4PhoTwoVcorr);*/
	  TVector3 vPos = primVtx.position;
	  TVector3 dirPhoOne=PhoOne->caloPosition - vPos,dirPhoTwo=PhoTwo->caloPosition - vPos;
	  TVector3 pOne=dirPhoOne.Unit()*(PhoOne->MVAcorrMomentum).E(),pTwo=dirPhoTwo.Unit()*(PhoTwo->MVAcorrMomentum).E();
	  if(!event->isRealData && FastSim==true){PhoOne->MVAcorrMomentum*=FastSimSmear(PhoOne,rando);PhoTwo->MVAcorrMomentum*=FastSimSmear(PhoTwo,rando);}
	  else if(!event->isRealData && FullSim==true){PhoOne->MVAcorrMomentum*=FullSimSmear(PhoOne,rando);PhoTwo->MVAcorrMomentum*=FullSimSmear(PhoTwo,rando);}
	  TLorentzVector p4PhoOneVcorr(pOne.x(),pOne.y(),pOne.z(),(PhoOne->MVAcorrMomentum).E()),p4PhoTwoVcorr(pTwo.x(),pTwo.y(),pTwo.z(),(PhoTwo->MVAcorrMomentum).E());
	  float InvMass=InvariantMass(p4PhoOneVcorr,p4PhoTwoVcorr);
	  float InvMassJets=InvariantMass(invmassJet1->momentum,invmassJet2->momentum);
	  h_ggMetVsInvarMass_Med->Fill(InvMass,met->met(),PUweight);
	  if(JetCounter>0){h_ggMetVsInvarMass_Med_JetReq->Fill(InvMass,met->met(),PUweight);ngg_Med_JetReq++;}
	  if(JetCounter>1){h_ggMetVsInvarMass_Med_2JetReq->Fill(InvMass,met->met(),PUweight);h_ggJetsInvarMass_Med->Fill(InvMassJets,PUweight);ngg_Med_2JetReq++;}
	  if(JetCounter>2){h_ggMetVsInvarMass_Med_3JetReq->Fill(InvMass,met->met(),PUweight);ngg_Med_3JetReq++;}
	}//end dogg
      }//end Med Photons
      //next Tight Photons
      JetCounter=0;breakPho=false;IsGoodJet=true;dogg=false;
      if( pho_Cands_Tight.size()>=2 && (*pho_Cands_Tight.begin())->momentum.Et()>leadEtCut){ //make sure top pT object has at least 40GeV
	if(printLevel>0)cout<<"Now do phoCands no jet req case"<<endl;
	breakPho=false;	  
	for(std::vector<susy::Photon*>::iterator pho_it = pho_Cands_Tight.begin();pho_it<(pho_Cands_Tight.end())-1;pho_it++){
	  if(breakPho)break;
	  PhoOne=*pho_it;if(PhoOne->MVAcorrMomentum.Pt()<leadEtCut)break;
	  for(std::vector<susy::Photon*>::iterator pho_it2 = (pho_it+1);pho_it2!=pho_Cands_Tight.end();pho_it2++){
	    //require dPhi>0.05,dR>0.6
	    if( !isSameObject(PhoOne->caloPosition,(*pho_it2)->caloPosition,0.6) 
		&& !tooClosePhi(PhoOne->caloPosition,(*pho_it2)->caloPosition,0.05) ){
	      PhoTwo=*pho_it2;breakPho=true;dogg=true;
	      //use pfJets
	      for(std::vector<susy::PFJet*>::iterator jet_it = pfJets.begin(); jet_it != pfJets.end(); jet_it++){
		IsGoodJet=true;
		if(!isSameObject(PhoOne->caloPosition,(*jet_it)->momentum,0.5) && !isSameObject(PhoTwo->caloPosition,(*jet_it)->momentum,0.5)){
		  JetCounter++;
		  if(JetCounter==1)invmassJet1=(*jet_it);if(JetCounter==2)invmassJet2=(*jet_it);
		  PhoCleanedpfJets_Tight.push_back(*jet_it);
		}
	      }//end pfjets
	      break;
	    }//end dR, dPhi photon cut
	  }//end pho2
	}//end pho1
	if(dogg){
	  if(printLevel>0)cout<<"Inside gg_Tight"<<endl;
	  ngg_Tight++;
	  /* TVector3 vPos = primVtx.position;
	     TVector3 dirPhoOne=PhoOne->caloPosition - vPos,dirPhoTwo=PhoTwo->caloPosition - vPos;
	     TVector3 pOne=dirPhoOne.Unit()*PhoOne->MVAregEnergy,pTwo=dirPhoTwo.Unit()*PhoTwo->MVAregEnergy;
	     TLorentzVector p4PhoOneVcorr(pOne.x(),pOne.y(),pOne.z(),PhoOne->MVAregEnergy),p4PhoTwoVcorr(pTwo.x(),pTwo.y(),pTwo.z(),PhoTwo->MVAregEnergy);
	     float InvMass=InvariantMass(p4PhoOneVcorr,p4PhoTwoVcorr);*/
	  TVector3 vPos = primVtx.position;
	  TVector3 dirPhoOne=PhoOne->caloPosition - vPos,dirPhoTwo=PhoTwo->caloPosition - vPos;
	  TVector3 pOne=dirPhoOne.Unit()*(PhoOne->MVAcorrMomentum).E(),pTwo=dirPhoTwo.Unit()*(PhoTwo->MVAcorrMomentum).E();
	  if(!event->isRealData && FastSim==true){PhoOne->MVAcorrMomentum*=FastSimSmear(PhoOne,rando);PhoTwo->MVAcorrMomentum*=FastSimSmear(PhoTwo,rando);}
	  else if(!event->isRealData && FullSim==true){PhoOne->MVAcorrMomentum*=FullSimSmear(PhoOne,rando);PhoTwo->MVAcorrMomentum*=FullSimSmear(PhoTwo,rando);}
	  TLorentzVector p4PhoOneVcorr(pOne.x(),pOne.y(),pOne.z(),(PhoOne->MVAcorrMomentum).E()),p4PhoTwoVcorr(pTwo.x(),pTwo.y(),pTwo.z(),(PhoTwo->MVAcorrMomentum).E());
	  float InvMass=InvariantMass(p4PhoOneVcorr,p4PhoTwoVcorr);
	  float InvMassJets=InvariantMass(invmassJet1->momentum,invmassJet2->momentum);
	  h_ggMetVsInvarMass_Tight->Fill(InvMass,met->met(),PUweight);
	  if(JetCounter>0){h_ggMetVsInvarMass_Tight_JetReq->Fill(InvMass,met->met(),PUweight);ngg_Tight_JetReq++;}
	  if(JetCounter>1){h_ggMetVsInvarMass_Tight_2JetReq->Fill(InvMass,met->met(),PUweight);h_ggJetsInvarMass_Tight->Fill(InvMassJets,PUweight);ngg_Tight_2JetReq++;}
	  if(JetCounter>2){h_ggMetVsInvarMass_Tight_3JetReq->Fill(InvMass,met->met(),PUweight);ngg_Tight_3JetReq++;}
	}//end dogg
      }//end Tight Photons
    }//end pho_Cands size and leadetcut
  }//end PhoMap
}//for jentry

int bin20=h_ggMetVsInvarMass_Loose->GetYaxis()->FindBin(20),bin30=h_ggMetVsInvarMass_Loose->GetYaxis()->FindBin(30),bin40=h_ggMetVsInvarMass_Loose->GetYaxis()->FindBin(40),bin50=h_ggMetVsInvarMass_Loose->GetYaxis()->FindBin(50),bin60=h_ggMetVsInvarMass_Loose->GetYaxis()->FindBin(60),bin70=h_ggMetVsInvarMass_Loose->GetYaxis()->FindBin(70),bin80=h_ggMetVsInvarMass_Loose->GetYaxis()->FindBin(80),bin90=h_ggMetVsInvarMass_Loose->GetYaxis()->FindBin(90),bin100=h_ggMetVsInvarMass_Loose->GetYaxis()->FindBin(100);

TH1F* ggInvarMass_Loose_NoMetCut = (TH1F*)h_ggMetVsInvarMass_Loose->ProjectionX("ggInvarMass_Loose_NoMetCut",0,999,"eo");
TH1F* ggInvarMass_Loose_Met20Cut = (TH1F*)h_ggMetVsInvarMass_Loose->ProjectionX("ggInvarMass_Loose_Met20Cut",bin20,999,"eo");
TH1F* ggInvarMass_Loose_Met30Cut = (TH1F*)h_ggMetVsInvarMass_Loose->ProjectionX("ggInvarMass_Loose_Met30Cut",bin30,999,"eo");
TH1F* ggInvarMass_Loose_Met40Cut = (TH1F*)h_ggMetVsInvarMass_Loose->ProjectionX("ggInvarMass_Loose_Met40Cut",bin40,999,"eo");
TH1F* ggInvarMass_Loose_Met50Cut = (TH1F*)h_ggMetVsInvarMass_Loose->ProjectionX("ggInvarMass_Loose_Met50Cut",bin50,999,"eo");
TH1F* ggInvarMass_Loose_Met60Cut = (TH1F*)h_ggMetVsInvarMass_Loose->ProjectionX("ggInvarMass_Loose_Met60Cut",bin60,999,"eo");
TH1F* ggInvarMass_Loose_Met70Cut = (TH1F*)h_ggMetVsInvarMass_Loose->ProjectionX("ggInvarMass_Loose_Met70Cut",bin70,999,"eo");
TH1F* ggInvarMass_Loose_Met80Cut = (TH1F*)h_ggMetVsInvarMass_Loose->ProjectionX("ggInvarMass_Loose_Met80Cut",bin80,999,"eo");
TH1F* ggInvarMass_Loose_Met90Cut = (TH1F*)h_ggMetVsInvarMass_Loose->ProjectionX("ggInvarMass_Loose_Met90Cut",bin90,999,"eo");
TH1F* ggInvarMass_Loose_Met100Cut = (TH1F*)h_ggMetVsInvarMass_Loose->ProjectionX("ggInvarMass_Loose_Met100Cut",bin100,999,"eo");

TH1F* ggInvarMass_Med_NoMetCut = (TH1F*)h_ggMetVsInvarMass_Med->ProjectionX("ggInvarMass_Med_NoMetCut",0,999,"eo");
TH1F* ggInvarMass_Med_Met20Cut = (TH1F*)h_ggMetVsInvarMass_Med->ProjectionX("ggInvarMass_Med_Met20Cut",bin20,999,"eo");
TH1F* ggInvarMass_Med_Met30Cut = (TH1F*)h_ggMetVsInvarMass_Med->ProjectionX("ggInvarMass_Med_Met30Cut",bin30,999,"eo");
TH1F* ggInvarMass_Med_Met40Cut = (TH1F*)h_ggMetVsInvarMass_Med->ProjectionX("ggInvarMass_Med_Met40Cut",bin40,999,"eo");
TH1F* ggInvarMass_Med_Met50Cut = (TH1F*)h_ggMetVsInvarMass_Med->ProjectionX("ggInvarMass_Med_Met50Cut",bin50,999,"eo");
TH1F* ggInvarMass_Med_Met60Cut = (TH1F*)h_ggMetVsInvarMass_Med->ProjectionX("ggInvarMass_Med_Met60Cut",bin60,999,"eo");
TH1F* ggInvarMass_Med_Met70Cut = (TH1F*)h_ggMetVsInvarMass_Med->ProjectionX("ggInvarMass_Med_Met70Cut",bin70,999,"eo");
TH1F* ggInvarMass_Med_Met80Cut = (TH1F*)h_ggMetVsInvarMass_Med->ProjectionX("ggInvarMass_Med_Met80Cut",bin80,999,"eo");
TH1F* ggInvarMass_Med_Met90Cut = (TH1F*)h_ggMetVsInvarMass_Med->ProjectionX("ggInvarMass_Med_Met90Cut",bin90,999,"eo");
TH1F* ggInvarMass_Med_Met100Cut = (TH1F*)h_ggMetVsInvarMass_Med->ProjectionX("ggInvarMass_Med_Met100Cut",bin100,999,"eo");

TH1F* ggInvarMass_Tight_NoMetCut = (TH1F*)h_ggMetVsInvarMass_Tight->ProjectionX("ggInvarMass_Tight_NoMetCut",0,999,"eo");
TH1F* ggInvarMass_Tight_Met20Cut = (TH1F*)h_ggMetVsInvarMass_Tight->ProjectionX("ggInvarMass_Tight_Met20Cut",bin20,999,"eo");
TH1F* ggInvarMass_Tight_Met30Cut = (TH1F*)h_ggMetVsInvarMass_Tight->ProjectionX("ggInvarMass_Tight_Met30Cut",bin30,999,"eo");
TH1F* ggInvarMass_Tight_Met40Cut = (TH1F*)h_ggMetVsInvarMass_Tight->ProjectionX("ggInvarMass_Tight_Met40Cut",bin40,999,"eo");
TH1F* ggInvarMass_Tight_Met50Cut = (TH1F*)h_ggMetVsInvarMass_Tight->ProjectionX("ggInvarMass_Tight_Met50Cut",bin50,999,"eo");
TH1F* ggInvarMass_Tight_Met60Cut = (TH1F*)h_ggMetVsInvarMass_Tight->ProjectionX("ggInvarMass_Tight_Met60Cut",bin60,999,"eo");
TH1F* ggInvarMass_Tight_Met70Cut = (TH1F*)h_ggMetVsInvarMass_Tight->ProjectionX("ggInvarMass_Tight_Met70Cut",bin70,999,"eo");
TH1F* ggInvarMass_Tight_Met80Cut = (TH1F*)h_ggMetVsInvarMass_Tight->ProjectionX("ggInvarMass_Tight_Met80Cut",bin80,999,"eo");
TH1F* ggInvarMass_Tight_Met90Cut = (TH1F*)h_ggMetVsInvarMass_Tight->ProjectionX("ggInvarMass_Tight_Met90Cut",bin90,999,"eo");
TH1F* ggInvarMass_Tight_Met100Cut = (TH1F*)h_ggMetVsInvarMass_Tight->ProjectionX("ggInvarMass_Tight_Met100Cut",bin100,999,"eo");

TH1F* ggInvarMass_Loose_JetReq_NoMetCut = (TH1F*)h_ggMetVsInvarMass_Loose_JetReq->ProjectionX("ggInvarMass_Loose_JetReq_NoMetCut",0,999,"eo");
TH1F* ggInvarMass_Loose_JetReq_Met20Cut = (TH1F*)h_ggMetVsInvarMass_Loose_JetReq->ProjectionX("ggInvarMass_Loose_JetReq_Met20Cut",bin20,999,"eo");
TH1F* ggInvarMass_Loose_JetReq_Met30Cut = (TH1F*)h_ggMetVsInvarMass_Loose_JetReq->ProjectionX("ggInvarMass_Loose_JetReq_Met30Cut",bin30,999,"eo");
TH1F* ggInvarMass_Loose_JetReq_Met40Cut = (TH1F*)h_ggMetVsInvarMass_Loose_JetReq->ProjectionX("ggInvarMass_Loose_JetReq_Met40Cut",bin40,999,"eo");
TH1F* ggInvarMass_Loose_JetReq_Met50Cut = (TH1F*)h_ggMetVsInvarMass_Loose_JetReq->ProjectionX("ggInvarMass_Loose_JetReq_Met50Cut",bin50,999,"eo");
TH1F* ggInvarMass_Loose_JetReq_Met60Cut = (TH1F*)h_ggMetVsInvarMass_Loose_JetReq->ProjectionX("ggInvarMass_Loose_JetReq_Met60Cut",bin60,999,"eo");
TH1F* ggInvarMass_Loose_JetReq_Met70Cut = (TH1F*)h_ggMetVsInvarMass_Loose_JetReq->ProjectionX("ggInvarMass_Loose_JetReq_Met70Cut",bin70,999,"eo");
TH1F* ggInvarMass_Loose_JetReq_Met80Cut = (TH1F*)h_ggMetVsInvarMass_Loose_JetReq->ProjectionX("ggInvarMass_Loose_JetReq_Met80Cut",bin80,999,"eo");
TH1F* ggInvarMass_Loose_JetReq_Met90Cut = (TH1F*)h_ggMetVsInvarMass_Loose_JetReq->ProjectionX("ggInvarMass_Loose_JetReq_Met90Cut",bin90,999,"eo");
TH1F* ggInvarMass_Loose_JetReq_Met100Cut = (TH1F*)h_ggMetVsInvarMass_Loose_JetReq->ProjectionX("ggInvarMass_Loose_JetReq_Met100Cut",bin100,999,"eo");

TH1F* ggInvarMass_Med_JetReq_NoMetCut = (TH1F*)h_ggMetVsInvarMass_Med_JetReq->ProjectionX("ggInvarMass_Med_JetReq_NoMetCut",0,999,"eo");
TH1F* ggInvarMass_Med_JetReq_Met20Cut = (TH1F*)h_ggMetVsInvarMass_Med_JetReq->ProjectionX("ggInvarMass_Med_JetReq_Met20Cut",bin20,999,"eo");
TH1F* ggInvarMass_Med_JetReq_Met30Cut = (TH1F*)h_ggMetVsInvarMass_Med_JetReq->ProjectionX("ggInvarMass_Med_JetReq_Met30Cut",bin30,999,"eo");
TH1F* ggInvarMass_Med_JetReq_Met40Cut = (TH1F*)h_ggMetVsInvarMass_Med_JetReq->ProjectionX("ggInvarMass_Med_JetReq_Met40Cut",bin40,999,"eo");
TH1F* ggInvarMass_Med_JetReq_Met50Cut = (TH1F*)h_ggMetVsInvarMass_Med_JetReq->ProjectionX("ggInvarMass_Med_JetReq_Met50Cut",bin50,999,"eo");
TH1F* ggInvarMass_Med_JetReq_Met60Cut = (TH1F*)h_ggMetVsInvarMass_Med_JetReq->ProjectionX("ggInvarMass_Med_JetReq_Met60Cut",bin60,999,"eo");
TH1F* ggInvarMass_Med_JetReq_Met70Cut = (TH1F*)h_ggMetVsInvarMass_Med_JetReq->ProjectionX("ggInvarMass_Med_JetReq_Met70Cut",bin70,999,"eo");
TH1F* ggInvarMass_Med_JetReq_Met80Cut = (TH1F*)h_ggMetVsInvarMass_Med_JetReq->ProjectionX("ggInvarMass_Med_JetReq_Met80Cut",bin80,999,"eo");
TH1F* ggInvarMass_Med_JetReq_Met90Cut = (TH1F*)h_ggMetVsInvarMass_Med_JetReq->ProjectionX("ggInvarMass_Med_JetReq_Met90Cut",bin90,999,"eo");
TH1F* ggInvarMass_Med_JetReq_Met100Cut = (TH1F*)h_ggMetVsInvarMass_Med_JetReq->ProjectionX("ggInvarMass_Med_JetReq_Met100Cut",bin100,999,"eo");

TH1F* ggInvarMass_Tight_JetReq_NoMetCut = (TH1F*)h_ggMetVsInvarMass_Tight_JetReq->ProjectionX("ggInvarMass_Tight_JetReq_NoMetCut",0,999,"eo");
TH1F* ggInvarMass_Tight_JetReq_Met20Cut = (TH1F*)h_ggMetVsInvarMass_Tight_JetReq->ProjectionX("ggInvarMass_Tight_JetReq_Met20Cut",bin20,999,"eo");
TH1F* ggInvarMass_Tight_JetReq_Met30Cut = (TH1F*)h_ggMetVsInvarMass_Tight_JetReq->ProjectionX("ggInvarMass_Tight_JetReq_Met30Cut",bin30,999,"eo");
TH1F* ggInvarMass_Tight_JetReq_Met40Cut = (TH1F*)h_ggMetVsInvarMass_Tight_JetReq->ProjectionX("ggInvarMass_Tight_JetReq_Met40Cut",bin40,999,"eo");
TH1F* ggInvarMass_Tight_JetReq_Met50Cut = (TH1F*)h_ggMetVsInvarMass_Tight_JetReq->ProjectionX("ggInvarMass_Tight_JetReq_Met50Cut",bin50,999,"eo");
TH1F* ggInvarMass_Tight_JetReq_Met60Cut = (TH1F*)h_ggMetVsInvarMass_Tight_JetReq->ProjectionX("ggInvarMass_Tight_JetReq_Met60Cut",bin60,999,"eo");
TH1F* ggInvarMass_Tight_JetReq_Met70Cut = (TH1F*)h_ggMetVsInvarMass_Tight_JetReq->ProjectionX("ggInvarMass_Tight_JetReq_Met70Cut",bin70,999,"eo");
TH1F* ggInvarMass_Tight_JetReq_Met80Cut = (TH1F*)h_ggMetVsInvarMass_Tight_JetReq->ProjectionX("ggInvarMass_Tight_JetReq_Met80Cut",bin80,999,"eo");
TH1F* ggInvarMass_Tight_JetReq_Met90Cut = (TH1F*)h_ggMetVsInvarMass_Tight_JetReq->ProjectionX("ggInvarMass_Tight_JetReq_Met90Cut",bin90,999,"eo");
TH1F* ggInvarMass_Tight_JetReq_Met100Cut = (TH1F*)h_ggMetVsInvarMass_Tight_JetReq->ProjectionX("ggInvarMass_Tight_JetReq_Met100Cut",bin100,999,"eo");

TH1F* ggInvarMass_Loose_2JetReq_NoMetCut = (TH1F*)h_ggMetVsInvarMass_Loose_2JetReq->ProjectionX("ggInvarMass_Loose_2JetReq_NoMetCut",0,999,"eo");
TH1F* ggInvarMass_Loose_2JetReq_Met20Cut = (TH1F*)h_ggMetVsInvarMass_Loose_2JetReq->ProjectionX("ggInvarMass_Loose_2JetReq_Met20Cut",bin20,999,"eo");
TH1F* ggInvarMass_Loose_2JetReq_Met30Cut = (TH1F*)h_ggMetVsInvarMass_Loose_2JetReq->ProjectionX("ggInvarMass_Loose_2JetReq_Met30Cut",bin30,999,"eo");
TH1F* ggInvarMass_Loose_2JetReq_Met40Cut = (TH1F*)h_ggMetVsInvarMass_Loose_2JetReq->ProjectionX("ggInvarMass_Loose_2JetReq_Met40Cut",bin40,999,"eo");
TH1F* ggInvarMass_Loose_2JetReq_Met50Cut = (TH1F*)h_ggMetVsInvarMass_Loose_2JetReq->ProjectionX("ggInvarMass_Loose_2JetReq_Met50Cut",bin50,999,"eo");
TH1F* ggInvarMass_Loose_2JetReq_Met60Cut = (TH1F*)h_ggMetVsInvarMass_Loose_2JetReq->ProjectionX("ggInvarMass_Loose_2JetReq_Met60Cut",bin60,999,"eo");
TH1F* ggInvarMass_Loose_2JetReq_Met70Cut = (TH1F*)h_ggMetVsInvarMass_Loose_2JetReq->ProjectionX("ggInvarMass_Loose_2JetReq_Met70Cut",bin70,999,"eo");
TH1F* ggInvarMass_Loose_2JetReq_Met80Cut = (TH1F*)h_ggMetVsInvarMass_Loose_2JetReq->ProjectionX("ggInvarMass_Loose_2JetReq_Met80Cut",bin80,999,"eo");
TH1F* ggInvarMass_Loose_2JetReq_Met90Cut = (TH1F*)h_ggMetVsInvarMass_Loose_2JetReq->ProjectionX("ggInvarMass_Loose_2JetReq_Met90Cut",bin90,999,"eo");
TH1F* ggInvarMass_Loose_2JetReq_Met100Cut = (TH1F*)h_ggMetVsInvarMass_Loose_2JetReq->ProjectionX("ggInvarMass_Loose_2JetReq_Met100Cut",bin100,999,"eo");

TH1F* ggInvarMass_Med_2JetReq_NoMetCut = (TH1F*)h_ggMetVsInvarMass_Med_2JetReq->ProjectionX("ggInvarMass_Med_2JetReq_NoMetCut",0,999,"eo");
TH1F* ggInvarMass_Med_2JetReq_Met20Cut = (TH1F*)h_ggMetVsInvarMass_Med_2JetReq->ProjectionX("ggInvarMass_Med_2JetReq_Met20Cut",bin20,999,"eo");
TH1F* ggInvarMass_Med_2JetReq_Met30Cut = (TH1F*)h_ggMetVsInvarMass_Med_2JetReq->ProjectionX("ggInvarMass_Med_2JetReq_Met30Cut",bin30,999,"eo");
TH1F* ggInvarMass_Med_2JetReq_Met40Cut = (TH1F*)h_ggMetVsInvarMass_Med_2JetReq->ProjectionX("ggInvarMass_Med_2JetReq_Met40Cut",bin40,999,"eo");
TH1F* ggInvarMass_Med_2JetReq_Met50Cut = (TH1F*)h_ggMetVsInvarMass_Med_2JetReq->ProjectionX("ggInvarMass_Med_2JetReq_Met50Cut",bin50,999,"eo");
TH1F* ggInvarMass_Med_2JetReq_Met60Cut = (TH1F*)h_ggMetVsInvarMass_Med_2JetReq->ProjectionX("ggInvarMass_Med_2JetReq_Met60Cut",bin60,999,"eo");
TH1F* ggInvarMass_Med_2JetReq_Met70Cut = (TH1F*)h_ggMetVsInvarMass_Med_2JetReq->ProjectionX("ggInvarMass_Med_2JetReq_Met70Cut",bin70,999,"eo");
TH1F* ggInvarMass_Med_2JetReq_Met80Cut = (TH1F*)h_ggMetVsInvarMass_Med_2JetReq->ProjectionX("ggInvarMass_Med_2JetReq_Met80Cut",bin80,999,"eo");
TH1F* ggInvarMass_Med_2JetReq_Met90Cut = (TH1F*)h_ggMetVsInvarMass_Med_2JetReq->ProjectionX("ggInvarMass_Med_2JetReq_Met90Cut",bin90,999,"eo");
TH1F* ggInvarMass_Med_2JetReq_Met100Cut = (TH1F*)h_ggMetVsInvarMass_Med_2JetReq->ProjectionX("ggInvarMass_Med_2JetReq_Met100Cut",bin100,999,"eo");

TH1F* ggInvarMass_Tight_2JetReq_NoMetCut = (TH1F*)h_ggMetVsInvarMass_Tight_2JetReq->ProjectionX("ggInvarMass_Tight_2JetReq_NoMetCut",0,999,"eo");
TH1F* ggInvarMass_Tight_2JetReq_Met20Cut = (TH1F*)h_ggMetVsInvarMass_Tight_2JetReq->ProjectionX("ggInvarMass_Tight_2JetReq_Met20Cut",bin20,999,"eo");
TH1F* ggInvarMass_Tight_2JetReq_Met30Cut = (TH1F*)h_ggMetVsInvarMass_Tight_2JetReq->ProjectionX("ggInvarMass_Tight_2JetReq_Met30Cut",bin30,999,"eo");
TH1F* ggInvarMass_Tight_2JetReq_Met40Cut = (TH1F*)h_ggMetVsInvarMass_Tight_2JetReq->ProjectionX("ggInvarMass_Tight_2JetReq_Met40Cut",bin40,999,"eo");
TH1F* ggInvarMass_Tight_2JetReq_Met50Cut = (TH1F*)h_ggMetVsInvarMass_Tight_2JetReq->ProjectionX("ggInvarMass_Tight_2JetReq_Met50Cut",bin50,999,"eo");
TH1F* ggInvarMass_Tight_2JetReq_Met60Cut = (TH1F*)h_ggMetVsInvarMass_Tight_2JetReq->ProjectionX("ggInvarMass_Tight_2JetReq_Met60Cut",bin60,999,"eo");
TH1F* ggInvarMass_Tight_2JetReq_Met70Cut = (TH1F*)h_ggMetVsInvarMass_Tight_2JetReq->ProjectionX("ggInvarMass_Tight_2JetReq_Met70Cut",bin70,999,"eo");
TH1F* ggInvarMass_Tight_2JetReq_Met80Cut = (TH1F*)h_ggMetVsInvarMass_Tight_2JetReq->ProjectionX("ggInvarMass_Tight_2JetReq_Met80Cut",bin80,999,"eo");
TH1F* ggInvarMass_Tight_2JetReq_Met90Cut = (TH1F*)h_ggMetVsInvarMass_Tight_2JetReq->ProjectionX("ggInvarMass_Tight_2JetReq_Met90Cut",bin90,999,"eo");
TH1F* ggInvarMass_Tight_2JetReq_Met100Cut = (TH1F*)h_ggMetVsInvarMass_Tight_2JetReq->ProjectionX("ggInvarMass_Tight_2JetReq_Met100Cut",bin100,999,"eo");

TH1F* ggInvarMass_Loose_3JetReq_NoMetCut = (TH1F*)h_ggMetVsInvarMass_Loose_3JetReq->ProjectionX("ggInvarMass_Loose_3JetReq_NoMetCut",0,999,"eo");
TH1F* ggInvarMass_Loose_3JetReq_Met20Cut = (TH1F*)h_ggMetVsInvarMass_Loose_3JetReq->ProjectionX("ggInvarMass_Loose_3JetReq_Met20Cut",bin20,999,"eo");
TH1F* ggInvarMass_Loose_3JetReq_Met30Cut = (TH1F*)h_ggMetVsInvarMass_Loose_3JetReq->ProjectionX("ggInvarMass_Loose_3JetReq_Met30Cut",bin30,999,"eo");
TH1F* ggInvarMass_Loose_3JetReq_Met40Cut = (TH1F*)h_ggMetVsInvarMass_Loose_3JetReq->ProjectionX("ggInvarMass_Loose_3JetReq_Met40Cut",bin40,999,"eo");
TH1F* ggInvarMass_Loose_3JetReq_Met50Cut = (TH1F*)h_ggMetVsInvarMass_Loose_3JetReq->ProjectionX("ggInvarMass_Loose_3JetReq_Met50Cut",bin50,999,"eo");
TH1F* ggInvarMass_Loose_3JetReq_Met60Cut = (TH1F*)h_ggMetVsInvarMass_Loose_3JetReq->ProjectionX("ggInvarMass_Loose_3JetReq_Met60Cut",bin60,999,"eo");
TH1F* ggInvarMass_Loose_3JetReq_Met70Cut = (TH1F*)h_ggMetVsInvarMass_Loose_3JetReq->ProjectionX("ggInvarMass_Loose_3JetReq_Met70Cut",bin70,999,"eo");
TH1F* ggInvarMass_Loose_3JetReq_Met80Cut = (TH1F*)h_ggMetVsInvarMass_Loose_3JetReq->ProjectionX("ggInvarMass_Loose_3JetReq_Met80Cut",bin80,999,"eo");
TH1F* ggInvarMass_Loose_3JetReq_Met90Cut = (TH1F*)h_ggMetVsInvarMass_Loose_3JetReq->ProjectionX("ggInvarMass_Loose_3JetReq_Met90Cut",bin90,999,"eo");
TH1F* ggInvarMass_Loose_3JetReq_Met100Cut = (TH1F*)h_ggMetVsInvarMass_Loose_3JetReq->ProjectionX("ggInvarMass_Loose_3JetReq_Met100Cut",bin100,999,"eo");

TH1F* ggInvarMass_Med_3JetReq_NoMetCut = (TH1F*)h_ggMetVsInvarMass_Med_3JetReq->ProjectionX("ggInvarMass_Med_3JetReq_NoMetCut",0,999,"eo");
TH1F* ggInvarMass_Med_3JetReq_Met20Cut = (TH1F*)h_ggMetVsInvarMass_Med_3JetReq->ProjectionX("ggInvarMass_Med_3JetReq_Met20Cut",bin20,999,"eo");
TH1F* ggInvarMass_Med_3JetReq_Met30Cut = (TH1F*)h_ggMetVsInvarMass_Med_3JetReq->ProjectionX("ggInvarMass_Med_3JetReq_Met30Cut",bin30,999,"eo");
TH1F* ggInvarMass_Med_3JetReq_Met40Cut = (TH1F*)h_ggMetVsInvarMass_Med_3JetReq->ProjectionX("ggInvarMass_Med_3JetReq_Met40Cut",bin40,999,"eo");
TH1F* ggInvarMass_Med_3JetReq_Met50Cut = (TH1F*)h_ggMetVsInvarMass_Med_3JetReq->ProjectionX("ggInvarMass_Med_3JetReq_Met50Cut",bin50,999,"eo");
TH1F* ggInvarMass_Med_3JetReq_Met60Cut = (TH1F*)h_ggMetVsInvarMass_Med_3JetReq->ProjectionX("ggInvarMass_Med_3JetReq_Met60Cut",bin60,999,"eo");
TH1F* ggInvarMass_Med_3JetReq_Met70Cut = (TH1F*)h_ggMetVsInvarMass_Med_3JetReq->ProjectionX("ggInvarMass_Med_3JetReq_Met70Cut",bin70,999,"eo");
TH1F* ggInvarMass_Med_3JetReq_Met80Cut = (TH1F*)h_ggMetVsInvarMass_Med_3JetReq->ProjectionX("ggInvarMass_Med_3JetReq_Met80Cut",bin80,999,"eo");
TH1F* ggInvarMass_Med_3JetReq_Met90Cut = (TH1F*)h_ggMetVsInvarMass_Med_3JetReq->ProjectionX("ggInvarMass_Med_3JetReq_Met90Cut",bin90,999,"eo");
TH1F* ggInvarMass_Med_3JetReq_Met100Cut = (TH1F*)h_ggMetVsInvarMass_Med_3JetReq->ProjectionX("ggInvarMass_Med_3JetReq_Met100Cut",bin100,999,"eo");

TH1F* ggInvarMass_Tight_3JetReq_NoMetCut = (TH1F*)h_ggMetVsInvarMass_Tight_3JetReq->ProjectionX("ggInvarMass_Tight_3JetReq_NoMetCut",0,999,"eo");
TH1F* ggInvarMass_Tight_3JetReq_Met20Cut = (TH1F*)h_ggMetVsInvarMass_Tight_3JetReq->ProjectionX("ggInvarMass_Tight_3JetReq_Met20Cut",bin20,999,"eo");
TH1F* ggInvarMass_Tight_3JetReq_Met30Cut = (TH1F*)h_ggMetVsInvarMass_Tight_3JetReq->ProjectionX("ggInvarMass_Tight_3JetReq_Met30Cut",bin30,999,"eo");
TH1F* ggInvarMass_Tight_3JetReq_Met40Cut = (TH1F*)h_ggMetVsInvarMass_Tight_3JetReq->ProjectionX("ggInvarMass_Tight_3JetReq_Met40Cut",bin40,999,"eo");
TH1F* ggInvarMass_Tight_3JetReq_Met50Cut = (TH1F*)h_ggMetVsInvarMass_Tight_3JetReq->ProjectionX("ggInvarMass_Tight_3JetReq_Met50Cut",bin50,999,"eo");
TH1F* ggInvarMass_Tight_3JetReq_Met60Cut = (TH1F*)h_ggMetVsInvarMass_Tight_3JetReq->ProjectionX("ggInvarMass_Tight_3JetReq_Met60Cut",bin60,999,"eo");
TH1F* ggInvarMass_Tight_3JetReq_Met70Cut = (TH1F*)h_ggMetVsInvarMass_Tight_3JetReq->ProjectionX("ggInvarMass_Tight_3JetReq_Met70Cut",bin70,999,"eo");
TH1F* ggInvarMass_Tight_3JetReq_Met80Cut = (TH1F*)h_ggMetVsInvarMass_Tight_3JetReq->ProjectionX("ggInvarMass_Tight_3JetReq_Met80Cut",bin80,999,"eo");
TH1F* ggInvarMass_Tight_3JetReq_Met90Cut = (TH1F*)h_ggMetVsInvarMass_Tight_3JetReq->ProjectionX("ggInvarMass_Tight_3JetReq_Met90Cut",bin90,999,"eo");
TH1F* ggInvarMass_Tight_3JetReq_Met100Cut = (TH1F*)h_ggMetVsInvarMass_Tight_3JetReq->ProjectionX("ggInvarMass_Tight_3JetReq_Met100Cut",bin100,999,"eo");


cout << "---ALL DONE!------"<<endl;
    
cout << " ----------------- Job Summary ----------------- " << endl;
cout << " Total events                  : " << nCnt[0] << " (" << 100*float(nCnt[0])/float(nCnt[0]) << "%)" << endl;
cout << " JSON events passed            : " << nCnt[1] << " (" << 100*float(nCnt[1])/float(nCnt[0]) << "%)" << endl;
cout << " Duplicate check events passed : " << nCnt[2] << " (" << 100*float(nCnt[2])/float(nCnt[0]) << "%)" << endl;
cout << " HLT events passed             : " << nCnt[3] << " (" << 100*float(nCnt[3])/float(nCnt[0]) << "%)" << endl;
cout << " HLT_Pho events passed         : " << nCnt[4] << " (" << 100*float(nCnt[4])/float(nCnt[0]) << "%)" << endl;
cout << " nVertex events passed         : " << nCnt[5] << " (" << 100*float(nCnt[5])/float(nCnt[0]) << "%)" << endl;
cout << " MET filters events passed     : " << nCnt[6] << " (" << 100*float(nCnt[6])/float(nCnt[0]) << "%)" << endl;
cout << " number gg_Loose               : " << ngg_Loose         << " (" << 100*float(ngg_Loose)/float(nCnt[0])         << "%)" << endl;
cout << " number gg_Loose_JetReq        : " << ngg_Loose_JetReq  << " (" << 100*float(ngg_Loose_JetReq)/float(ngg_Loose)  << "% of ngg_Loose)" << endl;
cout << " number gg_Loose_2JetReq       : " << ngg_Loose_2JetReq << " (" << 100*float(ngg_Loose_2JetReq)/float(ngg_Loose) << "% of ngg_Loose)" << endl;
cout << " number gg_Loose_2JetReqNoB    : " << ngg_Loose_2JetReqNoB << " (" << 100*float(ngg_Loose_2JetReqNoB)/float(ngg_Loose_2JetReq) << "% of ngg_Loose_2JetReq)" << endl;
cout << " number gg_Loose_3JetReq       : " << ngg_Loose_3JetReq << " (" << 100*float(ngg_Loose_3JetReq)/float(ngg_Loose) << "% of ngg_Loose)" << endl;
cout << " number gg_Med                 : " << ngg_Med           << " (" << 100*float(ngg_Med)/float(nCnt[0])           << "%)" << endl;
cout << " number gg_Med_JetReq          : " << ngg_Med_JetReq    << " (" << 100*float(ngg_Med_JetReq)/float(ngg_Med)   << "% of ngg_Med)" << endl;
cout << " number gg_Med_2JetReq         : " << ngg_Med_2JetReq   << " (" << 100*float(ngg_Med_2JetReq)/float(ngg_Med)   << "% of ngg_Med)" << endl;
cout << " number gg_Med_3JetReq         : " << ngg_Med_3JetReq   << " (" << 100*float(ngg_Med_3JetReq)/float(ngg_Med)   << "% of ngg_Med)" << endl;
cout << " number gg_Tight               : " << ngg_Tight         << " (" << 100*float(ngg_Tight)/float(nCnt[0])         << "%)" << endl;
cout << " number gg_Tight_JetReq        : " << ngg_Tight_JetReq  << " (" << 100*float(ngg_Tight_JetReq)/float(ngg_Tight)  << "% of ngg_Tight)" << endl;
cout << " number gg_Tight_2JetReq       : " << ngg_Tight_2JetReq << " (" << 100*float(ngg_Tight_2JetReq)/float(ngg_Tight) << "% of ngg_Tight)" << endl;
cout << " number gg_Tight_3JetReq       : " << ngg_Tight_3JetReq << " (" << 100*float(ngg_Tight_3JetReq)/float(ngg_Tight) << "% of ngg_Tight)" << endl;
cout << " ----------------------------------------------- " << endl;
/*cout << " number 0 lepton,    <=1 jet       (HZ->GammaGammaNuNu)        : " << h_ggMetVsInvarMass_Loose_0Lep_0_1Jets->GetEntries() << endl;
  cout << " number 0 lepton,   >=2 jet on W/Z (HW/Z->GammaGammajets)      : " << h_ggMetVsInvarMass_Loose_0Lep_2_3JetsWZwindow->GetEntries() << endl;
  cout << " number 1 lepton,    <=1 jet       (HW->GammaGammalNu)         : " << h_ggMetVsInvarMass_Loose_1Lep_0_1Jets->GetEntries() << endl;
  cout << " number 1 electron,  <=1 jet       (HW->GammaGammaeNu)         : " << h_ggMetVsInvarMass_Loose_1Ele_0_1Jets->GetEntries() << endl;
  cout << " number 1 muon,      <=1 jet       (HW->GammaGammaMuNu)        : " << h_ggMetVsInvarMass_Loose_1Mu_0_1Jets->GetEntries() << endl;
  cout << " number 2 leptons,   <=1 jet on Z  (HZ->GammaGammall)          : " << h_ggMetVsInvarMass_Loose_2LepOSSFonZ_0_1Jets->GetEntries() << endl;
  cout << " number 2 electrons, <=1 jet on Z  (HZ->GammaGammaee)          : " << h_ggMetVsInvarMass_Loose_2EleOSonZ_0_1Jets->GetEntries() << endl;
  cout << " number 2 muons,     <=1 jet on Z  (HZ->GammaGammaMuMu)        : " << h_ggMetVsInvarMass_Loose_2MuOSonZ_0_1Jets->GetEntries() << endl;
  cout << " number 2 leptons,   <=1 jet off Z (HH->HWW->GammaGammalNulNu) : " << h_ggMetVsInvarMass_Loose_2LepOSoffZ_0_1Jets->GetEntries() << endl;*/
cout << " ----------------------------------------------- " << endl;
//cout << " number gg_Loose at exclusive selections point                 : " << ngg_Loose_Excl << endl;

cout << " number >=2 b-jets                 (HH->GammaGammabb)          : " << h_ggMetVsInvarMass_Loose_2b->GetEntries() << endl;
//cout << " number NOT >=2 b-jets                                         : " << nNotGe2bJets << endl;
cout << " number <=1 b-jet, >=1 muon        (HZ/W->GammaGammaMuMu/MuNu) : " << h_ggMetVsInvarMass_Loose_1Mu_0_1Jets->GetEntries() << endl;
//cout << " number NOT <=1 b-jet, >=1 muon                                : " << nNotGeOneMu01bJets << endl;
cout << " number <=1 b-jet, 0 muon, >=1 ele (HZ/W->GammaGammaee/eNu)    : " << h_ggMetVsInvarMass_Loose_1Ele_0_1Jets_FULL->GetEntries() << endl;
cout << " number <=1 b-jet, 0 muon, >=1 ele, after m_{eg} cleaning      : " << h_ggMetVsInvarMass_Loose_1Ele_0_1Jets->GetEntries() << endl;
//cout << " number NOT <=1 b-jet, 0 muon, >=1 ele                         : " << nNotGeOneEle01bJets << endl;
//cout << " number <=1 b-jet, 0 lepton                                    : " << Lt2bjets0lepCount << endl;
//cout << " number NOT <=1 b-jet, 0 lepton                                : " << nNotLt2bjets0lep << endl;
 cout << " number <=1 b-jet, 0 lepton, had. W/Z (HZ/W->GammaGammaJets)   : " << h_ggMetVsInvarMass_Loose_lt2b_noMu_noEle_WZjets->GetEntries() << endl;
 cout << " number <=1 b-jet, 0 lepton, no W/Z jets    'whats left'       : " << h_ggMetVsInvarMass_Loose_lt2b_noMu_noEle_lt2jets->GetEntries() << endl;

 cout << " number <=1 b-jet, ==1 muon, ==0 ele : " << h_ggMetVsInvarMass_Loose_1Mu_0Ele_0_1Jets->GetEntries() << endl;
 cout << " number <=1 b-jet, ==1 muon, ==1 ele : " << h_ggMetVsInvarMass_Loose_1Mu_1Ele_0_1Jets->GetEntries() << endl;
 cout << " number <=1 b-jet, ==1 muon, ==2 ele : " << h_ggMetVsInvarMass_Loose_1Mu_2Ele_0_1Jets->GetEntries() << endl;
 cout << " number <=1 b-jet, ==2 muon, ==0 ele : " << h_ggMetVsInvarMass_Loose_2Mu_0Ele_0_1Jets->GetEntries() << endl;
 cout << " number <=1 b-jet, ==2 muon, ==1 ele : " << h_ggMetVsInvarMass_Loose_2Mu_1Ele_0_1Jets->GetEntries() << endl;
 cout << " number <=1 b-jet, ==3 muon, ==0 ele : " << h_ggMetVsInvarMass_Loose_3Mu_0Ele_0_1Jets->GetEntries() << endl;
 cout << " number <=1 b-jet, ==0 muon, ==1 ele : " << h_ggMetVsInvarMass_Loose_exactly1Ele_0_1Jets->GetEntries() << endl;
 cout << " number <=1 b-jet, ==0 muon, ==2 ele : " << h_ggMetVsInvarMass_Loose_exactly2Ele_0_1Jets->GetEntries() << endl;
 cout << " number <=1 b-jet, ==0 muon, ==3 ele : " << h_ggMetVsInvarMass_Loose_exactly3Ele_0_1Jets->GetEntries() << endl;


  for(int i=0;i<nFlow;i++){
    cout<<"eleCutFlow["<<i<<"] = "<<eleCutFlow[i]<<endl;
    cout<<"muCutFlow["<<i<<"] = "<<muCutFlow[i]<<endl;
  }


 //cout<<"Writing analysis root output to: /data/ndpc1/b/dmorse/RA3/AnalysisOutput/hist_HiggsAna_"<<ds<<".root"<<endl;
cout<<"Writing analysis root output to: hist_HiggsAna_"<<ds<<".root"<<endl;

   
// close the output file
fout->cd();
fout->Write();
fout->Close();
delete fout;
 
}//HiggsAna
